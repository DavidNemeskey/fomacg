DELIMITERS            = sent ".";

LIST BOS              = (>>>) (sent);
LIST EOS              = (<<<) (sent);

LIST Coma             = (cm);

# Nouns
LIST NC               = (n);
LIST NomF             = (n f);
LIST NomM             = (n m);
LIST NP               = (np top) (np ant) (np cog) (np al);
LIST Toponim          = (np top);
LIST Acr              = (n acr);

SET  N                = NC + NP;

# Numerals
LIST Num              = (num);
LIST Ord              = (ord);

# Determiners         
LIST Det              = (det);
LIST PreDet	      = (predet);

# Demonstratives
LIST Dem              = (prn dem) (det dem);

# Adjectives
LIST Adj              = (adj);
LIST Itg              = (itg);

# Pronouns
LIST PrnSubj          = (prn subj);
LIST PrnDObj          = ("direct" prn obj);
LIST PrnIObj          = ("indirect" prn obj) (+indirect);  # Lemmas from sub-readings are expressed as tags and prefixed with '+'
LIST PrnInd	      = (prn ind);
LIST PrnItg	      = (prn itg);
LIST PrnDem           = (prn dem);

SET Prn               = PrnSubj + PrnDObj + PrnIObj;

# Determiners
LIST DetDef           = (det def);
LIST DetInd           = (det ind);
LIST DetPos           = (det pos);

# Prepositions
LIST Prep             = pr;


# Verbal particles 
LIST Vpart            = (vpart);
LIST VpartSDO         = ("a" vpart);
LIST VpartIDO         = ("e" vpart);
LIST VpartNeg         = (vpart neg);
LIST VpartGer         = (vpart ger);
LIST VpartNegImp      = ("na" vpart neg);
LIST VpartRef         = (vpart ref); # en em
LIST VpartPPres       = ("en ur" vpart ppres);

# Verbs
LIST Vbloc            = (vbloc);
LIST Vblex            = (vblex);
LIST Vbser            = (vbser);

LIST VerbPP           = (vblex pp);
LIST VerbImp          = (vblex imp);
LIST VerbInf          = (vblex inf);
LIST VerbImpers       = (vblex impers);

LIST Fut              = (vblex fti) (vbser fti) (vbhaver fti);
LIST TempsFin         = (pri) (pii) (past) (fti) (cni) (prh) (cip) (pih);  
LIST Cond             = (cni) (cip);

LIST VerbAux          = ("bezañ" vblex) ("kaout" vblex);

SET Verb              = Vbloc OR Vblex OR Vbser;
SET VerbFin           = Verb + TempsFin;


# Adverbs
LIST Adv              = (adv);
LIST PreAdv           = (preadv);
LIST Ket 	      = ("ket" adv);

# Conjunctions

LIST CC               = (cnjcoo);
LIST CS               = (cnjsub);
LIST CA               = (cnjadv);
SET Conj             = CC OR CA OR CS;

# Interjections 

LIST Interj           = (ij);

# Mutations 
#  Quan el lema no té el mateix consonant com la forma superficial, 
#  per exemple quan el plural es forma amb div- o daou-, cal afegir 
#  les formes a la llista abaix.
LIST SoftMutCons      = ("k.*") ("t.*") ("p.*") ("g.*") ("gw.*") ("d.*") ("b.*") ("m.*") ("askell") 
                        ("abrant") ("brec'h") ("bronn") ("gar") ("fron") ("gweuz") ("jaritell") ("lez") 
                        ("morzhed") ("skoaz") ("arzorn") ("dorn") ("glin") ("ilin") ("ividig") ("lagad") ("ufern") ;

LIST SoftMut          = ("<g.*>" "k.*") ("<d.*>" "t.*") ("<b.*>" "p.*") ("<c’h.*>" "g.*") ("<c'h.*>" "g.*")
                        ("<w.*>" "gw.*") ("<z.*>" "d.*") ("<v.*>" "b.*") ("<v.*>" "m.*") ("<zivaskell>")
                        ("<zivabrant>") ("<zivrec'h>") ("<zivronn>") ("<zivc'har>") ("<zivfron>") ("<ziweuz>") 
                        ("<zivjaritell>") ("<zivlez>") ("<zivorzhed>") ("<zivskoaz>") ("<zaouarzorn>") ("<zaouarn>") 
                        ("<zaoulin>") ("<zaouilin>") ("<zaouividig>") ("<zaoulagad>") ("<zaouufern>")  ;


LIST AspMut           = ("<c’h.*>" "k.*") ("<c'h.*>" "k.*") ("<z.*>" "t.*") ("<f.*>" "p.*"); 
LIST HardMut          = ("<k.*>" "g.*") ("<t.*>" "d.*") ("<p.*>" "b.*"); 

LIST MixedMutCons     = ("g.*") ("g.*") ("gw.*") ("d.*") ("b.*") ("m.*"); 

LIST MixedMut         = ("<c’h.*>" "g.*") ("<c'h.*>" "g.*") ("<w.*>" "gw.*") ("<t.*>" "d.*") ("<v.*>" "b.*") ("<v.*>" "m.*"); 

LIST HardMutTrigger   = ("ho" det pos) ("e" +da det pos);
LIST AspMutTrigger    = ("o" det pos) ("va" det pos) ("he" det pos) ("peder" num f) ("pevar" num m) ("teir" num f) 
                        ("tri" num m) ("nav" num) ;

                        # Missing: "tra" (while), "seul" (all the more), "re" (those, ones)
			# "en em" reflexive particle, "en ur" while, 

LIST SoftMutTrigger   = ("a" vpart) ("a" pr) ("aba" adv) ("da" pr) ("ez" vpart) ("hanter" adj) ("holl" adj)
                        ("da" det pos) ("daou" num m) ("div" num f) ("dindan" adv) ("diwar" pr) ("dre" pr)
                        ("e" det pos m) ("na" vpart neg) ("ne" vpart neg) ("pa" cnjsub) ("pe" cnjcoo) 
                        ("pe" adv itg) ("ra" vpart opt) ("re" prn) ("war" pr) ("re" adv) ("an" det def) ("un" det ind)
			("meur a" det ind) ("kalz a" pr) ("ken" pr);

LIST MixedMutTrigger  = ("e" vpart);

# Orthography
LIST DroppedG         = ("<[aeiou].*>" "g[aeiou].*");

LIST UPPER = ("<[ABCDEFGHIJKLMNOPQRSTUVWXYZ].*>");

#
#	Semantic lists
#

LIST Language		= ("alamaneg" n) ("brezhoneg" n) ("euskareg" n) ("gallaoueg" n) ("galleg" n) ("gwenedeg" n) ("italianeg" n) ("iwerzhoneg" n) 
                      ("katalaneg" n) ("kembraeg" n) ("kerneveureg" n) ("manaveg" n) ("saozneg" n) ("skoseg" n) ("spagnoleg" n);

# Sets

SET PRE-N =  Adj OR Det OR Dem OR NC OR Num ; 

SET WORD = NC OR Verb OR Adj OR Prep OR Prn OR Adv OR CC OR CS OR Num OR ("?") ;
SET MARK =  ("\,") OR ("\:") OR ("\;") ;
SET WORDMARK = WORD OR MARK ;

SET NPNH = WORDMARK - PRE-N ;
SET NPNHA = WORDMARK - PRE-N - Adv ;
SET NOT-ADV = WORDMARK - Adv ;
SET NOT-ADJ = WORDMARK - Adj ;

SET S-BOUNDARY = CS OR (sent) ; 

#
# Main section
#

SECTION

SELECT VpartIDO IF (1C ("<vez>"));

REMOVE DetPos IF (0 DetPos) (0 Prep) (1C Toponim);

# en ur gambr.
REMOVE Vpart (NOT 1 Verb);

# Setu petra a vez graet.
SELECT VerbFin (-1 ("<a>" vpart) OR ("<e>" vpart)) (0 ("<vez>")) (1 VerbPP);

#Ma vez klasket sevel abadennoù
REMOVE DetPos IF (-1 BOS) (1C Verb);

#ne goust netra / n'eus redi ebet
# N'ez an ket da labourat
SELECT VerbFin IF (-1C ("ne" adv)) (NOT -1 (+kaout)) (NOT -1 (+bezañ)) (NOT 0 Vpart);

#deuet e oan
SELECT Vpart IF (-1C VerbPP) (1 VerbFin);

#pet eur eo 
SELECT PrnItg IF (1 VerbImpers);
SELECT NC IF (-1 PrnItg) (0 ("<eur>" n)) (0 VerbImpers) (1 VerbFin);

# bet (pp) no muta nunca.
REMOVE VerbPP IF (0 ("<pet>" "bezañ" pp));

# kouezhet oc’h
# kouezhet oc'h bet izel-tre
REMOVE Vpart IF (0 ("<oc’h>") OR ("<oc'h>")) (NOT 1 ("<[aeiou].*>")) (NOT 1 Verb OR Adv);
REMOVE Vpart IF (0 ("<oc’h>") OR ("<oc'h>")) (1 Adv);
REMOVE Vpart IF (0 ("<oc’h>") OR ("<oc'h>")) (NOT 1 VerbInf);

# ne'z a ket mat. ne ya ket mat. 
SELECT VerbFin IF (-1C ("ne" adv)) (0 VerbFin) (1C ("ket" adv));

# "pell ez a an dud"
REMOVE Vpart IF (-1C Vpart);

# "pell ez a an dud"
SELECT Verb IF (-1C Vpart);

# Remove imperatives for now
REMOVE VerbImp IF (0 VerbImp);

# tri ober
SELECT NC IF (-1 Num) (0 NC) (0 VerbInf);

#an treiñ emgefre
SELECT NC IF (-1 ("an" det def)) (0 NC) (0 VerbInf);

REMOVE ("ober" n) IF (NOT -1 Det);

#ar bed
REMOVE VerbFin IF (-1 ("<ar>" det def));

#c'hoari a reont.
REMOVE NC IF (0 NC) (0 VerbInf) (1 ("a" pr)) (2 ("ober" vblex pri));

# REGLA (B    ): "Ur perzh 20€ zo bet goulennet evit kaout e anv engravet war unan eus karrezennigoù ar murlivadur. "
REMOVE Vpart IF (-1 ("kaout" vblex inf)); 

# implijout ar brezhoneg war ar panelloù kelaouiñ elektronek, prenañ ingal levrioù e brezhoneg evit ar vediaoueg, aozañ abadennoù e brezhoneg, stankaat ar c’hentelioù tañva brezhoneg er skolioù, komz brezhoneg e-pad al lidoù ofisiel.
REMOVE ("komz" n) IF (1 NC);

# REGLA (B    ): "Ur bed nevez."
REMOVE Verb IF (-1 DetInd);

# REGLA (B    ): "Ar pezh a fell deomp ober eo liammañ anezho"
REMOVE NC IF (-3 ("ar pezh a" rel)) (-2 VerbFin) (0 VerbInf) (0 NC);

#REGLA "Ar pezh a c’hall an treiñ emgefre ober "
REMOVE Adj IF (-1 ("ar pezh a")) (0 Verb) (0 Adj);


# REGLA (B    ): "Ne garan ket ac’hanout"
REMOVE NC IF (-1 ("ne" adv)) (1 ("ket" adv));

# REGLA (B    ): "Al labour a vo kinniget deoc’h."
SELECT NC IF (-1 ("<al>" det def));

# REGLA (B0024): "WAR BONT AN NAONED"
REMOVE Acr IF (0 NC) (0 Acr);

# REGLA (B0023):  "te a had"
SELECT PrnSubj IF (1 VpartSDO) (2 VerbFin);

# REGLA (B0003): "na ganit ket"
SELECT VpartNegImp IF (1 VerbImp);

SELECT VerbFin IF (-1 VpartNeg);

# Rankout a ran en em ginnig
SELECT VerbFin IF (-1 VpartRef);

# REGLA (B0004): "a had"
#SELECT Verb IF (-1 Vpart);

# REGLA (     ): "ouzhpenn 1000 den deuet a zesk brezhoneg"
SELECT VerbFin IF (-1 Vpart) (-1 Prep) (0 NC) (0 VerbFin) (1 NC);

# REGLA (     ): "Kerzhet hon eus e-pad 2 eurvezh"
REMOVE VerbInf IF (1 ("kaout" vblex));

# REGLA (     ): "a ra"
REMOVE Prep IF (0 Prep) (0 Verb) (1 Vpart) (1 VerbFin) (NOT 1 PRE-N);

REMOVE Vpart IF (0 Vpart) (0 VerbFin) (-1 VerbFin) (-1 Vpart) (NOT -1 PRE-N);

# REGLA (B0022): "ne ... ket"
SELECT Verb IF (-1 VpartNeg) (1 Ket);

# "Evit ar poent e c’heller ober gant e ijinadenn"
SELECT VerbInf IF (-1 ("gellout" vblex) OR ("ober" vblex));

# REGLA (B0005): "na ganit ket"
SELECT VerbImp IF (-1 VpartNegImp);

# REGLA (B0006): "emañ e Brest"
SELECT Prep IF (-1 Vbloc) (NOT 1 SoftMut);

#Kalz tostoc’h emañ e brezegenn ouzh da hini
REMOVE Prep + ("e") IF (0 Vpart) (0 Prep) (1 SoftMutCons) (1 SoftMut) (NOT 1C NC);

# REGLA (B0008): "edo o vervel"
SELECT VpartGer IF (1 VerbInf);

# Emaon o vont da ginnig ac’hanout dezho.
SELECT Verb IF (1 PrnDObj) (2 PrnIObj);

# REGLA (B0015): "o chom e Roazhon"
SELECT VerbInf IF (-1 VpartGer);

# REGLA (B0009): "Geriadur digor ha frank"
#                "kinnig tremen anezho bep bloaz"
#                "E Brest"
#                "Anzav a rez"
SELECT Adj IF (-1 NC) (0 NC) (0 Adj) (NOT 1 Prep) (NOT 1 PrnDObj) (NOT 0 Toponim) (NOT 0 VerbFin);


# REGLA (B    ): "seul fonnusoc'h, seul welloc'h"
SELECT PreAdv IF (1 (adj sint comp));

# REGLA (B    ): "met dav eo dezho goulenn un aotre evit gallout ober kement-mañ gant ar re OGK"
SELECT Verb IF (-3 ("dav" adj)) (-2 ("<eo>" vblex)) (-1 PrnIObj);
SELECT Verb IF (-2 ("dav" adj)) (-1 ("<eo>" vblex));

# REGLA (B    ): "Ne c’hallan ket ober an dra-se"
SELECT VerbInf IF (-1 ("ket" adv)) (-2 VerbFin) (NOT -2 ("kaout"));

# n'en doa ket gwelet 
SELECT VerbPP IF (-1 ("ket" adv)) (-2 VerbFin) (-2 ("kaout"));

# REGLA (B0012): "An dud a zeu da Roazhon"
REMOVE VerbFin IF (0 Det) (1 NC);

#Meur a bal zo gant an dud a fell dezho deskiÃ± ar yezh
REMOVE Adj IF (-1 ("a")) (0 VerbFin) (0 Adj) (1C (prn obj));

# REGLA (C0002): "zeu da Gwengamp" "Prezidant Radio France a oa e Kemper d'ar 6 a viz Here"
REMOVE PrnDObj IF (1 Toponim);

# REGLA (    ): "ganet e oa bet e 1975" 
REMOVE PrnDObj IF (1 Num);

#Mont a ran da ginnig anezhi dezhe
SELECT Prep IF (-1 ("mont a ober")) (1 VerbInf);

# REGLA (B    ): ", en he fenn Yannick Jadot rener kozh Greenpeace Bro-C'hall"
REMOVE PrnDObj IF (-1 ("<en>" pr));

# REGLA (B    ): "Bez' e rankan mont bremañ."
REMOVE PrnDObj IF (-1 VerbInf) (1 VerbFin);

# REGLA (B    ): "Ha n'on ket gwisket na gwalc’het c’hoazh"
SELECT CC IF (-1 VerbPP) (1 VerbPP);

# REGLA (B    ): "ar Skrivadeg a vo dalc'het e Skol-Veur La Harpe"
REMOVE PrnDObj IF (-1 Verb) (1 NC);

# REGLA (B    ): "o chom e oamp en un tiig koant "
REMOVE PrnDObj IF (-2 VpartGer) (-1 Verb) (1 Verb);

# REGLA (B    ): "Dalc'het e vo er sal Sten Kidna" 
REMOVE PrnDObj IF (-1 VerbPP) (0 VpartIDO) (1 ("bezañ" vblex));

# REGLA (B    ): "D'ar mare ma oan o tigeriñ an nor"
REMOVE DetPos IF (1C VerbFin);

# REGLA (B0011): "Stad da lod"
REMOVE PrnDObj IF (NOT -1 VerbFin) (NOT 1 VerbFin);

# REGLA (B    ): "diorroet eo o rouedadoù war an dachenn"
REMOVE PrnDObj IF (1 NC) (NOT 1 VerbFin);

# REGLA (B    ): "d'ur skoazell digant an holl Vretoned"
REMOVE PrnInd IF (-1 Det) (1 NC);
SELECT PreDet IF (-1 Det) (1 NC);

# REGLA (B0013): "Me am eus kanet"
REMOVE VerbImp IF (-1 VerbFin);

# REGLA (B0016): >The particle is omitted before every form of 'kaout' and the locative forms of 'bezañ'
REMOVE Vpart IF (1 ("kaout" vblex));
REMOVE Vpart IF (1 Vbloc);

# REGLA (B0019): "o chom e Roazhon"
REMOVE PrnDObj IF (-1 VerbInf);

# REGLA (B0020): "Ni a ro al laezh"
SELECT VerbFin IF (-1 VpartSDO) (-2 PrnSubj);


# REGLA (B    ): "Ne implij ket"
REMOVE VerbInf IF (-1 ("ne")) (1 ("ket"));

# REGLA (B0021): >The particle is omitted before verbal nouns and imperatives
REMOVE VerbInf IF (-1 Vpart) (0 VerbFin);
REMOVE VerbImp IF (-1 Vpart) (0 VerbFin);

REMOVE Itg IF (1 VerbPP);

SELECT CS IF (1 VerbFin) (NOT 1 NC) (0 DetPos);

# REGLA (B    ): "Bep sizhun e vez tro da lenn brezhoneg war Bremaik"
SELECT N IF (-1 Prep) (0 N) (0 Adv);

# REGLA (B    ): "Meur a viz"
SELECT N IF (-1 Det) (0 N) (0 Verb);

# REGLA (B    ): "kuit da gomz e galleg"
SELECT Verb IF (-1 ("kuit da"));

# REGLA (B    ): "emgav gant rener ar radio"
REMOVE Verb IF (-1 ("gant" pr));

# REGLA (B    ): "En 2 yezh war"
REMOVE Adj IF (-1 Num) (0 Adj) (0 NC) (1 Prep);

# a vo staliet goude e ti an dud
REMOVE ("e" det pos) IF (1 NomM) (1 SoftMutCons) (NOT 1 SoftMut);

# REGLA (B    ): "Bet hon eus kalz a draoù" / "Bet bezañ"
SELECT ("kaout" pp) IF (0 ("kaout" pp)) (0 ("bezañ" pp)) (1 ("kaout" vblex));
SELECT ("kaout" pp) IF (0 ("kaout" pp)) (0 ("bezañ" pp)) (-1 ("kaout" vblex));
SELECT ("bezañ" pp) IF (0 ("kaout" pp)) (0 ("bezañ" pp)) (1 ("bezañ" vblex));
SELECT ("bezañ" pp) IF (0 ("kaout" pp)) (0 ("bezañ" pp)) (-1 ("bezañ" vblex));

SELECT ("kaout" pp) IF (0 ("kaout" pp)) (0 ("bezañ" pp)) (2 ("kaout" vblex));
SELECT ("kaout" pp) IF (0 ("kaout" pp)) (0 ("bezañ" pp)) (-2 ("kaout" vblex));
SELECT ("bezañ" pp) IF (0 ("kaout" pp)) (0 ("bezañ" pp)) (2 ("bezañ" vblex));
SELECT ("bezañ" pp) IF (0 ("kaout" pp)) (0 ("bezañ" pp)) (-2 ("bezañ" vblex));

# REGLA (B    ): "D'an emgann ez an"
REMOVE (+da) IF (1 DetDef);

# REGLA (B    ): "Gwelet em eus ar c’hi en ur dreuziñ an hent"
SELECT VerbInf (-1 VpartPPres);

SELECT VerbPP IF (1C ("bezañ" vblex)) (1 VerbFin);


# REGLA (B    ): "N'ez an ket da c'hoari "
SELECT VerbFin IF (-1 Vpart) (-2 ("ne" adv));


# REGLA (B    ): "en he fenn "
# e ran mat
REMOVE VerbFin IF (-1C DetPos);

# tremen 50 skoliad
SELECT Prep IF (0 ("tremen")) (1C Num) (2 NC);

# betek an trec'h
SELECT NC IF (-2C Prep) (-1C DetDef) (0 NC) (0 VerbFin);

# kalz a dud
SELECT NC IF (-1C Prep) (-1C SoftMutTrigger) (0 NC) (0 VerbFin);

# pemp servij / 5 servij
SELECT NC IF (-1C Num) (0 NC) (0 VerbFin) (NOT 0 Prep);

# re a dud
SELECT ("re a" pr) IF (0 ("<re a>")) (1C NC); 

# re a Roazhon. re a Varcelona.
SELECT ("re" prn) IF (0 ("<re>")) (1C Toponim); 


# Interyecciones 
# ma, mont a ran kuit
REMOVE Interj IF (NOT 1 Coma);

SELECT Interj IF (-1 BOS) (1 Coma);

# ar staj-se, an hini kentañ evel-se
SELECT DetDef IF (1 ("hini"));

#an eil priz
REMOVE Verb IF (-1C DetDef) (1C NC);

#Prezidant Kevre Gouren Aodoù-an-Arvor
#Ma c’hall
# hag a ya da stummañ
# mar fell dit 
# e-lec'h ma tispleg
REMOVE VerbFin IF (NOT -1 Vpart) (0 SoftMutCons) (NOT 0 SoftMut) (NOT -1 (".*ma" cnjadv)) (NOT -1 ("pa" cnjsub))  (NOT -1 (".*ma" cnjsub));
REMOVE VerbFin IF (-1C ("a" vpart)) (0 SoftMutCons) (NOT 0 SoftMut) (NOT 0 ("ya" adv)) (NOT -1 (".*ma" cnjadv));

# e-lec'h ma tispleg 
SELECT VerbFin IF (-1 (".*ma" cnjadv)) (0 VerbFin) (0 MixedMutCons) (0 MixedMut);

# Aet e vefen a-walc’h eus
SELECT Vpart IF (-1 VerbPP) (1C VerbFin);

#emañ da vragoù pe war an daol pe war ar gador
SELECT ("war" pr) IF (-1 ("pe" cnjcoo)) ;
#pe gant an dud
SELECT ("gant" pr) IF (-1 ("pe" cnjcoo)) ;

#  en el singular, no mutan los sustantivos masculinos después del articulo (excepto k que muta en c'h)
# ki (perro) --> ar c'hi, taol (golpe) --> an taol, perzh (qualidad) --> ar perzh, 
# berzh (suceso) --> ar berzh, taol (mesa) --> an daol
# the mutation k>c'h isn't a soft one. "ar gred" can't be a mutation of the word "kred" which is masculine.

REMOVE NomM + SoftMut IF (0 SoftMutCons) (0 SoftMut) (-1C DetDef OR DetInd);

# An niver a votoù bet dastumet gant listenn E.E.
REMOVE VerbFin IF (-1C DetDef);

# ar menegoù skrivet kentañ eus ar c’hoari go.
SELECT Adj IF (0 Adj) (0 Num) (-1 Adj OR VerbPP) (NOT 1 NC);


# farsal a rez
SELECT Vpart IF (-1C VerbInf) (0 ("a")) (1 ("ober" vblex));

# ademas, en una serie Nombre Propio + a + verbo/sustantivo : hay que escoger al verbo
SELECT VerbFin IF (-2 NP) (-1 ("a")) (0 Verb) (0 NC); 

# Pegen kriz eo ar vuhez / qué crual es la vida
SELECT Adj IF (-1C ("pegen" adv));

# ma zud
REMOVE CS IF (1C NC);

# an dud am boa gwelet disadorn
REMOVE VerbInf IF (-1C ("kaout")) (-1C VerbFin);

# diwar-benn stad ar c’hleweled e brezhoneg
SELECT NC IF (-1C ("diwar-benn" pr));

SELECT Prep IF (0 ("<gant ma>")) (1C NC);
SELECT Conj IF (0 ("<gant ma>")) (1C VerbFin);

# evit kempouez plas ar yezh
REMOVE Adj IF (-1C Prep);

# n'eus redi ebet
SELECT (p3 impers) IF (0 ("<n'eus>") OR ("<n’eus>"));

#ar perc’henn a implij ur micherour 
SELECT VerbFin IF (-3 Det) (-2 NC) (-1 ("a")) (0 NC) (0 VerbFin) (1 Det) (2 NC);

SELECT ("ha pa") IF (1 VerbFin + Cond);

# me zo dougerez
SELECT Adj IF (0 ("<dougerez>")) (-1C ("bezañ" vblex)) (-2C PrnSubj);

# dougerez on
SELECT Adj IF (0 ("<dougerez>")) (1C ("bezañ" vblex));

#ma ne teu netra
SELECT CS IF (1C ("ne" adv));

#ne ra nemet c'hoari
SELECT CS IF (0 ("nemet")) (1 VerbFin); # check this, perhaps too loose

#lavaret em eus dezhañ tremen
REMOVE Prep IF (1 EOS);

#Bevañ a ra e Mali 
REMOVE DetPos IF (0 Prep) (0 DetPos) (1 NP) (NOT 1 SoftMutCons LINK 0 SoftMut);

#hag e kinnige an dud tremen da welet anezhañ
SELECT Verb IF (1 ("da" pr)) (2 VerbPP);

REMOVE Prep IF (0 VerbInf) (0 Prep) (1C PrnDObj);

# ar wech kentañ
SELECT Adj IF (0 Num) (0 Adj) (-1C NC);

#20 milion a dud a implij anezhañ
#bevañ a ran
#SELECT Vpart IF (1 VerbFin) (1 NC) (2 PrnDObj);
#REMOVE Vpart IF (1C NC) (NOT -1 VerbInf);

#rebech kentañ
REMOVE VerbInf IF (0 VerbInf) (0 NC) (1 Adj OR Ord);

# Skrivadeg e brezhoneg e Kemper e miz Meurzh
REMOVE PrnDObj IF (-1C NC) (0 Prep) (0 PrnDObj); 

#Skuizh e oan c'hoazh
REMOVE Vpart + ("e") IF (1 MixedMutCons) (NOT 1 MixedMut) (NOT 1 ("<[aeiou].*>"));

#Skuizh e oan c'hoazh
REMOVE NC IF (0 ("<oan>" n)) (0 ("<oan>" vblex)) (-1 ("e"));

# bevañ a ran
#SELECT VerbFin IF (-2 VerbInf) (-1C ("<a>")) (0 ("<ran>")) ;

# e ran mat 
# e ran vat
REMOVE NC IF (-1 Vpart) (0 NC) (0 VerbFin) (1 Adj) (1 SoftMutCons) (NOT 1 SoftMut);

# - ran venga después de un ART (def o indef) 
# - o que este seguido de un ADJ con mutacion suave
# ur ran : una rana
# ran vihan : ranita
SELECT VerbFin IF (0 ("<ran>")) (NOT -1 DetInd) (NOT 1 Adj) (NOT 1 SoftMutCons) (NOT 1 SoftMut);

REMOVE VerbFin IF (NOT -1 Vpart) (NOT -1 (".*ma")) (NOT -1 ("pa" cnjsub)) (NOT -1 (prn rel));
    ## dre ret ½ bost war ar buheziñ politikel 
    ## ar mod ma c'hall an implijidi bezañ galvet 
    ## Ar pezh a vank evit kas al labour da benn war dachenn an teknologiezhioù nevez eo frammoù a-vicher.

#met bevañ a ra e Gwipedel
SELECT VerbInf IF (0 (adj sup)) (0 VerbInf) (1 ("a")) (2 ("ober"));

#Da skouer e 2004 e oa bet embannet gant Unvaniezh Europa
REMOVE Vpart IF (1C Num);

#C'hoari zo
REMOVE VerbInf IF (0 VerbInf) (0 NC) (1 ("<zo>"));

#ar mod ma c'hall an implijidi bezañ galvet
REMOVE Adj IF (-3 DetDef) (-2 NC) (-1 ("ma")) (0 ("gallout"));

#D'ar mare ma oan o tigeriñ an nor
REMOVE NC IF (-1 CA OR CS) (0 ("<oan>")) (1 ("o"));

#C’hwitellat a ra en ur labourat
SELECT Vpart IF (0 ("<en ur>")) (1C VerbInf);

#Ne zeuio ket Katell da gomz
REMOVE NC IF (0 NC) (0 VerbInf) (-1 ("da")) (NOT -1 ("<d'an>")) (NOT -1 ("<d'ar>")) (*-2 VerbFin BARRIER BOS);

# E Brest
SELECT Toponim IF (-1 ("e")) (0 Toponim) ;

# E Brest
SELECT Prep IF (0 Prep) (0 NC) (1C Toponim);

# e c’hallimp kas warc’hoazh dezho.
SELECT VerbInf IF (-1C ("gallout" vblex));

REMOVE DetPos IF (0 ("<e>")) (1 MixedMut) (NOT 1 SoftMut) ;
REMOVE Prep IF (0 ("<e>")) (1 MixedMut) ;
REMOVE NC IF (0 ("<e>")) (1 VerbFin) ; 
    ## Evit talañ ouzh an diaezamant-se hag evit diorren an embann e tle ar Rannvro pe ur framm a zo fiziet ennañ ar yalc’hadoù termenañ palioù da dizhout evit an niver a ditloù embannet ha dre rummad.

REMOVE ("pal" n f) IF (0C ("<pal>")) (NOT 1 SoftMut) ;
    ## Kas ar galleg war-raok a chom pal pennan ar framm-se. 

SELECT Vpart IF (0 ("<ez>")) (1 ("a")) ; 
    ## Goude bezañ kendrec'het e dad ez a da Bariz da studiañ an arz ha degemeret eo en demiezh Jullian : eno e vo skoliad da Alfred Roll hag Emmanuel Damoye.

SELECT VerbFin IF (-1C ("ar pezh a")); 
    ## Ar pezh a vank evit kas al labour da benn war dachenn an teknologiezhioù nevez eo frammoù a-vicher.

REMOVE VerbFin IF (0C NC OR VerbFin) (-1 ("o" vpart)) (NOT -1 (prn obj)); 
    ## Ezhomm zo da vont pelloc’h c’hoazh ganti evit kinnig abadennoù lies o danvez ha dedennus en o framm.

REMOVE Det IF (0 ("<en>")) (1 DetPos);
    ## Ezhomm zo da vont pelloc’h c’hoazh ganti evit kinnig abadennoù lies o danvez ha dedennus en o framm.
    ## En o levr e vo kavet elfennoù sintetek hag a c'haller fiziout enno evit anavezout gwelloc'h hon endro, evit ijinañ gwelloc'h dazont Breizh.

SELECT VerbFin IF (-1 ("a")) (0 NC OR VerbFin) (1 Prep OR PrnIObj) ;
    ## « Tiez kozh e Roazhon », « Plasenn Koc'hu an Edeier, » taolennet e 1929 gant Camille Godet, a ro dimp da anavezout un neuz eus kêr Roazhon aet da get, e-lec'h m'emañ Plasenn Honoré Kommereg hiziv an deiz.

SELECT Vpart IF (0 ("<e>")) (1C VerbFin);
    ## Lakaet e veze sevel truajoù koulz gant an duged ha gant ar roueed, pe gant ar c’hêrioù o-unan.

SELECT Adj IF (-1 NC) (0 Adj OR VerbPP) (1 Prep);
    ## Daremprediñ Sant-Briag, kêr vrudet eus an arvor d'ar c'houlz-se, a rae ar c'hizeller d'an ampoent eo bet savet an delwenn-mañ.

SECTION

# REGLA (A0002): "hi a oar"
SELECT DroppedG IF (-1 Vpart);

SELECT NC IF (-1 DetDef) (0C NC OR Adj) (1 Adj);
    ## E reter Etiopia emañ Harar Jugol (mogerioù-kreñv a dalvez ar ger diwezhañ-mañ).

# REGLA (A0003): "na ganit ket"
SELECT SoftMut IF (-1C SoftMutTrigger) (0 SoftMutCons) (0 SoftMut) (NOT -1 ("da" pr)) (NOT -1 (indirect)); 

# REGLA (A0004): "emañ e Brest"
REMOVE SoftMut IF (NOT -1 SoftMutTrigger);

# REGLA (A0006): ""
SELECT SoftMutTrigger IF (1C SoftMut) (1C SoftMutCons) (NOT 1 ("<vez>")) (NOT 0 ("<e>")) ;
    ## Perc'hennet eo an tour gant an ti-kêr abaoe 1975 ; digor e vez da an den evit gweladenn bleinañ.

SELECT NC IF (0 NC OR Adj) (-1 DetPos);
    ## Ar groaz savet a vez flastret tamm-ha-tamm ma echu ho tres gant ur vegenn.

# REGLA (A0005): "ez ti"
SELECT HardMut IF (-1 HardMutTrigger);

# REGLA (A0006): "ez ti"
SELECT HardMutTrigger IF (1 HardMut);

# REGLA (A0007): "o deus kanet"
REMOVE HardMut IF (NOT -1 HardMutTrigger);

# REGLA (A0008): "nemet peder flanedenn"
SELECT AspMut IF (-1 AspMutTrigger);

# REGLA (A0009): "nemet peder flanedenn"
SELECT AspMutTrigger IF (1 AspMut);

# REGLA (A0009): ""
REMOVE AspMut IF (NOT -1 AspMutTrigger);

# REGLA (A0008): ""
#SELECT MixedMut IF (-1 MixedMutTrigger) (0 MixedMutCons);

# REGLA (A0009): ""
#SELECT MixedMutTrigger IF (1 MixedMut) (1 MixedMutCons);

# REGLA (A0009): ""
#REMOVE MixedMut IF (NOT -1 MixedMutTrigger);

# REGLA (A0010): "un taol, un daol"
REMOVE NomF IF (-1 SoftMutTrigger) (NOT 0 SoftMut) (0 NomF) (0 NomM);

# "ken vi labouret"
SELECT Fut IF (-1 ("ken")) (0 ("vi")) (1 VerbPP);

# ul labour ken pouezus
SELECT PreAdv IF (-1C NC) (0 ("ken")) (1 Adj);

# e zivaskell 
SELECT DetPos IF (0 ("<e>")) (1 SoftMut) (1 SoftMutCons) (1 NC);

# pa oan bihan
SELECT VerbFin (-1 ("pa" cnjsub)) (0 VerbFin) (0 NC);

SECTION

# por el momento escoge a berzañ, mejor que le digas que escoja a merzout (berzañ no se conjuga mucho)
SELECT ("merzout" vblex) IF (0 ("merzout" vblex)) (0 ("berzañ" vblex));

# 'sa soeur' far more likely than 'dans soeur' or 'son loisir'
SELECT ("e" det pos) IF (1 ("c’hoar" n f));
SELECT ("c’hoar" n f) IF (-1 ("e" det pos));

# REGLA (C0003): "al Louarn"
REMOVE NP IF (0 NP) (0 NC) (-1 DetDef);

# REGLA (C0001): "o chom e Roazhon"
REMOVE DetPos IF (1 Toponim);

REMOVE (obj) IF (-1 BOS);

# bep pemp munut
REMOVE Adj IF (0 Adj) (0 NC) (-1 Num);

# meur a viz
REMOVE ("biz" n) IF (0 ("biz" n)) (0 ("miz" n)) (-1 ("meur a" det ind));

# en he fenn
REMOVE (+an) IF (1 DetPos) (0 ("<en>"));

# raktres sindikad bro Dinan
REMOVE VerbFin IF (NOT -1 Vpart LINK -1 Conj) ;

SELECT VerbFin IF (*-1C CS) (NOT *1C VerbFin);
    ## D'ar mare ma oan o tigeriñ an nor.
    ## Ezhomm zo da vont pelloc’h c’hoazh ganti evit kinnig abadennoù lies o danvez ha dedennus en o framm.


SELECT (pr) IF (-1 Num) (1 NC);

# select proper names if they are in caps

SELECT NP IF (0 ("Alan" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Al Lanv" np));
SELECT NP IF (0 ("Al Levrig" np));
SELECT NP IF (0 ("Al Liamm" np));
SELECT NP IF (0 ("An Here" np));
SELECT NP IF (0 ("Bremaik" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Bremañ" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Brud Nevez" np));
SELECT NP IF (0 ("Daoulagad Breizh" np));
SELECT NP IF (0 ("Dastum" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Dihun" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Divskouarn" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Diwan" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Dizale" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Emgann" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Emgleo Breiz" np));
SELECT NP IF (0 ("Emsav" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Goursez" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Gwalarn" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Kalanna" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Keleier" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Kelenn" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Mervent" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Roudour" np)) (NOT -1 BOS);
SELECT NP IF (0 ("Sked" np)) (NOT -1 BOS);

SELECT NP IF (0 UPPER) (0C NP OR NC);

#gant Kristen Nikolaz e Kemper
SELECT (np ant) IF (0 (np ant)) (1 (np cog)) (0 UPPER) (1 UPPER);
# Alan Stivell
SELECT (np cog) IF (-1 (np ant)) (0 (np cog)) (-1 UPPER) (0 UPPER);

# 'Francis'
SELECT (apos) IF (0 (apos)) (0 Vpart);

# ma vez roet.
SELECT VerbFin IF (-1 ("ma")) (0 MixedMut);

SELECT VerbFin IF (-1 ("ma") OR ("tra ma") OR ("mar")) (0 VerbFin);


###############################################################################
## Lexical selection 
###############################################################################
SECTION

# KSB / OAB 
SELECT (n acr m sg) IF (0 (n acr m sg)) (0 (n acr sg));

# treiñ + e + idioma = traduire + en + idioma 
#SUBSTITUTE ("treiñ") ("treiñ:1") ("treiñ" vblex) (1 ("e")) (2 Language);

# cuando se usa con el verbo paeañ (pagar) es mejor escoger a alquiler (loyer)
#SUBSTITUTE ("feurm") ("feurm:1") ("feurm" n m) (-1C* ("paeañ" vblex) BARRIER S-BOUNDARY) ;
#SUBSTITUTE ("feurm") ("feurm:1") ("feurm" n m) (1C* ("paeañ" vblex) BARRIER S-BOUNDARY) ;

# un tamm dic'hortoz : un poco inhabitual/un peu inattendu.
#SUBSTITUTE ("tamm") ("tamm:1") ("tamm" n) (-1 DetInd) (1 Adj);

# Herve a gavo da evañ  
#SUBSTITUTE ("kavout# da") ("kavout# da:1") ("kavout# da" vblex) (0 ("kavout# da")) (1C VerbInf);
