Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Hol>" #BOC# | #0# "hol" <adv> <itg> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kertben>" #BOC# | #0# "kert" <n> <sg> <ine> | #EOC# $0$ "<vannak>" #BOC# | #0# "van" <vbser> <pres> <pl> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_87_T_1


LRS T1:
Name: R_1_87_T_1
arity: 2
arccount: 70
statecount: 25
linecount: 71
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 80 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 80 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 12 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 13 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 18
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 16
  in: 2 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 50 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 17
  in: 2 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 17
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 17
  in: 29 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 18
  in: 2 -- 
  out: 7 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 18
  in: 7 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 18
  in: 16 -- 
  out: 10 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 80 -- 
  out: 9 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 19
  in: 29 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 2 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 16 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 21
  in: 29 -- 
  out: 24 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 21
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 16 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 22
  in: 29 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 22
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 3 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(96): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 57, 6, #BOC# )
Symbol(29, 63, 2, | )
Symbol(3, 65, 4, #0# )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 78, 5, <np> )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 94, 2, | )
Symbol(8, 96, 6, #EOC# )
Symbol(10, 102, 4, $0$ )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 114, 6, #BOC# )
Symbol(29, 120, 2, | )
Symbol(3, 122, 4, #0# )
Symbol(2, 126, 6, "és" )
Symbol(45, 132, 9, <cnjcoo> )
Symbol(29, 141, 2, | )
Symbol(8, 143, 6, #EOC# )
Symbol(10, 149, 4, $0$ )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 162, 6, #BOC# )
Symbol(29, 168, 2, | )
Symbol(3, 170, 4, #0# )
Symbol(2, 174, 7, "mari" )
Symbol(53, 181, 6, <adj> )
Symbol(87, 187, 5, <sg> )
Symbol(55, 192, 6, <nom> )
Symbol(29, 198, 2, | )
Symbol(3, 200, 4, #0# )
Symbol(2, 204, 7, "mari" )
Symbol(15, 211, 4, <n> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 226, 2, | )
Symbol(3, 228, 4, #0# )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 239, 5, <np> )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 255, 2, | )
Symbol(8, 257, 6, #EOC# )
Symbol(10, 263, 4, $0$ )
Symbol(2, 267, 6, "<a>" )
Symbol(7, 273, 6, #BOC# )
Symbol(29, 279, 2, | )
Symbol(3, 281, 4, #0# )
Symbol(2, 285, 4, "a" )
Symbol(73, 289, 6, <det> )
Symbol(2, 295, 6, <def> )
Symbol(29, 301, 2, | )
Symbol(8, 303, 6, #EOC# )
Symbol(10, 309, 4, $0$ )
Symbol(2, 313, 12, "<kertben>" )
Symbol(7, 325, 6, #BOC# )
Symbol(29, 331, 2, | )
Symbol(3, 333, 4, #0# )
Symbol(2, 337, 7, "kert" )
Symbol(15, 344, 4, <n> )
Symbol(87, 348, 5, <sg> )
Symbol(2, 353, 6, <ine> )
Symbol(29, 359, 2, | )
Symbol(8, 361, 6, #EOC# )
Symbol(10, 367, 4, $0$ )
Symbol(2, 371, 11, "<vannak>" )
Symbol(7, 382, 6, #BOC# )
Symbol(29, 388, 2, | )
Symbol(3, 390, 4, #0# )
Symbol(35, 394, 6, "van" )
Symbol(48, 400, 8, <vbser> )
Symbol(37, 408, 7, <pres> )
Symbol(2, 415, 5, <pl> )
Symbol(2, 420, 6, <s3p> )
Symbol(2, 426, 6, <ind> )
Symbol(29, 432, 2, | )
Symbol(8, 434, 6, #EOC# )
Symbol(10, 440, 4, $0$ )
Symbol(2, 444, 6, "<.>" )
Symbol(7, 450, 6, #BOC# )
Symbol(29, 456, 2, | )
Symbol(3, 458, 4, #0# )
Symbol(2, 462, 4, "." )
Symbol(64, 466, 7, <sent> )
Symbol(2, 473, 6, <<<<> )
Symbol(29, 479, 2, | )
Symbol(8, 481, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 2 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 80, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 43, signum = 10, q = 15, out = 4
trans_offset 52, signum = 2, q = 18, out = 7
trans_offset 53, signum = 7, q = 18, out = 8
trans_offset 56, signum = 29, q = 19, out = 11
trans_offset 57, signum = 3, q = 20, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 59, signum = 16, q = 21, out = 15
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 67, signum = 8, q = 23, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 33, signum = 16, q = 11, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(96): 
4 7 8 11 12 13 14 16 26 4 7 8 11 60 21 15 21 21 24 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 12 13 15 21 21 24 26 4 7 8 11 12 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 22, q = 4, out = 2
trans_offset 27, q = 4, out = 3
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10

Output is(84): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 6, "és" )
Symbol(45, 132, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 267, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 285, 4, "a" )
Symbol(73, 289, 6, <det> )
Symbol(2, 295, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 313, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 337, 7, "kert" )
Symbol(15, 344, 4, <n> )
Symbol(87, 348, 5, <sg> )
Symbol(2, 353, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 371, 11, "<vannak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 394, 6, "van" )
Symbol(48, 400, 8, <vbser> )
Symbol(37, 408, 7, <pres> )
Symbol(2, 415, 5, <pl> )
Symbol(2, 420, 6, <s3p> )
Symbol(2, 426, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 444, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 462, 4, "." )
Symbol(64, 466, 7, <sent> )
Symbol(2, 473, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 2 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Ma>" #BOC# | #0# "ma" <adv> | #EOC# $0$ "<szép>" #BOC# | #0# "szép" <adv> | #EOC# $0$ "<az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<idő>" #BOC# | #0# "idő" <n> <sg> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<nagyon>" #BOC# | #0# "nagyon" <adv> | #EOC# $0$ "<meleg>" #BOC# | #0# "meleg" <adj> <sg> <nom> | #0# "meleg" <n> <sg> <nom> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_43_T_1


LRS T1:
Name: R_1_43_T_1
arity: 2
arccount: 152
statecount: 39
linecount: 153
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 72 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 73 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 2
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 2
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 72 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 2
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 3
  in: 2 -- 
  out: 9 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 7 -- 
  out: 11 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 3
  in: 15 -- 
  out: 14 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 3
  in: 53 -- 
  out: 12 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 3
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 73 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 29 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 29 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 3 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 8
  in: 2 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 36 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 72 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 73 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 2 -- 
  out: 37 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 9
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 9
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 9
  in: 72 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 9
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 2 -- 
  out: 31 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 72 -- 
  out: 32 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 12
  in: 3 -- 
  out: 30 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 14
  in: 3 -- 
  out: 54 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 72 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 62 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 72 -- 
  out: 63 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 2 -- 
  out: 31 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 29 -- 
  out: 36 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 72 -- 
  out: 32 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 17
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 3 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 18
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 2 -- 
  out: 62 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 72 -- 
  out: 63 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 19
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 10 -- 
  out: 5 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 21
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 21
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 22
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 22
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 22
  in: 72 -- 
  out: 10 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 22
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 2 -- 
  out: 9 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 7 -- 
  out: 11 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 23
  in: 15 -- 
  out: 14 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 23
  in: 53 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 23
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 23
  in: 73 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 29 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 25
  in: 29 -- 
  out: 27 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 27
  in: 3 -- 
  out: 30 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 2 -- 
  out: 31 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 29 -- 
  out: 36 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 72 -- 
  out: 32 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 73 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 2 -- 
  out: 37 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 72 -- 
  out: 38 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 31 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 29 -- 
  out: 36 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 72 -- 
  out: 32 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 31
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 3 -- 
  out: 30 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 3 -- 
  out: 54 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 34
  in: 2 -- 
  out: 37 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 34
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 72 -- 
  out: 38 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 35
  in: 2 -- 
  out: 62 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 35
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 35
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 35
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 72 -- 
  out: 63 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 36
  in: 2 -- 
  out: 31 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 36
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 36
  in: 29 -- 
  out: 36 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 72 -- 
  out: 32 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 37
  in: 3 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 37
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 38
  in: 2 -- 
  out: 62 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 38
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 38
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 38
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 38
  in: 72 -- 
  out: 63 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(152):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(118): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 7, "<Ma>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(2, 65, 5, "ma" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 76, 2, | )
Symbol(8, 78, 6, #EOC# )
Symbol(10, 84, 4, $0$ )
Symbol(2, 88, 10, "<szép>" )
Symbol(7, 98, 6, #BOC# )
Symbol(29, 104, 2, | )
Symbol(3, 106, 4, #0# )
Symbol(2, 110, 8, "szép" )
Symbol(54, 118, 6, <adv> )
Symbol(29, 124, 2, | )
Symbol(8, 126, 6, #EOC# )
Symbol(10, 132, 4, $0$ )
Symbol(72, 136, 7, "<az>" )
Symbol(7, 143, 6, #BOC# )
Symbol(29, 149, 2, | )
Symbol(3, 151, 4, #0# )
Symbol(75, 155, 5, "az" )
Symbol(2, 160, 9, <predet> )
Symbol(87, 169, 5, <sg> )
Symbol(55, 174, 6, <nom> )
Symbol(29, 180, 2, | )
Symbol(3, 182, 4, #0# )
Symbol(75, 186, 5, "az" )
Symbol(57, 191, 6, <prn> )
Symbol(87, 197, 5, <sg> )
Symbol(55, 202, 6, <nom> )
Symbol(29, 208, 2, | )
Symbol(3, 210, 4, #0# )
Symbol(2, 214, 4, "a" )
Symbol(73, 218, 6, <det> )
Symbol(2, 224, 6, <def> )
Symbol(29, 230, 2, | )
Symbol(8, 232, 6, #EOC# )
Symbol(10, 238, 4, $0$ )
Symbol(2, 242, 9, "<idő>" )
Symbol(7, 251, 6, #BOC# )
Symbol(29, 257, 2, | )
Symbol(3, 259, 4, #0# )
Symbol(2, 263, 7, "idő" )
Symbol(15, 270, 4, <n> )
Symbol(87, 274, 5, <sg> )
Symbol(55, 279, 6, <nom> )
Symbol(29, 285, 2, | )
Symbol(8, 287, 6, #EOC# )
Symbol(10, 293, 4, $0$ )
Symbol(2, 297, 6, "<,>" )
Symbol(7, 303, 6, #BOC# )
Symbol(29, 309, 2, | )
Symbol(3, 311, 4, #0# )
Symbol(2, 315, 4, "," )
Symbol(44, 319, 5, <cm> )
Symbol(29, 324, 2, | )
Symbol(8, 326, 6, #EOC# )
Symbol(10, 332, 4, $0$ )
Symbol(2, 336, 11, "<nagyon>" )
Symbol(7, 347, 6, #BOC# )
Symbol(29, 353, 2, | )
Symbol(3, 355, 4, #0# )
Symbol(2, 359, 9, "nagyon" )
Symbol(54, 368, 6, <adv> )
Symbol(29, 374, 2, | )
Symbol(8, 376, 6, #EOC# )
Symbol(10, 382, 4, $0$ )
Symbol(2, 386, 10, "<meleg>" )
Symbol(7, 396, 6, #BOC# )
Symbol(29, 402, 2, | )
Symbol(3, 404, 4, #0# )
Symbol(2, 408, 8, "meleg" )
Symbol(53, 416, 6, <adj> )
Symbol(87, 422, 5, <sg> )
Symbol(55, 427, 6, <nom> )
Symbol(29, 433, 2, | )
Symbol(3, 435, 4, #0# )
Symbol(2, 439, 8, "meleg" )
Symbol(15, 447, 4, <n> )
Symbol(87, 451, 5, <sg> )
Symbol(55, 456, 6, <nom> )
Symbol(29, 462, 2, | )
Symbol(8, 464, 6, #EOC# )
Symbol(10, 470, 4, $0$ )
Symbol(2, 474, 8, "<van>" )
Symbol(7, 482, 6, #BOC# )
Symbol(29, 488, 2, | )
Symbol(3, 490, 4, #0# )
Symbol(35, 494, 6, "van" )
Symbol(48, 500, 8, <vbser> )
Symbol(37, 508, 7, <pres> )
Symbol(87, 515, 5, <sg> )
Symbol(2, 520, 6, <s3p> )
Symbol(2, 526, 6, <ind> )
Symbol(29, 532, 2, | )
Symbol(8, 534, 6, #EOC# )
Symbol(10, 540, 4, $0$ )
Symbol(2, 544, 6, "<.>" )
Symbol(7, 550, 6, #BOC# )
Symbol(29, 556, 2, | )
Symbol(3, 558, 4, #0# )
Symbol(2, 562, 4, "." )
Symbol(64, 566, 7, <sent> )
Symbol(2, 573, 6, <<<<> )
Symbol(29, 579, 2, | )
Symbol(8, 581, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 10, signum = 72, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 58, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 31, signum = 53, q = 8, out = 33
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44

Intermediate is(118): 
5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 33 31 31 36 29 31 35 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 31 31 36 44 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 58, q = 6, out = 29
trans_offset 70, q = 8, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 28, q = 4, out = 53
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 110, q = 14, out = 3
trans_offset 126, q = 15, out = 29
trans_offset 162, q = 18, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 72
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(106): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<Ma>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 65, 5, "ma" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 88, 10, "<szép>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 110, 8, "szép" )
Symbol(54, 118, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 214, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 224, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 242, 9, "<idő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 263, 7, "idő" )
Symbol(15, 0, 0, )
Symbol(87, 274, 5, <sg> )
Symbol(55, 279, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 297, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 315, 4, "," )
Symbol(44, 319, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 336, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 359, 9, "nagyon" )
Symbol(54, 368, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 10, "<meleg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 408, 8, "meleg" )
Symbol(53, 0, 0, )
Symbol(87, 422, 5, <sg> )
Symbol(55, 427, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 8, "meleg" )
Symbol(15, 0, 0, )
Symbol(87, 451, 5, <sg> )
Symbol(55, 456, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 474, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 494, 6, "van" )
Symbol(48, 500, 8, <vbser> )
Symbol(37, 508, 7, <pres> )
Symbol(87, 515, 5, <sg> )
Symbol(2, 520, 6, <s3p> )
Symbol(2, 526, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 544, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 562, 4, "." )
Symbol(64, 566, 7, <sent> )
Symbol(2, 573, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_83_T_1


LRS T1:
Name: R_1_83_T_1
arity: 2
arccount: 98
statecount: 32
linecount: 99
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 54 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 54 -- 
  out: 14 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 10 -- 
  out: 4 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(28):
  state_no: 11
  in: 2 -- 
  out: 7 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 11
  in: 7 -- 
  out: 8 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 11
  in: 15 -- 
  out: 10 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 54 -- 
  out: 9 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 12
  in: 29 -- 
  out: 11 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 13
  in: 3 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 14
  in: 2 -- 
  out: 37 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 14
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 14
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 15
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 15
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 15
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 16
  in: 2 -- 
  out: 45 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 16
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 16
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 17
  in: 3 -- 
  out: 49 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 45 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 29 -- 
  out: 48 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 3 -- 
  out: 49 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 20
  in: 3 -- 
  out: 36 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 21
  in: 2 -- 
  out: 59 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 21
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 54 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 3 -- 
  out: 36 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 23
  in: 2 -- 
  out: 59 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 23
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 24
  in: 2 -- 
  out: 37 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 24
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 54 -- 
  out: 38 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 25
  in: 2 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 25
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 54 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 27
  in: 2 -- 
  out: 59 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 27
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 27
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 27
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 28
  in: 2 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 28
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 28
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 28
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 29
  in: 2 -- 
  out: 45 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 29
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 29
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 29
  in: 54 -- 
  out: 46 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 30
  in: 2 -- 
  out: 37 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 30
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 30
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 30
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 31
  in: 2 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 31
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 31
  in: 29 -- 
  out: 76 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 31
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(98):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(106): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<Ma>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 65, 5, "ma" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 88, 10, "<szép>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 110, 8, "szép" )
Symbol(54, 118, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 214, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 224, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 242, 9, "<idő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 263, 7, "idő" )
Symbol(15, 0, 0, )
Symbol(87, 274, 5, <sg> )
Symbol(55, 279, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 297, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 315, 4, "," )
Symbol(44, 319, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 336, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 359, 9, "nagyon" )
Symbol(54, 368, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 10, "<meleg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 408, 8, "meleg" )
Symbol(53, 0, 0, )
Symbol(87, 422, 5, <sg> )
Symbol(55, 427, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 8, "meleg" )
Symbol(15, 0, 0, )
Symbol(87, 451, 5, <sg> )
Symbol(55, 456, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 474, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 494, 6, "van" )
Symbol(48, 500, 8, <vbser> )
Symbol(37, 508, 7, <pres> )
Symbol(87, 515, 5, <sg> )
Symbol(2, 520, 6, <s3p> )
Symbol(2, 526, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 544, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 562, 4, "." )
Symbol(64, 566, 7, <sent> )
Symbol(2, 573, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 54, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 21, signum = 8, q = 7, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 37, signum = 54, q = 14, out = 38
trans_offset 40, signum = 29, q = 15, out = 16
trans_offset 53, signum = 8, q = 19, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 36, signum = 29, q = 14, out = 16
trans_offset 47, signum = 8, q = 17, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 54, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 21, signum = 8, q = 7, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 36, signum = 29, q = 14, out = 16
trans_offset 46, signum = 3, q = 17, out = 49
trans_offset 56, signum = 2, q = 21, out = 59
trans_offset 57, signum = 15, q = 21, out = 61
trans_offset 70, signum = 2, q = 25, out = 73
trans_offset 70, signum = 2, q = 25, out = 73
trans_offset 72, signum = 29, q = 25, out = 76
trans_offset 47, signum = 8, q = 17, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(106): 
4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 14 16 22 4 7 8 11 36 37 38 16 22 4 7 8 11 36 37 37 37 16 22 4 7 8 11 12 13 15 13 13 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 14 16 22 4 7 8 11 36 37 37 37 37 16 49 59 61 73 73 76 22 4 7 8 11 12 13 13 13 13 13 13 16 22 4 7 8 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 18, q = 2, out = 0
trans_offset 18, q = 2, out = 0
trans_offset 17, q = 2, out = 0
trans_offset 34, q = 4, out = 0
trans_offset 33, q = 4, out = 0
trans_offset 55, q = 6, out = 29
trans_offset 98, q = 10, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 54, q = 6, out = 29
trans_offset 92, q = 10, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 10, q = 2, out = 54
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10

Output is(100): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<Ma>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 65, 5, "ma" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 88, 10, "<szép>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 110, 8, "szép" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 214, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 224, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 242, 9, "<idő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 263, 7, "idő" )
Symbol(15, 0, 0, )
Symbol(87, 274, 5, <sg> )
Symbol(55, 279, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 297, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 315, 4, "," )
Symbol(44, 319, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 336, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 359, 9, "nagyon" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 10, "<meleg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 408, 8, "meleg" )
Symbol(53, 0, 0, )
Symbol(87, 422, 5, <sg> )
Symbol(55, 427, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 474, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 494, 6, "van" )
Symbol(48, 500, 8, <vbser> )
Symbol(37, 508, 7, <pres> )
Symbol(87, 515, 5, <sg> )
Symbol(2, 520, 6, <s3p> )
Symbol(2, 526, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 544, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 562, 4, "." )
Symbol(64, 566, 7, <sent> )
Symbol(2, 573, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<De>" #BOC# | #0# "de" <adv> | #0# "de" <cnjcoo> | #EOC# $0$ "<tegnap>" #BOC# | #0# "tegnap" <adv> | #EOC# $0$ "<nagyon>" #BOC# | #0# "nagyon" <adv> | #EOC# $0$ "<hideg>" #BOC# | #0# "hideg" <n> <sg> <nom> | #0# "hideg" <adj> <sg> <nom> | #EOC# $0$ "<volt>" #BOC# | #0# "van" <vbser> <past> <sg> <s3p> <ind> | #0# "volt" <vblex> <pres> <sg> <s3p> <ind> | #0# "volt" <adj> <sg> <nom> | #0# "volt" <n> <sg> <nom> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Rule found: R_1_141_T_1


LRS T1:
Name: R_1_141_T_1
arity: 2
arccount: 111
statecount: 18
linecount: 112
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 33 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 34 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 35 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 36 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 37 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 38 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 1
  in: 2 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 7 -- 
  out: 16 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 33 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 34 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 35 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 36 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 37 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 38 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 29 -- 
  out: 19 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 3
  in: 3 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 2 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 33 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 34 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 35 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 4
  in: 36 -- 
  out: 25 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 37 -- 
  out: 26 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 38 -- 
  out: 27 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 5
  in: 2 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 5
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 5
  in: 33 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 34 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 5
  in: 35 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 5
  in: 36 -- 
  out: 25 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 5
  in: 37 -- 
  out: 34 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 5
  in: 38 -- 
  out: 35 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 6
  in: 3 -- 
  out: 37 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 6
  in: 8 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 7
  in: 2 -- 
  out: 39 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 7
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 7
  in: 33 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 7
  in: 34 -- 
  out: 41 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 7
  in: 35 -- 
  out: 42 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 7
  in: 36 -- 
  out: 43 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 7
  in: 37 -- 
  out: 44 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 7
  in: 38 -- 
  out: 35 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 8
  in: 2 -- 
  out: 47 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 8
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 8
  in: 33 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 8
  in: 34 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 8
  in: 35 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 8
  in: 36 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 8
  in: 37 -- 
  out: 52 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 8
  in: 38 -- 
  out: 53 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 9
  in: 10 -- 
  out: 8 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(53):
  state_no: 10
  in: 2 -- 
  out: 56 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 10
  in: 29 -- 
  out: 63 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 10
  in: 33 -- 
  out: 57 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 10
  in: 34 -- 
  out: 58 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 10
  in: 35 -- 
  out: 59 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 10
  in: 36 -- 
  out: 60 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 10
  in: 37 -- 
  out: 44 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 10
  in: 38 -- 
  out: 62 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 11
  in: 2 -- 
  out: 64 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 11
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 11
  in: 33 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 11
  in: 34 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 11
  in: 35 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 11
  in: 36 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 11
  in: 37 -- 
  out: 69 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 11
  in: 38 -- 
  out: 70 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 12
  in: 3 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 12
  in: 8 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 13
  in: 2 -- 
  out: 74 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 13
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 13
  in: 33 -- 
  out: 75 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 13
  in: 34 -- 
  out: 76 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 13
  in: 35 -- 
  out: 77 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 13
  in: 36 -- 
  out: 78 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 13
  in: 37 -- 
  out: 79 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 13
  in: 38 -- 
  out: 70 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 14
  in: 2 -- 
  out: 21 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 14
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 14
  in: 33 -- 
  out: 22 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 14
  in: 34 -- 
  out: 23 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 14
  in: 35 -- 
  out: 24 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 14
  in: 36 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 14
  in: 37 -- 
  out: 26 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 14
  in: 38 -- 
  out: 27 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 15
  in: 2 -- 
  out: 90 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 15
  in: 29 -- 
  out: 97 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 15
  in: 33 -- 
  out: 91 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 15
  in: 34 -- 
  out: 91 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 15
  in: 35 -- 
  out: 91 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 15
  in: 36 -- 
  out: 91 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 15
  in: 37 -- 
  out: 79 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 15
  in: 38 -- 
  out: 96 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 16
  in: 2 -- 
  out: 29 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 16
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 16
  in: 33 -- 
  out: 22 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 16
  in: 34 -- 
  out: 23 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 16
  in: 35 -- 
  out: 24 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 16
  in: 36 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 16
  in: 37 -- 
  out: 34 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 16
  in: 38 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 17
  in: 2 -- 
  out: 39 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 17
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 17
  in: 33 -- 
  out: 40 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 17
  in: 34 -- 
  out: 41 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 17
  in: 35 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 17
  in: 36 -- 
  out: 43 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 17
  in: 37 -- 
  out: 44 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 17
  in: 38 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(111):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(100): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(65, 65, 5, "de" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 76, 2, | )
Symbol(3, 78, 4, #0# )
Symbol(65, 82, 5, "de" )
Symbol(45, 87, 9, <cnjcoo> )
Symbol(29, 96, 2, | )
Symbol(8, 98, 6, #EOC# )
Symbol(10, 104, 4, $0$ )
Symbol(2, 108, 11, "<tegnap>" )
Symbol(7, 119, 6, #BOC# )
Symbol(29, 125, 2, | )
Symbol(3, 127, 4, #0# )
Symbol(43, 131, 9, "tegnap" )
Symbol(54, 140, 6, <adv> )
Symbol(29, 146, 2, | )
Symbol(8, 148, 6, #EOC# )
Symbol(10, 154, 4, $0$ )
Symbol(2, 158, 11, "<nagyon>" )
Symbol(7, 169, 6, #BOC# )
Symbol(29, 175, 2, | )
Symbol(3, 177, 4, #0# )
Symbol(2, 181, 9, "nagyon" )
Symbol(54, 190, 6, <adv> )
Symbol(29, 196, 2, | )
Symbol(8, 198, 6, #EOC# )
Symbol(10, 204, 4, $0$ )
Symbol(2, 208, 10, "<hideg>" )
Symbol(7, 218, 6, #BOC# )
Symbol(29, 224, 2, | )
Symbol(3, 226, 4, #0# )
Symbol(2, 230, 8, "hideg" )
Symbol(15, 238, 4, <n> )
Symbol(87, 242, 5, <sg> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 253, 2, | )
Symbol(3, 255, 4, #0# )
Symbol(2, 259, 8, "hideg" )
Symbol(53, 267, 6, <adj> )
Symbol(87, 273, 5, <sg> )
Symbol(55, 278, 6, <nom> )
Symbol(29, 284, 2, | )
Symbol(8, 286, 6, #EOC# )
Symbol(10, 292, 4, $0$ )
Symbol(2, 296, 9, "<volt>" )
Symbol(7, 305, 6, #BOC# )
Symbol(29, 311, 2, | )
Symbol(3, 313, 4, #0# )
Symbol(35, 317, 6, "van" )
Symbol(48, 323, 8, <vbser> )
Symbol(46, 331, 7, <past> )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 355, 2, | )
Symbol(3, 357, 4, #0# )
Symbol(36, 361, 7, "volt" )
Symbol(38, 368, 8, <vblex> )
Symbol(37, 376, 7, <pres> )
Symbol(87, 383, 5, <sg> )
Symbol(2, 388, 6, <s3p> )
Symbol(2, 394, 6, <ind> )
Symbol(29, 400, 2, | )
Symbol(3, 402, 4, #0# )
Symbol(36, 406, 7, "volt" )
Symbol(53, 413, 6, <adj> )
Symbol(87, 419, 5, <sg> )
Symbol(55, 424, 6, <nom> )
Symbol(29, 430, 2, | )
Symbol(3, 432, 4, #0# )
Symbol(36, 436, 7, "volt" )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(55, 452, 6, <nom> )
Symbol(29, 458, 2, | )
Symbol(8, 460, 6, #EOC# )
Symbol(10, 466, 4, $0$ )
Symbol(2, 470, 6, "<!>" )
Symbol(7, 476, 6, #BOC# )
Symbol(29, 482, 2, | )
Symbol(3, 484, 4, #0# )
Symbol(39, 488, 4, "!" )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 505, 2, | )
Symbol(8, 507, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 43 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 46 87 2 2 29 3 36 38 37 87 2 2 29 3 36 53 87 55 29 3 36 15 87 55 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 34, signum = 3, q = 6, out = 37
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 45, signum = 29, q = 8, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 34, signum = 3, q = 6, out = 37
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 45, signum = 29, q = 8, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 22, signum = 35, q = 4, out = 24
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 34, signum = 3, q = 6, out = 37
trans_offset 49, signum = 36, q = 8, out = 51
trans_offset 68, signum = 38, q = 11, out = 70
trans_offset 77, signum = 37, q = 13, out = 79
trans_offset 87, signum = 2, q = 15, out = 90
trans_offset 87, signum = 2, q = 15, out = 90
trans_offset 87, signum = 2, q = 15, out = 90
trans_offset 88, signum = 29, q = 15, out = 97
trans_offset 34, signum = 3, q = 6, out = 37
trans_offset 49, signum = 36, q = 8, out = 51
trans_offset 61, signum = 2, q = 11, out = 64
trans_offset 61, signum = 2, q = 11, out = 64
trans_offset 61, signum = 2, q = 11, out = 64
trans_offset 62, signum = 29, q = 11, out = 28
trans_offset 34, signum = 3, q = 6, out = 37
trans_offset 49, signum = 36, q = 8, out = 51
trans_offset 61, signum = 2, q = 11, out = 64
trans_offset 61, signum = 2, q = 11, out = 64
trans_offset 61, signum = 2, q = 11, out = 64
trans_offset 62, signum = 29, q = 11, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 35, signum = 8, q = 6, out = 38

Intermediate is(100): 
8 11 16 19 20 21 21 28 38 8 11 16 19 20 21 21 28 37 47 47 28 38 8 11 16 19 20 21 21 28 38 8 11 16 19 20 21 21 28 38 8 11 16 19 20 21 21 21 21 28 37 47 47 47 47 28 38 8 11 16 19 20 24 29 29 29 29 29 28 37 51 70 79 90 90 90 97 37 51 64 64 64 28 37 51 64 64 64 28 38 8 11 16 19 20 21 21 21 28 38 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 35, q = 2, out = 2
trans_offset 35, q = 2, out = 2
trans_offset 35, q = 2, out = 2
trans_offset 26, q = 2, out = 36
trans_offset 15, q = 2, out = 3
trans_offset 48, q = 3, out = 29
trans_offset 126, q = 5, out = 2
trans_offset 212, q = 7, out = 2
trans_offset 212, q = 7, out = 2
trans_offset 203, q = 7, out = 36
trans_offset 192, q = 7, out = 3
trans_offset 50, q = 3, out = 0
trans_offset 135, q = 5, out = 0
trans_offset 221, q = 7, out = 0
trans_offset 221, q = 7, out = 0
trans_offset 220, q = 7, out = 0
trans_offset 265, q = 9, out = 0
trans_offset 348, q = 12, out = 0
trans_offset 391, q = 15, out = 0
trans_offset 48, q = 3, out = 29
trans_offset 103, q = 5, out = 2
trans_offset 189, q = 7, out = 2
trans_offset 189, q = 7, out = 2
trans_offset 189, q = 7, out = 2
trans_offset 189, q = 7, out = 2
trans_offset 185, q = 7, out = 35
trans_offset 181, q = 7, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 15, q = 2, out = 3
trans_offset 48, q = 3, out = 29
trans_offset 96, q = 5, out = 2
trans_offset 182, q = 7, out = 2
trans_offset 182, q = 7, out = 2
trans_offset 182, q = 7, out = 2
trans_offset 181, q = 7, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 15, q = 2, out = 3
trans_offset 48, q = 3, out = 29
trans_offset 96, q = 5, out = 2
trans_offset 182, q = 7, out = 2
trans_offset 181, q = 7, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10

Output is(92): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 65, 5, "de" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 82, 5, "de" )
Symbol(45, 87, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<tegnap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(43, 131, 9, "tegnap" )
Symbol(54, 140, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 158, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 181, 9, "nagyon" )
Symbol(54, 190, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 208, 10, "<hideg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 8, "hideg" )
Symbol(15, 238, 4, <n> )
Symbol(87, 242, 5, <sg> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 259, 8, "hideg" )
Symbol(53, 267, 6, <adj> )
Symbol(87, 273, 5, <sg> )
Symbol(55, 278, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 296, 9, "<volt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 0, 0, )
Symbol(48, 323, 8, <vbser> )
Symbol(46, 331, 7, <past> )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(36, 0, 0, )
Symbol(53, 413, 6, <adj> )
Symbol(87, 419, 5, <sg> )
Symbol(55, 424, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(36, 0, 0, )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(55, 452, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 488, 4, "!" )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 43 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 46 87 2 2 29 3 36 53 87 55 29 3 36 15 87 55 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_1_147_T_1


LRS T1:
Name: R_1_147_T_1
arity: 2
arccount: 295
statecount: 38
linecount: 296
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 38 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 41 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 42 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 43 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 44 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 45 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 46 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 47 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 48 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 1
  in: 2 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 7 -- 
  out: 18 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 38 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 41 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 42 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 1
  in: 43 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 1
  in: 44 -- 
  out: 19 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 45 -- 
  out: 20 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 46 -- 
  out: 21 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 47 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 48 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 2
  in: 29 -- 
  out: 25 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 3 -- 
  out: 26 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 2 -- 
  out: 27 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 29 -- 
  out: 37 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 4
  in: 38 -- 
  out: 34 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 4
  in: 41 -- 
  out: 28 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 4
  in: 42 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 4
  in: 43 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 4
  in: 44 -- 
  out: 31 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 4
  in: 45 -- 
  out: 32 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 4
  in: 46 -- 
  out: 33 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 4
  in: 47 -- 
  out: 35 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 4
  in: 48 -- 
  out: 36 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 5
  in: 2 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 5
  in: 29 -- 
  out: 37 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 5
  in: 38 -- 
  out: 34 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 5
  in: 41 -- 
  out: 28 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 5
  in: 42 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 5
  in: 43 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 5
  in: 44 -- 
  out: 31 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 5
  in: 45 -- 
  out: 32 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 5
  in: 46 -- 
  out: 33 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 5
  in: 47 -- 
  out: 35 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 5
  in: 48 -- 
  out: 36 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 6
  in: 3 -- 
  out: 26 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 6
  in: 8 -- 
  out: 50 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 7
  in: 3 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 7
  in: 8 -- 
  out: 50 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 8
  in: 10 -- 
  out: 7 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 9
  in: 10 -- 
  out: 7 -- 
  target: 10
  final_state: 1
  start_state: 0
Elem(52):
  state_no: 10
  in: 2 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 10
  in: 7 -- 
  out: 18 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 10
  in: 38 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 10
  in: 41 -- 
  out: 15 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 10
  in: 42 -- 
  out: 16 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 10
  in: 43 -- 
  out: 17 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 10
  in: 44 -- 
  out: 19 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 10
  in: 45 -- 
  out: 20 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 10
  in: 46 -- 
  out: 21 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 10
  in: 47 -- 
  out: 23 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 10
  in: 48 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 11
  in: 29 -- 
  out: 25 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 12
  in: 3 -- 
  out: 67 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 13
  in: 2 -- 
  out: 68 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 13
  in: 29 -- 
  out: 78 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 13
  in: 38 -- 
  out: 75 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 13
  in: 41 -- 
  out: 69 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 13
  in: 42 -- 
  out: 70 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 13
  in: 43 -- 
  out: 71 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 13
  in: 44 -- 
  out: 72 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 13
  in: 45 -- 
  out: 73 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 13
  in: 46 -- 
  out: 74 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 13
  in: 47 -- 
  out: 76 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 13
  in: 48 -- 
  out: 77 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 14
  in: 2 -- 
  out: 68 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 14
  in: 29 -- 
  out: 78 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 14
  in: 38 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 14
  in: 41 -- 
  out: 69 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 14
  in: 42 -- 
  out: 70 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 14
  in: 43 -- 
  out: 71 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 14
  in: 44 -- 
  out: 72 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 14
  in: 45 -- 
  out: 73 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 14
  in: 46 -- 
  out: 74 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 14
  in: 47 -- 
  out: 76 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 14
  in: 48 -- 
  out: 77 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 15
  in: 2 -- 
  out: 68 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 15
  in: 29 -- 
  out: 78 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 15
  in: 38 -- 
  out: 75 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 15
  in: 41 -- 
  out: 69 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 15
  in: 42 -- 
  out: 70 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 15
  in: 43 -- 
  out: 71 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 15
  in: 44 -- 
  out: 72 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 15
  in: 45 -- 
  out: 73 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 15
  in: 46 -- 
  out: 74 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 15
  in: 47 -- 
  out: 76 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 15
  in: 48 -- 
  out: 77 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 16
  in: 2 -- 
  out: 101 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 16
  in: 29 -- 
  out: 78 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 16
  in: 38 -- 
  out: 75 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 16
  in: 41 -- 
  out: 102 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 16
  in: 42 -- 
  out: 103 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 16
  in: 43 -- 
  out: 104 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 16
  in: 44 -- 
  out: 105 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 16
  in: 45 -- 
  out: 106 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 16
  in: 46 -- 
  out: 33 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 16
  in: 47 -- 
  out: 76 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 16
  in: 48 -- 
  out: 77 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 17
  in: 3 -- 
  out: 67 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 17
  in: 8 -- 
  out: 50 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 18
  in: 2 -- 
  out: 101 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 18
  in: 29 -- 
  out: 78 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 18
  in: 38 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 18
  in: 41 -- 
  out: 102 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 18
  in: 42 -- 
  out: 103 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 18
  in: 43 -- 
  out: 104 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 18
  in: 44 -- 
  out: 105 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 18
  in: 45 -- 
  out: 106 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 18
  in: 46 -- 
  out: 33 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 18
  in: 47 -- 
  out: 76 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 18
  in: 48 -- 
  out: 77 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 19
  in: 3 -- 
  out: 67 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 19
  in: 8 -- 
  out: 50 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 20
  in: 2 -- 
  out: 68 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 20
  in: 29 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 20
  in: 38 -- 
  out: 75 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 20
  in: 41 -- 
  out: 69 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 20
  in: 42 -- 
  out: 70 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 20
  in: 43 -- 
  out: 71 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 20
  in: 44 -- 
  out: 72 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 20
  in: 45 -- 
  out: 73 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 20
  in: 46 -- 
  out: 74 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 20
  in: 47 -- 
  out: 76 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 20
  in: 48 -- 
  out: 77 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 21
  in: 2 -- 
  out: 27 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 21
  in: 29 -- 
  out: 37 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 21
  in: 38 -- 
  out: 34 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 21
  in: 41 -- 
  out: 28 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 21
  in: 42 -- 
  out: 29 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 21
  in: 43 -- 
  out: 30 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 21
  in: 44 -- 
  out: 31 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 21
  in: 45 -- 
  out: 32 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 21
  in: 46 -- 
  out: 33 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 21
  in: 47 -- 
  out: 35 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 21
  in: 48 -- 
  out: 36 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 22
  in: 2 -- 
  out: 68 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 22
  in: 29 -- 
  out: 78 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 22
  in: 38 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 22
  in: 41 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 22
  in: 42 -- 
  out: 70 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 22
  in: 43 -- 
  out: 71 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 22
  in: 44 -- 
  out: 72 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 22
  in: 45 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 22
  in: 46 -- 
  out: 74 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 22
  in: 47 -- 
  out: 76 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 22
  in: 48 -- 
  out: 77 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 23
  in: 2 -- 
  out: 27 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 23
  in: 29 -- 
  out: 37 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 23
  in: 38 -- 
  out: 34 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 23
  in: 41 -- 
  out: 28 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 23
  in: 42 -- 
  out: 29 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 23
  in: 43 -- 
  out: 30 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 23
  in: 44 -- 
  out: 31 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 23
  in: 45 -- 
  out: 32 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 23
  in: 46 -- 
  out: 33 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 23
  in: 47 -- 
  out: 35 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 23
  in: 48 -- 
  out: 36 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 24
  in: 2 -- 
  out: 68 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 24
  in: 29 -- 
  out: 78 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 24
  in: 38 -- 
  out: 75 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 24
  in: 41 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 24
  in: 42 -- 
  out: 70 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 24
  in: 43 -- 
  out: 71 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 24
  in: 44 -- 
  out: 72 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 24
  in: 45 -- 
  out: 73 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 24
  in: 46 -- 
  out: 74 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 24
  in: 47 -- 
  out: 76 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 24
  in: 48 -- 
  out: 77 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 25
  in: 2 -- 
  out: 101 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 25
  in: 29 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 25
  in: 38 -- 
  out: 75 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 25
  in: 41 -- 
  out: 102 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 25
  in: 42 -- 
  out: 103 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 25
  in: 43 -- 
  out: 104 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 25
  in: 44 -- 
  out: 105 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 25
  in: 45 -- 
  out: 106 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 25
  in: 46 -- 
  out: 33 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 25
  in: 47 -- 
  out: 76 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 25
  in: 48 -- 
  out: 77 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 26
  in: 3 -- 
  out: 67 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 26
  in: 8 -- 
  out: 50 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 27
  in: 3 -- 
  out: 195 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 27
  in: 8 -- 
  out: 50 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 28
  in: 2 -- 
  out: 68 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 28
  in: 29 -- 
  out: 78 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 28
  in: 38 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 28
  in: 41 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 28
  in: 42 -- 
  out: 70 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 28
  in: 43 -- 
  out: 71 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 28
  in: 44 -- 
  out: 72 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 28
  in: 45 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 28
  in: 46 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 28
  in: 47 -- 
  out: 76 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 28
  in: 48 -- 
  out: 77 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 29
  in: 2 -- 
  out: 101 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 29
  in: 29 -- 
  out: 78 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 29
  in: 38 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 29
  in: 41 -- 
  out: 102 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 29
  in: 42 -- 
  out: 103 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 29
  in: 43 -- 
  out: 104 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 29
  in: 44 -- 
  out: 105 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 29
  in: 45 -- 
  out: 106 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 29
  in: 46 -- 
  out: 33 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 29
  in: 47 -- 
  out: 76 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 29
  in: 48 -- 
  out: 77 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 30
  in: 3 -- 
  out: 195 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 30
  in: 8 -- 
  out: 50 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 31
  in: 2 -- 
  out: 101 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 31
  in: 29 -- 
  out: 78 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 31
  in: 38 -- 
  out: 75 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 31
  in: 41 -- 
  out: 102 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 31
  in: 42 -- 
  out: 103 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 31
  in: 43 -- 
  out: 104 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 31
  in: 44 -- 
  out: 105 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 31
  in: 45 -- 
  out: 106 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 31
  in: 46 -- 
  out: 33 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 31
  in: 47 -- 
  out: 76 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 31
  in: 48 -- 
  out: 77 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 32
  in: 2 -- 
  out: 68 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 32
  in: 29 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 32
  in: 38 -- 
  out: 75 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 32
  in: 41 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 32
  in: 42 -- 
  out: 70 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 32
  in: 43 -- 
  out: 71 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 32
  in: 44 -- 
  out: 72 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 32
  in: 45 -- 
  out: 73 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 32
  in: 46 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 32
  in: 47 -- 
  out: 76 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 32
  in: 48 -- 
  out: 77 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 33
  in: 2 -- 
  out: 243 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 33
  in: 29 -- 
  out: 253 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 33
  in: 38 -- 
  out: 250 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 33
  in: 41 -- 
  out: 244 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 33
  in: 42 -- 
  out: 245 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 33
  in: 43 -- 
  out: 246 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 33
  in: 44 -- 
  out: 247 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 33
  in: 45 -- 
  out: 248 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 33
  in: 46 -- 
  out: 249 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 33
  in: 47 -- 
  out: 251 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 33
  in: 48 -- 
  out: 252 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 34
  in: 2 -- 
  out: 243 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 34
  in: 29 -- 
  out: 253 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 34
  in: 38 -- 
  out: 250 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 34
  in: 41 -- 
  out: 244 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 34
  in: 42 -- 
  out: 245 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 34
  in: 43 -- 
  out: 246 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 34
  in: 44 -- 
  out: 247 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 34
  in: 45 -- 
  out: 248 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 34
  in: 46 -- 
  out: 249 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 34
  in: 47 -- 
  out: 251 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 34
  in: 48 -- 
  out: 252 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 35
  in: 2 -- 
  out: 101 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 35
  in: 29 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 35
  in: 38 -- 
  out: 75 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 35
  in: 41 -- 
  out: 102 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 35
  in: 42 -- 
  out: 103 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 35
  in: 43 -- 
  out: 104 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 35
  in: 44 -- 
  out: 105 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 35
  in: 45 -- 
  out: 106 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 35
  in: 46 -- 
  out: 33 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 35
  in: 47 -- 
  out: 76 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 35
  in: 48 -- 
  out: 77 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 36
  in: 2 -- 
  out: 276 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 36
  in: 29 -- 
  out: 253 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 36
  in: 38 -- 
  out: 250 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 36
  in: 41 -- 
  out: 277 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 36
  in: 42 -- 
  out: 278 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 36
  in: 43 -- 
  out: 279 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 36
  in: 44 -- 
  out: 280 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 36
  in: 45 -- 
  out: 281 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 36
  in: 46 -- 
  out: 33 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 36
  in: 47 -- 
  out: 251 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 36
  in: 48 -- 
  out: 252 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 37
  in: 2 -- 
  out: 276 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 37
  in: 29 -- 
  out: 253 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 37
  in: 38 -- 
  out: 250 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 37
  in: 41 -- 
  out: 277 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 37
  in: 42 -- 
  out: 278 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 37
  in: 43 -- 
  out: 279 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 37
  in: 44 -- 
  out: 280 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 37
  in: 45 -- 
  out: 281 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 37
  in: 46 -- 
  out: 33 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 37
  in: 47 -- 
  out: 251 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 37
  in: 48 -- 
  out: 252 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(295):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(92): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 65, 5, "de" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 82, 5, "de" )
Symbol(45, 87, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<tegnap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(43, 131, 9, "tegnap" )
Symbol(54, 140, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 158, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 181, 9, "nagyon" )
Symbol(54, 190, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 208, 10, "<hideg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 8, "hideg" )
Symbol(15, 238, 4, <n> )
Symbol(87, 242, 5, <sg> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 259, 8, "hideg" )
Symbol(53, 267, 6, <adj> )
Symbol(87, 273, 5, <sg> )
Symbol(55, 278, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 296, 9, "<volt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 0, 0, )
Symbol(48, 323, 8, <vbser> )
Symbol(46, 331, 7, <past> )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(36, 0, 0, )
Symbol(53, 413, 6, <adj> )
Symbol(87, 419, 5, <sg> )
Symbol(55, 424, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(36, 0, 0, )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(55, 452, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 488, 4, "!" )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 43 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 46 87 2 2 29 3 36 53 87 55 29 3 36 15 87 55 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 50, signum = 10, q = 8, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 46, signum = 3, q = 6, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 31, signum = 45, q = 4, out = 32
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 50, signum = 10, q = 8, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 29, signum = 43, q = 4, out = 30
trans_offset 35, signum = 2, q = 5, out = 27
trans_offset 36, signum = 29, q = 5, out = 37
trans_offset 49, signum = 8, q = 7, out = 50
trans_offset 51, signum = 10, q = 9, out = 7
trans_offset 52, signum = 2, q = 10, out = 14
trans_offset 53, signum = 7, q = 10, out = 18
trans_offset 63, signum = 29, q = 11, out = 25
trans_offset 64, signum = 3, q = 12, out = 67
trans_offset 65, signum = 2, q = 13, out = 68
trans_offset 65, signum = 2, q = 13, out = 68
trans_offset 66, signum = 29, q = 13, out = 78
trans_offset 110, signum = 8, q = 17, out = 50
trans_offset 51, signum = 10, q = 9, out = 7
trans_offset 52, signum = 2, q = 10, out = 14
trans_offset 53, signum = 7, q = 10, out = 18
trans_offset 63, signum = 29, q = 11, out = 25
trans_offset 64, signum = 3, q = 12, out = 67
trans_offset 65, signum = 2, q = 13, out = 68
trans_offset 65, signum = 2, q = 13, out = 68
trans_offset 65, signum = 2, q = 13, out = 68
trans_offset 65, signum = 2, q = 13, out = 68
trans_offset 66, signum = 29, q = 13, out = 78
trans_offset 109, signum = 3, q = 17, out = 67
trans_offset 146, signum = 2, q = 22, out = 68
trans_offset 146, signum = 2, q = 22, out = 68
trans_offset 146, signum = 2, q = 22, out = 68
trans_offset 146, signum = 2, q = 22, out = 68
trans_offset 147, signum = 29, q = 22, out = 78
trans_offset 110, signum = 8, q = 17, out = 50
trans_offset 51, signum = 10, q = 9, out = 7
trans_offset 52, signum = 2, q = 10, out = 14
trans_offset 53, signum = 7, q = 10, out = 18
trans_offset 63, signum = 29, q = 11, out = 25
trans_offset 64, signum = 3, q = 12, out = 67
trans_offset 65, signum = 2, q = 13, out = 68
trans_offset 75, signum = 48, q = 13, out = 77
trans_offset 106, signum = 46, q = 16, out = 33
trans_offset 135, signum = 2, q = 21, out = 27
trans_offset 135, signum = 2, q = 21, out = 27
trans_offset 135, signum = 2, q = 21, out = 27
trans_offset 136, signum = 29, q = 21, out = 37
trans_offset 192, signum = 3, q = 27, out = 195
trans_offset 240, signum = 2, q = 33, out = 243
trans_offset 240, signum = 2, q = 33, out = 243
trans_offset 240, signum = 2, q = 33, out = 243
trans_offset 240, signum = 2, q = 33, out = 243
trans_offset 241, signum = 29, q = 33, out = 253
trans_offset 192, signum = 3, q = 27, out = 195
trans_offset 240, signum = 2, q = 33, out = 243
trans_offset 240, signum = 2, q = 33, out = 243
trans_offset 240, signum = 2, q = 33, out = 243
trans_offset 240, signum = 2, q = 33, out = 243
trans_offset 241, signum = 29, q = 33, out = 253
trans_offset 193, signum = 8, q = 27, out = 50
trans_offset 50, signum = 10, q = 8, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50

Intermediate is(92): 
7 14 18 25 26 27 27 37 50 7 14 18 25 26 27 27 37 26 27 32 37 50 7 14 18 25 26 30 27 37 50 7 14 18 25 67 68 68 78 50 7 14 18 25 67 68 68 68 68 78 67 68 68 68 68 78 50 7 14 18 25 67 68 77 33 27 27 27 37 195 243 243 243 243 253 195 243 243 243 243 253 50 7 14 18 25 26 27 27 27 37 50 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 49, q = 3, out = 29
trans_offset 98, q = 5, out = 7
trans_offset 190, q = 7, out = 2
trans_offset 189, q = 7, out = 10
trans_offset 214, q = 9, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 33, q = 2, out = 0
trans_offset 33, q = 2, out = 0
trans_offset 33, q = 2, out = 0
trans_offset 33, q = 2, out = 0
trans_offset 32, q = 2, out = 0
trans_offset 52, q = 3, out = 0
trans_offset 128, q = 5, out = 0
trans_offset 33, q = 2, out = 0
trans_offset 33, q = 2, out = 0
trans_offset 33, q = 2, out = 0
trans_offset 32, q = 2, out = 0
trans_offset 50, q = 3, out = 29
trans_offset 100, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 11, q = 2, out = 46
trans_offset 74, q = 4, out = 48
trans_offset 156, q = 6, out = 2
trans_offset 155, q = 6, out = 3
trans_offset 200, q = 8, out = 29
trans_offset 215, q = 10, out = 7
trans_offset 190, q = 7, out = 2
trans_offset 189, q = 7, out = 10
trans_offset 214, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 15, q = 2, out = 3
trans_offset 51, q = 3, out = 29
trans_offset 111, q = 5, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 15, q = 2, out = 3
trans_offset 49, q = 3, out = 29
trans_offset 98, q = 5, out = 7
trans_offset 190, q = 7, out = 2
trans_offset 189, q = 7, out = 10
trans_offset 214, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 15, q = 2, out = 3
trans_offset 49, q = 3, out = 29
trans_offset 98, q = 5, out = 7
trans_offset 190, q = 7, out = 2
trans_offset 189, q = 7, out = 10
trans_offset 214, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 43
trans_offset 4, q = 2, out = 3
trans_offset 49, q = 3, out = 29
trans_offset 98, q = 5, out = 7
trans_offset 190, q = 7, out = 2
trans_offset 189, q = 7, out = 10
trans_offset 214, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 10, q = 2, out = 45
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 50, q = 3, out = 29
trans_offset 100, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 49, q = 3, out = 29
trans_offset 98, q = 5, out = 7
trans_offset 190, q = 7, out = 2
trans_offset 189, q = 7, out = 10
trans_offset 214, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 49, q = 3, out = 29
trans_offset 98, q = 5, out = 7
trans_offset 190, q = 7, out = 2
trans_offset 189, q = 7, out = 10

Output is(80): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 65, 5, "de" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 82, 5, "de" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<tegnap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(43, 0, 0, )
Symbol(54, 140, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 158, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 181, 9, "nagyon" )
Symbol(54, 190, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 208, 10, "<hideg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 8, "hideg" )
Symbol(15, 238, 4, <n> )
Symbol(87, 242, 5, <sg> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 259, 8, "hideg" )
Symbol(53, 267, 6, <adj> )
Symbol(87, 273, 5, <sg> )
Symbol(55, 278, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 296, 9, "<volt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 0, 0, )
Symbol(48, 0, 0, )
Symbol(46, 0, 0, )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 488, 4, "!" )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 43 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 46 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_1_198_T_1


LRS T1:
Name: R_1_198_T_1
arity: 2
arccount: 183
statecount: 45
linecount: 184
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 65 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 53 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 54 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 65 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 53 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 54 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 53 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 3 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 7
  in: 2 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 7
  in: 53 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 65 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 54 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 10
  in: 3 -- 
  out: 14 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 11
  in: 2 -- 
  out: 40 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 53 -- 
  out: 42 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 12
  in: 2 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 53 -- 
  out: 17 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 12
  in: 54 -- 
  out: 18 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 12
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 13
  in: 2 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 13
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 13
  in: 53 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 65 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 2 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 53 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 3 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 32 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 53 -- 
  out: 34 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 54 -- 
  out: 35 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 10 -- 
  out: 5 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 2 -- 
  out: 40 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 53 -- 
  out: 42 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 2 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 7 -- 
  out: 10 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 53 -- 
  out: 11 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 54 -- 
  out: 12 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 65 -- 
  out: 9 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 29 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 21
  in: 3 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 22
  in: 2 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 22
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 22
  in: 54 -- 
  out: 18 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 22
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 2 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 23
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 23
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 23
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 2 -- 
  out: 15 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 24
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 24
  in: 54 -- 
  out: 18 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 24
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 2 -- 
  out: 20 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 25
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 25
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 25
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 2 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 26
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 26
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 26
  in: 65 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 27
  in: 3 -- 
  out: 25 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 27
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 2 -- 
  out: 27 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 29 -- 
  out: 31 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 28
  in: 65 -- 
  out: 28 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 2 -- 
  out: 32 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 54 -- 
  out: 35 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 14 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 40 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 32
  in: 2 -- 
  out: 32 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 32
  in: 54 -- 
  out: 35 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 32
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 33
  in: 2 -- 
  out: 15 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 33
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 33
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 33
  in: 54 -- 
  out: 18 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 33
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 2 -- 
  out: 40 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 34
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 34
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 34
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 34
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 2 -- 
  out: 50 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 35
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 35
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 35
  in: 65 -- 
  out: 51 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 2 -- 
  out: 20 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 36
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 36
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 37
  in: 2 -- 
  out: 15 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 37
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 37
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 37
  in: 54 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 37
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 2 -- 
  out: 50 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 38
  in: 29 -- 
  out: 54 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 38
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 38
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 38
  in: 65 -- 
  out: 51 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 39
  in: 2 -- 
  out: 20 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 39
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 39
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 39
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 39
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 40
  in: 3 -- 
  out: 25 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 40
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 41
  in: 2 -- 
  out: 32 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 41
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 41
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 41
  in: 54 -- 
  out: 35 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 41
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 42
  in: 2 -- 
  out: 40 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 42
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 42
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 42
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 42
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 43
  in: 2 -- 
  out: 32 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 43
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 43
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 43
  in: 54 -- 
  out: 35 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 43
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 44
  in: 2 -- 
  out: 40 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 44
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 44
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 44
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 44
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(183):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(80): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 65, 5, "de" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 82, 5, "de" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<tegnap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(43, 0, 0, )
Symbol(54, 140, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 158, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 181, 9, "nagyon" )
Symbol(54, 190, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 208, 10, "<hideg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 8, "hideg" )
Symbol(15, 238, 4, <n> )
Symbol(87, 242, 5, <sg> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 259, 8, "hideg" )
Symbol(53, 267, 6, <adj> )
Symbol(87, 273, 5, <sg> )
Symbol(55, 278, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 296, 9, "<volt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 0, 0, )
Symbol(48, 0, 0, )
Symbol(46, 0, 0, )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 488, 4, "!" )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 43 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 46 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 16, signum = 65, q = 4, out = 16
trans_offset 20, signum = 54, q = 5, out = 23
trans_offset 25, signum = 29, q = 7, out = 31
trans_offset 35, signum = 3, q = 10, out = 14
trans_offset 46, signum = 65, q = 12, out = 16
trans_offset 52, signum = 2, q = 14, out = 20
trans_offset 53, signum = 29, q = 14, out = 19
trans_offset 58, signum = 8, q = 15, out = 26
trans_offset 64, signum = 10, q = 17, out = 5
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 10
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 80, signum = 54, q = 22, out = 18
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 15, signum = 54, q = 4, out = 18
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 31, signum = 53, q = 8, out = 34
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26

Intermediate is(80): 
5 8 10 13 14 15 15 19 26 5 8 10 13 14 16 23 31 14 16 20 19 26 5 8 10 13 14 15 18 19 26 5 8 10 13 14 15 18 19 26 5 8 10 13 14 15 15 15 15 19 25 32 34 32 32 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 15 19 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 18, q = 2, out = 53
trans_offset 42, q = 4, out = 2
trans_offset 38, q = 4, out = 3
trans_offset 98, q = 7, out = 29
trans_offset 196, q = 13, out = 2
trans_offset 271, q = 18, out = 2
trans_offset 271, q = 18, out = 2
trans_offset 271, q = 18, out = 2
trans_offset 270, q = 18, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 54
trans_offset 53, q = 5, out = 2
trans_offset 52, q = 5, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 54
trans_offset 53, q = 5, out = 2
trans_offset 52, q = 5, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 6, q = 2, out = 65
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 0
trans_offset 82, q = 6, out = 0
trans_offset 174, q = 12, out = 0
trans_offset 248, q = 17, out = 0
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10

Output is(76): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<tegnap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(43, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 158, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 181, 9, "nagyon" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 208, 10, "<hideg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 8, "hideg" )
Symbol(15, 238, 4, <n> )
Symbol(87, 242, 5, <sg> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 259, 8, "hideg" )
Symbol(53, 0, 0, )
Symbol(87, 273, 5, <sg> )
Symbol(55, 278, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 296, 9, "<volt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 0, 0, )
Symbol(48, 0, 0, )
Symbol(46, 0, 0, )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 488, 4, "!" )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 43 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 46 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_1_83_T_1


LRS T1:
Name: R_1_83_T_1
arity: 2
arccount: 98
statecount: 32
linecount: 99
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 54 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 54 -- 
  out: 14 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 10 -- 
  out: 4 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(28):
  state_no: 11
  in: 2 -- 
  out: 7 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 11
  in: 7 -- 
  out: 8 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 11
  in: 15 -- 
  out: 10 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 54 -- 
  out: 9 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 12
  in: 29 -- 
  out: 11 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 13
  in: 3 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 14
  in: 2 -- 
  out: 37 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 14
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 14
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 15
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 15
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 15
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 16
  in: 2 -- 
  out: 45 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 16
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 16
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 17
  in: 3 -- 
  out: 49 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 45 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 29 -- 
  out: 48 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 3 -- 
  out: 49 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 20
  in: 3 -- 
  out: 36 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 21
  in: 2 -- 
  out: 59 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 21
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 54 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 3 -- 
  out: 36 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 23
  in: 2 -- 
  out: 59 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 23
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 24
  in: 2 -- 
  out: 37 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 24
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 54 -- 
  out: 38 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 25
  in: 2 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 25
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 54 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 27
  in: 2 -- 
  out: 59 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 27
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 27
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 27
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 28
  in: 2 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 28
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 28
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 28
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 29
  in: 2 -- 
  out: 45 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 29
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 29
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 29
  in: 54 -- 
  out: 46 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 30
  in: 2 -- 
  out: 37 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 30
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 30
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 30
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 31
  in: 2 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 31
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 31
  in: 29 -- 
  out: 76 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 31
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(98):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(76): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<tegnap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(43, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 158, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 181, 9, "nagyon" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 208, 10, "<hideg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 8, "hideg" )
Symbol(15, 238, 4, <n> )
Symbol(87, 242, 5, <sg> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 259, 8, "hideg" )
Symbol(53, 0, 0, )
Symbol(87, 273, 5, <sg> )
Symbol(55, 278, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 296, 9, "<volt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 0, 0, )
Symbol(48, 0, 0, )
Symbol(46, 0, 0, )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 488, 4, "!" )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 43 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 46 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 54, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 21, signum = 8, q = 7, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 37, signum = 54, q = 14, out = 38
trans_offset 40, signum = 29, q = 15, out = 16
trans_offset 53, signum = 8, q = 19, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 35, signum = 15, q = 14, out = 39
trans_offset 42, signum = 2, q = 16, out = 45
trans_offset 42, signum = 2, q = 16, out = 45
trans_offset 44, signum = 29, q = 16, out = 48
trans_offset 54, signum = 3, q = 20, out = 36
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 68, signum = 29, q = 24, out = 16
trans_offset 47, signum = 8, q = 17, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(76): 
4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 14 16 22 4 7 8 11 36 37 38 16 22 4 7 8 11 36 37 39 45 45 48 36 37 37 37 37 16 22 4 7 8 11 12 13 13 13 13 13 13 16 22 4 7 8 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 21, q = 3, out = 0
trans_offset 47, q = 5, out = 0
trans_offset 66, q = 7, out = 0
trans_offset 65, q = 7, out = 0
trans_offset 82, q = 9, out = 0
trans_offset 81, q = 9, out = 0
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 10, q = 2, out = 54
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10

Output is(70): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<tegnap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(43, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 158, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 181, 9, "nagyon" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 208, 10, "<hideg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 259, 8, "hideg" )
Symbol(53, 0, 0, )
Symbol(87, 273, 5, <sg> )
Symbol(55, 278, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 296, 9, "<volt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 0, 0, )
Symbol(48, 0, 0, )
Symbol(46, 0, 0, )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 488, 4, "!" )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 43 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 35 48 46 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Akkor>" #BOC# | #0# "akkor" <cnjcoo> | #0# "akkor" <adv> | #0# "az" <predet> <sg> <tem> | #0# "az" <prn> <sg> <tem> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<játszhattak>" #BOC# | #0# "játszik" <vbmod> <past> <pl> <s3p> <ind> | #EOC# $0$ "<odakint>" #BOC# | #0# "odakint" <adv> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_48_T_1


LRS T1:
Name: R_1_48_T_1
arity: 2
arccount: 2776
statecount: 290
linecount: 2777
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 38 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 41 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 42 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 43 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 46 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 47 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 48 -- 
  out: 14 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 57 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 75 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 0
  in: 76 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(12):
  state_no: 1
  in: 2 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 7 -- 
  out: 20 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 38 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 41 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 1
  in: 42 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 1
  in: 43 -- 
  out: 19 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 46 -- 
  out: 21 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 47 -- 
  out: 25 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 48 -- 
  out: 26 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 57 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 1
  in: 75 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 1
  in: 76 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 2
  in: 29 -- 
  out: 27 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 3
  in: 3 -- 
  out: 28 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 4
  in: 2 -- 
  out: 29 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 4
  in: 29 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 4
  in: 38 -- 
  out: 37 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 4
  in: 41 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 4
  in: 42 -- 
  out: 32 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 4
  in: 43 -- 
  out: 33 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 4
  in: 46 -- 
  out: 34 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 4
  in: 47 -- 
  out: 38 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 4
  in: 48 -- 
  out: 39 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 4
  in: 57 -- 
  out: 35 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 4
  in: 75 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 4
  in: 76 -- 
  out: 36 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 5
  in: 2 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 5
  in: 29 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 5
  in: 38 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 5
  in: 41 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 5
  in: 42 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 5
  in: 43 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 5
  in: 46 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 5
  in: 47 -- 
  out: 50 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 5
  in: 48 -- 
  out: 51 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 5
  in: 57 -- 
  out: 47 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 5
  in: 75 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 5
  in: 76 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 6
  in: 2 -- 
  out: 29 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 6
  in: 29 -- 
  out: 40 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 6
  in: 38 -- 
  out: 37 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 6
  in: 41 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 6
  in: 42 -- 
  out: 32 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 6
  in: 43 -- 
  out: 33 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 6
  in: 46 -- 
  out: 34 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 6
  in: 47 -- 
  out: 38 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 6
  in: 48 -- 
  out: 39 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 6
  in: 57 -- 
  out: 35 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 6
  in: 75 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 6
  in: 76 -- 
  out: 36 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 7
  in: 3 -- 
  out: 28 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 7
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 8
  in: 2 -- 
  out: 41 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 8
  in: 29 -- 
  out: 40 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 8
  in: 38 -- 
  out: 49 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 8
  in: 41 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 8
  in: 42 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 8
  in: 43 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 8
  in: 46 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 8
  in: 47 -- 
  out: 50 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 8
  in: 48 -- 
  out: 51 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 8
  in: 57 -- 
  out: 47 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 8
  in: 75 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 8
  in: 76 -- 
  out: 48 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 9
  in: 2 -- 
  out: 79 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 9
  in: 29 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 9
  in: 38 -- 
  out: 87 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 9
  in: 41 -- 
  out: 81 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 9
  in: 42 -- 
  out: 82 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 9
  in: 43 -- 
  out: 83 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 9
  in: 46 -- 
  out: 84 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 9
  in: 47 -- 
  out: 88 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 9
  in: 48 -- 
  out: 89 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 9
  in: 57 -- 
  out: 47 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 9
  in: 75 -- 
  out: 80 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 9
  in: 76 -- 
  out: 86 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 10
  in: 3 -- 
  out: 28 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 10
  in: 8 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 11
  in: 2 -- 
  out: 29 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 11
  in: 29 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 11
  in: 38 -- 
  out: 37 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 11
  in: 41 -- 
  out: 31 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 11
  in: 42 -- 
  out: 32 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 11
  in: 43 -- 
  out: 33 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 11
  in: 46 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 11
  in: 47 -- 
  out: 38 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 11
  in: 48 -- 
  out: 39 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 11
  in: 57 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 11
  in: 75 -- 
  out: 30 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 11
  in: 76 -- 
  out: 36 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 12
  in: 10 -- 
  out: 8 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(103):
  state_no: 13
  in: 2 -- 
  out: 79 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 13
  in: 29 -- 
  out: 40 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 13
  in: 38 -- 
  out: 87 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 13
  in: 41 -- 
  out: 81 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 13
  in: 42 -- 
  out: 82 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 13
  in: 43 -- 
  out: 83 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 13
  in: 46 -- 
  out: 84 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 13
  in: 47 -- 
  out: 88 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 13
  in: 48 -- 
  out: 89 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 13
  in: 57 -- 
  out: 47 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 13
  in: 75 -- 
  out: 80 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 13
  in: 76 -- 
  out: 86 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 14
  in: 2 -- 
  out: 118 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 14
  in: 29 -- 
  out: 129 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 14
  in: 38 -- 
  out: 126 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 14
  in: 41 -- 
  out: 120 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 14
  in: 42 -- 
  out: 121 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 14
  in: 43 -- 
  out: 122 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 14
  in: 46 -- 
  out: 123 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 14
  in: 47 -- 
  out: 127 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 14
  in: 48 -- 
  out: 128 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 14
  in: 57 -- 
  out: 124 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 14
  in: 75 -- 
  out: 119 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 14
  in: 76 -- 
  out: 86 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 15
  in: 2 -- 
  out: 29 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 15
  in: 29 -- 
  out: 40 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 15
  in: 38 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 15
  in: 41 -- 
  out: 31 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 15
  in: 42 -- 
  out: 32 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 15
  in: 43 -- 
  out: 33 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 15
  in: 46 -- 
  out: 34 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 15
  in: 47 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 15
  in: 48 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 15
  in: 57 -- 
  out: 35 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 15
  in: 75 -- 
  out: 30 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 15
  in: 76 -- 
  out: 36 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 16
  in: 10 -- 
  out: 8 -- 
  target: 21
  final_state: 1
  start_state: 0
Elem(140):
  state_no: 17
  in: 2 -- 
  out: 41 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 17
  in: 29 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 17
  in: 38 -- 
  out: 49 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 17
  in: 41 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 17
  in: 42 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 17
  in: 43 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 17
  in: 46 -- 
  out: 46 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 17
  in: 47 -- 
  out: 50 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 17
  in: 48 -- 
  out: 51 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 17
  in: 57 -- 
  out: 47 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 17
  in: 75 -- 
  out: 30 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 17
  in: 76 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 18
  in: 2 -- 
  out: 118 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 18
  in: 29 -- 
  out: 129 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 18
  in: 38 -- 
  out: 126 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 18
  in: 41 -- 
  out: 120 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 18
  in: 42 -- 
  out: 121 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 18
  in: 43 -- 
  out: 122 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 18
  in: 46 -- 
  out: 123 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 18
  in: 47 -- 
  out: 127 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 18
  in: 48 -- 
  out: 128 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 18
  in: 57 -- 
  out: 124 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 18
  in: 75 -- 
  out: 119 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 18
  in: 76 -- 
  out: 86 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 19
  in: 3 -- 
  out: 167 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 19
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 20
  in: 2 -- 
  out: 41 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 20
  in: 29 -- 
  out: 40 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 20
  in: 38 -- 
  out: 49 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 20
  in: 41 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 20
  in: 42 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 20
  in: 43 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 20
  in: 46 -- 
  out: 46 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 20
  in: 47 -- 
  out: 50 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 20
  in: 48 -- 
  out: 51 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 20
  in: 57 -- 
  out: 47 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 20
  in: 75 -- 
  out: 30 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 20
  in: 76 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 21
  in: 2 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 21
  in: 7 -- 
  out: 20 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 21
  in: 38 -- 
  out: 24 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 21
  in: 41 -- 
  out: 17 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 21
  in: 42 -- 
  out: 18 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 21
  in: 43 -- 
  out: 19 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 21
  in: 46 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 21
  in: 47 -- 
  out: 25 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 21
  in: 48 -- 
  out: 26 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 21
  in: 57 -- 
  out: 22 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 21
  in: 75 -- 
  out: 16 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 21
  in: 76 -- 
  out: 23 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 22
  in: 2 -- 
  out: 79 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 22
  in: 29 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 22
  in: 38 -- 
  out: 87 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 22
  in: 41 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 22
  in: 42 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 22
  in: 43 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 22
  in: 46 -- 
  out: 84 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 22
  in: 47 -- 
  out: 88 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 22
  in: 48 -- 
  out: 89 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 22
  in: 57 -- 
  out: 47 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 22
  in: 75 -- 
  out: 80 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 22
  in: 76 -- 
  out: 86 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 23
  in: 3 -- 
  out: 167 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 23
  in: 8 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 24
  in: 2 -- 
  out: 207 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 24
  in: 29 -- 
  out: 218 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 24
  in: 38 -- 
  out: 215 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 24
  in: 41 -- 
  out: 209 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 24
  in: 42 -- 
  out: 210 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 24
  in: 43 -- 
  out: 211 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 24
  in: 46 -- 
  out: 212 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 24
  in: 47 -- 
  out: 216 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 24
  in: 48 -- 
  out: 217 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 24
  in: 57 -- 
  out: 213 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 24
  in: 75 -- 
  out: 208 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 24
  in: 76 -- 
  out: 214 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 25
  in: 2 -- 
  out: 79 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 25
  in: 29 -- 
  out: 40 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 25
  in: 38 -- 
  out: 87 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 25
  in: 41 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 25
  in: 42 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 25
  in: 43 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 25
  in: 46 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 25
  in: 47 -- 
  out: 88 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 25
  in: 48 -- 
  out: 89 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 25
  in: 57 -- 
  out: 47 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 25
  in: 75 -- 
  out: 80 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 25
  in: 76 -- 
  out: 86 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 26
  in: 29 -- 
  out: 27 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 27
  in: 2 -- 
  out: 118 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 27
  in: 29 -- 
  out: 129 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 27
  in: 38 -- 
  out: 126 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 27
  in: 41 -- 
  out: 120 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 27
  in: 42 -- 
  out: 121 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 27
  in: 43 -- 
  out: 122 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 27
  in: 46 -- 
  out: 123 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 27
  in: 47 -- 
  out: 127 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 27
  in: 48 -- 
  out: 128 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 27
  in: 57 -- 
  out: 124 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 27
  in: 75 -- 
  out: 119 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 27
  in: 76 -- 
  out: 86 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 28
  in: 2 -- 
  out: 207 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 28
  in: 29 -- 
  out: 218 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 28
  in: 38 -- 
  out: 215 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 28
  in: 41 -- 
  out: 209 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 28
  in: 42 -- 
  out: 210 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 28
  in: 43 -- 
  out: 211 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 28
  in: 46 -- 
  out: 212 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 28
  in: 47 -- 
  out: 216 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 28
  in: 48 -- 
  out: 217 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 28
  in: 57 -- 
  out: 213 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 28
  in: 75 -- 
  out: 208 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 28
  in: 76 -- 
  out: 214 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 29
  in: 2 -- 
  out: 256 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 29
  in: 29 -- 
  out: 218 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 29
  in: 38 -- 
  out: 264 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 29
  in: 41 -- 
  out: 258 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 29
  in: 42 -- 
  out: 259 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 29
  in: 43 -- 
  out: 260 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 29
  in: 46 -- 
  out: 261 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 29
  in: 47 -- 
  out: 265 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 29
  in: 48 -- 
  out: 266 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 29
  in: 57 -- 
  out: 262 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 29
  in: 75 -- 
  out: 208 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 29
  in: 76 -- 
  out: 263 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 30
  in: 3 -- 
  out: 167 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 30
  in: 8 -- 
  out: 66 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 31
  in: 2 -- 
  out: 118 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 31
  in: 29 -- 
  out: 129 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 31
  in: 38 -- 
  out: 126 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 31
  in: 41 -- 
  out: 120 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 31
  in: 42 -- 
  out: 121 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 31
  in: 43 -- 
  out: 122 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 31
  in: 46 -- 
  out: 123 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 31
  in: 47 -- 
  out: 127 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 31
  in: 48 -- 
  out: 128 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 31
  in: 57 -- 
  out: 124 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 31
  in: 75 -- 
  out: 119 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 31
  in: 76 -- 
  out: 86 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 32
  in: 3 -- 
  out: 282 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 33
  in: 2 -- 
  out: 256 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 33
  in: 29 -- 
  out: 218 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 33
  in: 38 -- 
  out: 264 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 33
  in: 41 -- 
  out: 258 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 33
  in: 42 -- 
  out: 259 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 33
  in: 43 -- 
  out: 260 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 33
  in: 46 -- 
  out: 261 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 33
  in: 47 -- 
  out: 265 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 33
  in: 48 -- 
  out: 266 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 33
  in: 57 -- 
  out: 262 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 33
  in: 75 -- 
  out: 208 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 33
  in: 76 -- 
  out: 263 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 34
  in: 3 -- 
  out: 167 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 34
  in: 8 -- 
  out: 66 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 35
  in: 2 -- 
  out: 297 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 35
  in: 29 -- 
  out: 218 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 35
  in: 38 -- 
  out: 305 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 35
  in: 41 -- 
  out: 299 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 35
  in: 42 -- 
  out: 300 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 35
  in: 43 -- 
  out: 301 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 35
  in: 46 -- 
  out: 302 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 35
  in: 47 -- 
  out: 306 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 35
  in: 48 -- 
  out: 307 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 35
  in: 57 -- 
  out: 262 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 35
  in: 75 -- 
  out: 298 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 35
  in: 76 -- 
  out: 86 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 36
  in: 2 -- 
  out: 207 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 36
  in: 29 -- 
  out: 218 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 36
  in: 38 -- 
  out: 215 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 36
  in: 41 -- 
  out: 209 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 36
  in: 42 -- 
  out: 210 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 36
  in: 43 -- 
  out: 211 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 36
  in: 46 -- 
  out: 212 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 36
  in: 47 -- 
  out: 216 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 36
  in: 48 -- 
  out: 217 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 36
  in: 57 -- 
  out: 213 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 36
  in: 75 -- 
  out: 208 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 36
  in: 76 -- 
  out: 214 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 37
  in: 10 -- 
  out: 8 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 38
  in: 2 -- 
  out: 118 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 38
  in: 29 -- 
  out: 129 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 38
  in: 38 -- 
  out: 126 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 38
  in: 41 -- 
  out: 120 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 38
  in: 42 -- 
  out: 121 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 38
  in: 43 -- 
  out: 122 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 38
  in: 46 -- 
  out: 123 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 38
  in: 47 -- 
  out: 127 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 38
  in: 48 -- 
  out: 128 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 38
  in: 57 -- 
  out: 124 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 38
  in: 75 -- 
  out: 119 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 38
  in: 76 -- 
  out: 86 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 39
  in: 2 -- 
  out: 297 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 39
  in: 29 -- 
  out: 218 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 39
  in: 38 -- 
  out: 305 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 39
  in: 41 -- 
  out: 299 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 39
  in: 42 -- 
  out: 300 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 39
  in: 43 -- 
  out: 301 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 39
  in: 46 -- 
  out: 302 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 39
  in: 47 -- 
  out: 306 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 39
  in: 48 -- 
  out: 307 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 39
  in: 57 -- 
  out: 262 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 39
  in: 75 -- 
  out: 298 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 39
  in: 76 -- 
  out: 86 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 40
  in: 2 -- 
  out: 207 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 40
  in: 29 -- 
  out: 218 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 40
  in: 38 -- 
  out: 215 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 40
  in: 41 -- 
  out: 209 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 40
  in: 42 -- 
  out: 210 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 40
  in: 43 -- 
  out: 211 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 40
  in: 46 -- 
  out: 212 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 40
  in: 47 -- 
  out: 216 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 40
  in: 48 -- 
  out: 217 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 40
  in: 57 -- 
  out: 213 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 40
  in: 75 -- 
  out: 208 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 40
  in: 76 -- 
  out: 214 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 41
  in: 10 -- 
  out: 8 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 42
  in: 2 -- 
  out: 256 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 42
  in: 29 -- 
  out: 218 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 42
  in: 38 -- 
  out: 264 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 42
  in: 41 -- 
  out: 258 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 42
  in: 42 -- 
  out: 259 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 42
  in: 43 -- 
  out: 260 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 42
  in: 46 -- 
  out: 261 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 42
  in: 47 -- 
  out: 265 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 42
  in: 48 -- 
  out: 266 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(365):
  state_no: 42
  in: 57 -- 
  out: 262 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(366):
  state_no: 42
  in: 75 -- 
  out: 208 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(367):
  state_no: 42
  in: 76 -- 
  out: 263 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(368):
  state_no: 43
  in: 2 -- 
  out: 15 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(369):
  state_no: 43
  in: 7 -- 
  out: 20 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(370):
  state_no: 43
  in: 38 -- 
  out: 24 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(371):
  state_no: 43
  in: 41 -- 
  out: 17 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(372):
  state_no: 43
  in: 42 -- 
  out: 18 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(373):
  state_no: 43
  in: 43 -- 
  out: 19 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(374):
  state_no: 43
  in: 46 -- 
  out: 21 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(375):
  state_no: 43
  in: 47 -- 
  out: 25 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(376):
  state_no: 43
  in: 48 -- 
  out: 26 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(377):
  state_no: 43
  in: 57 -- 
  out: 22 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(378):
  state_no: 43
  in: 75 -- 
  out: 16 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(379):
  state_no: 43
  in: 76 -- 
  out: 23 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(380):
  state_no: 44
  in: 2 -- 
  out: 118 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(381):
  state_no: 44
  in: 29 -- 
  out: 129 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(382):
  state_no: 44
  in: 38 -- 
  out: 126 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(383):
  state_no: 44
  in: 41 -- 
  out: 120 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(384):
  state_no: 44
  in: 42 -- 
  out: 121 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(385):
  state_no: 44
  in: 43 -- 
  out: 122 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(386):
  state_no: 44
  in: 46 -- 
  out: 123 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(387):
  state_no: 44
  in: 47 -- 
  out: 127 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(388):
  state_no: 44
  in: 48 -- 
  out: 128 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(389):
  state_no: 44
  in: 57 -- 
  out: 124 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(390):
  state_no: 44
  in: 75 -- 
  out: 119 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(391):
  state_no: 44
  in: 76 -- 
  out: 86 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(392):
  state_no: 45
  in: 3 -- 
  out: 282 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(393):
  state_no: 45
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(394):
  state_no: 46
  in: 2 -- 
  out: 256 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(395):
  state_no: 46
  in: 29 -- 
  out: 218 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(396):
  state_no: 46
  in: 38 -- 
  out: 264 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(397):
  state_no: 46
  in: 41 -- 
  out: 258 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(398):
  state_no: 46
  in: 42 -- 
  out: 259 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(399):
  state_no: 46
  in: 43 -- 
  out: 260 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(400):
  state_no: 46
  in: 46 -- 
  out: 261 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(401):
  state_no: 46
  in: 47 -- 
  out: 265 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(402):
  state_no: 46
  in: 48 -- 
  out: 266 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(403):
  state_no: 46
  in: 57 -- 
  out: 262 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(404):
  state_no: 46
  in: 75 -- 
  out: 208 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(405):
  state_no: 46
  in: 76 -- 
  out: 263 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(406):
  state_no: 47
  in: 2 -- 
  out: 15 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(407):
  state_no: 47
  in: 7 -- 
  out: 20 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(408):
  state_no: 47
  in: 38 -- 
  out: 24 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(409):
  state_no: 47
  in: 41 -- 
  out: 17 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(410):
  state_no: 47
  in: 42 -- 
  out: 18 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(411):
  state_no: 47
  in: 43 -- 
  out: 19 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(412):
  state_no: 47
  in: 46 -- 
  out: 21 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(413):
  state_no: 47
  in: 47 -- 
  out: 25 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(414):
  state_no: 47
  in: 48 -- 
  out: 26 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(415):
  state_no: 47
  in: 57 -- 
  out: 22 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(416):
  state_no: 47
  in: 75 -- 
  out: 16 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(417):
  state_no: 47
  in: 76 -- 
  out: 23 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(418):
  state_no: 48
  in: 2 -- 
  out: 297 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(419):
  state_no: 48
  in: 29 -- 
  out: 218 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(420):
  state_no: 48
  in: 38 -- 
  out: 305 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(421):
  state_no: 48
  in: 41 -- 
  out: 299 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(422):
  state_no: 48
  in: 42 -- 
  out: 300 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(423):
  state_no: 48
  in: 43 -- 
  out: 301 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(424):
  state_no: 48
  in: 46 -- 
  out: 302 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(425):
  state_no: 48
  in: 47 -- 
  out: 306 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(426):
  state_no: 48
  in: 48 -- 
  out: 307 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(427):
  state_no: 48
  in: 57 -- 
  out: 262 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(428):
  state_no: 48
  in: 75 -- 
  out: 298 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(429):
  state_no: 48
  in: 76 -- 
  out: 86 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(430):
  state_no: 49
  in: 29 -- 
  out: 27 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(431):
  state_no: 50
  in: 3 -- 
  out: 282 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(432):
  state_no: 50
  in: 8 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(433):
  state_no: 51
  in: 2 -- 
  out: 297 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(434):
  state_no: 51
  in: 29 -- 
  out: 218 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(435):
  state_no: 51
  in: 38 -- 
  out: 305 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(436):
  state_no: 51
  in: 41 -- 
  out: 299 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(437):
  state_no: 51
  in: 42 -- 
  out: 300 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(438):
  state_no: 51
  in: 43 -- 
  out: 301 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(439):
  state_no: 51
  in: 46 -- 
  out: 302 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(440):
  state_no: 51
  in: 47 -- 
  out: 306 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(441):
  state_no: 51
  in: 48 -- 
  out: 307 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(442):
  state_no: 51
  in: 57 -- 
  out: 262 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(443):
  state_no: 51
  in: 75 -- 
  out: 298 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(444):
  state_no: 51
  in: 76 -- 
  out: 86 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(445):
  state_no: 52
  in: 29 -- 
  out: 27 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(446):
  state_no: 53
  in: 3 -- 
  out: 28 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(447):
  state_no: 54
  in: 3 -- 
  out: 282 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(448):
  state_no: 55
  in: 2 -- 
  out: 29 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(449):
  state_no: 55
  in: 29 -- 
  out: 40 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(450):
  state_no: 55
  in: 38 -- 
  out: 37 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(451):
  state_no: 55
  in: 41 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(452):
  state_no: 55
  in: 42 -- 
  out: 32 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(453):
  state_no: 55
  in: 43 -- 
  out: 33 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(454):
  state_no: 55
  in: 46 -- 
  out: 34 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(455):
  state_no: 55
  in: 47 -- 
  out: 38 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(456):
  state_no: 55
  in: 48 -- 
  out: 39 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(457):
  state_no: 55
  in: 57 -- 
  out: 35 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(458):
  state_no: 55
  in: 75 -- 
  out: 30 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(459):
  state_no: 55
  in: 76 -- 
  out: 36 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(460):
  state_no: 56
  in: 2 -- 
  out: 118 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(461):
  state_no: 56
  in: 29 -- 
  out: 129 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(462):
  state_no: 56
  in: 38 -- 
  out: 126 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(463):
  state_no: 56
  in: 41 -- 
  out: 120 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(464):
  state_no: 56
  in: 42 -- 
  out: 121 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(465):
  state_no: 56
  in: 43 -- 
  out: 122 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(466):
  state_no: 56
  in: 46 -- 
  out: 123 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(467):
  state_no: 56
  in: 47 -- 
  out: 127 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(468):
  state_no: 56
  in: 48 -- 
  out: 128 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(469):
  state_no: 56
  in: 57 -- 
  out: 124 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(470):
  state_no: 56
  in: 75 -- 
  out: 119 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(471):
  state_no: 56
  in: 76 -- 
  out: 86 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(472):
  state_no: 57
  in: 2 -- 
  out: 41 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(473):
  state_no: 57
  in: 29 -- 
  out: 40 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(474):
  state_no: 57
  in: 38 -- 
  out: 49 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(475):
  state_no: 57
  in: 41 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(476):
  state_no: 57
  in: 42 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(477):
  state_no: 57
  in: 43 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(478):
  state_no: 57
  in: 46 -- 
  out: 46 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(479):
  state_no: 57
  in: 47 -- 
  out: 50 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(480):
  state_no: 57
  in: 48 -- 
  out: 51 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(481):
  state_no: 57
  in: 57 -- 
  out: 47 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(482):
  state_no: 57
  in: 75 -- 
  out: 30 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(483):
  state_no: 57
  in: 76 -- 
  out: 48 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(484):
  state_no: 58
  in: 2 -- 
  out: 29 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(485):
  state_no: 58
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(486):
  state_no: 58
  in: 38 -- 
  out: 37 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(487):
  state_no: 58
  in: 41 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(488):
  state_no: 58
  in: 42 -- 
  out: 32 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(489):
  state_no: 58
  in: 43 -- 
  out: 33 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(490):
  state_no: 58
  in: 46 -- 
  out: 34 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(491):
  state_no: 58
  in: 47 -- 
  out: 38 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(492):
  state_no: 58
  in: 48 -- 
  out: 39 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(493):
  state_no: 58
  in: 57 -- 
  out: 35 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(494):
  state_no: 58
  in: 75 -- 
  out: 30 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(495):
  state_no: 58
  in: 76 -- 
  out: 36 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(496):
  state_no: 59
  in: 3 -- 
  out: 28 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(497):
  state_no: 59
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(498):
  state_no: 60
  in: 2 -- 
  out: 118 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(499):
  state_no: 60
  in: 29 -- 
  out: 129 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(500):
  state_no: 60
  in: 38 -- 
  out: 126 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(501):
  state_no: 60
  in: 41 -- 
  out: 120 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(502):
  state_no: 60
  in: 42 -- 
  out: 121 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(503):
  state_no: 60
  in: 43 -- 
  out: 122 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(504):
  state_no: 60
  in: 46 -- 
  out: 123 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(505):
  state_no: 60
  in: 47 -- 
  out: 127 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(506):
  state_no: 60
  in: 48 -- 
  out: 128 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(507):
  state_no: 60
  in: 57 -- 
  out: 124 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(508):
  state_no: 60
  in: 75 -- 
  out: 119 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(509):
  state_no: 60
  in: 76 -- 
  out: 86 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(510):
  state_no: 61
  in: 3 -- 
  out: 282 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(511):
  state_no: 61
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(512):
  state_no: 62
  in: 2 -- 
  out: 79 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(513):
  state_no: 62
  in: 29 -- 
  out: 40 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(514):
  state_no: 62
  in: 38 -- 
  out: 87 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(515):
  state_no: 62
  in: 41 -- 
  out: 81 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(516):
  state_no: 62
  in: 42 -- 
  out: 82 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(517):
  state_no: 62
  in: 43 -- 
  out: 83 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(518):
  state_no: 62
  in: 46 -- 
  out: 84 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(519):
  state_no: 62
  in: 47 -- 
  out: 88 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(520):
  state_no: 62
  in: 48 -- 
  out: 89 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(521):
  state_no: 62
  in: 57 -- 
  out: 47 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(522):
  state_no: 62
  in: 75 -- 
  out: 80 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(523):
  state_no: 62
  in: 76 -- 
  out: 86 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(524):
  state_no: 63
  in: 2 -- 
  out: 41 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(525):
  state_no: 63
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(526):
  state_no: 63
  in: 38 -- 
  out: 49 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(527):
  state_no: 63
  in: 41 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(528):
  state_no: 63
  in: 42 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(529):
  state_no: 63
  in: 43 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(530):
  state_no: 63
  in: 46 -- 
  out: 46 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(531):
  state_no: 63
  in: 47 -- 
  out: 50 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(532):
  state_no: 63
  in: 48 -- 
  out: 51 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(533):
  state_no: 63
  in: 57 -- 
  out: 47 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(534):
  state_no: 63
  in: 75 -- 
  out: 30 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(535):
  state_no: 63
  in: 76 -- 
  out: 48 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(536):
  state_no: 64
  in: 2 -- 
  out: 29 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(537):
  state_no: 64
  in: 29 -- 
  out: 40 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(538):
  state_no: 64
  in: 38 -- 
  out: 37 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(539):
  state_no: 64
  in: 41 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(540):
  state_no: 64
  in: 42 -- 
  out: 32 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(541):
  state_no: 64
  in: 43 -- 
  out: 33 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(542):
  state_no: 64
  in: 46 -- 
  out: 34 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(543):
  state_no: 64
  in: 47 -- 
  out: 38 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(544):
  state_no: 64
  in: 48 -- 
  out: 39 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(545):
  state_no: 64
  in: 57 -- 
  out: 35 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(546):
  state_no: 64
  in: 75 -- 
  out: 30 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(547):
  state_no: 64
  in: 76 -- 
  out: 36 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(548):
  state_no: 65
  in: 3 -- 
  out: 28 -- 
  target: 74
  final_state: 0
  start_state: 0
Elem(549):
  state_no: 65
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(550):
  state_no: 66
  in: 2 -- 
  out: 29 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(551):
  state_no: 66
  in: 29 -- 
  out: 40 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(552):
  state_no: 66
  in: 38 -- 
  out: 37 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(553):
  state_no: 66
  in: 41 -- 
  out: 31 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(554):
  state_no: 66
  in: 42 -- 
  out: 32 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(555):
  state_no: 66
  in: 43 -- 
  out: 33 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(556):
  state_no: 66
  in: 46 -- 
  out: 34 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(557):
  state_no: 66
  in: 47 -- 
  out: 38 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(558):
  state_no: 66
  in: 48 -- 
  out: 39 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(559):
  state_no: 66
  in: 57 -- 
  out: 35 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(560):
  state_no: 66
  in: 75 -- 
  out: 30 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(561):
  state_no: 66
  in: 76 -- 
  out: 36 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(562):
  state_no: 67
  in: 10 -- 
  out: 8 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(563):
  state_no: 68
  in: 2 -- 
  out: 118 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(564):
  state_no: 68
  in: 29 -- 
  out: 129 -- 
  target: 78
  final_state: 0
  start_state: 0
Elem(565):
  state_no: 68
  in: 38 -- 
  out: 126 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(566):
  state_no: 68
  in: 41 -- 
  out: 120 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(567):
  state_no: 68
  in: 42 -- 
  out: 121 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(568):
  state_no: 68
  in: 43 -- 
  out: 122 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(569):
  state_no: 68
  in: 46 -- 
  out: 123 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(570):
  state_no: 68
  in: 47 -- 
  out: 127 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(571):
  state_no: 68
  in: 48 -- 
  out: 128 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(572):
  state_no: 68
  in: 57 -- 
  out: 124 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(573):
  state_no: 68
  in: 75 -- 
  out: 119 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(574):
  state_no: 68
  in: 76 -- 
  out: 86 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(575):
  state_no: 69
  in: 3 -- 
  out: 282 -- 
  target: 79
  final_state: 0
  start_state: 0
Elem(576):
  state_no: 69
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(577):
  state_no: 70
  in: 2 -- 
  out: 118 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(578):
  state_no: 70
  in: 29 -- 
  out: 129 -- 
  target: 81
  final_state: 0
  start_state: 0
Elem(579):
  state_no: 70
  in: 38 -- 
  out: 126 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(580):
  state_no: 70
  in: 41 -- 
  out: 120 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(581):
  state_no: 70
  in: 42 -- 
  out: 121 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(582):
  state_no: 70
  in: 43 -- 
  out: 122 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(583):
  state_no: 70
  in: 46 -- 
  out: 123 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(584):
  state_no: 70
  in: 47 -- 
  out: 127 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(585):
  state_no: 70
  in: 48 -- 
  out: 128 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(586):
  state_no: 70
  in: 57 -- 
  out: 124 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(587):
  state_no: 70
  in: 75 -- 
  out: 119 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(588):
  state_no: 70
  in: 76 -- 
  out: 86 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(589):
  state_no: 71
  in: 2 -- 
  out: 79 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(590):
  state_no: 71
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(591):
  state_no: 71
  in: 38 -- 
  out: 87 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(592):
  state_no: 71
  in: 41 -- 
  out: 81 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(593):
  state_no: 71
  in: 42 -- 
  out: 82 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(594):
  state_no: 71
  in: 43 -- 
  out: 83 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(595):
  state_no: 71
  in: 46 -- 
  out: 84 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(596):
  state_no: 71
  in: 47 -- 
  out: 88 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(597):
  state_no: 71
  in: 48 -- 
  out: 89 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(598):
  state_no: 71
  in: 57 -- 
  out: 47 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(599):
  state_no: 71
  in: 75 -- 
  out: 80 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(600):
  state_no: 71
  in: 76 -- 
  out: 86 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(601):
  state_no: 72
  in: 2 -- 
  out: 41 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(602):
  state_no: 72
  in: 29 -- 
  out: 40 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(603):
  state_no: 72
  in: 38 -- 
  out: 49 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(604):
  state_no: 72
  in: 41 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(605):
  state_no: 72
  in: 42 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(606):
  state_no: 72
  in: 43 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(607):
  state_no: 72
  in: 46 -- 
  out: 46 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(608):
  state_no: 72
  in: 47 -- 
  out: 50 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(609):
  state_no: 72
  in: 48 -- 
  out: 51 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(610):
  state_no: 72
  in: 57 -- 
  out: 47 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(611):
  state_no: 72
  in: 75 -- 
  out: 30 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(612):
  state_no: 72
  in: 76 -- 
  out: 48 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(613):
  state_no: 73
  in: 3 -- 
  out: 28 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(614):
  state_no: 73
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(615):
  state_no: 74
  in: 2 -- 
  out: 29 -- 
  target: 74
  final_state: 0
  start_state: 0
Elem(616):
  state_no: 74
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(617):
  state_no: 74
  in: 38 -- 
  out: 37 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(618):
  state_no: 74
  in: 41 -- 
  out: 31 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(619):
  state_no: 74
  in: 42 -- 
  out: 32 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(620):
  state_no: 74
  in: 43 -- 
  out: 33 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(621):
  state_no: 74
  in: 46 -- 
  out: 34 -- 
  target: 74
  final_state: 0
  start_state: 0
Elem(622):
  state_no: 74
  in: 47 -- 
  out: 38 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(623):
  state_no: 74
  in: 48 -- 
  out: 39 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(624):
  state_no: 74
  in: 57 -- 
  out: 35 -- 
  target: 74
  final_state: 0
  start_state: 0
Elem(625):
  state_no: 74
  in: 75 -- 
  out: 30 -- 
  target: 84
  final_state: 0
  start_state: 0
Elem(626):
  state_no: 74
  in: 76 -- 
  out: 36 -- 
  target: 74
  final_state: 0
  start_state: 0
Elem(627):
  state_no: 75
  in: 2 -- 
  out: 41 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(628):
  state_no: 75
  in: 29 -- 
  out: 40 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(629):
  state_no: 75
  in: 38 -- 
  out: 49 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(630):
  state_no: 75
  in: 41 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(631):
  state_no: 75
  in: 42 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(632):
  state_no: 75
  in: 43 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(633):
  state_no: 75
  in: 46 -- 
  out: 46 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(634):
  state_no: 75
  in: 47 -- 
  out: 50 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(635):
  state_no: 75
  in: 48 -- 
  out: 51 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(636):
  state_no: 75
  in: 57 -- 
  out: 47 -- 
  target: 85
  final_state: 0
  start_state: 0
Elem(637):
  state_no: 75
  in: 75 -- 
  out: 30 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(638):
  state_no: 75
  in: 76 -- 
  out: 48 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(639):
  state_no: 76
  in: 2 -- 
  out: 29 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(640):
  state_no: 76
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(641):
  state_no: 76
  in: 38 -- 
  out: 37 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(642):
  state_no: 76
  in: 41 -- 
  out: 31 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(643):
  state_no: 76
  in: 42 -- 
  out: 32 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(644):
  state_no: 76
  in: 43 -- 
  out: 33 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(645):
  state_no: 76
  in: 46 -- 
  out: 34 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(646):
  state_no: 76
  in: 47 -- 
  out: 38 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(647):
  state_no: 76
  in: 48 -- 
  out: 39 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(648):
  state_no: 76
  in: 57 -- 
  out: 35 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(649):
  state_no: 76
  in: 75 -- 
  out: 30 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(650):
  state_no: 76
  in: 76 -- 
  out: 36 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(651):
  state_no: 77
  in: 2 -- 
  out: 15 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(652):
  state_no: 77
  in: 7 -- 
  out: 20 -- 
  target: 87
  final_state: 0
  start_state: 0
Elem(653):
  state_no: 77
  in: 38 -- 
  out: 24 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(654):
  state_no: 77
  in: 41 -- 
  out: 17 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(655):
  state_no: 77
  in: 42 -- 
  out: 18 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(656):
  state_no: 77
  in: 43 -- 
  out: 19 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(657):
  state_no: 77
  in: 46 -- 
  out: 21 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(658):
  state_no: 77
  in: 47 -- 
  out: 25 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(659):
  state_no: 77
  in: 48 -- 
  out: 26 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(660):
  state_no: 77
  in: 57 -- 
  out: 22 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(661):
  state_no: 77
  in: 75 -- 
  out: 16 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(662):
  state_no: 77
  in: 76 -- 
  out: 23 -- 
  target: 77
  final_state: 0
  start_state: 0
Elem(663):
  state_no: 78
  in: 3 -- 
  out: 282 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(664):
  state_no: 78
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(665):
  state_no: 79
  in: 2 -- 
  out: 118 -- 
  target: 79
  final_state: 0
  start_state: 0
Elem(666):
  state_no: 79
  in: 29 -- 
  out: 129 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(667):
  state_no: 79
  in: 38 -- 
  out: 126 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(668):
  state_no: 79
  in: 41 -- 
  out: 120 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(669):
  state_no: 79
  in: 42 -- 
  out: 121 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(670):
  state_no: 79
  in: 43 -- 
  out: 122 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(671):
  state_no: 79
  in: 46 -- 
  out: 123 -- 
  target: 79
  final_state: 0
  start_state: 0
Elem(672):
  state_no: 79
  in: 47 -- 
  out: 127 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(673):
  state_no: 79
  in: 48 -- 
  out: 128 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(674):
  state_no: 79
  in: 57 -- 
  out: 124 -- 
  target: 79
  final_state: 0
  start_state: 0
Elem(675):
  state_no: 79
  in: 75 -- 
  out: 119 -- 
  target: 79
  final_state: 0
  start_state: 0
Elem(676):
  state_no: 79
  in: 76 -- 
  out: 86 -- 
  target: 79
  final_state: 0
  start_state: 0
Elem(677):
  state_no: 80
  in: 2 -- 
  out: 118 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(678):
  state_no: 80
  in: 29 -- 
  out: 129 -- 
  target: 89
  final_state: 0
  start_state: 0
Elem(679):
  state_no: 80
  in: 38 -- 
  out: 126 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(680):
  state_no: 80
  in: 41 -- 
  out: 120 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(681):
  state_no: 80
  in: 42 -- 
  out: 121 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(682):
  state_no: 80
  in: 43 -- 
  out: 122 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(683):
  state_no: 80
  in: 46 -- 
  out: 123 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(684):
  state_no: 80
  in: 47 -- 
  out: 127 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(685):
  state_no: 80
  in: 48 -- 
  out: 128 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(686):
  state_no: 80
  in: 57 -- 
  out: 124 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(687):
  state_no: 80
  in: 75 -- 
  out: 119 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(688):
  state_no: 80
  in: 76 -- 
  out: 86 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(689):
  state_no: 81
  in: 3 -- 
  out: 167 -- 
  target: 90
  final_state: 0
  start_state: 0
Elem(690):
  state_no: 81
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(691):
  state_no: 82
  in: 2 -- 
  out: 79 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(692):
  state_no: 82
  in: 29 -- 
  out: 40 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(693):
  state_no: 82
  in: 38 -- 
  out: 87 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(694):
  state_no: 82
  in: 41 -- 
  out: 81 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(695):
  state_no: 82
  in: 42 -- 
  out: 82 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(696):
  state_no: 82
  in: 43 -- 
  out: 83 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(697):
  state_no: 82
  in: 46 -- 
  out: 84 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(698):
  state_no: 82
  in: 47 -- 
  out: 88 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(699):
  state_no: 82
  in: 48 -- 
  out: 89 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(700):
  state_no: 82
  in: 57 -- 
  out: 47 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(701):
  state_no: 82
  in: 75 -- 
  out: 80 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(702):
  state_no: 82
  in: 76 -- 
  out: 86 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(703):
  state_no: 83
  in: 2 -- 
  out: 29 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(704):
  state_no: 83
  in: 29 -- 
  out: 40 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(705):
  state_no: 83
  in: 38 -- 
  out: 37 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(706):
  state_no: 83
  in: 41 -- 
  out: 31 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(707):
  state_no: 83
  in: 42 -- 
  out: 32 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(708):
  state_no: 83
  in: 43 -- 
  out: 33 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(709):
  state_no: 83
  in: 46 -- 
  out: 34 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(710):
  state_no: 83
  in: 47 -- 
  out: 38 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(711):
  state_no: 83
  in: 48 -- 
  out: 39 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(712):
  state_no: 83
  in: 57 -- 
  out: 35 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(713):
  state_no: 83
  in: 75 -- 
  out: 30 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(714):
  state_no: 83
  in: 76 -- 
  out: 36 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(715):
  state_no: 84
  in: 2 -- 
  out: 41 -- 
  target: 84
  final_state: 0
  start_state: 0
Elem(716):
  state_no: 84
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(717):
  state_no: 84
  in: 38 -- 
  out: 49 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(718):
  state_no: 84
  in: 41 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(719):
  state_no: 84
  in: 42 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(720):
  state_no: 84
  in: 43 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(721):
  state_no: 84
  in: 46 -- 
  out: 46 -- 
  target: 84
  final_state: 0
  start_state: 0
Elem(722):
  state_no: 84
  in: 47 -- 
  out: 50 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(723):
  state_no: 84
  in: 48 -- 
  out: 51 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(724):
  state_no: 84
  in: 57 -- 
  out: 47 -- 
  target: 92
  final_state: 0
  start_state: 0
Elem(725):
  state_no: 84
  in: 75 -- 
  out: 30 -- 
  target: 84
  final_state: 0
  start_state: 0
Elem(726):
  state_no: 84
  in: 76 -- 
  out: 48 -- 
  target: 84
  final_state: 0
  start_state: 0
Elem(727):
  state_no: 85
  in: 2 -- 
  out: 79 -- 
  target: 85
  final_state: 0
  start_state: 0
Elem(728):
  state_no: 85
  in: 29 -- 
  out: 40 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(729):
  state_no: 85
  in: 38 -- 
  out: 87 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(730):
  state_no: 85
  in: 41 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(731):
  state_no: 85
  in: 42 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(732):
  state_no: 85
  in: 43 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(733):
  state_no: 85
  in: 46 -- 
  out: 84 -- 
  target: 85
  final_state: 0
  start_state: 0
Elem(734):
  state_no: 85
  in: 47 -- 
  out: 88 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(735):
  state_no: 85
  in: 48 -- 
  out: 89 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(736):
  state_no: 85
  in: 57 -- 
  out: 47 -- 
  target: 85
  final_state: 0
  start_state: 0
Elem(737):
  state_no: 85
  in: 75 -- 
  out: 80 -- 
  target: 85
  final_state: 0
  start_state: 0
Elem(738):
  state_no: 85
  in: 76 -- 
  out: 86 -- 
  target: 93
  final_state: 0
  start_state: 0
Elem(739):
  state_no: 86
  in: 2 -- 
  out: 41 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(740):
  state_no: 86
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(741):
  state_no: 86
  in: 38 -- 
  out: 49 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(742):
  state_no: 86
  in: 41 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(743):
  state_no: 86
  in: 42 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(744):
  state_no: 86
  in: 43 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(745):
  state_no: 86
  in: 46 -- 
  out: 46 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(746):
  state_no: 86
  in: 47 -- 
  out: 50 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(747):
  state_no: 86
  in: 48 -- 
  out: 51 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(748):
  state_no: 86
  in: 57 -- 
  out: 47 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(749):
  state_no: 86
  in: 75 -- 
  out: 30 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(750):
  state_no: 86
  in: 76 -- 
  out: 48 -- 
  target: 86
  final_state: 0
  start_state: 0
Elem(751):
  state_no: 87
  in: 29 -- 
  out: 27 -- 
  target: 95
  final_state: 0
  start_state: 0
Elem(752):
  state_no: 88
  in: 2 -- 
  out: 118 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(753):
  state_no: 88
  in: 29 -- 
  out: 129 -- 
  target: 96
  final_state: 0
  start_state: 0
Elem(754):
  state_no: 88
  in: 38 -- 
  out: 126 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(755):
  state_no: 88
  in: 41 -- 
  out: 120 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(756):
  state_no: 88
  in: 42 -- 
  out: 121 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(757):
  state_no: 88
  in: 43 -- 
  out: 122 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(758):
  state_no: 88
  in: 46 -- 
  out: 123 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(759):
  state_no: 88
  in: 47 -- 
  out: 127 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(760):
  state_no: 88
  in: 48 -- 
  out: 128 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(761):
  state_no: 88
  in: 57 -- 
  out: 124 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(762):
  state_no: 88
  in: 75 -- 
  out: 119 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(763):
  state_no: 88
  in: 76 -- 
  out: 86 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(764):
  state_no: 89
  in: 3 -- 
  out: 167 -- 
  target: 97
  final_state: 0
  start_state: 0
Elem(765):
  state_no: 89
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(766):
  state_no: 90
  in: 2 -- 
  out: 207 -- 
  target: 90
  final_state: 0
  start_state: 0
Elem(767):
  state_no: 90
  in: 29 -- 
  out: 218 -- 
  target: 100
  final_state: 0
  start_state: 0
Elem(768):
  state_no: 90
  in: 38 -- 
  out: 215 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(769):
  state_no: 90
  in: 41 -- 
  out: 209 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(770):
  state_no: 90
  in: 42 -- 
  out: 210 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(771):
  state_no: 90
  in: 43 -- 
  out: 211 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(772):
  state_no: 90
  in: 46 -- 
  out: 212 -- 
  target: 90
  final_state: 0
  start_state: 0
Elem(773):
  state_no: 90
  in: 47 -- 
  out: 216 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(774):
  state_no: 90
  in: 48 -- 
  out: 217 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(775):
  state_no: 90
  in: 57 -- 
  out: 213 -- 
  target: 90
  final_state: 0
  start_state: 0
Elem(776):
  state_no: 90
  in: 75 -- 
  out: 208 -- 
  target: 98
  final_state: 0
  start_state: 0
Elem(777):
  state_no: 90
  in: 76 -- 
  out: 214 -- 
  target: 90
  final_state: 0
  start_state: 0
Elem(778):
  state_no: 91
  in: 2 -- 
  out: 41 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(779):
  state_no: 91
  in: 29 -- 
  out: 40 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(780):
  state_no: 91
  in: 38 -- 
  out: 49 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(781):
  state_no: 91
  in: 41 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(782):
  state_no: 91
  in: 42 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(783):
  state_no: 91
  in: 43 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(784):
  state_no: 91
  in: 46 -- 
  out: 46 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(785):
  state_no: 91
  in: 47 -- 
  out: 50 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(786):
  state_no: 91
  in: 48 -- 
  out: 51 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(787):
  state_no: 91
  in: 57 -- 
  out: 47 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(788):
  state_no: 91
  in: 75 -- 
  out: 30 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(789):
  state_no: 91
  in: 76 -- 
  out: 48 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(790):
  state_no: 92
  in: 2 -- 
  out: 79 -- 
  target: 92
  final_state: 0
  start_state: 0
Elem(791):
  state_no: 92
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(792):
  state_no: 92
  in: 38 -- 
  out: 87 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(793):
  state_no: 92
  in: 41 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(794):
  state_no: 92
  in: 42 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(795):
  state_no: 92
  in: 43 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(796):
  state_no: 92
  in: 46 -- 
  out: 84 -- 
  target: 92
  final_state: 0
  start_state: 0
Elem(797):
  state_no: 92
  in: 47 -- 
  out: 88 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(798):
  state_no: 92
  in: 48 -- 
  out: 89 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(799):
  state_no: 92
  in: 57 -- 
  out: 47 -- 
  target: 92
  final_state: 0
  start_state: 0
Elem(800):
  state_no: 92
  in: 75 -- 
  out: 80 -- 
  target: 92
  final_state: 0
  start_state: 0
Elem(801):
  state_no: 92
  in: 76 -- 
  out: 86 -- 
  target: 102
  final_state: 0
  start_state: 0
Elem(802):
  state_no: 93
  in: 2 -- 
  out: 118 -- 
  target: 93
  final_state: 0
  start_state: 0
Elem(803):
  state_no: 93
  in: 29 -- 
  out: 129 -- 
  target: 100
  final_state: 0
  start_state: 0
Elem(804):
  state_no: 93
  in: 38 -- 
  out: 126 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(805):
  state_no: 93
  in: 41 -- 
  out: 120 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(806):
  state_no: 93
  in: 42 -- 
  out: 121 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(807):
  state_no: 93
  in: 43 -- 
  out: 122 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(808):
  state_no: 93
  in: 46 -- 
  out: 123 -- 
  target: 93
  final_state: 0
  start_state: 0
Elem(809):
  state_no: 93
  in: 47 -- 
  out: 127 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(810):
  state_no: 93
  in: 48 -- 
  out: 128 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(811):
  state_no: 93
  in: 57 -- 
  out: 124 -- 
  target: 93
  final_state: 0
  start_state: 0
Elem(812):
  state_no: 93
  in: 75 -- 
  out: 119 -- 
  target: 93
  final_state: 0
  start_state: 0
Elem(813):
  state_no: 93
  in: 76 -- 
  out: 86 -- 
  target: 93
  final_state: 0
  start_state: 0
Elem(814):
  state_no: 94
  in: 2 -- 
  out: 79 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(815):
  state_no: 94
  in: 29 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(816):
  state_no: 94
  in: 38 -- 
  out: 87 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(817):
  state_no: 94
  in: 41 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(818):
  state_no: 94
  in: 42 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(819):
  state_no: 94
  in: 43 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(820):
  state_no: 94
  in: 46 -- 
  out: 84 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(821):
  state_no: 94
  in: 47 -- 
  out: 88 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(822):
  state_no: 94
  in: 48 -- 
  out: 89 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(823):
  state_no: 94
  in: 57 -- 
  out: 47 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(824):
  state_no: 94
  in: 75 -- 
  out: 80 -- 
  target: 94
  final_state: 0
  start_state: 0
Elem(825):
  state_no: 94
  in: 76 -- 
  out: 86 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(826):
  state_no: 95
  in: 3 -- 
  out: 28 -- 
  target: 104
  final_state: 0
  start_state: 0
Elem(827):
  state_no: 96
  in: 3 -- 
  out: 167 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(828):
  state_no: 96
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(829):
  state_no: 97
  in: 2 -- 
  out: 207 -- 
  target: 97
  final_state: 0
  start_state: 0
Elem(830):
  state_no: 97
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(831):
  state_no: 97
  in: 38 -- 
  out: 215 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(832):
  state_no: 97
  in: 41 -- 
  out: 209 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(833):
  state_no: 97
  in: 42 -- 
  out: 210 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(834):
  state_no: 97
  in: 43 -- 
  out: 211 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(835):
  state_no: 97
  in: 46 -- 
  out: 212 -- 
  target: 97
  final_state: 0
  start_state: 0
Elem(836):
  state_no: 97
  in: 47 -- 
  out: 216 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(837):
  state_no: 97
  in: 48 -- 
  out: 217 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(838):
  state_no: 97
  in: 57 -- 
  out: 213 -- 
  target: 97
  final_state: 0
  start_state: 0
Elem(839):
  state_no: 97
  in: 75 -- 
  out: 208 -- 
  target: 106
  final_state: 0
  start_state: 0
Elem(840):
  state_no: 97
  in: 76 -- 
  out: 214 -- 
  target: 97
  final_state: 0
  start_state: 0
Elem(841):
  state_no: 98
  in: 2 -- 
  out: 256 -- 
  target: 98
  final_state: 0
  start_state: 0
Elem(842):
  state_no: 98
  in: 29 -- 
  out: 218 -- 
  target: 100
  final_state: 0
  start_state: 0
Elem(843):
  state_no: 98
  in: 38 -- 
  out: 264 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(844):
  state_no: 98
  in: 41 -- 
  out: 258 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(845):
  state_no: 98
  in: 42 -- 
  out: 259 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(846):
  state_no: 98
  in: 43 -- 
  out: 260 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(847):
  state_no: 98
  in: 46 -- 
  out: 261 -- 
  target: 98
  final_state: 0
  start_state: 0
Elem(848):
  state_no: 98
  in: 47 -- 
  out: 265 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(849):
  state_no: 98
  in: 48 -- 
  out: 266 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(850):
  state_no: 98
  in: 57 -- 
  out: 262 -- 
  target: 108
  final_state: 0
  start_state: 0
Elem(851):
  state_no: 98
  in: 75 -- 
  out: 208 -- 
  target: 98
  final_state: 0
  start_state: 0
Elem(852):
  state_no: 98
  in: 76 -- 
  out: 263 -- 
  target: 98
  final_state: 0
  start_state: 0
Elem(853):
  state_no: 99
  in: 2 -- 
  out: 207 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(854):
  state_no: 99
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(855):
  state_no: 99
  in: 38 -- 
  out: 215 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(856):
  state_no: 99
  in: 41 -- 
  out: 209 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(857):
  state_no: 99
  in: 42 -- 
  out: 210 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(858):
  state_no: 99
  in: 43 -- 
  out: 211 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(859):
  state_no: 99
  in: 46 -- 
  out: 212 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(860):
  state_no: 99
  in: 47 -- 
  out: 216 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(861):
  state_no: 99
  in: 48 -- 
  out: 217 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(862):
  state_no: 99
  in: 57 -- 
  out: 213 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(863):
  state_no: 99
  in: 75 -- 
  out: 208 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(864):
  state_no: 99
  in: 76 -- 
  out: 214 -- 
  target: 99
  final_state: 0
  start_state: 0
Elem(865):
  state_no: 100
  in: 3 -- 
  out: 167 -- 
  target: 110
  final_state: 0
  start_state: 0
Elem(866):
  state_no: 100
  in: 8 -- 
  out: 66 -- 
  target: 111
  final_state: 0
  start_state: 0
Elem(867):
  state_no: 101
  in: 2 -- 
  out: 79 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(868):
  state_no: 101
  in: 29 -- 
  out: 40 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(869):
  state_no: 101
  in: 38 -- 
  out: 87 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(870):
  state_no: 101
  in: 41 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(871):
  state_no: 101
  in: 42 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(872):
  state_no: 101
  in: 43 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(873):
  state_no: 101
  in: 46 -- 
  out: 84 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(874):
  state_no: 101
  in: 47 -- 
  out: 88 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(875):
  state_no: 101
  in: 48 -- 
  out: 89 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(876):
  state_no: 101
  in: 57 -- 
  out: 47 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(877):
  state_no: 101
  in: 75 -- 
  out: 80 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(878):
  state_no: 101
  in: 76 -- 
  out: 86 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(879):
  state_no: 102
  in: 2 -- 
  out: 118 -- 
  target: 102
  final_state: 0
  start_state: 0
Elem(880):
  state_no: 102
  in: 29 -- 
  out: 129 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(881):
  state_no: 102
  in: 38 -- 
  out: 126 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(882):
  state_no: 102
  in: 41 -- 
  out: 120 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(883):
  state_no: 102
  in: 42 -- 
  out: 121 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(884):
  state_no: 102
  in: 43 -- 
  out: 122 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(885):
  state_no: 102
  in: 46 -- 
  out: 123 -- 
  target: 102
  final_state: 0
  start_state: 0
Elem(886):
  state_no: 102
  in: 47 -- 
  out: 127 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(887):
  state_no: 102
  in: 48 -- 
  out: 128 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(888):
  state_no: 102
  in: 57 -- 
  out: 124 -- 
  target: 102
  final_state: 0
  start_state: 0
Elem(889):
  state_no: 102
  in: 75 -- 
  out: 119 -- 
  target: 102
  final_state: 0
  start_state: 0
Elem(890):
  state_no: 102
  in: 76 -- 
  out: 86 -- 
  target: 102
  final_state: 0
  start_state: 0
Elem(891):
  state_no: 103
  in: 2 -- 
  out: 118 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(892):
  state_no: 103
  in: 29 -- 
  out: 129 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(893):
  state_no: 103
  in: 38 -- 
  out: 126 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(894):
  state_no: 103
  in: 41 -- 
  out: 120 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(895):
  state_no: 103
  in: 42 -- 
  out: 121 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(896):
  state_no: 103
  in: 43 -- 
  out: 122 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(897):
  state_no: 103
  in: 46 -- 
  out: 123 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(898):
  state_no: 103
  in: 47 -- 
  out: 127 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(899):
  state_no: 103
  in: 48 -- 
  out: 128 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(900):
  state_no: 103
  in: 57 -- 
  out: 124 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(901):
  state_no: 103
  in: 75 -- 
  out: 119 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(902):
  state_no: 103
  in: 76 -- 
  out: 86 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(903):
  state_no: 104
  in: 2 -- 
  out: 29 -- 
  target: 104
  final_state: 0
  start_state: 0
Elem(904):
  state_no: 104
  in: 29 -- 
  out: 40 -- 
  target: 116
  final_state: 0
  start_state: 0
Elem(905):
  state_no: 104
  in: 38 -- 
  out: 37 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(906):
  state_no: 104
  in: 41 -- 
  out: 31 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(907):
  state_no: 104
  in: 42 -- 
  out: 32 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(908):
  state_no: 104
  in: 43 -- 
  out: 33 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(909):
  state_no: 104
  in: 46 -- 
  out: 34 -- 
  target: 104
  final_state: 0
  start_state: 0
Elem(910):
  state_no: 104
  in: 47 -- 
  out: 38 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(911):
  state_no: 104
  in: 48 -- 
  out: 39 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(912):
  state_no: 104
  in: 57 -- 
  out: 35 -- 
  target: 104
  final_state: 0
  start_state: 0
Elem(913):
  state_no: 104
  in: 75 -- 
  out: 30 -- 
  target: 113
  final_state: 0
  start_state: 0
Elem(914):
  state_no: 104
  in: 76 -- 
  out: 36 -- 
  target: 104
  final_state: 0
  start_state: 0
Elem(915):
  state_no: 105
  in: 2 -- 
  out: 207 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(916):
  state_no: 105
  in: 29 -- 
  out: 218 -- 
  target: 118
  final_state: 0
  start_state: 0
Elem(917):
  state_no: 105
  in: 38 -- 
  out: 215 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(918):
  state_no: 105
  in: 41 -- 
  out: 209 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(919):
  state_no: 105
  in: 42 -- 
  out: 210 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(920):
  state_no: 105
  in: 43 -- 
  out: 211 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(921):
  state_no: 105
  in: 46 -- 
  out: 212 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(922):
  state_no: 105
  in: 47 -- 
  out: 216 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(923):
  state_no: 105
  in: 48 -- 
  out: 217 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(924):
  state_no: 105
  in: 57 -- 
  out: 213 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(925):
  state_no: 105
  in: 75 -- 
  out: 208 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(926):
  state_no: 105
  in: 76 -- 
  out: 214 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(927):
  state_no: 106
  in: 2 -- 
  out: 256 -- 
  target: 106
  final_state: 0
  start_state: 0
Elem(928):
  state_no: 106
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(929):
  state_no: 106
  in: 38 -- 
  out: 264 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(930):
  state_no: 106
  in: 41 -- 
  out: 258 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(931):
  state_no: 106
  in: 42 -- 
  out: 259 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(932):
  state_no: 106
  in: 43 -- 
  out: 260 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(933):
  state_no: 106
  in: 46 -- 
  out: 261 -- 
  target: 106
  final_state: 0
  start_state: 0
Elem(934):
  state_no: 106
  in: 47 -- 
  out: 265 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(935):
  state_no: 106
  in: 48 -- 
  out: 266 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(936):
  state_no: 106
  in: 57 -- 
  out: 262 -- 
  target: 119
  final_state: 0
  start_state: 0
Elem(937):
  state_no: 106
  in: 75 -- 
  out: 208 -- 
  target: 106
  final_state: 0
  start_state: 0
Elem(938):
  state_no: 106
  in: 76 -- 
  out: 263 -- 
  target: 106
  final_state: 0
  start_state: 0
Elem(939):
  state_no: 107
  in: 3 -- 
  out: 167 -- 
  target: 120
  final_state: 0
  start_state: 0
Elem(940):
  state_no: 107
  in: 8 -- 
  out: 66 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(941):
  state_no: 108
  in: 2 -- 
  out: 297 -- 
  target: 108
  final_state: 0
  start_state: 0
Elem(942):
  state_no: 108
  in: 29 -- 
  out: 218 -- 
  target: 100
  final_state: 0
  start_state: 0
Elem(943):
  state_no: 108
  in: 38 -- 
  out: 305 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(944):
  state_no: 108
  in: 41 -- 
  out: 299 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(945):
  state_no: 108
  in: 42 -- 
  out: 300 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(946):
  state_no: 108
  in: 43 -- 
  out: 301 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(947):
  state_no: 108
  in: 46 -- 
  out: 302 -- 
  target: 108
  final_state: 0
  start_state: 0
Elem(948):
  state_no: 108
  in: 47 -- 
  out: 306 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(949):
  state_no: 108
  in: 48 -- 
  out: 307 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(950):
  state_no: 108
  in: 57 -- 
  out: 262 -- 
  target: 108
  final_state: 0
  start_state: 0
Elem(951):
  state_no: 108
  in: 75 -- 
  out: 298 -- 
  target: 108
  final_state: 0
  start_state: 0
Elem(952):
  state_no: 108
  in: 76 -- 
  out: 86 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(953):
  state_no: 109
  in: 2 -- 
  out: 256 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(954):
  state_no: 109
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(955):
  state_no: 109
  in: 38 -- 
  out: 264 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(956):
  state_no: 109
  in: 41 -- 
  out: 258 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(957):
  state_no: 109
  in: 42 -- 
  out: 259 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(958):
  state_no: 109
  in: 43 -- 
  out: 260 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(959):
  state_no: 109
  in: 46 -- 
  out: 261 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(960):
  state_no: 109
  in: 47 -- 
  out: 265 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(961):
  state_no: 109
  in: 48 -- 
  out: 266 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(962):
  state_no: 109
  in: 57 -- 
  out: 262 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(963):
  state_no: 109
  in: 75 -- 
  out: 208 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(964):
  state_no: 109
  in: 76 -- 
  out: 263 -- 
  target: 109
  final_state: 0
  start_state: 0
Elem(965):
  state_no: 110
  in: 2 -- 
  out: 207 -- 
  target: 110
  final_state: 0
  start_state: 0
Elem(966):
  state_no: 110
  in: 29 -- 
  out: 218 -- 
  target: 100
  final_state: 0
  start_state: 0
Elem(967):
  state_no: 110
  in: 38 -- 
  out: 215 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(968):
  state_no: 110
  in: 41 -- 
  out: 209 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(969):
  state_no: 110
  in: 42 -- 
  out: 210 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(970):
  state_no: 110
  in: 43 -- 
  out: 211 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(971):
  state_no: 110
  in: 46 -- 
  out: 212 -- 
  target: 110
  final_state: 0
  start_state: 0
Elem(972):
  state_no: 110
  in: 47 -- 
  out: 216 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(973):
  state_no: 110
  in: 48 -- 
  out: 217 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(974):
  state_no: 110
  in: 57 -- 
  out: 213 -- 
  target: 110
  final_state: 0
  start_state: 0
Elem(975):
  state_no: 110
  in: 75 -- 
  out: 208 -- 
  target: 122
  final_state: 0
  start_state: 0
Elem(976):
  state_no: 110
  in: 76 -- 
  out: 214 -- 
  target: 110
  final_state: 0
  start_state: 0
Elem(977):
  state_no: 111
  in: 10 -- 
  out: 8 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(978):
  state_no: 112
  in: 2 -- 
  out: 118 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(979):
  state_no: 112
  in: 29 -- 
  out: 129 -- 
  target: 118
  final_state: 0
  start_state: 0
Elem(980):
  state_no: 112
  in: 38 -- 
  out: 126 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(981):
  state_no: 112
  in: 41 -- 
  out: 120 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(982):
  state_no: 112
  in: 42 -- 
  out: 121 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(983):
  state_no: 112
  in: 43 -- 
  out: 122 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(984):
  state_no: 112
  in: 46 -- 
  out: 123 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(985):
  state_no: 112
  in: 47 -- 
  out: 127 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(986):
  state_no: 112
  in: 48 -- 
  out: 128 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(987):
  state_no: 112
  in: 57 -- 
  out: 124 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(988):
  state_no: 112
  in: 75 -- 
  out: 119 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(989):
  state_no: 112
  in: 76 -- 
  out: 86 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(990):
  state_no: 113
  in: 2 -- 
  out: 41 -- 
  target: 113
  final_state: 0
  start_state: 0
Elem(991):
  state_no: 113
  in: 29 -- 
  out: 40 -- 
  target: 116
  final_state: 0
  start_state: 0
Elem(992):
  state_no: 113
  in: 38 -- 
  out: 49 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(993):
  state_no: 113
  in: 41 -- 
  out: 43 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(994):
  state_no: 113
  in: 42 -- 
  out: 44 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(995):
  state_no: 113
  in: 43 -- 
  out: 45 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(996):
  state_no: 113
  in: 46 -- 
  out: 46 -- 
  target: 113
  final_state: 0
  start_state: 0
Elem(997):
  state_no: 113
  in: 47 -- 
  out: 50 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(998):
  state_no: 113
  in: 48 -- 
  out: 51 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(999):
  state_no: 113
  in: 57 -- 
  out: 47 -- 
  target: 126
  final_state: 0
  start_state: 0
Elem(1000):
  state_no: 113
  in: 75 -- 
  out: 30 -- 
  target: 113
  final_state: 0
  start_state: 0
Elem(1001):
  state_no: 113
  in: 76 -- 
  out: 48 -- 
  target: 113
  final_state: 0
  start_state: 0
Elem(1002):
  state_no: 114
  in: 2 -- 
  out: 29 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1003):
  state_no: 114
  in: 29 -- 
  out: 40 -- 
  target: 129
  final_state: 0
  start_state: 0
Elem(1004):
  state_no: 114
  in: 38 -- 
  out: 37 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1005):
  state_no: 114
  in: 41 -- 
  out: 31 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1006):
  state_no: 114
  in: 42 -- 
  out: 32 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1007):
  state_no: 114
  in: 43 -- 
  out: 33 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1008):
  state_no: 114
  in: 46 -- 
  out: 34 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1009):
  state_no: 114
  in: 47 -- 
  out: 38 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1010):
  state_no: 114
  in: 48 -- 
  out: 39 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1011):
  state_no: 114
  in: 57 -- 
  out: 35 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1012):
  state_no: 114
  in: 75 -- 
  out: 30 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1013):
  state_no: 114
  in: 76 -- 
  out: 36 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1014):
  state_no: 115
  in: 2 -- 
  out: 29 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(1015):
  state_no: 115
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1016):
  state_no: 115
  in: 38 -- 
  out: 37 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(1017):
  state_no: 115
  in: 41 -- 
  out: 31 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1018):
  state_no: 115
  in: 42 -- 
  out: 32 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1019):
  state_no: 115
  in: 43 -- 
  out: 33 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1020):
  state_no: 115
  in: 46 -- 
  out: 34 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(1021):
  state_no: 115
  in: 47 -- 
  out: 38 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(1022):
  state_no: 115
  in: 48 -- 
  out: 39 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(1023):
  state_no: 115
  in: 57 -- 
  out: 35 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(1024):
  state_no: 115
  in: 75 -- 
  out: 30 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(1025):
  state_no: 115
  in: 76 -- 
  out: 36 -- 
  target: 115
  final_state: 0
  start_state: 0
Elem(1026):
  state_no: 116
  in: 3 -- 
  out: 28 -- 
  target: 131
  final_state: 0
  start_state: 0
Elem(1027):
  state_no: 116
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(1028):
  state_no: 117
  in: 2 -- 
  out: 256 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(1029):
  state_no: 117
  in: 29 -- 
  out: 218 -- 
  target: 118
  final_state: 0
  start_state: 0
Elem(1030):
  state_no: 117
  in: 38 -- 
  out: 264 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(1031):
  state_no: 117
  in: 41 -- 
  out: 258 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(1032):
  state_no: 117
  in: 42 -- 
  out: 259 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(1033):
  state_no: 117
  in: 43 -- 
  out: 260 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(1034):
  state_no: 117
  in: 46 -- 
  out: 261 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(1035):
  state_no: 117
  in: 47 -- 
  out: 265 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(1036):
  state_no: 117
  in: 48 -- 
  out: 266 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(1037):
  state_no: 117
  in: 57 -- 
  out: 262 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1038):
  state_no: 117
  in: 75 -- 
  out: 208 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(1039):
  state_no: 117
  in: 76 -- 
  out: 263 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(1040):
  state_no: 118
  in: 3 -- 
  out: 167 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1041):
  state_no: 118
  in: 8 -- 
  out: 66 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(1042):
  state_no: 119
  in: 2 -- 
  out: 297 -- 
  target: 119
  final_state: 0
  start_state: 0
Elem(1043):
  state_no: 119
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(1044):
  state_no: 119
  in: 38 -- 
  out: 305 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1045):
  state_no: 119
  in: 41 -- 
  out: 299 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1046):
  state_no: 119
  in: 42 -- 
  out: 300 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1047):
  state_no: 119
  in: 43 -- 
  out: 301 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1048):
  state_no: 119
  in: 46 -- 
  out: 302 -- 
  target: 119
  final_state: 0
  start_state: 0
Elem(1049):
  state_no: 119
  in: 47 -- 
  out: 306 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1050):
  state_no: 119
  in: 48 -- 
  out: 307 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1051):
  state_no: 119
  in: 57 -- 
  out: 262 -- 
  target: 119
  final_state: 0
  start_state: 0
Elem(1052):
  state_no: 119
  in: 75 -- 
  out: 298 -- 
  target: 119
  final_state: 0
  start_state: 0
Elem(1053):
  state_no: 119
  in: 76 -- 
  out: 86 -- 
  target: 134
  final_state: 0
  start_state: 0
Elem(1054):
  state_no: 120
  in: 2 -- 
  out: 207 -- 
  target: 120
  final_state: 0
  start_state: 0
Elem(1055):
  state_no: 120
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(1056):
  state_no: 120
  in: 38 -- 
  out: 215 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1057):
  state_no: 120
  in: 41 -- 
  out: 209 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1058):
  state_no: 120
  in: 42 -- 
  out: 210 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1059):
  state_no: 120
  in: 43 -- 
  out: 211 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1060):
  state_no: 120
  in: 46 -- 
  out: 212 -- 
  target: 120
  final_state: 0
  start_state: 0
Elem(1061):
  state_no: 120
  in: 47 -- 
  out: 216 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1062):
  state_no: 120
  in: 48 -- 
  out: 217 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1063):
  state_no: 120
  in: 57 -- 
  out: 213 -- 
  target: 120
  final_state: 0
  start_state: 0
Elem(1064):
  state_no: 120
  in: 75 -- 
  out: 208 -- 
  target: 135
  final_state: 0
  start_state: 0
Elem(1065):
  state_no: 120
  in: 76 -- 
  out: 214 -- 
  target: 120
  final_state: 0
  start_state: 0
Elem(1066):
  state_no: 121
  in: 2 -- 
  out: 297 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1067):
  state_no: 121
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(1068):
  state_no: 121
  in: 38 -- 
  out: 305 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1069):
  state_no: 121
  in: 41 -- 
  out: 299 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1070):
  state_no: 121
  in: 42 -- 
  out: 300 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1071):
  state_no: 121
  in: 43 -- 
  out: 301 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1072):
  state_no: 121
  in: 46 -- 
  out: 302 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1073):
  state_no: 121
  in: 47 -- 
  out: 306 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1074):
  state_no: 121
  in: 48 -- 
  out: 307 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1075):
  state_no: 121
  in: 57 -- 
  out: 262 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1076):
  state_no: 121
  in: 75 -- 
  out: 298 -- 
  target: 121
  final_state: 0
  start_state: 0
Elem(1077):
  state_no: 121
  in: 76 -- 
  out: 86 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(1078):
  state_no: 122
  in: 2 -- 
  out: 256 -- 
  target: 122
  final_state: 0
  start_state: 0
Elem(1079):
  state_no: 122
  in: 29 -- 
  out: 218 -- 
  target: 100
  final_state: 0
  start_state: 0
Elem(1080):
  state_no: 122
  in: 38 -- 
  out: 264 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1081):
  state_no: 122
  in: 41 -- 
  out: 258 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1082):
  state_no: 122
  in: 42 -- 
  out: 259 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1083):
  state_no: 122
  in: 43 -- 
  out: 260 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1084):
  state_no: 122
  in: 46 -- 
  out: 261 -- 
  target: 122
  final_state: 0
  start_state: 0
Elem(1085):
  state_no: 122
  in: 47 -- 
  out: 265 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1086):
  state_no: 122
  in: 48 -- 
  out: 266 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1087):
  state_no: 122
  in: 57 -- 
  out: 262 -- 
  target: 136
  final_state: 0
  start_state: 0
Elem(1088):
  state_no: 122
  in: 75 -- 
  out: 208 -- 
  target: 122
  final_state: 0
  start_state: 0
Elem(1089):
  state_no: 122
  in: 76 -- 
  out: 263 -- 
  target: 122
  final_state: 0
  start_state: 0
Elem(1090):
  state_no: 123
  in: 2 -- 
  out: 207 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1091):
  state_no: 123
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(1092):
  state_no: 123
  in: 38 -- 
  out: 215 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1093):
  state_no: 123
  in: 41 -- 
  out: 209 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1094):
  state_no: 123
  in: 42 -- 
  out: 210 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1095):
  state_no: 123
  in: 43 -- 
  out: 211 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1096):
  state_no: 123
  in: 46 -- 
  out: 212 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1097):
  state_no: 123
  in: 47 -- 
  out: 216 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1098):
  state_no: 123
  in: 48 -- 
  out: 217 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1099):
  state_no: 123
  in: 57 -- 
  out: 213 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1100):
  state_no: 123
  in: 75 -- 
  out: 208 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1101):
  state_no: 123
  in: 76 -- 
  out: 214 -- 
  target: 123
  final_state: 0
  start_state: 0
Elem(1102):
  state_no: 124
  in: 2 -- 
  out: 15 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1103):
  state_no: 124
  in: 7 -- 
  out: 20 -- 
  target: 138
  final_state: 0
  start_state: 0
Elem(1104):
  state_no: 124
  in: 38 -- 
  out: 24 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1105):
  state_no: 124
  in: 41 -- 
  out: 17 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1106):
  state_no: 124
  in: 42 -- 
  out: 18 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1107):
  state_no: 124
  in: 43 -- 
  out: 19 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1108):
  state_no: 124
  in: 46 -- 
  out: 21 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1109):
  state_no: 124
  in: 47 -- 
  out: 25 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1110):
  state_no: 124
  in: 48 -- 
  out: 26 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1111):
  state_no: 124
  in: 57 -- 
  out: 22 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1112):
  state_no: 124
  in: 75 -- 
  out: 16 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1113):
  state_no: 124
  in: 76 -- 
  out: 23 -- 
  target: 124
  final_state: 0
  start_state: 0
Elem(1114):
  state_no: 125
  in: 2 -- 
  out: 41 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1115):
  state_no: 125
  in: 29 -- 
  out: 40 -- 
  target: 129
  final_state: 0
  start_state: 0
Elem(1116):
  state_no: 125
  in: 38 -- 
  out: 49 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1117):
  state_no: 125
  in: 41 -- 
  out: 43 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1118):
  state_no: 125
  in: 42 -- 
  out: 44 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1119):
  state_no: 125
  in: 43 -- 
  out: 45 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1120):
  state_no: 125
  in: 46 -- 
  out: 46 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1121):
  state_no: 125
  in: 47 -- 
  out: 50 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1122):
  state_no: 125
  in: 48 -- 
  out: 51 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1123):
  state_no: 125
  in: 57 -- 
  out: 47 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1124):
  state_no: 125
  in: 75 -- 
  out: 30 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1125):
  state_no: 125
  in: 76 -- 
  out: 48 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1126):
  state_no: 126
  in: 2 -- 
  out: 79 -- 
  target: 126
  final_state: 0
  start_state: 0
Elem(1127):
  state_no: 126
  in: 29 -- 
  out: 40 -- 
  target: 116
  final_state: 0
  start_state: 0
Elem(1128):
  state_no: 126
  in: 38 -- 
  out: 87 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1129):
  state_no: 126
  in: 41 -- 
  out: 81 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1130):
  state_no: 126
  in: 42 -- 
  out: 82 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1131):
  state_no: 126
  in: 43 -- 
  out: 83 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1132):
  state_no: 126
  in: 46 -- 
  out: 84 -- 
  target: 126
  final_state: 0
  start_state: 0
Elem(1133):
  state_no: 126
  in: 47 -- 
  out: 88 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1134):
  state_no: 126
  in: 48 -- 
  out: 89 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1135):
  state_no: 126
  in: 57 -- 
  out: 47 -- 
  target: 126
  final_state: 0
  start_state: 0
Elem(1136):
  state_no: 126
  in: 75 -- 
  out: 80 -- 
  target: 126
  final_state: 0
  start_state: 0
Elem(1137):
  state_no: 126
  in: 76 -- 
  out: 86 -- 
  target: 141
  final_state: 0
  start_state: 0
Elem(1138):
  state_no: 127
  in: 2 -- 
  out: 41 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(1139):
  state_no: 127
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1140):
  state_no: 127
  in: 38 -- 
  out: 49 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(1141):
  state_no: 127
  in: 41 -- 
  out: 43 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1142):
  state_no: 127
  in: 42 -- 
  out: 44 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1143):
  state_no: 127
  in: 43 -- 
  out: 45 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1144):
  state_no: 127
  in: 46 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(1145):
  state_no: 127
  in: 47 -- 
  out: 50 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(1146):
  state_no: 127
  in: 48 -- 
  out: 51 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(1147):
  state_no: 127
  in: 57 -- 
  out: 47 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1148):
  state_no: 127
  in: 75 -- 
  out: 30 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(1149):
  state_no: 127
  in: 76 -- 
  out: 48 -- 
  target: 127
  final_state: 0
  start_state: 0
Elem(1150):
  state_no: 128
  in: 2 -- 
  out: 29 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1151):
  state_no: 128
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1152):
  state_no: 128
  in: 38 -- 
  out: 37 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1153):
  state_no: 128
  in: 41 -- 
  out: 31 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1154):
  state_no: 128
  in: 42 -- 
  out: 32 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1155):
  state_no: 128
  in: 43 -- 
  out: 33 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1156):
  state_no: 128
  in: 46 -- 
  out: 34 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(1157):
  state_no: 128
  in: 47 -- 
  out: 38 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1158):
  state_no: 128
  in: 48 -- 
  out: 39 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1159):
  state_no: 128
  in: 57 -- 
  out: 35 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1160):
  state_no: 128
  in: 75 -- 
  out: 30 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1161):
  state_no: 128
  in: 76 -- 
  out: 36 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1162):
  state_no: 129
  in: 3 -- 
  out: 28 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1163):
  state_no: 129
  in: 8 -- 
  out: 66 -- 
  target: 145
  final_state: 0
  start_state: 0
Elem(1164):
  state_no: 130
  in: 3 -- 
  out: 28 -- 
  target: 146
  final_state: 0
  start_state: 0
Elem(1165):
  state_no: 130
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(1166):
  state_no: 131
  in: 2 -- 
  out: 29 -- 
  target: 131
  final_state: 0
  start_state: 0
Elem(1167):
  state_no: 131
  in: 29 -- 
  out: 40 -- 
  target: 116
  final_state: 0
  start_state: 0
Elem(1168):
  state_no: 131
  in: 38 -- 
  out: 37 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1169):
  state_no: 131
  in: 41 -- 
  out: 31 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1170):
  state_no: 131
  in: 42 -- 
  out: 32 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1171):
  state_no: 131
  in: 43 -- 
  out: 33 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1172):
  state_no: 131
  in: 46 -- 
  out: 34 -- 
  target: 131
  final_state: 0
  start_state: 0
Elem(1173):
  state_no: 131
  in: 47 -- 
  out: 38 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1174):
  state_no: 131
  in: 48 -- 
  out: 39 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1175):
  state_no: 131
  in: 57 -- 
  out: 35 -- 
  target: 131
  final_state: 0
  start_state: 0
Elem(1176):
  state_no: 131
  in: 75 -- 
  out: 30 -- 
  target: 147
  final_state: 0
  start_state: 0
Elem(1177):
  state_no: 131
  in: 76 -- 
  out: 36 -- 
  target: 131
  final_state: 0
  start_state: 0
Elem(1178):
  state_no: 132
  in: 2 -- 
  out: 297 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1179):
  state_no: 132
  in: 29 -- 
  out: 218 -- 
  target: 118
  final_state: 0
  start_state: 0
Elem(1180):
  state_no: 132
  in: 38 -- 
  out: 305 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1181):
  state_no: 132
  in: 41 -- 
  out: 299 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1182):
  state_no: 132
  in: 42 -- 
  out: 300 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1183):
  state_no: 132
  in: 43 -- 
  out: 301 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(1184):
  state_no: 132
  in: 46 -- 
  out: 302 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1185):
  state_no: 132
  in: 47 -- 
  out: 306 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1186):
  state_no: 132
  in: 48 -- 
  out: 307 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1187):
  state_no: 132
  in: 57 -- 
  out: 262 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1188):
  state_no: 132
  in: 75 -- 
  out: 298 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(1189):
  state_no: 132
  in: 76 -- 
  out: 86 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(1190):
  state_no: 133
  in: 2 -- 
  out: 207 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1191):
  state_no: 133
  in: 29 -- 
  out: 218 -- 
  target: 118
  final_state: 0
  start_state: 0
Elem(1192):
  state_no: 133
  in: 38 -- 
  out: 215 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1193):
  state_no: 133
  in: 41 -- 
  out: 209 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1194):
  state_no: 133
  in: 42 -- 
  out: 210 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1195):
  state_no: 133
  in: 43 -- 
  out: 211 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(1196):
  state_no: 133
  in: 46 -- 
  out: 212 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1197):
  state_no: 133
  in: 47 -- 
  out: 216 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1198):
  state_no: 133
  in: 48 -- 
  out: 217 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1199):
  state_no: 133
  in: 57 -- 
  out: 213 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1200):
  state_no: 133
  in: 75 -- 
  out: 208 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1201):
  state_no: 133
  in: 76 -- 
  out: 214 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(1202):
  state_no: 134
  in: 2 -- 
  out: 118 -- 
  target: 134
  final_state: 0
  start_state: 0
Elem(1203):
  state_no: 134
  in: 29 -- 
  out: 129 -- 
  target: 89
  final_state: 0
  start_state: 0
Elem(1204):
  state_no: 134
  in: 38 -- 
  out: 126 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(1205):
  state_no: 134
  in: 41 -- 
  out: 120 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(1206):
  state_no: 134
  in: 42 -- 
  out: 121 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(1207):
  state_no: 134
  in: 43 -- 
  out: 122 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(1208):
  state_no: 134
  in: 46 -- 
  out: 123 -- 
  target: 134
  final_state: 0
  start_state: 0
Elem(1209):
  state_no: 134
  in: 47 -- 
  out: 127 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(1210):
  state_no: 134
  in: 48 -- 
  out: 128 -- 
  target: 80
  final_state: 0
  start_state: 0
Elem(1211):
  state_no: 134
  in: 57 -- 
  out: 124 -- 
  target: 134
  final_state: 0
  start_state: 0
Elem(1212):
  state_no: 134
  in: 75 -- 
  out: 119 -- 
  target: 134
  final_state: 0
  start_state: 0
Elem(1213):
  state_no: 134
  in: 76 -- 
  out: 86 -- 
  target: 134
  final_state: 0
  start_state: 0
Elem(1214):
  state_no: 135
  in: 2 -- 
  out: 256 -- 
  target: 135
  final_state: 0
  start_state: 0
Elem(1215):
  state_no: 135
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(1216):
  state_no: 135
  in: 38 -- 
  out: 264 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1217):
  state_no: 135
  in: 41 -- 
  out: 258 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1218):
  state_no: 135
  in: 42 -- 
  out: 259 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1219):
  state_no: 135
  in: 43 -- 
  out: 260 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1220):
  state_no: 135
  in: 46 -- 
  out: 261 -- 
  target: 135
  final_state: 0
  start_state: 0
Elem(1221):
  state_no: 135
  in: 47 -- 
  out: 265 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1222):
  state_no: 135
  in: 48 -- 
  out: 266 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1223):
  state_no: 135
  in: 57 -- 
  out: 262 -- 
  target: 150
  final_state: 0
  start_state: 0
Elem(1224):
  state_no: 135
  in: 75 -- 
  out: 208 -- 
  target: 135
  final_state: 0
  start_state: 0
Elem(1225):
  state_no: 135
  in: 76 -- 
  out: 263 -- 
  target: 135
  final_state: 0
  start_state: 0
Elem(1226):
  state_no: 136
  in: 2 -- 
  out: 297 -- 
  target: 136
  final_state: 0
  start_state: 0
Elem(1227):
  state_no: 136
  in: 29 -- 
  out: 218 -- 
  target: 100
  final_state: 0
  start_state: 0
Elem(1228):
  state_no: 136
  in: 38 -- 
  out: 305 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1229):
  state_no: 136
  in: 41 -- 
  out: 299 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1230):
  state_no: 136
  in: 42 -- 
  out: 300 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1231):
  state_no: 136
  in: 43 -- 
  out: 301 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1232):
  state_no: 136
  in: 46 -- 
  out: 302 -- 
  target: 136
  final_state: 0
  start_state: 0
Elem(1233):
  state_no: 136
  in: 47 -- 
  out: 306 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1234):
  state_no: 136
  in: 48 -- 
  out: 307 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1235):
  state_no: 136
  in: 57 -- 
  out: 262 -- 
  target: 136
  final_state: 0
  start_state: 0
Elem(1236):
  state_no: 136
  in: 75 -- 
  out: 298 -- 
  target: 136
  final_state: 0
  start_state: 0
Elem(1237):
  state_no: 136
  in: 76 -- 
  out: 86 -- 
  target: 93
  final_state: 0
  start_state: 0
Elem(1238):
  state_no: 137
  in: 2 -- 
  out: 256 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1239):
  state_no: 137
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(1240):
  state_no: 137
  in: 38 -- 
  out: 264 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1241):
  state_no: 137
  in: 41 -- 
  out: 258 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1242):
  state_no: 137
  in: 42 -- 
  out: 259 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1243):
  state_no: 137
  in: 43 -- 
  out: 260 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1244):
  state_no: 137
  in: 46 -- 
  out: 261 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1245):
  state_no: 137
  in: 47 -- 
  out: 265 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1246):
  state_no: 137
  in: 48 -- 
  out: 266 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1247):
  state_no: 137
  in: 57 -- 
  out: 262 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1248):
  state_no: 137
  in: 75 -- 
  out: 208 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1249):
  state_no: 137
  in: 76 -- 
  out: 263 -- 
  target: 137
  final_state: 0
  start_state: 0
Elem(1250):
  state_no: 138
  in: 29 -- 
  out: 27 -- 
  target: 152
  final_state: 0
  start_state: 0
Elem(1251):
  state_no: 139
  in: 2 -- 
  out: 79 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1252):
  state_no: 139
  in: 29 -- 
  out: 40 -- 
  target: 129
  final_state: 0
  start_state: 0
Elem(1253):
  state_no: 139
  in: 38 -- 
  out: 87 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1254):
  state_no: 139
  in: 41 -- 
  out: 81 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1255):
  state_no: 139
  in: 42 -- 
  out: 82 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1256):
  state_no: 139
  in: 43 -- 
  out: 83 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1257):
  state_no: 139
  in: 46 -- 
  out: 84 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1258):
  state_no: 139
  in: 47 -- 
  out: 88 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1259):
  state_no: 139
  in: 48 -- 
  out: 89 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1260):
  state_no: 139
  in: 57 -- 
  out: 47 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1261):
  state_no: 139
  in: 75 -- 
  out: 80 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1262):
  state_no: 139
  in: 76 -- 
  out: 86 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1263):
  state_no: 140
  in: 2 -- 
  out: 41 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1264):
  state_no: 140
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1265):
  state_no: 140
  in: 38 -- 
  out: 49 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1266):
  state_no: 140
  in: 41 -- 
  out: 43 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1267):
  state_no: 140
  in: 42 -- 
  out: 44 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1268):
  state_no: 140
  in: 43 -- 
  out: 45 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1269):
  state_no: 140
  in: 46 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(1270):
  state_no: 140
  in: 47 -- 
  out: 50 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1271):
  state_no: 140
  in: 48 -- 
  out: 51 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1272):
  state_no: 140
  in: 57 -- 
  out: 47 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1273):
  state_no: 140
  in: 75 -- 
  out: 30 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1274):
  state_no: 140
  in: 76 -- 
  out: 48 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1275):
  state_no: 141
  in: 2 -- 
  out: 118 -- 
  target: 141
  final_state: 0
  start_state: 0
Elem(1276):
  state_no: 141
  in: 29 -- 
  out: 129 -- 
  target: 156
  final_state: 0
  start_state: 0
Elem(1277):
  state_no: 141
  in: 38 -- 
  out: 126 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1278):
  state_no: 141
  in: 41 -- 
  out: 120 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1279):
  state_no: 141
  in: 42 -- 
  out: 121 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1280):
  state_no: 141
  in: 43 -- 
  out: 122 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1281):
  state_no: 141
  in: 46 -- 
  out: 123 -- 
  target: 141
  final_state: 0
  start_state: 0
Elem(1282):
  state_no: 141
  in: 47 -- 
  out: 127 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1283):
  state_no: 141
  in: 48 -- 
  out: 128 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1284):
  state_no: 141
  in: 57 -- 
  out: 124 -- 
  target: 141
  final_state: 0
  start_state: 0
Elem(1285):
  state_no: 141
  in: 75 -- 
  out: 119 -- 
  target: 141
  final_state: 0
  start_state: 0
Elem(1286):
  state_no: 141
  in: 76 -- 
  out: 86 -- 
  target: 141
  final_state: 0
  start_state: 0
Elem(1287):
  state_no: 142
  in: 2 -- 
  out: 79 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1288):
  state_no: 142
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1289):
  state_no: 142
  in: 38 -- 
  out: 87 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1290):
  state_no: 142
  in: 41 -- 
  out: 81 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1291):
  state_no: 142
  in: 42 -- 
  out: 82 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1292):
  state_no: 142
  in: 43 -- 
  out: 83 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1293):
  state_no: 142
  in: 46 -- 
  out: 84 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(1294):
  state_no: 142
  in: 47 -- 
  out: 88 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1295):
  state_no: 142
  in: 48 -- 
  out: 89 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1296):
  state_no: 142
  in: 57 -- 
  out: 47 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1297):
  state_no: 142
  in: 75 -- 
  out: 80 -- 
  target: 142
  final_state: 0
  start_state: 0
Elem(1298):
  state_no: 142
  in: 76 -- 
  out: 86 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1299):
  state_no: 143
  in: 3 -- 
  out: 28 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1300):
  state_no: 143
  in: 8 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(1301):
  state_no: 144
  in: 2 -- 
  out: 29 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1302):
  state_no: 144
  in: 29 -- 
  out: 40 -- 
  target: 129
  final_state: 0
  start_state: 0
Elem(1303):
  state_no: 144
  in: 38 -- 
  out: 37 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1304):
  state_no: 144
  in: 41 -- 
  out: 31 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1305):
  state_no: 144
  in: 42 -- 
  out: 32 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1306):
  state_no: 144
  in: 43 -- 
  out: 33 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1307):
  state_no: 144
  in: 46 -- 
  out: 34 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1308):
  state_no: 144
  in: 47 -- 
  out: 38 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1309):
  state_no: 144
  in: 48 -- 
  out: 39 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1310):
  state_no: 144
  in: 57 -- 
  out: 35 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1311):
  state_no: 144
  in: 75 -- 
  out: 30 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1312):
  state_no: 144
  in: 76 -- 
  out: 36 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1313):
  state_no: 145
  in: 10 -- 
  out: 8 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1314):
  state_no: 146
  in: 2 -- 
  out: 29 -- 
  target: 146
  final_state: 0
  start_state: 0
Elem(1315):
  state_no: 146
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1316):
  state_no: 146
  in: 38 -- 
  out: 37 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1317):
  state_no: 146
  in: 41 -- 
  out: 31 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1318):
  state_no: 146
  in: 42 -- 
  out: 32 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1319):
  state_no: 146
  in: 43 -- 
  out: 33 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1320):
  state_no: 146
  in: 46 -- 
  out: 34 -- 
  target: 146
  final_state: 0
  start_state: 0
Elem(1321):
  state_no: 146
  in: 47 -- 
  out: 38 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1322):
  state_no: 146
  in: 48 -- 
  out: 39 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1323):
  state_no: 146
  in: 57 -- 
  out: 35 -- 
  target: 146
  final_state: 0
  start_state: 0
Elem(1324):
  state_no: 146
  in: 75 -- 
  out: 30 -- 
  target: 161
  final_state: 0
  start_state: 0
Elem(1325):
  state_no: 146
  in: 76 -- 
  out: 36 -- 
  target: 146
  final_state: 0
  start_state: 0
Elem(1326):
  state_no: 147
  in: 2 -- 
  out: 41 -- 
  target: 147
  final_state: 0
  start_state: 0
Elem(1327):
  state_no: 147
  in: 29 -- 
  out: 40 -- 
  target: 116
  final_state: 0
  start_state: 0
Elem(1328):
  state_no: 147
  in: 38 -- 
  out: 49 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1329):
  state_no: 147
  in: 41 -- 
  out: 43 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1330):
  state_no: 147
  in: 42 -- 
  out: 44 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1331):
  state_no: 147
  in: 43 -- 
  out: 45 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1332):
  state_no: 147
  in: 46 -- 
  out: 46 -- 
  target: 147
  final_state: 0
  start_state: 0
Elem(1333):
  state_no: 147
  in: 47 -- 
  out: 50 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1334):
  state_no: 147
  in: 48 -- 
  out: 51 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1335):
  state_no: 147
  in: 57 -- 
  out: 47 -- 
  target: 162
  final_state: 0
  start_state: 0
Elem(1336):
  state_no: 147
  in: 75 -- 
  out: 30 -- 
  target: 147
  final_state: 0
  start_state: 0
Elem(1337):
  state_no: 147
  in: 76 -- 
  out: 48 -- 
  target: 147
  final_state: 0
  start_state: 0
Elem(1338):
  state_no: 148
  in: 2 -- 
  out: 29 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1339):
  state_no: 148
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1340):
  state_no: 148
  in: 38 -- 
  out: 37 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1341):
  state_no: 148
  in: 41 -- 
  out: 31 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1342):
  state_no: 148
  in: 42 -- 
  out: 32 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1343):
  state_no: 148
  in: 43 -- 
  out: 33 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1344):
  state_no: 148
  in: 46 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(1345):
  state_no: 148
  in: 47 -- 
  out: 38 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1346):
  state_no: 148
  in: 48 -- 
  out: 39 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1347):
  state_no: 148
  in: 57 -- 
  out: 35 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1348):
  state_no: 148
  in: 75 -- 
  out: 30 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1349):
  state_no: 148
  in: 76 -- 
  out: 36 -- 
  target: 148
  final_state: 0
  start_state: 0
Elem(1350):
  state_no: 149
  in: 2 -- 
  out: 256 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1351):
  state_no: 149
  in: 29 -- 
  out: 218 -- 
  target: 118
  final_state: 0
  start_state: 0
Elem(1352):
  state_no: 149
  in: 38 -- 
  out: 264 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1353):
  state_no: 149
  in: 41 -- 
  out: 258 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1354):
  state_no: 149
  in: 42 -- 
  out: 259 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1355):
  state_no: 149
  in: 43 -- 
  out: 260 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(1356):
  state_no: 149
  in: 46 -- 
  out: 261 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1357):
  state_no: 149
  in: 47 -- 
  out: 265 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1358):
  state_no: 149
  in: 48 -- 
  out: 266 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1359):
  state_no: 149
  in: 57 -- 
  out: 262 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1360):
  state_no: 149
  in: 75 -- 
  out: 208 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1361):
  state_no: 149
  in: 76 -- 
  out: 263 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(1362):
  state_no: 150
  in: 2 -- 
  out: 297 -- 
  target: 150
  final_state: 0
  start_state: 0
Elem(1363):
  state_no: 150
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(1364):
  state_no: 150
  in: 38 -- 
  out: 305 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1365):
  state_no: 150
  in: 41 -- 
  out: 299 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1366):
  state_no: 150
  in: 42 -- 
  out: 300 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1367):
  state_no: 150
  in: 43 -- 
  out: 301 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1368):
  state_no: 150
  in: 46 -- 
  out: 302 -- 
  target: 150
  final_state: 0
  start_state: 0
Elem(1369):
  state_no: 150
  in: 47 -- 
  out: 306 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1370):
  state_no: 150
  in: 48 -- 
  out: 307 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1371):
  state_no: 150
  in: 57 -- 
  out: 262 -- 
  target: 150
  final_state: 0
  start_state: 0
Elem(1372):
  state_no: 150
  in: 75 -- 
  out: 298 -- 
  target: 150
  final_state: 0
  start_state: 0
Elem(1373):
  state_no: 150
  in: 76 -- 
  out: 86 -- 
  target: 102
  final_state: 0
  start_state: 0
Elem(1374):
  state_no: 151
  in: 2 -- 
  out: 297 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1375):
  state_no: 151
  in: 29 -- 
  out: 218 -- 
  target: 107
  final_state: 0
  start_state: 0
Elem(1376):
  state_no: 151
  in: 38 -- 
  out: 305 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1377):
  state_no: 151
  in: 41 -- 
  out: 299 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1378):
  state_no: 151
  in: 42 -- 
  out: 300 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1379):
  state_no: 151
  in: 43 -- 
  out: 301 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1380):
  state_no: 151
  in: 46 -- 
  out: 302 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1381):
  state_no: 151
  in: 47 -- 
  out: 306 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1382):
  state_no: 151
  in: 48 -- 
  out: 307 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1383):
  state_no: 151
  in: 57 -- 
  out: 262 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1384):
  state_no: 151
  in: 75 -- 
  out: 298 -- 
  target: 151
  final_state: 0
  start_state: 0
Elem(1385):
  state_no: 151
  in: 76 -- 
  out: 86 -- 
  target: 103
  final_state: 0
  start_state: 0
Elem(1386):
  state_no: 152
  in: 3 -- 
  out: 28 -- 
  target: 165
  final_state: 0
  start_state: 0
Elem(1387):
  state_no: 153
  in: 2 -- 
  out: 118 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1388):
  state_no: 153
  in: 29 -- 
  out: 129 -- 
  target: 167
  final_state: 0
  start_state: 0
Elem(1389):
  state_no: 153
  in: 38 -- 
  out: 126 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1390):
  state_no: 153
  in: 41 -- 
  out: 120 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1391):
  state_no: 153
  in: 42 -- 
  out: 121 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1392):
  state_no: 153
  in: 43 -- 
  out: 122 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1393):
  state_no: 153
  in: 46 -- 
  out: 123 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1394):
  state_no: 153
  in: 47 -- 
  out: 127 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1395):
  state_no: 153
  in: 48 -- 
  out: 128 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1396):
  state_no: 153
  in: 57 -- 
  out: 124 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1397):
  state_no: 153
  in: 75 -- 
  out: 119 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1398):
  state_no: 153
  in: 76 -- 
  out: 86 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1399):
  state_no: 154
  in: 2 -- 
  out: 79 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1400):
  state_no: 154
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1401):
  state_no: 154
  in: 38 -- 
  out: 87 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1402):
  state_no: 154
  in: 41 -- 
  out: 81 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1403):
  state_no: 154
  in: 42 -- 
  out: 82 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1404):
  state_no: 154
  in: 43 -- 
  out: 83 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1405):
  state_no: 154
  in: 46 -- 
  out: 84 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(1406):
  state_no: 154
  in: 47 -- 
  out: 88 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1407):
  state_no: 154
  in: 48 -- 
  out: 89 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1408):
  state_no: 154
  in: 57 -- 
  out: 47 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1409):
  state_no: 154
  in: 75 -- 
  out: 80 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1410):
  state_no: 154
  in: 76 -- 
  out: 86 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1411):
  state_no: 155
  in: 2 -- 
  out: 118 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1412):
  state_no: 155
  in: 29 -- 
  out: 129 -- 
  target: 168
  final_state: 0
  start_state: 0
Elem(1413):
  state_no: 155
  in: 38 -- 
  out: 126 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1414):
  state_no: 155
  in: 41 -- 
  out: 120 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1415):
  state_no: 155
  in: 42 -- 
  out: 121 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1416):
  state_no: 155
  in: 43 -- 
  out: 122 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1417):
  state_no: 155
  in: 46 -- 
  out: 123 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(1418):
  state_no: 155
  in: 47 -- 
  out: 127 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1419):
  state_no: 155
  in: 48 -- 
  out: 128 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1420):
  state_no: 155
  in: 57 -- 
  out: 124 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1421):
  state_no: 155
  in: 75 -- 
  out: 119 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1422):
  state_no: 155
  in: 76 -- 
  out: 86 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(1423):
  state_no: 156
  in: 3 -- 
  out: 167 -- 
  target: 169
  final_state: 0
  start_state: 0
Elem(1424):
  state_no: 156
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(1425):
  state_no: 157
  in: 2 -- 
  out: 29 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1426):
  state_no: 157
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1427):
  state_no: 157
  in: 38 -- 
  out: 37 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1428):
  state_no: 157
  in: 41 -- 
  out: 31 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1429):
  state_no: 157
  in: 42 -- 
  out: 32 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1430):
  state_no: 157
  in: 43 -- 
  out: 33 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1431):
  state_no: 157
  in: 46 -- 
  out: 34 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1432):
  state_no: 157
  in: 47 -- 
  out: 38 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1433):
  state_no: 157
  in: 48 -- 
  out: 39 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1434):
  state_no: 157
  in: 57 -- 
  out: 35 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1435):
  state_no: 157
  in: 75 -- 
  out: 30 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1436):
  state_no: 157
  in: 76 -- 
  out: 36 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1437):
  state_no: 158
  in: 2 -- 
  out: 41 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1438):
  state_no: 158
  in: 29 -- 
  out: 40 -- 
  target: 129
  final_state: 0
  start_state: 0
Elem(1439):
  state_no: 158
  in: 38 -- 
  out: 49 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1440):
  state_no: 158
  in: 41 -- 
  out: 43 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1441):
  state_no: 158
  in: 42 -- 
  out: 44 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1442):
  state_no: 158
  in: 43 -- 
  out: 45 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1443):
  state_no: 158
  in: 46 -- 
  out: 46 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1444):
  state_no: 158
  in: 47 -- 
  out: 50 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1445):
  state_no: 158
  in: 48 -- 
  out: 51 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1446):
  state_no: 158
  in: 57 -- 
  out: 47 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1447):
  state_no: 158
  in: 75 -- 
  out: 30 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1448):
  state_no: 158
  in: 76 -- 
  out: 48 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1449):
  state_no: 159
  in: 2 -- 
  out: 29 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1450):
  state_no: 159
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1451):
  state_no: 159
  in: 38 -- 
  out: 37 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1452):
  state_no: 159
  in: 41 -- 
  out: 31 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1453):
  state_no: 159
  in: 42 -- 
  out: 32 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1454):
  state_no: 159
  in: 43 -- 
  out: 33 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1455):
  state_no: 159
  in: 46 -- 
  out: 34 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(1456):
  state_no: 159
  in: 47 -- 
  out: 38 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1457):
  state_no: 159
  in: 48 -- 
  out: 39 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1458):
  state_no: 159
  in: 57 -- 
  out: 35 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1459):
  state_no: 159
  in: 75 -- 
  out: 30 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1460):
  state_no: 159
  in: 76 -- 
  out: 36 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1461):
  state_no: 160
  in: 2 -- 
  out: 15 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1462):
  state_no: 160
  in: 7 -- 
  out: 20 -- 
  target: 173
  final_state: 0
  start_state: 0
Elem(1463):
  state_no: 160
  in: 38 -- 
  out: 24 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1464):
  state_no: 160
  in: 41 -- 
  out: 17 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1465):
  state_no: 160
  in: 42 -- 
  out: 18 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1466):
  state_no: 160
  in: 43 -- 
  out: 19 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1467):
  state_no: 160
  in: 46 -- 
  out: 21 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1468):
  state_no: 160
  in: 47 -- 
  out: 25 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1469):
  state_no: 160
  in: 48 -- 
  out: 26 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1470):
  state_no: 160
  in: 57 -- 
  out: 22 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1471):
  state_no: 160
  in: 75 -- 
  out: 16 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1472):
  state_no: 160
  in: 76 -- 
  out: 23 -- 
  target: 160
  final_state: 0
  start_state: 0
Elem(1473):
  state_no: 161
  in: 2 -- 
  out: 41 -- 
  target: 161
  final_state: 0
  start_state: 0
Elem(1474):
  state_no: 161
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1475):
  state_no: 161
  in: 38 -- 
  out: 49 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1476):
  state_no: 161
  in: 41 -- 
  out: 43 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1477):
  state_no: 161
  in: 42 -- 
  out: 44 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1478):
  state_no: 161
  in: 43 -- 
  out: 45 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1479):
  state_no: 161
  in: 46 -- 
  out: 46 -- 
  target: 161
  final_state: 0
  start_state: 0
Elem(1480):
  state_no: 161
  in: 47 -- 
  out: 50 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1481):
  state_no: 161
  in: 48 -- 
  out: 51 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1482):
  state_no: 161
  in: 57 -- 
  out: 47 -- 
  target: 174
  final_state: 0
  start_state: 0
Elem(1483):
  state_no: 161
  in: 75 -- 
  out: 30 -- 
  target: 161
  final_state: 0
  start_state: 0
Elem(1484):
  state_no: 161
  in: 76 -- 
  out: 48 -- 
  target: 161
  final_state: 0
  start_state: 0
Elem(1485):
  state_no: 162
  in: 2 -- 
  out: 79 -- 
  target: 162
  final_state: 0
  start_state: 0
Elem(1486):
  state_no: 162
  in: 29 -- 
  out: 40 -- 
  target: 116
  final_state: 0
  start_state: 0
Elem(1487):
  state_no: 162
  in: 38 -- 
  out: 87 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1488):
  state_no: 162
  in: 41 -- 
  out: 81 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1489):
  state_no: 162
  in: 42 -- 
  out: 82 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1490):
  state_no: 162
  in: 43 -- 
  out: 83 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1491):
  state_no: 162
  in: 46 -- 
  out: 84 -- 
  target: 162
  final_state: 0
  start_state: 0
Elem(1492):
  state_no: 162
  in: 47 -- 
  out: 88 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1493):
  state_no: 162
  in: 48 -- 
  out: 89 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1494):
  state_no: 162
  in: 57 -- 
  out: 47 -- 
  target: 162
  final_state: 0
  start_state: 0
Elem(1495):
  state_no: 162
  in: 75 -- 
  out: 80 -- 
  target: 162
  final_state: 0
  start_state: 0
Elem(1496):
  state_no: 162
  in: 76 -- 
  out: 86 -- 
  target: 175
  final_state: 0
  start_state: 0
Elem(1497):
  state_no: 163
  in: 2 -- 
  out: 41 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1498):
  state_no: 163
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1499):
  state_no: 163
  in: 38 -- 
  out: 49 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1500):
  state_no: 163
  in: 41 -- 
  out: 43 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1501):
  state_no: 163
  in: 42 -- 
  out: 44 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1502):
  state_no: 163
  in: 43 -- 
  out: 45 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1503):
  state_no: 163
  in: 46 -- 
  out: 46 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(1504):
  state_no: 163
  in: 47 -- 
  out: 50 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1505):
  state_no: 163
  in: 48 -- 
  out: 51 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1506):
  state_no: 163
  in: 57 -- 
  out: 47 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1507):
  state_no: 163
  in: 75 -- 
  out: 30 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1508):
  state_no: 163
  in: 76 -- 
  out: 48 -- 
  target: 163
  final_state: 0
  start_state: 0
Elem(1509):
  state_no: 164
  in: 2 -- 
  out: 297 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1510):
  state_no: 164
  in: 29 -- 
  out: 218 -- 
  target: 118
  final_state: 0
  start_state: 0
Elem(1511):
  state_no: 164
  in: 38 -- 
  out: 305 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1512):
  state_no: 164
  in: 41 -- 
  out: 299 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1513):
  state_no: 164
  in: 42 -- 
  out: 300 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1514):
  state_no: 164
  in: 43 -- 
  out: 301 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(1515):
  state_no: 164
  in: 46 -- 
  out: 302 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1516):
  state_no: 164
  in: 47 -- 
  out: 306 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1517):
  state_no: 164
  in: 48 -- 
  out: 307 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1518):
  state_no: 164
  in: 57 -- 
  out: 262 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1519):
  state_no: 164
  in: 75 -- 
  out: 298 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(1520):
  state_no: 164
  in: 76 -- 
  out: 86 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(1521):
  state_no: 165
  in: 2 -- 
  out: 29 -- 
  target: 165
  final_state: 0
  start_state: 0
Elem(1522):
  state_no: 165
  in: 29 -- 
  out: 40 -- 
  target: 179
  final_state: 0
  start_state: 0
Elem(1523):
  state_no: 165
  in: 38 -- 
  out: 37 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1524):
  state_no: 165
  in: 41 -- 
  out: 31 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1525):
  state_no: 165
  in: 42 -- 
  out: 32 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1526):
  state_no: 165
  in: 43 -- 
  out: 33 -- 
  target: 114
  final_state: 0
  start_state: 0
Elem(1527):
  state_no: 165
  in: 46 -- 
  out: 34 -- 
  target: 165
  final_state: 0
  start_state: 0
Elem(1528):
  state_no: 165
  in: 47 -- 
  out: 38 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1529):
  state_no: 165
  in: 48 -- 
  out: 39 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1530):
  state_no: 165
  in: 57 -- 
  out: 35 -- 
  target: 165
  final_state: 0
  start_state: 0
Elem(1531):
  state_no: 165
  in: 75 -- 
  out: 30 -- 
  target: 177
  final_state: 0
  start_state: 0
Elem(1532):
  state_no: 165
  in: 76 -- 
  out: 36 -- 
  target: 165
  final_state: 0
  start_state: 0
Elem(1533):
  state_no: 166
  in: 2 -- 
  out: 118 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1534):
  state_no: 166
  in: 29 -- 
  out: 129 -- 
  target: 180
  final_state: 0
  start_state: 0
Elem(1535):
  state_no: 166
  in: 38 -- 
  out: 126 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1536):
  state_no: 166
  in: 41 -- 
  out: 120 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1537):
  state_no: 166
  in: 42 -- 
  out: 121 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1538):
  state_no: 166
  in: 43 -- 
  out: 122 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1539):
  state_no: 166
  in: 46 -- 
  out: 123 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(1540):
  state_no: 166
  in: 47 -- 
  out: 127 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1541):
  state_no: 166
  in: 48 -- 
  out: 128 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1542):
  state_no: 166
  in: 57 -- 
  out: 124 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1543):
  state_no: 166
  in: 75 -- 
  out: 119 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1544):
  state_no: 166
  in: 76 -- 
  out: 86 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(1545):
  state_no: 167
  in: 3 -- 
  out: 167 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1546):
  state_no: 167
  in: 8 -- 
  out: 66 -- 
  target: 145
  final_state: 0
  start_state: 0
Elem(1547):
  state_no: 168
  in: 3 -- 
  out: 167 -- 
  target: 182
  final_state: 0
  start_state: 0
Elem(1548):
  state_no: 168
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(1549):
  state_no: 169
  in: 2 -- 
  out: 207 -- 
  target: 169
  final_state: 0
  start_state: 0
Elem(1550):
  state_no: 169
  in: 29 -- 
  out: 218 -- 
  target: 185
  final_state: 0
  start_state: 0
Elem(1551):
  state_no: 169
  in: 38 -- 
  out: 215 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1552):
  state_no: 169
  in: 41 -- 
  out: 209 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1553):
  state_no: 169
  in: 42 -- 
  out: 210 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1554):
  state_no: 169
  in: 43 -- 
  out: 211 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1555):
  state_no: 169
  in: 46 -- 
  out: 212 -- 
  target: 169
  final_state: 0
  start_state: 0
Elem(1556):
  state_no: 169
  in: 47 -- 
  out: 216 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1557):
  state_no: 169
  in: 48 -- 
  out: 217 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1558):
  state_no: 169
  in: 57 -- 
  out: 213 -- 
  target: 169
  final_state: 0
  start_state: 0
Elem(1559):
  state_no: 169
  in: 75 -- 
  out: 208 -- 
  target: 183
  final_state: 0
  start_state: 0
Elem(1560):
  state_no: 169
  in: 76 -- 
  out: 214 -- 
  target: 169
  final_state: 0
  start_state: 0
Elem(1561):
  state_no: 170
  in: 2 -- 
  out: 41 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1562):
  state_no: 170
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1563):
  state_no: 170
  in: 38 -- 
  out: 49 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1564):
  state_no: 170
  in: 41 -- 
  out: 43 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1565):
  state_no: 170
  in: 42 -- 
  out: 44 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1566):
  state_no: 170
  in: 43 -- 
  out: 45 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1567):
  state_no: 170
  in: 46 -- 
  out: 46 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1568):
  state_no: 170
  in: 47 -- 
  out: 50 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1569):
  state_no: 170
  in: 48 -- 
  out: 51 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1570):
  state_no: 170
  in: 57 -- 
  out: 47 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1571):
  state_no: 170
  in: 75 -- 
  out: 30 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1572):
  state_no: 170
  in: 76 -- 
  out: 48 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(1573):
  state_no: 171
  in: 2 -- 
  out: 79 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1574):
  state_no: 171
  in: 29 -- 
  out: 40 -- 
  target: 129
  final_state: 0
  start_state: 0
Elem(1575):
  state_no: 171
  in: 38 -- 
  out: 87 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1576):
  state_no: 171
  in: 41 -- 
  out: 81 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1577):
  state_no: 171
  in: 42 -- 
  out: 82 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1578):
  state_no: 171
  in: 43 -- 
  out: 83 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1579):
  state_no: 171
  in: 46 -- 
  out: 84 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1580):
  state_no: 171
  in: 47 -- 
  out: 88 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1581):
  state_no: 171
  in: 48 -- 
  out: 89 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1582):
  state_no: 171
  in: 57 -- 
  out: 47 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1583):
  state_no: 171
  in: 75 -- 
  out: 80 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(1584):
  state_no: 171
  in: 76 -- 
  out: 86 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1585):
  state_no: 172
  in: 2 -- 
  out: 41 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1586):
  state_no: 172
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1587):
  state_no: 172
  in: 38 -- 
  out: 49 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1588):
  state_no: 172
  in: 41 -- 
  out: 43 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1589):
  state_no: 172
  in: 42 -- 
  out: 44 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1590):
  state_no: 172
  in: 43 -- 
  out: 45 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1591):
  state_no: 172
  in: 46 -- 
  out: 46 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(1592):
  state_no: 172
  in: 47 -- 
  out: 50 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1593):
  state_no: 172
  in: 48 -- 
  out: 51 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1594):
  state_no: 172
  in: 57 -- 
  out: 47 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1595):
  state_no: 172
  in: 75 -- 
  out: 30 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1596):
  state_no: 172
  in: 76 -- 
  out: 48 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(1597):
  state_no: 173
  in: 29 -- 
  out: 27 -- 
  target: 189
  final_state: 0
  start_state: 0
Elem(1598):
  state_no: 174
  in: 2 -- 
  out: 79 -- 
  target: 174
  final_state: 0
  start_state: 0
Elem(1599):
  state_no: 174
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1600):
  state_no: 174
  in: 38 -- 
  out: 87 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1601):
  state_no: 174
  in: 41 -- 
  out: 81 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1602):
  state_no: 174
  in: 42 -- 
  out: 82 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1603):
  state_no: 174
  in: 43 -- 
  out: 83 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1604):
  state_no: 174
  in: 46 -- 
  out: 84 -- 
  target: 174
  final_state: 0
  start_state: 0
Elem(1605):
  state_no: 174
  in: 47 -- 
  out: 88 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1606):
  state_no: 174
  in: 48 -- 
  out: 89 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1607):
  state_no: 174
  in: 57 -- 
  out: 47 -- 
  target: 174
  final_state: 0
  start_state: 0
Elem(1608):
  state_no: 174
  in: 75 -- 
  out: 80 -- 
  target: 174
  final_state: 0
  start_state: 0
Elem(1609):
  state_no: 174
  in: 76 -- 
  out: 86 -- 
  target: 190
  final_state: 0
  start_state: 0
Elem(1610):
  state_no: 175
  in: 2 -- 
  out: 118 -- 
  target: 175
  final_state: 0
  start_state: 0
Elem(1611):
  state_no: 175
  in: 29 -- 
  out: 129 -- 
  target: 185
  final_state: 0
  start_state: 0
Elem(1612):
  state_no: 175
  in: 38 -- 
  out: 126 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1613):
  state_no: 175
  in: 41 -- 
  out: 120 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1614):
  state_no: 175
  in: 42 -- 
  out: 121 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1615):
  state_no: 175
  in: 43 -- 
  out: 122 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1616):
  state_no: 175
  in: 46 -- 
  out: 123 -- 
  target: 175
  final_state: 0
  start_state: 0
Elem(1617):
  state_no: 175
  in: 47 -- 
  out: 127 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1618):
  state_no: 175
  in: 48 -- 
  out: 128 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1619):
  state_no: 175
  in: 57 -- 
  out: 124 -- 
  target: 175
  final_state: 0
  start_state: 0
Elem(1620):
  state_no: 175
  in: 75 -- 
  out: 119 -- 
  target: 175
  final_state: 0
  start_state: 0
Elem(1621):
  state_no: 175
  in: 76 -- 
  out: 86 -- 
  target: 175
  final_state: 0
  start_state: 0
Elem(1622):
  state_no: 176
  in: 2 -- 
  out: 79 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1623):
  state_no: 176
  in: 29 -- 
  out: 40 -- 
  target: 130
  final_state: 0
  start_state: 0
Elem(1624):
  state_no: 176
  in: 38 -- 
  out: 87 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1625):
  state_no: 176
  in: 41 -- 
  out: 81 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1626):
  state_no: 176
  in: 42 -- 
  out: 82 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1627):
  state_no: 176
  in: 43 -- 
  out: 83 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1628):
  state_no: 176
  in: 46 -- 
  out: 84 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(1629):
  state_no: 176
  in: 47 -- 
  out: 88 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1630):
  state_no: 176
  in: 48 -- 
  out: 89 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1631):
  state_no: 176
  in: 57 -- 
  out: 47 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1632):
  state_no: 176
  in: 75 -- 
  out: 80 -- 
  target: 176
  final_state: 0
  start_state: 0
Elem(1633):
  state_no: 176
  in: 76 -- 
  out: 86 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1634):
  state_no: 177
  in: 2 -- 
  out: 41 -- 
  target: 177
  final_state: 0
  start_state: 0
Elem(1635):
  state_no: 177
  in: 29 -- 
  out: 40 -- 
  target: 179
  final_state: 0
  start_state: 0
Elem(1636):
  state_no: 177
  in: 38 -- 
  out: 49 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1637):
  state_no: 177
  in: 41 -- 
  out: 43 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1638):
  state_no: 177
  in: 42 -- 
  out: 44 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1639):
  state_no: 177
  in: 43 -- 
  out: 45 -- 
  target: 125
  final_state: 0
  start_state: 0
Elem(1640):
  state_no: 177
  in: 46 -- 
  out: 46 -- 
  target: 177
  final_state: 0
  start_state: 0
Elem(1641):
  state_no: 177
  in: 47 -- 
  out: 50 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1642):
  state_no: 177
  in: 48 -- 
  out: 51 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1643):
  state_no: 177
  in: 57 -- 
  out: 47 -- 
  target: 192
  final_state: 0
  start_state: 0
Elem(1644):
  state_no: 177
  in: 75 -- 
  out: 30 -- 
  target: 177
  final_state: 0
  start_state: 0
Elem(1645):
  state_no: 177
  in: 76 -- 
  out: 48 -- 
  target: 177
  final_state: 0
  start_state: 0
Elem(1646):
  state_no: 178
  in: 2 -- 
  out: 29 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1647):
  state_no: 178
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(1648):
  state_no: 178
  in: 38 -- 
  out: 37 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1649):
  state_no: 178
  in: 41 -- 
  out: 31 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1650):
  state_no: 178
  in: 42 -- 
  out: 32 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1651):
  state_no: 178
  in: 43 -- 
  out: 33 -- 
  target: 128
  final_state: 0
  start_state: 0
Elem(1652):
  state_no: 178
  in: 46 -- 
  out: 34 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(1653):
  state_no: 178
  in: 47 -- 
  out: 38 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1654):
  state_no: 178
  in: 48 -- 
  out: 39 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1655):
  state_no: 178
  in: 57 -- 
  out: 35 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1656):
  state_no: 178
  in: 75 -- 
  out: 30 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1657):
  state_no: 178
  in: 76 -- 
  out: 36 -- 
  target: 178
  final_state: 0
  start_state: 0
Elem(1658):
  state_no: 179
  in: 3 -- 
  out: 28 -- 
  target: 195
  final_state: 0
  start_state: 0
Elem(1659):
  state_no: 179
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(1660):
  state_no: 180
  in: 3 -- 
  out: 167 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1661):
  state_no: 180
  in: 8 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(1662):
  state_no: 181
  in: 2 -- 
  out: 207 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1663):
  state_no: 181
  in: 29 -- 
  out: 218 -- 
  target: 199
  final_state: 0
  start_state: 0
Elem(1664):
  state_no: 181
  in: 38 -- 
  out: 215 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1665):
  state_no: 181
  in: 41 -- 
  out: 209 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1666):
  state_no: 181
  in: 42 -- 
  out: 210 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1667):
  state_no: 181
  in: 43 -- 
  out: 211 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1668):
  state_no: 181
  in: 46 -- 
  out: 212 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1669):
  state_no: 181
  in: 47 -- 
  out: 216 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1670):
  state_no: 181
  in: 48 -- 
  out: 217 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1671):
  state_no: 181
  in: 57 -- 
  out: 213 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1672):
  state_no: 181
  in: 75 -- 
  out: 208 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1673):
  state_no: 181
  in: 76 -- 
  out: 214 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(1674):
  state_no: 182
  in: 2 -- 
  out: 207 -- 
  target: 182
  final_state: 0
  start_state: 0
Elem(1675):
  state_no: 182
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(1676):
  state_no: 182
  in: 38 -- 
  out: 215 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1677):
  state_no: 182
  in: 41 -- 
  out: 209 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1678):
  state_no: 182
  in: 42 -- 
  out: 210 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1679):
  state_no: 182
  in: 43 -- 
  out: 211 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1680):
  state_no: 182
  in: 46 -- 
  out: 212 -- 
  target: 182
  final_state: 0
  start_state: 0
Elem(1681):
  state_no: 182
  in: 47 -- 
  out: 216 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1682):
  state_no: 182
  in: 48 -- 
  out: 217 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1683):
  state_no: 182
  in: 57 -- 
  out: 213 -- 
  target: 182
  final_state: 0
  start_state: 0
Elem(1684):
  state_no: 182
  in: 75 -- 
  out: 208 -- 
  target: 200
  final_state: 0
  start_state: 0
Elem(1685):
  state_no: 182
  in: 76 -- 
  out: 214 -- 
  target: 182
  final_state: 0
  start_state: 0
Elem(1686):
  state_no: 183
  in: 2 -- 
  out: 256 -- 
  target: 183
  final_state: 0
  start_state: 0
Elem(1687):
  state_no: 183
  in: 29 -- 
  out: 218 -- 
  target: 185
  final_state: 0
  start_state: 0
Elem(1688):
  state_no: 183
  in: 38 -- 
  out: 264 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1689):
  state_no: 183
  in: 41 -- 
  out: 258 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1690):
  state_no: 183
  in: 42 -- 
  out: 259 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1691):
  state_no: 183
  in: 43 -- 
  out: 260 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1692):
  state_no: 183
  in: 46 -- 
  out: 261 -- 
  target: 183
  final_state: 0
  start_state: 0
Elem(1693):
  state_no: 183
  in: 47 -- 
  out: 265 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1694):
  state_no: 183
  in: 48 -- 
  out: 266 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1695):
  state_no: 183
  in: 57 -- 
  out: 262 -- 
  target: 202
  final_state: 0
  start_state: 0
Elem(1696):
  state_no: 183
  in: 75 -- 
  out: 208 -- 
  target: 183
  final_state: 0
  start_state: 0
Elem(1697):
  state_no: 183
  in: 76 -- 
  out: 263 -- 
  target: 183
  final_state: 0
  start_state: 0
Elem(1698):
  state_no: 184
  in: 2 -- 
  out: 207 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1699):
  state_no: 184
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(1700):
  state_no: 184
  in: 38 -- 
  out: 215 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1701):
  state_no: 184
  in: 41 -- 
  out: 209 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1702):
  state_no: 184
  in: 42 -- 
  out: 210 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1703):
  state_no: 184
  in: 43 -- 
  out: 211 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1704):
  state_no: 184
  in: 46 -- 
  out: 212 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(1705):
  state_no: 184
  in: 47 -- 
  out: 216 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1706):
  state_no: 184
  in: 48 -- 
  out: 217 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1707):
  state_no: 184
  in: 57 -- 
  out: 213 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1708):
  state_no: 184
  in: 75 -- 
  out: 208 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1709):
  state_no: 184
  in: 76 -- 
  out: 214 -- 
  target: 184
  final_state: 0
  start_state: 0
Elem(1710):
  state_no: 185
  in: 3 -- 
  out: 167 -- 
  target: 204
  final_state: 0
  start_state: 0
Elem(1711):
  state_no: 185
  in: 8 -- 
  out: 66 -- 
  target: 111
  final_state: 0
  start_state: 0
Elem(1712):
  state_no: 186
  in: 2 -- 
  out: 79 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1713):
  state_no: 186
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1714):
  state_no: 186
  in: 38 -- 
  out: 87 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1715):
  state_no: 186
  in: 41 -- 
  out: 81 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1716):
  state_no: 186
  in: 42 -- 
  out: 82 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1717):
  state_no: 186
  in: 43 -- 
  out: 83 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1718):
  state_no: 186
  in: 46 -- 
  out: 84 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1719):
  state_no: 186
  in: 47 -- 
  out: 88 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1720):
  state_no: 186
  in: 48 -- 
  out: 89 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1721):
  state_no: 186
  in: 57 -- 
  out: 47 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1722):
  state_no: 186
  in: 75 -- 
  out: 80 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(1723):
  state_no: 186
  in: 76 -- 
  out: 86 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1724):
  state_no: 187
  in: 2 -- 
  out: 118 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1725):
  state_no: 187
  in: 29 -- 
  out: 129 -- 
  target: 199
  final_state: 0
  start_state: 0
Elem(1726):
  state_no: 187
  in: 38 -- 
  out: 126 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1727):
  state_no: 187
  in: 41 -- 
  out: 120 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1728):
  state_no: 187
  in: 42 -- 
  out: 121 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1729):
  state_no: 187
  in: 43 -- 
  out: 122 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1730):
  state_no: 187
  in: 46 -- 
  out: 123 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1731):
  state_no: 187
  in: 47 -- 
  out: 127 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1732):
  state_no: 187
  in: 48 -- 
  out: 128 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1733):
  state_no: 187
  in: 57 -- 
  out: 124 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1734):
  state_no: 187
  in: 75 -- 
  out: 119 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1735):
  state_no: 187
  in: 76 -- 
  out: 86 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(1736):
  state_no: 188
  in: 2 -- 
  out: 79 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1737):
  state_no: 188
  in: 29 -- 
  out: 40 -- 
  target: 143
  final_state: 0
  start_state: 0
Elem(1738):
  state_no: 188
  in: 38 -- 
  out: 87 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1739):
  state_no: 188
  in: 41 -- 
  out: 81 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1740):
  state_no: 188
  in: 42 -- 
  out: 82 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1741):
  state_no: 188
  in: 43 -- 
  out: 83 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1742):
  state_no: 188
  in: 46 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(1743):
  state_no: 188
  in: 47 -- 
  out: 88 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1744):
  state_no: 188
  in: 48 -- 
  out: 89 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1745):
  state_no: 188
  in: 57 -- 
  out: 47 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1746):
  state_no: 188
  in: 75 -- 
  out: 80 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(1747):
  state_no: 188
  in: 76 -- 
  out: 86 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1748):
  state_no: 189
  in: 3 -- 
  out: 282 -- 
  target: 207
  final_state: 0
  start_state: 0
Elem(1749):
  state_no: 190
  in: 2 -- 
  out: 118 -- 
  target: 190
  final_state: 0
  start_state: 0
Elem(1750):
  state_no: 190
  in: 29 -- 
  out: 129 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(1751):
  state_no: 190
  in: 38 -- 
  out: 126 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1752):
  state_no: 190
  in: 41 -- 
  out: 120 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1753):
  state_no: 190
  in: 42 -- 
  out: 121 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1754):
  state_no: 190
  in: 43 -- 
  out: 122 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1755):
  state_no: 190
  in: 46 -- 
  out: 123 -- 
  target: 190
  final_state: 0
  start_state: 0
Elem(1756):
  state_no: 190
  in: 47 -- 
  out: 127 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1757):
  state_no: 190
  in: 48 -- 
  out: 128 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1758):
  state_no: 190
  in: 57 -- 
  out: 124 -- 
  target: 190
  final_state: 0
  start_state: 0
Elem(1759):
  state_no: 190
  in: 75 -- 
  out: 119 -- 
  target: 190
  final_state: 0
  start_state: 0
Elem(1760):
  state_no: 190
  in: 76 -- 
  out: 86 -- 
  target: 190
  final_state: 0
  start_state: 0
Elem(1761):
  state_no: 191
  in: 2 -- 
  out: 118 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1762):
  state_no: 191
  in: 29 -- 
  out: 129 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(1763):
  state_no: 191
  in: 38 -- 
  out: 126 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1764):
  state_no: 191
  in: 41 -- 
  out: 120 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1765):
  state_no: 191
  in: 42 -- 
  out: 121 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1766):
  state_no: 191
  in: 43 -- 
  out: 122 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1767):
  state_no: 191
  in: 46 -- 
  out: 123 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(1768):
  state_no: 191
  in: 47 -- 
  out: 127 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1769):
  state_no: 191
  in: 48 -- 
  out: 128 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1770):
  state_no: 191
  in: 57 -- 
  out: 124 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1771):
  state_no: 191
  in: 75 -- 
  out: 119 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1772):
  state_no: 191
  in: 76 -- 
  out: 86 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(1773):
  state_no: 192
  in: 2 -- 
  out: 79 -- 
  target: 192
  final_state: 0
  start_state: 0
Elem(1774):
  state_no: 192
  in: 29 -- 
  out: 40 -- 
  target: 179
  final_state: 0
  start_state: 0
Elem(1775):
  state_no: 192
  in: 38 -- 
  out: 87 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1776):
  state_no: 192
  in: 41 -- 
  out: 81 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1777):
  state_no: 192
  in: 42 -- 
  out: 82 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1778):
  state_no: 192
  in: 43 -- 
  out: 83 -- 
  target: 139
  final_state: 0
  start_state: 0
Elem(1779):
  state_no: 192
  in: 46 -- 
  out: 84 -- 
  target: 192
  final_state: 0
  start_state: 0
Elem(1780):
  state_no: 192
  in: 47 -- 
  out: 88 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1781):
  state_no: 192
  in: 48 -- 
  out: 89 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1782):
  state_no: 192
  in: 57 -- 
  out: 47 -- 
  target: 192
  final_state: 0
  start_state: 0
Elem(1783):
  state_no: 192
  in: 75 -- 
  out: 80 -- 
  target: 192
  final_state: 0
  start_state: 0
Elem(1784):
  state_no: 192
  in: 76 -- 
  out: 86 -- 
  target: 208
  final_state: 0
  start_state: 0
Elem(1785):
  state_no: 193
  in: 2 -- 
  out: 41 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1786):
  state_no: 193
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(1787):
  state_no: 193
  in: 38 -- 
  out: 49 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1788):
  state_no: 193
  in: 41 -- 
  out: 43 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1789):
  state_no: 193
  in: 42 -- 
  out: 44 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1790):
  state_no: 193
  in: 43 -- 
  out: 45 -- 
  target: 140
  final_state: 0
  start_state: 0
Elem(1791):
  state_no: 193
  in: 46 -- 
  out: 46 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(1792):
  state_no: 193
  in: 47 -- 
  out: 50 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1793):
  state_no: 193
  in: 48 -- 
  out: 51 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1794):
  state_no: 193
  in: 57 -- 
  out: 47 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1795):
  state_no: 193
  in: 75 -- 
  out: 30 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1796):
  state_no: 193
  in: 76 -- 
  out: 48 -- 
  target: 193
  final_state: 0
  start_state: 0
Elem(1797):
  state_no: 194
  in: 3 -- 
  out: 28 -- 
  target: 210
  final_state: 0
  start_state: 0
Elem(1798):
  state_no: 194
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(1799):
  state_no: 195
  in: 2 -- 
  out: 29 -- 
  target: 195
  final_state: 0
  start_state: 0
Elem(1800):
  state_no: 195
  in: 29 -- 
  out: 40 -- 
  target: 179
  final_state: 0
  start_state: 0
Elem(1801):
  state_no: 195
  in: 38 -- 
  out: 37 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1802):
  state_no: 195
  in: 41 -- 
  out: 31 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1803):
  state_no: 195
  in: 42 -- 
  out: 32 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1804):
  state_no: 195
  in: 43 -- 
  out: 33 -- 
  target: 144
  final_state: 0
  start_state: 0
Elem(1805):
  state_no: 195
  in: 46 -- 
  out: 34 -- 
  target: 195
  final_state: 0
  start_state: 0
Elem(1806):
  state_no: 195
  in: 47 -- 
  out: 38 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1807):
  state_no: 195
  in: 48 -- 
  out: 39 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1808):
  state_no: 195
  in: 57 -- 
  out: 35 -- 
  target: 195
  final_state: 0
  start_state: 0
Elem(1809):
  state_no: 195
  in: 75 -- 
  out: 30 -- 
  target: 211
  final_state: 0
  start_state: 0
Elem(1810):
  state_no: 195
  in: 76 -- 
  out: 36 -- 
  target: 195
  final_state: 0
  start_state: 0
Elem(1811):
  state_no: 196
  in: 2 -- 
  out: 207 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1812):
  state_no: 196
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(1813):
  state_no: 196
  in: 38 -- 
  out: 215 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1814):
  state_no: 196
  in: 41 -- 
  out: 209 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1815):
  state_no: 196
  in: 42 -- 
  out: 210 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1816):
  state_no: 196
  in: 43 -- 
  out: 211 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1817):
  state_no: 196
  in: 46 -- 
  out: 212 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1818):
  state_no: 196
  in: 47 -- 
  out: 216 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1819):
  state_no: 196
  in: 48 -- 
  out: 217 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1820):
  state_no: 196
  in: 57 -- 
  out: 213 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1821):
  state_no: 196
  in: 75 -- 
  out: 208 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(1822):
  state_no: 196
  in: 76 -- 
  out: 214 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(1823):
  state_no: 197
  in: 2 -- 
  out: 256 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1824):
  state_no: 197
  in: 29 -- 
  out: 218 -- 
  target: 199
  final_state: 0
  start_state: 0
Elem(1825):
  state_no: 197
  in: 38 -- 
  out: 264 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(1826):
  state_no: 197
  in: 41 -- 
  out: 258 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1827):
  state_no: 197
  in: 42 -- 
  out: 259 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1828):
  state_no: 197
  in: 43 -- 
  out: 260 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1829):
  state_no: 197
  in: 46 -- 
  out: 261 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1830):
  state_no: 197
  in: 47 -- 
  out: 265 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(1831):
  state_no: 197
  in: 48 -- 
  out: 266 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(1832):
  state_no: 197
  in: 57 -- 
  out: 262 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(1833):
  state_no: 197
  in: 75 -- 
  out: 208 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1834):
  state_no: 197
  in: 76 -- 
  out: 263 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(1835):
  state_no: 198
  in: 2 -- 
  out: 207 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1836):
  state_no: 198
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(1837):
  state_no: 198
  in: 38 -- 
  out: 215 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1838):
  state_no: 198
  in: 41 -- 
  out: 209 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1839):
  state_no: 198
  in: 42 -- 
  out: 210 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1840):
  state_no: 198
  in: 43 -- 
  out: 211 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1841):
  state_no: 198
  in: 46 -- 
  out: 212 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(1842):
  state_no: 198
  in: 47 -- 
  out: 216 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1843):
  state_no: 198
  in: 48 -- 
  out: 217 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1844):
  state_no: 198
  in: 57 -- 
  out: 213 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1845):
  state_no: 198
  in: 75 -- 
  out: 208 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(1846):
  state_no: 198
  in: 76 -- 
  out: 214 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(1847):
  state_no: 199
  in: 3 -- 
  out: 167 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(1848):
  state_no: 199
  in: 8 -- 
  out: 66 -- 
  target: 218
  final_state: 0
  start_state: 0
Elem(1849):
  state_no: 200
  in: 2 -- 
  out: 256 -- 
  target: 200
  final_state: 0
  start_state: 0
Elem(1850):
  state_no: 200
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(1851):
  state_no: 200
  in: 38 -- 
  out: 264 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1852):
  state_no: 200
  in: 41 -- 
  out: 258 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(1853):
  state_no: 200
  in: 42 -- 
  out: 259 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(1854):
  state_no: 200
  in: 43 -- 
  out: 260 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(1855):
  state_no: 200
  in: 46 -- 
  out: 261 -- 
  target: 200
  final_state: 0
  start_state: 0
Elem(1856):
  state_no: 200
  in: 47 -- 
  out: 265 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1857):
  state_no: 200
  in: 48 -- 
  out: 266 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1858):
  state_no: 200
  in: 57 -- 
  out: 262 -- 
  target: 219
  final_state: 0
  start_state: 0
Elem(1859):
  state_no: 200
  in: 75 -- 
  out: 208 -- 
  target: 200
  final_state: 0
  start_state: 0
Elem(1860):
  state_no: 200
  in: 76 -- 
  out: 263 -- 
  target: 200
  final_state: 0
  start_state: 0
Elem(1861):
  state_no: 201
  in: 3 -- 
  out: 167 -- 
  target: 220
  final_state: 0
  start_state: 0
Elem(1862):
  state_no: 201
  in: 8 -- 
  out: 66 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(1863):
  state_no: 202
  in: 2 -- 
  out: 297 -- 
  target: 202
  final_state: 0
  start_state: 0
Elem(1864):
  state_no: 202
  in: 29 -- 
  out: 218 -- 
  target: 185
  final_state: 0
  start_state: 0
Elem(1865):
  state_no: 202
  in: 38 -- 
  out: 305 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(1866):
  state_no: 202
  in: 41 -- 
  out: 299 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(1867):
  state_no: 202
  in: 42 -- 
  out: 300 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(1868):
  state_no: 202
  in: 43 -- 
  out: 301 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(1869):
  state_no: 202
  in: 46 -- 
  out: 302 -- 
  target: 202
  final_state: 0
  start_state: 0
Elem(1870):
  state_no: 202
  in: 47 -- 
  out: 306 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(1871):
  state_no: 202
  in: 48 -- 
  out: 307 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(1872):
  state_no: 202
  in: 57 -- 
  out: 262 -- 
  target: 202
  final_state: 0
  start_state: 0
Elem(1873):
  state_no: 202
  in: 75 -- 
  out: 298 -- 
  target: 202
  final_state: 0
  start_state: 0
Elem(1874):
  state_no: 202
  in: 76 -- 
  out: 86 -- 
  target: 141
  final_state: 0
  start_state: 0
Elem(1875):
  state_no: 203
  in: 2 -- 
  out: 256 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1876):
  state_no: 203
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(1877):
  state_no: 203
  in: 38 -- 
  out: 264 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1878):
  state_no: 203
  in: 41 -- 
  out: 258 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(1879):
  state_no: 203
  in: 42 -- 
  out: 259 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(1880):
  state_no: 203
  in: 43 -- 
  out: 260 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(1881):
  state_no: 203
  in: 46 -- 
  out: 261 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(1882):
  state_no: 203
  in: 47 -- 
  out: 265 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1883):
  state_no: 203
  in: 48 -- 
  out: 266 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1884):
  state_no: 203
  in: 57 -- 
  out: 262 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(1885):
  state_no: 203
  in: 75 -- 
  out: 208 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1886):
  state_no: 203
  in: 76 -- 
  out: 263 -- 
  target: 203
  final_state: 0
  start_state: 0
Elem(1887):
  state_no: 204
  in: 2 -- 
  out: 207 -- 
  target: 204
  final_state: 0
  start_state: 0
Elem(1888):
  state_no: 204
  in: 29 -- 
  out: 218 -- 
  target: 185
  final_state: 0
  start_state: 0
Elem(1889):
  state_no: 204
  in: 38 -- 
  out: 215 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(1890):
  state_no: 204
  in: 41 -- 
  out: 209 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(1891):
  state_no: 204
  in: 42 -- 
  out: 210 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(1892):
  state_no: 204
  in: 43 -- 
  out: 211 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(1893):
  state_no: 204
  in: 46 -- 
  out: 212 -- 
  target: 204
  final_state: 0
  start_state: 0
Elem(1894):
  state_no: 204
  in: 47 -- 
  out: 216 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(1895):
  state_no: 204
  in: 48 -- 
  out: 217 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(1896):
  state_no: 204
  in: 57 -- 
  out: 213 -- 
  target: 204
  final_state: 0
  start_state: 0
Elem(1897):
  state_no: 204
  in: 75 -- 
  out: 208 -- 
  target: 222
  final_state: 0
  start_state: 0
Elem(1898):
  state_no: 204
  in: 76 -- 
  out: 214 -- 
  target: 204
  final_state: 0
  start_state: 0
Elem(1899):
  state_no: 205
  in: 2 -- 
  out: 118 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1900):
  state_no: 205
  in: 29 -- 
  out: 129 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(1901):
  state_no: 205
  in: 38 -- 
  out: 126 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1902):
  state_no: 205
  in: 41 -- 
  out: 120 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1903):
  state_no: 205
  in: 42 -- 
  out: 121 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1904):
  state_no: 205
  in: 43 -- 
  out: 122 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1905):
  state_no: 205
  in: 46 -- 
  out: 123 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1906):
  state_no: 205
  in: 47 -- 
  out: 127 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1907):
  state_no: 205
  in: 48 -- 
  out: 128 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1908):
  state_no: 205
  in: 57 -- 
  out: 124 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1909):
  state_no: 205
  in: 75 -- 
  out: 119 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1910):
  state_no: 205
  in: 76 -- 
  out: 86 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(1911):
  state_no: 206
  in: 2 -- 
  out: 118 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1912):
  state_no: 206
  in: 29 -- 
  out: 129 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(1913):
  state_no: 206
  in: 38 -- 
  out: 126 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1914):
  state_no: 206
  in: 41 -- 
  out: 120 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1915):
  state_no: 206
  in: 42 -- 
  out: 121 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1916):
  state_no: 206
  in: 43 -- 
  out: 122 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1917):
  state_no: 206
  in: 46 -- 
  out: 123 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(1918):
  state_no: 206
  in: 47 -- 
  out: 127 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1919):
  state_no: 206
  in: 48 -- 
  out: 128 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1920):
  state_no: 206
  in: 57 -- 
  out: 124 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1921):
  state_no: 206
  in: 75 -- 
  out: 119 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1922):
  state_no: 206
  in: 76 -- 
  out: 86 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(1923):
  state_no: 207
  in: 2 -- 
  out: 118 -- 
  target: 207
  final_state: 0
  start_state: 0
Elem(1924):
  state_no: 207
  in: 29 -- 
  out: 129 -- 
  target: 226
  final_state: 0
  start_state: 0
Elem(1925):
  state_no: 207
  in: 38 -- 
  out: 126 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(1926):
  state_no: 207
  in: 41 -- 
  out: 120 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(1927):
  state_no: 207
  in: 42 -- 
  out: 121 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(1928):
  state_no: 207
  in: 43 -- 
  out: 122 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(1929):
  state_no: 207
  in: 46 -- 
  out: 123 -- 
  target: 207
  final_state: 0
  start_state: 0
Elem(1930):
  state_no: 207
  in: 47 -- 
  out: 127 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(1931):
  state_no: 207
  in: 48 -- 
  out: 128 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(1932):
  state_no: 207
  in: 57 -- 
  out: 124 -- 
  target: 207
  final_state: 0
  start_state: 0
Elem(1933):
  state_no: 207
  in: 75 -- 
  out: 119 -- 
  target: 207
  final_state: 0
  start_state: 0
Elem(1934):
  state_no: 207
  in: 76 -- 
  out: 86 -- 
  target: 207
  final_state: 0
  start_state: 0
Elem(1935):
  state_no: 208
  in: 2 -- 
  out: 118 -- 
  target: 208
  final_state: 0
  start_state: 0
Elem(1936):
  state_no: 208
  in: 29 -- 
  out: 129 -- 
  target: 228
  final_state: 0
  start_state: 0
Elem(1937):
  state_no: 208
  in: 38 -- 
  out: 126 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(1938):
  state_no: 208
  in: 41 -- 
  out: 120 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1939):
  state_no: 208
  in: 42 -- 
  out: 121 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1940):
  state_no: 208
  in: 43 -- 
  out: 122 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(1941):
  state_no: 208
  in: 46 -- 
  out: 123 -- 
  target: 208
  final_state: 0
  start_state: 0
Elem(1942):
  state_no: 208
  in: 47 -- 
  out: 127 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(1943):
  state_no: 208
  in: 48 -- 
  out: 128 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(1944):
  state_no: 208
  in: 57 -- 
  out: 124 -- 
  target: 208
  final_state: 0
  start_state: 0
Elem(1945):
  state_no: 208
  in: 75 -- 
  out: 119 -- 
  target: 208
  final_state: 0
  start_state: 0
Elem(1946):
  state_no: 208
  in: 76 -- 
  out: 86 -- 
  target: 208
  final_state: 0
  start_state: 0
Elem(1947):
  state_no: 209
  in: 2 -- 
  out: 79 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1948):
  state_no: 209
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(1949):
  state_no: 209
  in: 38 -- 
  out: 87 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1950):
  state_no: 209
  in: 41 -- 
  out: 81 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1951):
  state_no: 209
  in: 42 -- 
  out: 82 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1952):
  state_no: 209
  in: 43 -- 
  out: 83 -- 
  target: 154
  final_state: 0
  start_state: 0
Elem(1953):
  state_no: 209
  in: 46 -- 
  out: 84 -- 
  target: 82
  final_state: 0
  start_state: 0
Elem(1954):
  state_no: 209
  in: 47 -- 
  out: 88 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1955):
  state_no: 209
  in: 48 -- 
  out: 89 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1956):
  state_no: 209
  in: 57 -- 
  out: 47 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1957):
  state_no: 209
  in: 75 -- 
  out: 80 -- 
  target: 209
  final_state: 0
  start_state: 0
Elem(1958):
  state_no: 209
  in: 76 -- 
  out: 86 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(1959):
  state_no: 210
  in: 2 -- 
  out: 29 -- 
  target: 210
  final_state: 0
  start_state: 0
Elem(1960):
  state_no: 210
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(1961):
  state_no: 210
  in: 38 -- 
  out: 37 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1962):
  state_no: 210
  in: 41 -- 
  out: 31 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1963):
  state_no: 210
  in: 42 -- 
  out: 32 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1964):
  state_no: 210
  in: 43 -- 
  out: 33 -- 
  target: 157
  final_state: 0
  start_state: 0
Elem(1965):
  state_no: 210
  in: 46 -- 
  out: 34 -- 
  target: 210
  final_state: 0
  start_state: 0
Elem(1966):
  state_no: 210
  in: 47 -- 
  out: 38 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1967):
  state_no: 210
  in: 48 -- 
  out: 39 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1968):
  state_no: 210
  in: 57 -- 
  out: 35 -- 
  target: 210
  final_state: 0
  start_state: 0
Elem(1969):
  state_no: 210
  in: 75 -- 
  out: 30 -- 
  target: 229
  final_state: 0
  start_state: 0
Elem(1970):
  state_no: 210
  in: 76 -- 
  out: 36 -- 
  target: 210
  final_state: 0
  start_state: 0
Elem(1971):
  state_no: 211
  in: 2 -- 
  out: 41 -- 
  target: 211
  final_state: 0
  start_state: 0
Elem(1972):
  state_no: 211
  in: 29 -- 
  out: 40 -- 
  target: 179
  final_state: 0
  start_state: 0
Elem(1973):
  state_no: 211
  in: 38 -- 
  out: 49 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(1974):
  state_no: 211
  in: 41 -- 
  out: 43 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1975):
  state_no: 211
  in: 42 -- 
  out: 44 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1976):
  state_no: 211
  in: 43 -- 
  out: 45 -- 
  target: 158
  final_state: 0
  start_state: 0
Elem(1977):
  state_no: 211
  in: 46 -- 
  out: 46 -- 
  target: 211
  final_state: 0
  start_state: 0
Elem(1978):
  state_no: 211
  in: 47 -- 
  out: 50 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(1979):
  state_no: 211
  in: 48 -- 
  out: 51 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(1980):
  state_no: 211
  in: 57 -- 
  out: 47 -- 
  target: 230
  final_state: 0
  start_state: 0
Elem(1981):
  state_no: 211
  in: 75 -- 
  out: 30 -- 
  target: 211
  final_state: 0
  start_state: 0
Elem(1982):
  state_no: 211
  in: 76 -- 
  out: 48 -- 
  target: 211
  final_state: 0
  start_state: 0
Elem(1983):
  state_no: 212
  in: 2 -- 
  out: 29 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1984):
  state_no: 212
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(1985):
  state_no: 212
  in: 38 -- 
  out: 37 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1986):
  state_no: 212
  in: 41 -- 
  out: 31 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1987):
  state_no: 212
  in: 42 -- 
  out: 32 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1988):
  state_no: 212
  in: 43 -- 
  out: 33 -- 
  target: 159
  final_state: 0
  start_state: 0
Elem(1989):
  state_no: 212
  in: 46 -- 
  out: 34 -- 
  target: 83
  final_state: 0
  start_state: 0
Elem(1990):
  state_no: 212
  in: 47 -- 
  out: 38 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1991):
  state_no: 212
  in: 48 -- 
  out: 39 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1992):
  state_no: 212
  in: 57 -- 
  out: 35 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1993):
  state_no: 212
  in: 75 -- 
  out: 30 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(1994):
  state_no: 212
  in: 76 -- 
  out: 36 -- 
  target: 212
  final_state: 0
  start_state: 0
Elem(1995):
  state_no: 213
  in: 2 -- 
  out: 256 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(1996):
  state_no: 213
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(1997):
  state_no: 213
  in: 38 -- 
  out: 264 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(1998):
  state_no: 213
  in: 41 -- 
  out: 258 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(1999):
  state_no: 213
  in: 42 -- 
  out: 259 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(2000):
  state_no: 213
  in: 43 -- 
  out: 260 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(2001):
  state_no: 213
  in: 46 -- 
  out: 261 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(2002):
  state_no: 213
  in: 47 -- 
  out: 265 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2003):
  state_no: 213
  in: 48 -- 
  out: 266 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2004):
  state_no: 213
  in: 57 -- 
  out: 262 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2005):
  state_no: 213
  in: 75 -- 
  out: 208 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(2006):
  state_no: 213
  in: 76 -- 
  out: 263 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(2007):
  state_no: 214
  in: 3 -- 
  out: 167 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2008):
  state_no: 214
  in: 8 -- 
  out: 66 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(2009):
  state_no: 215
  in: 2 -- 
  out: 297 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2010):
  state_no: 215
  in: 29 -- 
  out: 218 -- 
  target: 199
  final_state: 0
  start_state: 0
Elem(2011):
  state_no: 215
  in: 38 -- 
  out: 305 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2012):
  state_no: 215
  in: 41 -- 
  out: 299 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2013):
  state_no: 215
  in: 42 -- 
  out: 300 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2014):
  state_no: 215
  in: 43 -- 
  out: 301 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2015):
  state_no: 215
  in: 46 -- 
  out: 302 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2016):
  state_no: 215
  in: 47 -- 
  out: 306 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2017):
  state_no: 215
  in: 48 -- 
  out: 307 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2018):
  state_no: 215
  in: 57 -- 
  out: 262 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2019):
  state_no: 215
  in: 75 -- 
  out: 298 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2020):
  state_no: 215
  in: 76 -- 
  out: 86 -- 
  target: 153
  final_state: 0
  start_state: 0
Elem(2021):
  state_no: 216
  in: 2 -- 
  out: 256 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2022):
  state_no: 216
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2023):
  state_no: 216
  in: 38 -- 
  out: 264 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2024):
  state_no: 216
  in: 41 -- 
  out: 258 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2025):
  state_no: 216
  in: 42 -- 
  out: 259 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2026):
  state_no: 216
  in: 43 -- 
  out: 260 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2027):
  state_no: 216
  in: 46 -- 
  out: 261 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(2028):
  state_no: 216
  in: 47 -- 
  out: 265 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2029):
  state_no: 216
  in: 48 -- 
  out: 266 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2030):
  state_no: 216
  in: 57 -- 
  out: 262 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2031):
  state_no: 216
  in: 75 -- 
  out: 208 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2032):
  state_no: 216
  in: 76 -- 
  out: 263 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2033):
  state_no: 217
  in: 2 -- 
  out: 207 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2034):
  state_no: 217
  in: 29 -- 
  out: 218 -- 
  target: 199
  final_state: 0
  start_state: 0
Elem(2035):
  state_no: 217
  in: 38 -- 
  out: 215 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2036):
  state_no: 217
  in: 41 -- 
  out: 209 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2037):
  state_no: 217
  in: 42 -- 
  out: 210 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2038):
  state_no: 217
  in: 43 -- 
  out: 211 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2039):
  state_no: 217
  in: 46 -- 
  out: 212 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2040):
  state_no: 217
  in: 47 -- 
  out: 216 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2041):
  state_no: 217
  in: 48 -- 
  out: 217 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2042):
  state_no: 217
  in: 57 -- 
  out: 213 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2043):
  state_no: 217
  in: 75 -- 
  out: 208 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2044):
  state_no: 217
  in: 76 -- 
  out: 214 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2045):
  state_no: 218
  in: 10 -- 
  out: 8 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2046):
  state_no: 219
  in: 2 -- 
  out: 297 -- 
  target: 219
  final_state: 0
  start_state: 0
Elem(2047):
  state_no: 219
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(2048):
  state_no: 219
  in: 38 -- 
  out: 305 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2049):
  state_no: 219
  in: 41 -- 
  out: 299 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2050):
  state_no: 219
  in: 42 -- 
  out: 300 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2051):
  state_no: 219
  in: 43 -- 
  out: 301 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2052):
  state_no: 219
  in: 46 -- 
  out: 302 -- 
  target: 219
  final_state: 0
  start_state: 0
Elem(2053):
  state_no: 219
  in: 47 -- 
  out: 306 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2054):
  state_no: 219
  in: 48 -- 
  out: 307 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2055):
  state_no: 219
  in: 57 -- 
  out: 262 -- 
  target: 219
  final_state: 0
  start_state: 0
Elem(2056):
  state_no: 219
  in: 75 -- 
  out: 298 -- 
  target: 219
  final_state: 0
  start_state: 0
Elem(2057):
  state_no: 219
  in: 76 -- 
  out: 86 -- 
  target: 238
  final_state: 0
  start_state: 0
Elem(2058):
  state_no: 220
  in: 2 -- 
  out: 207 -- 
  target: 220
  final_state: 0
  start_state: 0
Elem(2059):
  state_no: 220
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(2060):
  state_no: 220
  in: 38 -- 
  out: 215 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2061):
  state_no: 220
  in: 41 -- 
  out: 209 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2062):
  state_no: 220
  in: 42 -- 
  out: 210 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2063):
  state_no: 220
  in: 43 -- 
  out: 211 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2064):
  state_no: 220
  in: 46 -- 
  out: 212 -- 
  target: 220
  final_state: 0
  start_state: 0
Elem(2065):
  state_no: 220
  in: 47 -- 
  out: 216 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2066):
  state_no: 220
  in: 48 -- 
  out: 217 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2067):
  state_no: 220
  in: 57 -- 
  out: 213 -- 
  target: 220
  final_state: 0
  start_state: 0
Elem(2068):
  state_no: 220
  in: 75 -- 
  out: 208 -- 
  target: 239
  final_state: 0
  start_state: 0
Elem(2069):
  state_no: 220
  in: 76 -- 
  out: 214 -- 
  target: 220
  final_state: 0
  start_state: 0
Elem(2070):
  state_no: 221
  in: 2 -- 
  out: 297 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2071):
  state_no: 221
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(2072):
  state_no: 221
  in: 38 -- 
  out: 305 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2073):
  state_no: 221
  in: 41 -- 
  out: 299 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2074):
  state_no: 221
  in: 42 -- 
  out: 300 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2075):
  state_no: 221
  in: 43 -- 
  out: 301 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2076):
  state_no: 221
  in: 46 -- 
  out: 302 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(2077):
  state_no: 221
  in: 47 -- 
  out: 306 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2078):
  state_no: 221
  in: 48 -- 
  out: 307 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2079):
  state_no: 221
  in: 57 -- 
  out: 262 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2080):
  state_no: 221
  in: 75 -- 
  out: 298 -- 
  target: 221
  final_state: 0
  start_state: 0
Elem(2081):
  state_no: 221
  in: 76 -- 
  out: 86 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(2082):
  state_no: 222
  in: 2 -- 
  out: 256 -- 
  target: 222
  final_state: 0
  start_state: 0
Elem(2083):
  state_no: 222
  in: 29 -- 
  out: 218 -- 
  target: 185
  final_state: 0
  start_state: 0
Elem(2084):
  state_no: 222
  in: 38 -- 
  out: 264 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2085):
  state_no: 222
  in: 41 -- 
  out: 258 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2086):
  state_no: 222
  in: 42 -- 
  out: 259 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2087):
  state_no: 222
  in: 43 -- 
  out: 260 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2088):
  state_no: 222
  in: 46 -- 
  out: 261 -- 
  target: 222
  final_state: 0
  start_state: 0
Elem(2089):
  state_no: 222
  in: 47 -- 
  out: 265 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2090):
  state_no: 222
  in: 48 -- 
  out: 266 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2091):
  state_no: 222
  in: 57 -- 
  out: 262 -- 
  target: 240
  final_state: 0
  start_state: 0
Elem(2092):
  state_no: 222
  in: 75 -- 
  out: 208 -- 
  target: 222
  final_state: 0
  start_state: 0
Elem(2093):
  state_no: 222
  in: 76 -- 
  out: 263 -- 
  target: 222
  final_state: 0
  start_state: 0
Elem(2094):
  state_no: 223
  in: 2 -- 
  out: 207 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2095):
  state_no: 223
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(2096):
  state_no: 223
  in: 38 -- 
  out: 215 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2097):
  state_no: 223
  in: 41 -- 
  out: 209 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2098):
  state_no: 223
  in: 42 -- 
  out: 210 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2099):
  state_no: 223
  in: 43 -- 
  out: 211 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2100):
  state_no: 223
  in: 46 -- 
  out: 212 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(2101):
  state_no: 223
  in: 47 -- 
  out: 216 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2102):
  state_no: 223
  in: 48 -- 
  out: 217 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2103):
  state_no: 223
  in: 57 -- 
  out: 213 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2104):
  state_no: 223
  in: 75 -- 
  out: 208 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2105):
  state_no: 223
  in: 76 -- 
  out: 214 -- 
  target: 223
  final_state: 0
  start_state: 0
Elem(2106):
  state_no: 224
  in: 2 -- 
  out: 118 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2107):
  state_no: 224
  in: 29 -- 
  out: 129 -- 
  target: 243
  final_state: 0
  start_state: 0
Elem(2108):
  state_no: 224
  in: 38 -- 
  out: 126 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2109):
  state_no: 224
  in: 41 -- 
  out: 120 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2110):
  state_no: 224
  in: 42 -- 
  out: 121 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2111):
  state_no: 224
  in: 43 -- 
  out: 122 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2112):
  state_no: 224
  in: 46 -- 
  out: 123 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2113):
  state_no: 224
  in: 47 -- 
  out: 127 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2114):
  state_no: 224
  in: 48 -- 
  out: 128 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2115):
  state_no: 224
  in: 57 -- 
  out: 124 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2116):
  state_no: 224
  in: 75 -- 
  out: 119 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2117):
  state_no: 224
  in: 76 -- 
  out: 86 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2118):
  state_no: 225
  in: 2 -- 
  out: 118 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2119):
  state_no: 225
  in: 29 -- 
  out: 129 -- 
  target: 244
  final_state: 0
  start_state: 0
Elem(2120):
  state_no: 225
  in: 38 -- 
  out: 126 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2121):
  state_no: 225
  in: 41 -- 
  out: 120 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2122):
  state_no: 225
  in: 42 -- 
  out: 121 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2123):
  state_no: 225
  in: 43 -- 
  out: 122 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2124):
  state_no: 225
  in: 46 -- 
  out: 123 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(2125):
  state_no: 225
  in: 47 -- 
  out: 127 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2126):
  state_no: 225
  in: 48 -- 
  out: 128 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2127):
  state_no: 225
  in: 57 -- 
  out: 124 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2128):
  state_no: 225
  in: 75 -- 
  out: 119 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2129):
  state_no: 225
  in: 76 -- 
  out: 86 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2130):
  state_no: 226
  in: 3 -- 
  out: 282 -- 
  target: 207
  final_state: 0
  start_state: 0
Elem(2131):
  state_no: 226
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(2132):
  state_no: 227
  in: 2 -- 
  out: 118 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2133):
  state_no: 227
  in: 29 -- 
  out: 129 -- 
  target: 245
  final_state: 0
  start_state: 0
Elem(2134):
  state_no: 227
  in: 38 -- 
  out: 126 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2135):
  state_no: 227
  in: 41 -- 
  out: 120 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(2136):
  state_no: 227
  in: 42 -- 
  out: 121 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(2137):
  state_no: 227
  in: 43 -- 
  out: 122 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(2138):
  state_no: 227
  in: 46 -- 
  out: 123 -- 
  target: 88
  final_state: 0
  start_state: 0
Elem(2139):
  state_no: 227
  in: 47 -- 
  out: 127 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2140):
  state_no: 227
  in: 48 -- 
  out: 128 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2141):
  state_no: 227
  in: 57 -- 
  out: 124 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2142):
  state_no: 227
  in: 75 -- 
  out: 119 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2143):
  state_no: 227
  in: 76 -- 
  out: 86 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2144):
  state_no: 228
  in: 3 -- 
  out: 167 -- 
  target: 246
  final_state: 0
  start_state: 0
Elem(2145):
  state_no: 228
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(2146):
  state_no: 229
  in: 2 -- 
  out: 41 -- 
  target: 229
  final_state: 0
  start_state: 0
Elem(2147):
  state_no: 229
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(2148):
  state_no: 229
  in: 38 -- 
  out: 49 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2149):
  state_no: 229
  in: 41 -- 
  out: 43 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(2150):
  state_no: 229
  in: 42 -- 
  out: 44 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(2151):
  state_no: 229
  in: 43 -- 
  out: 45 -- 
  target: 170
  final_state: 0
  start_state: 0
Elem(2152):
  state_no: 229
  in: 46 -- 
  out: 46 -- 
  target: 229
  final_state: 0
  start_state: 0
Elem(2153):
  state_no: 229
  in: 47 -- 
  out: 50 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2154):
  state_no: 229
  in: 48 -- 
  out: 51 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2155):
  state_no: 229
  in: 57 -- 
  out: 47 -- 
  target: 247
  final_state: 0
  start_state: 0
Elem(2156):
  state_no: 229
  in: 75 -- 
  out: 30 -- 
  target: 229
  final_state: 0
  start_state: 0
Elem(2157):
  state_no: 229
  in: 76 -- 
  out: 48 -- 
  target: 229
  final_state: 0
  start_state: 0
Elem(2158):
  state_no: 230
  in: 2 -- 
  out: 79 -- 
  target: 230
  final_state: 0
  start_state: 0
Elem(2159):
  state_no: 230
  in: 29 -- 
  out: 40 -- 
  target: 179
  final_state: 0
  start_state: 0
Elem(2160):
  state_no: 230
  in: 38 -- 
  out: 87 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2161):
  state_no: 230
  in: 41 -- 
  out: 81 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(2162):
  state_no: 230
  in: 42 -- 
  out: 82 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(2163):
  state_no: 230
  in: 43 -- 
  out: 83 -- 
  target: 171
  final_state: 0
  start_state: 0
Elem(2164):
  state_no: 230
  in: 46 -- 
  out: 84 -- 
  target: 230
  final_state: 0
  start_state: 0
Elem(2165):
  state_no: 230
  in: 47 -- 
  out: 88 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2166):
  state_no: 230
  in: 48 -- 
  out: 89 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2167):
  state_no: 230
  in: 57 -- 
  out: 47 -- 
  target: 230
  final_state: 0
  start_state: 0
Elem(2168):
  state_no: 230
  in: 75 -- 
  out: 80 -- 
  target: 230
  final_state: 0
  start_state: 0
Elem(2169):
  state_no: 230
  in: 76 -- 
  out: 86 -- 
  target: 248
  final_state: 0
  start_state: 0
Elem(2170):
  state_no: 231
  in: 2 -- 
  out: 41 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2171):
  state_no: 231
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(2172):
  state_no: 231
  in: 38 -- 
  out: 49 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2173):
  state_no: 231
  in: 41 -- 
  out: 43 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(2174):
  state_no: 231
  in: 42 -- 
  out: 44 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(2175):
  state_no: 231
  in: 43 -- 
  out: 45 -- 
  target: 172
  final_state: 0
  start_state: 0
Elem(2176):
  state_no: 231
  in: 46 -- 
  out: 46 -- 
  target: 91
  final_state: 0
  start_state: 0
Elem(2177):
  state_no: 231
  in: 47 -- 
  out: 50 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2178):
  state_no: 231
  in: 48 -- 
  out: 51 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2179):
  state_no: 231
  in: 57 -- 
  out: 47 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2180):
  state_no: 231
  in: 75 -- 
  out: 30 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2181):
  state_no: 231
  in: 76 -- 
  out: 48 -- 
  target: 231
  final_state: 0
  start_state: 0
Elem(2182):
  state_no: 232
  in: 2 -- 
  out: 297 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2183):
  state_no: 232
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2184):
  state_no: 232
  in: 38 -- 
  out: 305 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2185):
  state_no: 232
  in: 41 -- 
  out: 299 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2186):
  state_no: 232
  in: 42 -- 
  out: 300 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2187):
  state_no: 232
  in: 43 -- 
  out: 301 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2188):
  state_no: 232
  in: 46 -- 
  out: 302 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2189):
  state_no: 232
  in: 47 -- 
  out: 306 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2190):
  state_no: 232
  in: 48 -- 
  out: 307 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2191):
  state_no: 232
  in: 57 -- 
  out: 262 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2192):
  state_no: 232
  in: 75 -- 
  out: 298 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2193):
  state_no: 232
  in: 76 -- 
  out: 86 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2194):
  state_no: 233
  in: 2 -- 
  out: 207 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2195):
  state_no: 233
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2196):
  state_no: 233
  in: 38 -- 
  out: 215 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2197):
  state_no: 233
  in: 41 -- 
  out: 209 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2198):
  state_no: 233
  in: 42 -- 
  out: 210 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2199):
  state_no: 233
  in: 43 -- 
  out: 211 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2200):
  state_no: 233
  in: 46 -- 
  out: 212 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2201):
  state_no: 233
  in: 47 -- 
  out: 216 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2202):
  state_no: 233
  in: 48 -- 
  out: 217 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2203):
  state_no: 233
  in: 57 -- 
  out: 213 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2204):
  state_no: 233
  in: 75 -- 
  out: 208 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2205):
  state_no: 233
  in: 76 -- 
  out: 214 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2206):
  state_no: 234
  in: 2 -- 
  out: 297 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2207):
  state_no: 234
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2208):
  state_no: 234
  in: 38 -- 
  out: 305 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2209):
  state_no: 234
  in: 41 -- 
  out: 299 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2210):
  state_no: 234
  in: 42 -- 
  out: 300 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2211):
  state_no: 234
  in: 43 -- 
  out: 301 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2212):
  state_no: 234
  in: 46 -- 
  out: 302 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(2213):
  state_no: 234
  in: 47 -- 
  out: 306 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2214):
  state_no: 234
  in: 48 -- 
  out: 307 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2215):
  state_no: 234
  in: 57 -- 
  out: 262 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2216):
  state_no: 234
  in: 75 -- 
  out: 298 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2217):
  state_no: 234
  in: 76 -- 
  out: 86 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(2218):
  state_no: 235
  in: 2 -- 
  out: 256 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2219):
  state_no: 235
  in: 29 -- 
  out: 218 -- 
  target: 199
  final_state: 0
  start_state: 0
Elem(2220):
  state_no: 235
  in: 38 -- 
  out: 264 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2221):
  state_no: 235
  in: 41 -- 
  out: 258 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2222):
  state_no: 235
  in: 42 -- 
  out: 259 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2223):
  state_no: 235
  in: 43 -- 
  out: 260 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2224):
  state_no: 235
  in: 46 -- 
  out: 261 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2225):
  state_no: 235
  in: 47 -- 
  out: 265 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2226):
  state_no: 235
  in: 48 -- 
  out: 266 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2227):
  state_no: 235
  in: 57 -- 
  out: 262 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2228):
  state_no: 235
  in: 75 -- 
  out: 208 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2229):
  state_no: 235
  in: 76 -- 
  out: 263 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2230):
  state_no: 236
  in: 2 -- 
  out: 207 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2231):
  state_no: 236
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2232):
  state_no: 236
  in: 38 -- 
  out: 215 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2233):
  state_no: 236
  in: 41 -- 
  out: 209 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2234):
  state_no: 236
  in: 42 -- 
  out: 210 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2235):
  state_no: 236
  in: 43 -- 
  out: 211 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2236):
  state_no: 236
  in: 46 -- 
  out: 212 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(2237):
  state_no: 236
  in: 47 -- 
  out: 216 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2238):
  state_no: 236
  in: 48 -- 
  out: 217 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2239):
  state_no: 236
  in: 57 -- 
  out: 213 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2240):
  state_no: 236
  in: 75 -- 
  out: 208 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2241):
  state_no: 236
  in: 76 -- 
  out: 214 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2242):
  state_no: 237
  in: 2 -- 
  out: 15 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2243):
  state_no: 237
  in: 7 -- 
  out: 20 -- 
  target: 254
  final_state: 0
  start_state: 0
Elem(2244):
  state_no: 237
  in: 38 -- 
  out: 24 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2245):
  state_no: 237
  in: 41 -- 
  out: 17 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2246):
  state_no: 237
  in: 42 -- 
  out: 18 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2247):
  state_no: 237
  in: 43 -- 
  out: 19 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2248):
  state_no: 237
  in: 46 -- 
  out: 21 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2249):
  state_no: 237
  in: 47 -- 
  out: 25 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2250):
  state_no: 237
  in: 48 -- 
  out: 26 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2251):
  state_no: 237
  in: 57 -- 
  out: 22 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2252):
  state_no: 237
  in: 75 -- 
  out: 16 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2253):
  state_no: 237
  in: 76 -- 
  out: 23 -- 
  target: 237
  final_state: 0
  start_state: 0
Elem(2254):
  state_no: 238
  in: 2 -- 
  out: 118 -- 
  target: 238
  final_state: 0
  start_state: 0
Elem(2255):
  state_no: 238
  in: 29 -- 
  out: 129 -- 
  target: 168
  final_state: 0
  start_state: 0
Elem(2256):
  state_no: 238
  in: 38 -- 
  out: 126 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(2257):
  state_no: 238
  in: 41 -- 
  out: 120 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2258):
  state_no: 238
  in: 42 -- 
  out: 121 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2259):
  state_no: 238
  in: 43 -- 
  out: 122 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2260):
  state_no: 238
  in: 46 -- 
  out: 123 -- 
  target: 238
  final_state: 0
  start_state: 0
Elem(2261):
  state_no: 238
  in: 47 -- 
  out: 127 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(2262):
  state_no: 238
  in: 48 -- 
  out: 128 -- 
  target: 155
  final_state: 0
  start_state: 0
Elem(2263):
  state_no: 238
  in: 57 -- 
  out: 124 -- 
  target: 238
  final_state: 0
  start_state: 0
Elem(2264):
  state_no: 238
  in: 75 -- 
  out: 119 -- 
  target: 238
  final_state: 0
  start_state: 0
Elem(2265):
  state_no: 238
  in: 76 -- 
  out: 86 -- 
  target: 238
  final_state: 0
  start_state: 0
Elem(2266):
  state_no: 239
  in: 2 -- 
  out: 256 -- 
  target: 239
  final_state: 0
  start_state: 0
Elem(2267):
  state_no: 239
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(2268):
  state_no: 239
  in: 38 -- 
  out: 264 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2269):
  state_no: 239
  in: 41 -- 
  out: 258 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2270):
  state_no: 239
  in: 42 -- 
  out: 259 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2271):
  state_no: 239
  in: 43 -- 
  out: 260 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2272):
  state_no: 239
  in: 46 -- 
  out: 261 -- 
  target: 239
  final_state: 0
  start_state: 0
Elem(2273):
  state_no: 239
  in: 47 -- 
  out: 265 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2274):
  state_no: 239
  in: 48 -- 
  out: 266 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2275):
  state_no: 239
  in: 57 -- 
  out: 262 -- 
  target: 255
  final_state: 0
  start_state: 0
Elem(2276):
  state_no: 239
  in: 75 -- 
  out: 208 -- 
  target: 239
  final_state: 0
  start_state: 0
Elem(2277):
  state_no: 239
  in: 76 -- 
  out: 263 -- 
  target: 239
  final_state: 0
  start_state: 0
Elem(2278):
  state_no: 240
  in: 2 -- 
  out: 297 -- 
  target: 240
  final_state: 0
  start_state: 0
Elem(2279):
  state_no: 240
  in: 29 -- 
  out: 218 -- 
  target: 185
  final_state: 0
  start_state: 0
Elem(2280):
  state_no: 240
  in: 38 -- 
  out: 305 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2281):
  state_no: 240
  in: 41 -- 
  out: 299 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2282):
  state_no: 240
  in: 42 -- 
  out: 300 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2283):
  state_no: 240
  in: 43 -- 
  out: 301 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2284):
  state_no: 240
  in: 46 -- 
  out: 302 -- 
  target: 240
  final_state: 0
  start_state: 0
Elem(2285):
  state_no: 240
  in: 47 -- 
  out: 306 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2286):
  state_no: 240
  in: 48 -- 
  out: 307 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2287):
  state_no: 240
  in: 57 -- 
  out: 262 -- 
  target: 240
  final_state: 0
  start_state: 0
Elem(2288):
  state_no: 240
  in: 75 -- 
  out: 298 -- 
  target: 240
  final_state: 0
  start_state: 0
Elem(2289):
  state_no: 240
  in: 76 -- 
  out: 86 -- 
  target: 175
  final_state: 0
  start_state: 0
Elem(2290):
  state_no: 241
  in: 2 -- 
  out: 256 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2291):
  state_no: 241
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(2292):
  state_no: 241
  in: 38 -- 
  out: 264 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2293):
  state_no: 241
  in: 41 -- 
  out: 258 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2294):
  state_no: 241
  in: 42 -- 
  out: 259 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2295):
  state_no: 241
  in: 43 -- 
  out: 260 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2296):
  state_no: 241
  in: 46 -- 
  out: 261 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(2297):
  state_no: 241
  in: 47 -- 
  out: 265 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2298):
  state_no: 241
  in: 48 -- 
  out: 266 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2299):
  state_no: 241
  in: 57 -- 
  out: 262 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2300):
  state_no: 241
  in: 75 -- 
  out: 208 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2301):
  state_no: 241
  in: 76 -- 
  out: 263 -- 
  target: 241
  final_state: 0
  start_state: 0
Elem(2302):
  state_no: 242
  in: 2 -- 
  out: 118 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2303):
  state_no: 242
  in: 29 -- 
  out: 129 -- 
  target: 257
  final_state: 0
  start_state: 0
Elem(2304):
  state_no: 242
  in: 38 -- 
  out: 126 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2305):
  state_no: 242
  in: 41 -- 
  out: 120 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2306):
  state_no: 242
  in: 42 -- 
  out: 121 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2307):
  state_no: 242
  in: 43 -- 
  out: 122 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2308):
  state_no: 242
  in: 46 -- 
  out: 123 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(2309):
  state_no: 242
  in: 47 -- 
  out: 127 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2310):
  state_no: 242
  in: 48 -- 
  out: 128 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2311):
  state_no: 242
  in: 57 -- 
  out: 124 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2312):
  state_no: 242
  in: 75 -- 
  out: 119 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2313):
  state_no: 242
  in: 76 -- 
  out: 86 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2314):
  state_no: 243
  in: 3 -- 
  out: 282 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2315):
  state_no: 243
  in: 8 -- 
  out: 66 -- 
  target: 145
  final_state: 0
  start_state: 0
Elem(2316):
  state_no: 244
  in: 3 -- 
  out: 282 -- 
  target: 258
  final_state: 0
  start_state: 0
Elem(2317):
  state_no: 244
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(2318):
  state_no: 245
  in: 3 -- 
  out: 167 -- 
  target: 259
  final_state: 0
  start_state: 0
Elem(2319):
  state_no: 245
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(2320):
  state_no: 246
  in: 2 -- 
  out: 207 -- 
  target: 246
  final_state: 0
  start_state: 0
Elem(2321):
  state_no: 246
  in: 29 -- 
  out: 218 -- 
  target: 262
  final_state: 0
  start_state: 0
Elem(2322):
  state_no: 246
  in: 38 -- 
  out: 215 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2323):
  state_no: 246
  in: 41 -- 
  out: 209 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(2324):
  state_no: 246
  in: 42 -- 
  out: 210 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(2325):
  state_no: 246
  in: 43 -- 
  out: 211 -- 
  target: 181
  final_state: 0
  start_state: 0
Elem(2326):
  state_no: 246
  in: 46 -- 
  out: 212 -- 
  target: 246
  final_state: 0
  start_state: 0
Elem(2327):
  state_no: 246
  in: 47 -- 
  out: 216 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2328):
  state_no: 246
  in: 48 -- 
  out: 217 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2329):
  state_no: 246
  in: 57 -- 
  out: 213 -- 
  target: 246
  final_state: 0
  start_state: 0
Elem(2330):
  state_no: 246
  in: 75 -- 
  out: 208 -- 
  target: 260
  final_state: 0
  start_state: 0
Elem(2331):
  state_no: 246
  in: 76 -- 
  out: 214 -- 
  target: 246
  final_state: 0
  start_state: 0
Elem(2332):
  state_no: 247
  in: 2 -- 
  out: 79 -- 
  target: 247
  final_state: 0
  start_state: 0
Elem(2333):
  state_no: 247
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(2334):
  state_no: 247
  in: 38 -- 
  out: 87 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2335):
  state_no: 247
  in: 41 -- 
  out: 81 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(2336):
  state_no: 247
  in: 42 -- 
  out: 82 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(2337):
  state_no: 247
  in: 43 -- 
  out: 83 -- 
  target: 186
  final_state: 0
  start_state: 0
Elem(2338):
  state_no: 247
  in: 46 -- 
  out: 84 -- 
  target: 247
  final_state: 0
  start_state: 0
Elem(2339):
  state_no: 247
  in: 47 -- 
  out: 88 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2340):
  state_no: 247
  in: 48 -- 
  out: 89 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2341):
  state_no: 247
  in: 57 -- 
  out: 47 -- 
  target: 247
  final_state: 0
  start_state: 0
Elem(2342):
  state_no: 247
  in: 75 -- 
  out: 80 -- 
  target: 247
  final_state: 0
  start_state: 0
Elem(2343):
  state_no: 247
  in: 76 -- 
  out: 86 -- 
  target: 263
  final_state: 0
  start_state: 0
Elem(2344):
  state_no: 248
  in: 2 -- 
  out: 118 -- 
  target: 248
  final_state: 0
  start_state: 0
Elem(2345):
  state_no: 248
  in: 29 -- 
  out: 129 -- 
  target: 262
  final_state: 0
  start_state: 0
Elem(2346):
  state_no: 248
  in: 38 -- 
  out: 126 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2347):
  state_no: 248
  in: 41 -- 
  out: 120 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(2348):
  state_no: 248
  in: 42 -- 
  out: 121 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(2349):
  state_no: 248
  in: 43 -- 
  out: 122 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(2350):
  state_no: 248
  in: 46 -- 
  out: 123 -- 
  target: 248
  final_state: 0
  start_state: 0
Elem(2351):
  state_no: 248
  in: 47 -- 
  out: 127 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2352):
  state_no: 248
  in: 48 -- 
  out: 128 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2353):
  state_no: 248
  in: 57 -- 
  out: 124 -- 
  target: 248
  final_state: 0
  start_state: 0
Elem(2354):
  state_no: 248
  in: 75 -- 
  out: 119 -- 
  target: 248
  final_state: 0
  start_state: 0
Elem(2355):
  state_no: 248
  in: 76 -- 
  out: 86 -- 
  target: 248
  final_state: 0
  start_state: 0
Elem(2356):
  state_no: 249
  in: 2 -- 
  out: 79 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2357):
  state_no: 249
  in: 29 -- 
  out: 40 -- 
  target: 194
  final_state: 0
  start_state: 0
Elem(2358):
  state_no: 249
  in: 38 -- 
  out: 87 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2359):
  state_no: 249
  in: 41 -- 
  out: 81 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(2360):
  state_no: 249
  in: 42 -- 
  out: 82 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(2361):
  state_no: 249
  in: 43 -- 
  out: 83 -- 
  target: 188
  final_state: 0
  start_state: 0
Elem(2362):
  state_no: 249
  in: 46 -- 
  out: 84 -- 
  target: 101
  final_state: 0
  start_state: 0
Elem(2363):
  state_no: 249
  in: 47 -- 
  out: 88 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2364):
  state_no: 249
  in: 48 -- 
  out: 89 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2365):
  state_no: 249
  in: 57 -- 
  out: 47 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2366):
  state_no: 249
  in: 75 -- 
  out: 80 -- 
  target: 249
  final_state: 0
  start_state: 0
Elem(2367):
  state_no: 249
  in: 76 -- 
  out: 86 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2368):
  state_no: 250
  in: 2 -- 
  out: 118 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2369):
  state_no: 250
  in: 29 -- 
  out: 129 -- 
  target: 180
  final_state: 0
  start_state: 0
Elem(2370):
  state_no: 250
  in: 38 -- 
  out: 126 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(2371):
  state_no: 250
  in: 41 -- 
  out: 120 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2372):
  state_no: 250
  in: 42 -- 
  out: 121 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2373):
  state_no: 250
  in: 43 -- 
  out: 122 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2374):
  state_no: 250
  in: 46 -- 
  out: 123 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2375):
  state_no: 250
  in: 47 -- 
  out: 127 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(2376):
  state_no: 250
  in: 48 -- 
  out: 128 -- 
  target: 166
  final_state: 0
  start_state: 0
Elem(2377):
  state_no: 250
  in: 57 -- 
  out: 124 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2378):
  state_no: 250
  in: 75 -- 
  out: 119 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2379):
  state_no: 250
  in: 76 -- 
  out: 86 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2380):
  state_no: 251
  in: 2 -- 
  out: 256 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2381):
  state_no: 251
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2382):
  state_no: 251
  in: 38 -- 
  out: 264 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2383):
  state_no: 251
  in: 41 -- 
  out: 258 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2384):
  state_no: 251
  in: 42 -- 
  out: 259 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2385):
  state_no: 251
  in: 43 -- 
  out: 260 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2386):
  state_no: 251
  in: 46 -- 
  out: 261 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2387):
  state_no: 251
  in: 47 -- 
  out: 265 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2388):
  state_no: 251
  in: 48 -- 
  out: 266 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2389):
  state_no: 251
  in: 57 -- 
  out: 262 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2390):
  state_no: 251
  in: 75 -- 
  out: 208 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2391):
  state_no: 251
  in: 76 -- 
  out: 263 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2392):
  state_no: 252
  in: 2 -- 
  out: 297 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2393):
  state_no: 252
  in: 29 -- 
  out: 218 -- 
  target: 199
  final_state: 0
  start_state: 0
Elem(2394):
  state_no: 252
  in: 38 -- 
  out: 305 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2395):
  state_no: 252
  in: 41 -- 
  out: 299 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2396):
  state_no: 252
  in: 42 -- 
  out: 300 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2397):
  state_no: 252
  in: 43 -- 
  out: 301 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2398):
  state_no: 252
  in: 46 -- 
  out: 302 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2399):
  state_no: 252
  in: 47 -- 
  out: 306 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2400):
  state_no: 252
  in: 48 -- 
  out: 307 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2401):
  state_no: 252
  in: 57 -- 
  out: 262 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2402):
  state_no: 252
  in: 75 -- 
  out: 298 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2403):
  state_no: 252
  in: 76 -- 
  out: 86 -- 
  target: 187
  final_state: 0
  start_state: 0
Elem(2404):
  state_no: 253
  in: 2 -- 
  out: 256 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2405):
  state_no: 253
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2406):
  state_no: 253
  in: 38 -- 
  out: 264 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2407):
  state_no: 253
  in: 41 -- 
  out: 258 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2408):
  state_no: 253
  in: 42 -- 
  out: 259 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2409):
  state_no: 253
  in: 43 -- 
  out: 260 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2410):
  state_no: 253
  in: 46 -- 
  out: 261 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(2411):
  state_no: 253
  in: 47 -- 
  out: 265 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2412):
  state_no: 253
  in: 48 -- 
  out: 266 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2413):
  state_no: 253
  in: 57 -- 
  out: 262 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2414):
  state_no: 253
  in: 75 -- 
  out: 208 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2415):
  state_no: 253
  in: 76 -- 
  out: 263 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2416):
  state_no: 254
  in: 29 -- 
  out: 27 -- 
  target: 267
  final_state: 0
  start_state: 0
Elem(2417):
  state_no: 255
  in: 2 -- 
  out: 297 -- 
  target: 255
  final_state: 0
  start_state: 0
Elem(2418):
  state_no: 255
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(2419):
  state_no: 255
  in: 38 -- 
  out: 305 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2420):
  state_no: 255
  in: 41 -- 
  out: 299 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2421):
  state_no: 255
  in: 42 -- 
  out: 300 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2422):
  state_no: 255
  in: 43 -- 
  out: 301 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2423):
  state_no: 255
  in: 46 -- 
  out: 302 -- 
  target: 255
  final_state: 0
  start_state: 0
Elem(2424):
  state_no: 255
  in: 47 -- 
  out: 306 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2425):
  state_no: 255
  in: 48 -- 
  out: 307 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2426):
  state_no: 255
  in: 57 -- 
  out: 262 -- 
  target: 255
  final_state: 0
  start_state: 0
Elem(2427):
  state_no: 255
  in: 75 -- 
  out: 298 -- 
  target: 255
  final_state: 0
  start_state: 0
Elem(2428):
  state_no: 255
  in: 76 -- 
  out: 86 -- 
  target: 190
  final_state: 0
  start_state: 0
Elem(2429):
  state_no: 256
  in: 2 -- 
  out: 297 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2430):
  state_no: 256
  in: 29 -- 
  out: 218 -- 
  target: 201
  final_state: 0
  start_state: 0
Elem(2431):
  state_no: 256
  in: 38 -- 
  out: 305 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2432):
  state_no: 256
  in: 41 -- 
  out: 299 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2433):
  state_no: 256
  in: 42 -- 
  out: 300 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2434):
  state_no: 256
  in: 43 -- 
  out: 301 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2435):
  state_no: 256
  in: 46 -- 
  out: 302 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(2436):
  state_no: 256
  in: 47 -- 
  out: 306 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2437):
  state_no: 256
  in: 48 -- 
  out: 307 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2438):
  state_no: 256
  in: 57 -- 
  out: 262 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2439):
  state_no: 256
  in: 75 -- 
  out: 298 -- 
  target: 256
  final_state: 0
  start_state: 0
Elem(2440):
  state_no: 256
  in: 76 -- 
  out: 86 -- 
  target: 191
  final_state: 0
  start_state: 0
Elem(2441):
  state_no: 257
  in: 3 -- 
  out: 282 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2442):
  state_no: 257
  in: 8 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(2443):
  state_no: 258
  in: 2 -- 
  out: 118 -- 
  target: 258
  final_state: 0
  start_state: 0
Elem(2444):
  state_no: 258
  in: 29 -- 
  out: 129 -- 
  target: 244
  final_state: 0
  start_state: 0
Elem(2445):
  state_no: 258
  in: 38 -- 
  out: 126 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2446):
  state_no: 258
  in: 41 -- 
  out: 120 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2447):
  state_no: 258
  in: 42 -- 
  out: 121 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2448):
  state_no: 258
  in: 43 -- 
  out: 122 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2449):
  state_no: 258
  in: 46 -- 
  out: 123 -- 
  target: 258
  final_state: 0
  start_state: 0
Elem(2450):
  state_no: 258
  in: 47 -- 
  out: 127 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2451):
  state_no: 258
  in: 48 -- 
  out: 128 -- 
  target: 225
  final_state: 0
  start_state: 0
Elem(2452):
  state_no: 258
  in: 57 -- 
  out: 124 -- 
  target: 258
  final_state: 0
  start_state: 0
Elem(2453):
  state_no: 258
  in: 75 -- 
  out: 119 -- 
  target: 258
  final_state: 0
  start_state: 0
Elem(2454):
  state_no: 258
  in: 76 -- 
  out: 86 -- 
  target: 258
  final_state: 0
  start_state: 0
Elem(2455):
  state_no: 259
  in: 2 -- 
  out: 207 -- 
  target: 259
  final_state: 0
  start_state: 0
Elem(2456):
  state_no: 259
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2457):
  state_no: 259
  in: 38 -- 
  out: 215 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2458):
  state_no: 259
  in: 41 -- 
  out: 209 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(2459):
  state_no: 259
  in: 42 -- 
  out: 210 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(2460):
  state_no: 259
  in: 43 -- 
  out: 211 -- 
  target: 196
  final_state: 0
  start_state: 0
Elem(2461):
  state_no: 259
  in: 46 -- 
  out: 212 -- 
  target: 259
  final_state: 0
  start_state: 0
Elem(2462):
  state_no: 259
  in: 47 -- 
  out: 216 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2463):
  state_no: 259
  in: 48 -- 
  out: 217 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2464):
  state_no: 259
  in: 57 -- 
  out: 213 -- 
  target: 259
  final_state: 0
  start_state: 0
Elem(2465):
  state_no: 259
  in: 75 -- 
  out: 208 -- 
  target: 269
  final_state: 0
  start_state: 0
Elem(2466):
  state_no: 259
  in: 76 -- 
  out: 214 -- 
  target: 259
  final_state: 0
  start_state: 0
Elem(2467):
  state_no: 260
  in: 2 -- 
  out: 256 -- 
  target: 260
  final_state: 0
  start_state: 0
Elem(2468):
  state_no: 260
  in: 29 -- 
  out: 218 -- 
  target: 262
  final_state: 0
  start_state: 0
Elem(2469):
  state_no: 260
  in: 38 -- 
  out: 264 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2470):
  state_no: 260
  in: 41 -- 
  out: 258 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(2471):
  state_no: 260
  in: 42 -- 
  out: 259 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(2472):
  state_no: 260
  in: 43 -- 
  out: 260 -- 
  target: 197
  final_state: 0
  start_state: 0
Elem(2473):
  state_no: 260
  in: 46 -- 
  out: 261 -- 
  target: 260
  final_state: 0
  start_state: 0
Elem(2474):
  state_no: 260
  in: 47 -- 
  out: 265 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2475):
  state_no: 260
  in: 48 -- 
  out: 266 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2476):
  state_no: 260
  in: 57 -- 
  out: 262 -- 
  target: 271
  final_state: 0
  start_state: 0
Elem(2477):
  state_no: 260
  in: 75 -- 
  out: 208 -- 
  target: 260
  final_state: 0
  start_state: 0
Elem(2478):
  state_no: 260
  in: 76 -- 
  out: 263 -- 
  target: 260
  final_state: 0
  start_state: 0
Elem(2479):
  state_no: 261
  in: 2 -- 
  out: 207 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2480):
  state_no: 261
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2481):
  state_no: 261
  in: 38 -- 
  out: 215 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2482):
  state_no: 261
  in: 41 -- 
  out: 209 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(2483):
  state_no: 261
  in: 42 -- 
  out: 210 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(2484):
  state_no: 261
  in: 43 -- 
  out: 211 -- 
  target: 198
  final_state: 0
  start_state: 0
Elem(2485):
  state_no: 261
  in: 46 -- 
  out: 212 -- 
  target: 105
  final_state: 0
  start_state: 0
Elem(2486):
  state_no: 261
  in: 47 -- 
  out: 216 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2487):
  state_no: 261
  in: 48 -- 
  out: 217 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2488):
  state_no: 261
  in: 57 -- 
  out: 213 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2489):
  state_no: 261
  in: 75 -- 
  out: 208 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2490):
  state_no: 261
  in: 76 -- 
  out: 214 -- 
  target: 261
  final_state: 0
  start_state: 0
Elem(2491):
  state_no: 262
  in: 3 -- 
  out: 167 -- 
  target: 273
  final_state: 0
  start_state: 0
Elem(2492):
  state_no: 262
  in: 8 -- 
  out: 66 -- 
  target: 111
  final_state: 0
  start_state: 0
Elem(2493):
  state_no: 263
  in: 2 -- 
  out: 118 -- 
  target: 263
  final_state: 0
  start_state: 0
Elem(2494):
  state_no: 263
  in: 29 -- 
  out: 129 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2495):
  state_no: 263
  in: 38 -- 
  out: 126 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2496):
  state_no: 263
  in: 41 -- 
  out: 120 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(2497):
  state_no: 263
  in: 42 -- 
  out: 121 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(2498):
  state_no: 263
  in: 43 -- 
  out: 122 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(2499):
  state_no: 263
  in: 46 -- 
  out: 123 -- 
  target: 263
  final_state: 0
  start_state: 0
Elem(2500):
  state_no: 263
  in: 47 -- 
  out: 127 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2501):
  state_no: 263
  in: 48 -- 
  out: 128 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2502):
  state_no: 263
  in: 57 -- 
  out: 124 -- 
  target: 263
  final_state: 0
  start_state: 0
Elem(2503):
  state_no: 263
  in: 75 -- 
  out: 119 -- 
  target: 263
  final_state: 0
  start_state: 0
Elem(2504):
  state_no: 263
  in: 76 -- 
  out: 86 -- 
  target: 263
  final_state: 0
  start_state: 0
Elem(2505):
  state_no: 264
  in: 2 -- 
  out: 118 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2506):
  state_no: 264
  in: 29 -- 
  out: 129 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2507):
  state_no: 264
  in: 38 -- 
  out: 126 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2508):
  state_no: 264
  in: 41 -- 
  out: 120 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(2509):
  state_no: 264
  in: 42 -- 
  out: 121 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(2510):
  state_no: 264
  in: 43 -- 
  out: 122 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(2511):
  state_no: 264
  in: 46 -- 
  out: 123 -- 
  target: 112
  final_state: 0
  start_state: 0
Elem(2512):
  state_no: 264
  in: 47 -- 
  out: 127 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2513):
  state_no: 264
  in: 48 -- 
  out: 128 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2514):
  state_no: 264
  in: 57 -- 
  out: 124 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2515):
  state_no: 264
  in: 75 -- 
  out: 119 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2516):
  state_no: 264
  in: 76 -- 
  out: 86 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2517):
  state_no: 265
  in: 2 -- 
  out: 297 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2518):
  state_no: 265
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2519):
  state_no: 265
  in: 38 -- 
  out: 305 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2520):
  state_no: 265
  in: 41 -- 
  out: 299 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2521):
  state_no: 265
  in: 42 -- 
  out: 300 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2522):
  state_no: 265
  in: 43 -- 
  out: 301 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2523):
  state_no: 265
  in: 46 -- 
  out: 302 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2524):
  state_no: 265
  in: 47 -- 
  out: 306 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2525):
  state_no: 265
  in: 48 -- 
  out: 307 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2526):
  state_no: 265
  in: 57 -- 
  out: 262 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2527):
  state_no: 265
  in: 75 -- 
  out: 298 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2528):
  state_no: 265
  in: 76 -- 
  out: 86 -- 
  target: 205
  final_state: 0
  start_state: 0
Elem(2529):
  state_no: 266
  in: 2 -- 
  out: 297 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2530):
  state_no: 266
  in: 29 -- 
  out: 218 -- 
  target: 214
  final_state: 0
  start_state: 0
Elem(2531):
  state_no: 266
  in: 38 -- 
  out: 305 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2532):
  state_no: 266
  in: 41 -- 
  out: 299 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2533):
  state_no: 266
  in: 42 -- 
  out: 300 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2534):
  state_no: 266
  in: 43 -- 
  out: 301 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2535):
  state_no: 266
  in: 46 -- 
  out: 302 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(2536):
  state_no: 266
  in: 47 -- 
  out: 306 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2537):
  state_no: 266
  in: 48 -- 
  out: 307 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2538):
  state_no: 266
  in: 57 -- 
  out: 262 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2539):
  state_no: 266
  in: 75 -- 
  out: 298 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2540):
  state_no: 266
  in: 76 -- 
  out: 86 -- 
  target: 206
  final_state: 0
  start_state: 0
Elem(2541):
  state_no: 267
  in: 3 -- 
  out: 282 -- 
  target: 274
  final_state: 0
  start_state: 0
Elem(2542):
  state_no: 268
  in: 2 -- 
  out: 118 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2543):
  state_no: 268
  in: 29 -- 
  out: 129 -- 
  target: 257
  final_state: 0
  start_state: 0
Elem(2544):
  state_no: 268
  in: 38 -- 
  out: 126 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2545):
  state_no: 268
  in: 41 -- 
  out: 120 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2546):
  state_no: 268
  in: 42 -- 
  out: 121 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2547):
  state_no: 268
  in: 43 -- 
  out: 122 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2548):
  state_no: 268
  in: 46 -- 
  out: 123 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2549):
  state_no: 268
  in: 47 -- 
  out: 127 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2550):
  state_no: 268
  in: 48 -- 
  out: 128 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2551):
  state_no: 268
  in: 57 -- 
  out: 124 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2552):
  state_no: 268
  in: 75 -- 
  out: 119 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2553):
  state_no: 268
  in: 76 -- 
  out: 86 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2554):
  state_no: 269
  in: 2 -- 
  out: 256 -- 
  target: 269
  final_state: 0
  start_state: 0
Elem(2555):
  state_no: 269
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2556):
  state_no: 269
  in: 38 -- 
  out: 264 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2557):
  state_no: 269
  in: 41 -- 
  out: 258 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(2558):
  state_no: 269
  in: 42 -- 
  out: 259 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(2559):
  state_no: 269
  in: 43 -- 
  out: 260 -- 
  target: 213
  final_state: 0
  start_state: 0
Elem(2560):
  state_no: 269
  in: 46 -- 
  out: 261 -- 
  target: 269
  final_state: 0
  start_state: 0
Elem(2561):
  state_no: 269
  in: 47 -- 
  out: 265 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2562):
  state_no: 269
  in: 48 -- 
  out: 266 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2563):
  state_no: 269
  in: 57 -- 
  out: 262 -- 
  target: 275
  final_state: 0
  start_state: 0
Elem(2564):
  state_no: 269
  in: 75 -- 
  out: 208 -- 
  target: 269
  final_state: 0
  start_state: 0
Elem(2565):
  state_no: 269
  in: 76 -- 
  out: 263 -- 
  target: 269
  final_state: 0
  start_state: 0
Elem(2566):
  state_no: 270
  in: 3 -- 
  out: 167 -- 
  target: 276
  final_state: 0
  start_state: 0
Elem(2567):
  state_no: 270
  in: 8 -- 
  out: 66 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(2568):
  state_no: 271
  in: 2 -- 
  out: 297 -- 
  target: 271
  final_state: 0
  start_state: 0
Elem(2569):
  state_no: 271
  in: 29 -- 
  out: 218 -- 
  target: 262
  final_state: 0
  start_state: 0
Elem(2570):
  state_no: 271
  in: 38 -- 
  out: 305 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2571):
  state_no: 271
  in: 41 -- 
  out: 299 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2572):
  state_no: 271
  in: 42 -- 
  out: 300 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2573):
  state_no: 271
  in: 43 -- 
  out: 301 -- 
  target: 215
  final_state: 0
  start_state: 0
Elem(2574):
  state_no: 271
  in: 46 -- 
  out: 302 -- 
  target: 271
  final_state: 0
  start_state: 0
Elem(2575):
  state_no: 271
  in: 47 -- 
  out: 306 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2576):
  state_no: 271
  in: 48 -- 
  out: 307 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2577):
  state_no: 271
  in: 57 -- 
  out: 262 -- 
  target: 271
  final_state: 0
  start_state: 0
Elem(2578):
  state_no: 271
  in: 75 -- 
  out: 298 -- 
  target: 271
  final_state: 0
  start_state: 0
Elem(2579):
  state_no: 271
  in: 76 -- 
  out: 86 -- 
  target: 208
  final_state: 0
  start_state: 0
Elem(2580):
  state_no: 272
  in: 2 -- 
  out: 256 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2581):
  state_no: 272
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2582):
  state_no: 272
  in: 38 -- 
  out: 264 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2583):
  state_no: 272
  in: 41 -- 
  out: 258 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2584):
  state_no: 272
  in: 42 -- 
  out: 259 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2585):
  state_no: 272
  in: 43 -- 
  out: 260 -- 
  target: 216
  final_state: 0
  start_state: 0
Elem(2586):
  state_no: 272
  in: 46 -- 
  out: 261 -- 
  target: 117
  final_state: 0
  start_state: 0
Elem(2587):
  state_no: 272
  in: 47 -- 
  out: 265 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2588):
  state_no: 272
  in: 48 -- 
  out: 266 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2589):
  state_no: 272
  in: 57 -- 
  out: 262 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2590):
  state_no: 272
  in: 75 -- 
  out: 208 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2591):
  state_no: 272
  in: 76 -- 
  out: 263 -- 
  target: 272
  final_state: 0
  start_state: 0
Elem(2592):
  state_no: 273
  in: 2 -- 
  out: 207 -- 
  target: 273
  final_state: 0
  start_state: 0
Elem(2593):
  state_no: 273
  in: 29 -- 
  out: 218 -- 
  target: 262
  final_state: 0
  start_state: 0
Elem(2594):
  state_no: 273
  in: 38 -- 
  out: 215 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2595):
  state_no: 273
  in: 41 -- 
  out: 209 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2596):
  state_no: 273
  in: 42 -- 
  out: 210 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2597):
  state_no: 273
  in: 43 -- 
  out: 211 -- 
  target: 217
  final_state: 0
  start_state: 0
Elem(2598):
  state_no: 273
  in: 46 -- 
  out: 212 -- 
  target: 273
  final_state: 0
  start_state: 0
Elem(2599):
  state_no: 273
  in: 47 -- 
  out: 216 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2600):
  state_no: 273
  in: 48 -- 
  out: 217 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2601):
  state_no: 273
  in: 57 -- 
  out: 213 -- 
  target: 273
  final_state: 0
  start_state: 0
Elem(2602):
  state_no: 273
  in: 75 -- 
  out: 208 -- 
  target: 278
  final_state: 0
  start_state: 0
Elem(2603):
  state_no: 273
  in: 76 -- 
  out: 214 -- 
  target: 273
  final_state: 0
  start_state: 0
Elem(2604):
  state_no: 274
  in: 2 -- 
  out: 118 -- 
  target: 274
  final_state: 0
  start_state: 0
Elem(2605):
  state_no: 274
  in: 29 -- 
  out: 129 -- 
  target: 281
  final_state: 0
  start_state: 0
Elem(2606):
  state_no: 274
  in: 38 -- 
  out: 126 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2607):
  state_no: 274
  in: 41 -- 
  out: 120 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2608):
  state_no: 274
  in: 42 -- 
  out: 121 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2609):
  state_no: 274
  in: 43 -- 
  out: 122 -- 
  target: 224
  final_state: 0
  start_state: 0
Elem(2610):
  state_no: 274
  in: 46 -- 
  out: 123 -- 
  target: 274
  final_state: 0
  start_state: 0
Elem(2611):
  state_no: 274
  in: 47 -- 
  out: 127 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2612):
  state_no: 274
  in: 48 -- 
  out: 128 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2613):
  state_no: 274
  in: 57 -- 
  out: 124 -- 
  target: 274
  final_state: 0
  start_state: 0
Elem(2614):
  state_no: 274
  in: 75 -- 
  out: 119 -- 
  target: 274
  final_state: 0
  start_state: 0
Elem(2615):
  state_no: 274
  in: 76 -- 
  out: 86 -- 
  target: 274
  final_state: 0
  start_state: 0
Elem(2616):
  state_no: 275
  in: 2 -- 
  out: 297 -- 
  target: 275
  final_state: 0
  start_state: 0
Elem(2617):
  state_no: 275
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2618):
  state_no: 275
  in: 38 -- 
  out: 305 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2619):
  state_no: 275
  in: 41 -- 
  out: 299 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2620):
  state_no: 275
  in: 42 -- 
  out: 300 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2621):
  state_no: 275
  in: 43 -- 
  out: 301 -- 
  target: 232
  final_state: 0
  start_state: 0
Elem(2622):
  state_no: 275
  in: 46 -- 
  out: 302 -- 
  target: 275
  final_state: 0
  start_state: 0
Elem(2623):
  state_no: 275
  in: 47 -- 
  out: 306 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2624):
  state_no: 275
  in: 48 -- 
  out: 307 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2625):
  state_no: 275
  in: 57 -- 
  out: 262 -- 
  target: 275
  final_state: 0
  start_state: 0
Elem(2626):
  state_no: 275
  in: 75 -- 
  out: 298 -- 
  target: 275
  final_state: 0
  start_state: 0
Elem(2627):
  state_no: 275
  in: 76 -- 
  out: 86 -- 
  target: 282
  final_state: 0
  start_state: 0
Elem(2628):
  state_no: 276
  in: 2 -- 
  out: 207 -- 
  target: 276
  final_state: 0
  start_state: 0
Elem(2629):
  state_no: 276
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2630):
  state_no: 276
  in: 38 -- 
  out: 215 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2631):
  state_no: 276
  in: 41 -- 
  out: 209 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2632):
  state_no: 276
  in: 42 -- 
  out: 210 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2633):
  state_no: 276
  in: 43 -- 
  out: 211 -- 
  target: 233
  final_state: 0
  start_state: 0
Elem(2634):
  state_no: 276
  in: 46 -- 
  out: 212 -- 
  target: 276
  final_state: 0
  start_state: 0
Elem(2635):
  state_no: 276
  in: 47 -- 
  out: 216 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2636):
  state_no: 276
  in: 48 -- 
  out: 217 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2637):
  state_no: 276
  in: 57 -- 
  out: 213 -- 
  target: 276
  final_state: 0
  start_state: 0
Elem(2638):
  state_no: 276
  in: 75 -- 
  out: 208 -- 
  target: 283
  final_state: 0
  start_state: 0
Elem(2639):
  state_no: 276
  in: 76 -- 
  out: 214 -- 
  target: 276
  final_state: 0
  start_state: 0
Elem(2640):
  state_no: 277
  in: 2 -- 
  out: 297 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2641):
  state_no: 277
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2642):
  state_no: 277
  in: 38 -- 
  out: 305 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2643):
  state_no: 277
  in: 41 -- 
  out: 299 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2644):
  state_no: 277
  in: 42 -- 
  out: 300 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2645):
  state_no: 277
  in: 43 -- 
  out: 301 -- 
  target: 234
  final_state: 0
  start_state: 0
Elem(2646):
  state_no: 277
  in: 46 -- 
  out: 302 -- 
  target: 132
  final_state: 0
  start_state: 0
Elem(2647):
  state_no: 277
  in: 47 -- 
  out: 306 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2648):
  state_no: 277
  in: 48 -- 
  out: 307 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2649):
  state_no: 277
  in: 57 -- 
  out: 262 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2650):
  state_no: 277
  in: 75 -- 
  out: 298 -- 
  target: 277
  final_state: 0
  start_state: 0
Elem(2651):
  state_no: 277
  in: 76 -- 
  out: 86 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2652):
  state_no: 278
  in: 2 -- 
  out: 256 -- 
  target: 278
  final_state: 0
  start_state: 0
Elem(2653):
  state_no: 278
  in: 29 -- 
  out: 218 -- 
  target: 262
  final_state: 0
  start_state: 0
Elem(2654):
  state_no: 278
  in: 38 -- 
  out: 264 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2655):
  state_no: 278
  in: 41 -- 
  out: 258 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2656):
  state_no: 278
  in: 42 -- 
  out: 259 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2657):
  state_no: 278
  in: 43 -- 
  out: 260 -- 
  target: 235
  final_state: 0
  start_state: 0
Elem(2658):
  state_no: 278
  in: 46 -- 
  out: 261 -- 
  target: 278
  final_state: 0
  start_state: 0
Elem(2659):
  state_no: 278
  in: 47 -- 
  out: 265 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2660):
  state_no: 278
  in: 48 -- 
  out: 266 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2661):
  state_no: 278
  in: 57 -- 
  out: 262 -- 
  target: 284
  final_state: 0
  start_state: 0
Elem(2662):
  state_no: 278
  in: 75 -- 
  out: 208 -- 
  target: 278
  final_state: 0
  start_state: 0
Elem(2663):
  state_no: 278
  in: 76 -- 
  out: 263 -- 
  target: 278
  final_state: 0
  start_state: 0
Elem(2664):
  state_no: 279
  in: 2 -- 
  out: 207 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2665):
  state_no: 279
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2666):
  state_no: 279
  in: 38 -- 
  out: 215 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2667):
  state_no: 279
  in: 41 -- 
  out: 209 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2668):
  state_no: 279
  in: 42 -- 
  out: 210 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2669):
  state_no: 279
  in: 43 -- 
  out: 211 -- 
  target: 236
  final_state: 0
  start_state: 0
Elem(2670):
  state_no: 279
  in: 46 -- 
  out: 212 -- 
  target: 133
  final_state: 0
  start_state: 0
Elem(2671):
  state_no: 279
  in: 47 -- 
  out: 216 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2672):
  state_no: 279
  in: 48 -- 
  out: 217 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2673):
  state_no: 279
  in: 57 -- 
  out: 213 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2674):
  state_no: 279
  in: 75 -- 
  out: 208 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2675):
  state_no: 279
  in: 76 -- 
  out: 214 -- 
  target: 279
  final_state: 0
  start_state: 0
Elem(2676):
  state_no: 280
  in: 2 -- 
  out: 118 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2677):
  state_no: 280
  in: 29 -- 
  out: 129 -- 
  target: 286
  final_state: 0
  start_state: 0
Elem(2678):
  state_no: 280
  in: 38 -- 
  out: 126 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2679):
  state_no: 280
  in: 41 -- 
  out: 120 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2680):
  state_no: 280
  in: 42 -- 
  out: 121 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2681):
  state_no: 280
  in: 43 -- 
  out: 122 -- 
  target: 242
  final_state: 0
  start_state: 0
Elem(2682):
  state_no: 280
  in: 46 -- 
  out: 123 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(2683):
  state_no: 280
  in: 47 -- 
  out: 127 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2684):
  state_no: 280
  in: 48 -- 
  out: 128 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2685):
  state_no: 280
  in: 57 -- 
  out: 124 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2686):
  state_no: 280
  in: 75 -- 
  out: 119 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2687):
  state_no: 280
  in: 76 -- 
  out: 86 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2688):
  state_no: 281
  in: 3 -- 
  out: 282 -- 
  target: 274
  final_state: 0
  start_state: 0
Elem(2689):
  state_no: 281
  in: 8 -- 
  out: 66 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(2690):
  state_no: 282
  in: 2 -- 
  out: 118 -- 
  target: 282
  final_state: 0
  start_state: 0
Elem(2691):
  state_no: 282
  in: 29 -- 
  out: 129 -- 
  target: 245
  final_state: 0
  start_state: 0
Elem(2692):
  state_no: 282
  in: 38 -- 
  out: 126 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2693):
  state_no: 282
  in: 41 -- 
  out: 120 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2694):
  state_no: 282
  in: 42 -- 
  out: 121 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2695):
  state_no: 282
  in: 43 -- 
  out: 122 -- 
  target: 250
  final_state: 0
  start_state: 0
Elem(2696):
  state_no: 282
  in: 46 -- 
  out: 123 -- 
  target: 282
  final_state: 0
  start_state: 0
Elem(2697):
  state_no: 282
  in: 47 -- 
  out: 127 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2698):
  state_no: 282
  in: 48 -- 
  out: 128 -- 
  target: 227
  final_state: 0
  start_state: 0
Elem(2699):
  state_no: 282
  in: 57 -- 
  out: 124 -- 
  target: 282
  final_state: 0
  start_state: 0
Elem(2700):
  state_no: 282
  in: 75 -- 
  out: 119 -- 
  target: 282
  final_state: 0
  start_state: 0
Elem(2701):
  state_no: 282
  in: 76 -- 
  out: 86 -- 
  target: 282
  final_state: 0
  start_state: 0
Elem(2702):
  state_no: 283
  in: 2 -- 
  out: 256 -- 
  target: 283
  final_state: 0
  start_state: 0
Elem(2703):
  state_no: 283
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2704):
  state_no: 283
  in: 38 -- 
  out: 264 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2705):
  state_no: 283
  in: 41 -- 
  out: 258 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2706):
  state_no: 283
  in: 42 -- 
  out: 259 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2707):
  state_no: 283
  in: 43 -- 
  out: 260 -- 
  target: 251
  final_state: 0
  start_state: 0
Elem(2708):
  state_no: 283
  in: 46 -- 
  out: 261 -- 
  target: 283
  final_state: 0
  start_state: 0
Elem(2709):
  state_no: 283
  in: 47 -- 
  out: 265 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2710):
  state_no: 283
  in: 48 -- 
  out: 266 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2711):
  state_no: 283
  in: 57 -- 
  out: 262 -- 
  target: 287
  final_state: 0
  start_state: 0
Elem(2712):
  state_no: 283
  in: 75 -- 
  out: 208 -- 
  target: 283
  final_state: 0
  start_state: 0
Elem(2713):
  state_no: 283
  in: 76 -- 
  out: 263 -- 
  target: 283
  final_state: 0
  start_state: 0
Elem(2714):
  state_no: 284
  in: 2 -- 
  out: 297 -- 
  target: 284
  final_state: 0
  start_state: 0
Elem(2715):
  state_no: 284
  in: 29 -- 
  out: 218 -- 
  target: 262
  final_state: 0
  start_state: 0
Elem(2716):
  state_no: 284
  in: 38 -- 
  out: 305 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2717):
  state_no: 284
  in: 41 -- 
  out: 299 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2718):
  state_no: 284
  in: 42 -- 
  out: 300 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2719):
  state_no: 284
  in: 43 -- 
  out: 301 -- 
  target: 252
  final_state: 0
  start_state: 0
Elem(2720):
  state_no: 284
  in: 46 -- 
  out: 302 -- 
  target: 284
  final_state: 0
  start_state: 0
Elem(2721):
  state_no: 284
  in: 47 -- 
  out: 306 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2722):
  state_no: 284
  in: 48 -- 
  out: 307 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2723):
  state_no: 284
  in: 57 -- 
  out: 262 -- 
  target: 284
  final_state: 0
  start_state: 0
Elem(2724):
  state_no: 284
  in: 75 -- 
  out: 298 -- 
  target: 284
  final_state: 0
  start_state: 0
Elem(2725):
  state_no: 284
  in: 76 -- 
  out: 86 -- 
  target: 248
  final_state: 0
  start_state: 0
Elem(2726):
  state_no: 285
  in: 2 -- 
  out: 256 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2727):
  state_no: 285
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2728):
  state_no: 285
  in: 38 -- 
  out: 264 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2729):
  state_no: 285
  in: 41 -- 
  out: 258 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2730):
  state_no: 285
  in: 42 -- 
  out: 259 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2731):
  state_no: 285
  in: 43 -- 
  out: 260 -- 
  target: 253
  final_state: 0
  start_state: 0
Elem(2732):
  state_no: 285
  in: 46 -- 
  out: 261 -- 
  target: 149
  final_state: 0
  start_state: 0
Elem(2733):
  state_no: 285
  in: 47 -- 
  out: 265 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2734):
  state_no: 285
  in: 48 -- 
  out: 266 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2735):
  state_no: 285
  in: 57 -- 
  out: 262 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2736):
  state_no: 285
  in: 75 -- 
  out: 208 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2737):
  state_no: 285
  in: 76 -- 
  out: 263 -- 
  target: 285
  final_state: 0
  start_state: 0
Elem(2738):
  state_no: 286
  in: 3 -- 
  out: 282 -- 
  target: 289
  final_state: 0
  start_state: 0
Elem(2739):
  state_no: 286
  in: 8 -- 
  out: 66 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(2740):
  state_no: 287
  in: 2 -- 
  out: 297 -- 
  target: 287
  final_state: 0
  start_state: 0
Elem(2741):
  state_no: 287
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2742):
  state_no: 287
  in: 38 -- 
  out: 305 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2743):
  state_no: 287
  in: 41 -- 
  out: 299 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2744):
  state_no: 287
  in: 42 -- 
  out: 300 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2745):
  state_no: 287
  in: 43 -- 
  out: 301 -- 
  target: 265
  final_state: 0
  start_state: 0
Elem(2746):
  state_no: 287
  in: 46 -- 
  out: 302 -- 
  target: 287
  final_state: 0
  start_state: 0
Elem(2747):
  state_no: 287
  in: 47 -- 
  out: 306 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2748):
  state_no: 287
  in: 48 -- 
  out: 307 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2749):
  state_no: 287
  in: 57 -- 
  out: 262 -- 
  target: 287
  final_state: 0
  start_state: 0
Elem(2750):
  state_no: 287
  in: 75 -- 
  out: 298 -- 
  target: 287
  final_state: 0
  start_state: 0
Elem(2751):
  state_no: 287
  in: 76 -- 
  out: 86 -- 
  target: 263
  final_state: 0
  start_state: 0
Elem(2752):
  state_no: 288
  in: 2 -- 
  out: 297 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2753):
  state_no: 288
  in: 29 -- 
  out: 218 -- 
  target: 270
  final_state: 0
  start_state: 0
Elem(2754):
  state_no: 288
  in: 38 -- 
  out: 305 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2755):
  state_no: 288
  in: 41 -- 
  out: 299 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2756):
  state_no: 288
  in: 42 -- 
  out: 300 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2757):
  state_no: 288
  in: 43 -- 
  out: 301 -- 
  target: 266
  final_state: 0
  start_state: 0
Elem(2758):
  state_no: 288
  in: 46 -- 
  out: 302 -- 
  target: 164
  final_state: 0
  start_state: 0
Elem(2759):
  state_no: 288
  in: 47 -- 
  out: 306 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2760):
  state_no: 288
  in: 48 -- 
  out: 307 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2761):
  state_no: 288
  in: 57 -- 
  out: 262 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2762):
  state_no: 288
  in: 75 -- 
  out: 298 -- 
  target: 288
  final_state: 0
  start_state: 0
Elem(2763):
  state_no: 288
  in: 76 -- 
  out: 86 -- 
  target: 264
  final_state: 0
  start_state: 0
Elem(2764):
  state_no: 289
  in: 2 -- 
  out: 118 -- 
  target: 289
  final_state: 0
  start_state: 0
Elem(2765):
  state_no: 289
  in: 29 -- 
  out: 129 -- 
  target: 286
  final_state: 0
  start_state: 0
Elem(2766):
  state_no: 289
  in: 38 -- 
  out: 126 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2767):
  state_no: 289
  in: 41 -- 
  out: 120 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2768):
  state_no: 289
  in: 42 -- 
  out: 121 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2769):
  state_no: 289
  in: 43 -- 
  out: 122 -- 
  target: 268
  final_state: 0
  start_state: 0
Elem(2770):
  state_no: 289
  in: 46 -- 
  out: 123 -- 
  target: 289
  final_state: 0
  start_state: 0
Elem(2771):
  state_no: 289
  in: 47 -- 
  out: 127 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2772):
  state_no: 289
  in: 48 -- 
  out: 128 -- 
  target: 280
  final_state: 0
  start_state: 0
Elem(2773):
  state_no: 289
  in: 57 -- 
  out: 124 -- 
  target: 289
  final_state: 0
  start_state: 0
Elem(2774):
  state_no: 289
  in: 75 -- 
  out: 119 -- 
  target: 289
  final_state: 0
  start_state: 0
Elem(2775):
  state_no: 289
  in: 76 -- 
  out: 86 -- 
  target: 289
  final_state: 0
  start_state: 0
Elem(2776):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(79): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 10, "<Akkor>" )
Symbol(7, 56, 6, #BOC# )
Symbol(29, 62, 2, | )
Symbol(3, 64, 4, #0# )
Symbol(2, 68, 8, "akkor" )
Symbol(45, 76, 9, <cnjcoo> )
Symbol(29, 85, 2, | )
Symbol(3, 87, 4, #0# )
Symbol(2, 91, 8, "akkor" )
Symbol(54, 99, 6, <adv> )
Symbol(29, 105, 2, | )
Symbol(3, 107, 4, #0# )
Symbol(75, 111, 5, "az" )
Symbol(2, 116, 9, <predet> )
Symbol(87, 125, 5, <sg> )
Symbol(76, 130, 6, <tem> )
Symbol(29, 136, 2, | )
Symbol(3, 138, 4, #0# )
Symbol(75, 142, 5, "az" )
Symbol(57, 147, 6, <prn> )
Symbol(87, 153, 5, <sg> )
Symbol(76, 158, 6, <tem> )
Symbol(29, 164, 2, | )
Symbol(8, 166, 6, #EOC# )
Symbol(10, 172, 4, $0$ )
Symbol(2, 176, 8, "<nem>" )
Symbol(7, 184, 6, #BOC# )
Symbol(29, 190, 2, | )
Symbol(3, 192, 4, #0# )
Symbol(2, 196, 6, "nem" )
Symbol(91, 202, 5, <ij> )
Symbol(29, 207, 2, | )
Symbol(3, 209, 4, #0# )
Symbol(2, 213, 6, "nem" )
Symbol(54, 219, 6, <adv> )
Symbol(29, 225, 2, | )
Symbol(8, 227, 6, #EOC# )
Symbol(10, 233, 4, $0$ )
Symbol(2, 237, 17, "<játszhattak>" )
Symbol(7, 254, 6, #BOC# )
Symbol(29, 260, 2, | )
Symbol(3, 262, 4, #0# )
Symbol(2, 266, 11, "játszik" )
Symbol(47, 277, 8, <vbmod> )
Symbol(46, 285, 7, <past> )
Symbol(2, 292, 5, <pl> )
Symbol(2, 297, 6, <s3p> )
Symbol(2, 303, 6, <ind> )
Symbol(29, 309, 2, | )
Symbol(8, 311, 6, #EOC# )
Symbol(10, 317, 4, $0$ )
Symbol(2, 321, 12, "<odakint>" )
Symbol(7, 333, 6, #BOC# )
Symbol(29, 339, 2, | )
Symbol(3, 341, 4, #0# )
Symbol(2, 345, 10, "odakint" )
Symbol(54, 355, 6, <adv> )
Symbol(29, 361, 2, | )
Symbol(8, 363, 6, #EOC# )
Symbol(10, 369, 4, $0$ )
Symbol(2, 373, 6, "<.>" )
Symbol(7, 379, 6, #BOC# )
Symbol(29, 385, 2, | )
Symbol(3, 387, 4, #0# )
Symbol(2, 391, 4, "." )
Symbol(64, 395, 7, <sent> )
Symbol(2, 402, 6, <<<<> )
Symbol(29, 408, 2, | )
Symbol(8, 410, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 45 29 3 2 54 29 3 75 2 87 76 29 3 75 57 87 76 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 47 46 2 2 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 8
trans_offset 12, signum = 2, q = 1, out = 15
trans_offset 13, signum = 7, q = 1, out = 20
trans_offset 24, signum = 29, q = 2, out = 27
trans_offset 25, signum = 3, q = 3, out = 28
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 27, signum = 29, q = 4, out = 40
trans_offset 63, signum = 8, q = 7, out = 66
trans_offset 102, signum = 10, q = 12, out = 8
trans_offset 12, signum = 2, q = 1, out = 15
trans_offset 13, signum = 7, q = 1, out = 20
trans_offset 24, signum = 29, q = 2, out = 27
trans_offset 25, signum = 3, q = 3, out = 28
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 27, signum = 29, q = 4, out = 40
trans_offset 62, signum = 3, q = 7, out = 28
trans_offset 90, signum = 2, q = 11, out = 29
trans_offset 90, signum = 2, q = 11, out = 29
trans_offset 91, signum = 29, q = 11, out = 40
trans_offset 62, signum = 3, q = 7, out = 28
trans_offset 100, signum = 75, q = 11, out = 30
trans_offset 140, signum = 2, q = 17, out = 41
trans_offset 140, signum = 2, q = 17, out = 41
trans_offset 151, signum = 76, q = 17, out = 48
trans_offset 141, signum = 29, q = 17, out = 40
trans_offset 62, signum = 3, q = 7, out = 28
trans_offset 100, signum = 75, q = 11, out = 30
trans_offset 149, signum = 57, q = 17, out = 47
trans_offset 190, signum = 2, q = 22, out = 79
trans_offset 201, signum = 76, q = 22, out = 86
trans_offset 230, signum = 29, q = 27, out = 129
trans_offset 266, signum = 8, q = 30, out = 66
trans_offset 318, signum = 10, q = 37, out = 8
trans_offset 368, signum = 2, q = 43, out = 15
trans_offset 369, signum = 7, q = 43, out = 20
trans_offset 430, signum = 29, q = 49, out = 27
trans_offset 446, signum = 3, q = 53, out = 28
trans_offset 448, signum = 2, q = 55, out = 29
trans_offset 448, signum = 2, q = 55, out = 29
trans_offset 449, signum = 29, q = 55, out = 40
trans_offset 496, signum = 3, q = 59, out = 28
trans_offset 550, signum = 2, q = 66, out = 29
trans_offset 550, signum = 2, q = 66, out = 29
trans_offset 551, signum = 29, q = 66, out = 40
trans_offset 497, signum = 8, q = 59, out = 66
trans_offset 562, signum = 10, q = 67, out = 8
trans_offset 651, signum = 2, q = 77, out = 15
trans_offset 652, signum = 7, q = 77, out = 20
trans_offset 751, signum = 29, q = 87, out = 27
trans_offset 826, signum = 3, q = 95, out = 28
trans_offset 903, signum = 2, q = 104, out = 29
trans_offset 910, signum = 47, q = 104, out = 38
trans_offset 1020, signum = 46, q = 115, out = 34
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 27, signum = 29, q = 4, out = 40
trans_offset 63, signum = 8, q = 7, out = 66
trans_offset 102, signum = 10, q = 12, out = 8
trans_offset 12, signum = 2, q = 1, out = 15
trans_offset 13, signum = 7, q = 1, out = 20
trans_offset 24, signum = 29, q = 2, out = 27
trans_offset 25, signum = 3, q = 3, out = 28
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 27, signum = 29, q = 4, out = 40
trans_offset 63, signum = 8, q = 7, out = 66
trans_offset 102, signum = 10, q = 12, out = 8
trans_offset 12, signum = 2, q = 1, out = 15
trans_offset 13, signum = 7, q = 1, out = 20
trans_offset 24, signum = 29, q = 2, out = 27
trans_offset 25, signum = 3, q = 3, out = 28
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 26, signum = 2, q = 4, out = 29
trans_offset 27, signum = 29, q = 4, out = 40
trans_offset 63, signum = 8, q = 7, out = 66

Intermediate is(79): 
8 15 20 27 28 29 29 40 66 8 15 20 27 28 29 29 40 28 29 29 40 28 30 41 41 48 40 28 30 47 79 86 129 66 8 15 20 27 28 29 29 40 28 29 29 40 66 8 15 20 27 28 29 38 34 29 29 29 40 66 8 15 20 27 28 29 29 40 66 8 15 20 27 28 29 29 29 40 66 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 152, q = 4, out = 29
trans_offset 308, q = 8, out = 7
trans_offset 607, q = 12, out = 2
trans_offset 606, q = 12, out = 10
trans_offset 637, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 152, q = 4, out = 29
trans_offset 308, q = 8, out = 7
trans_offset 607, q = 12, out = 2
trans_offset 606, q = 12, out = 10
trans_offset 637, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 10, q = 2, out = 46
trans_offset 166, q = 5, out = 47
trans_offset 384, q = 9, out = 2
trans_offset 383, q = 9, out = 3
trans_offset 618, q = 13, out = 29
trans_offset 638, q = 16, out = 7
trans_offset 800, q = 19, out = 2
trans_offset 799, q = 19, out = 10
trans_offset 834, q = 21, out = 8
trans_offset 847, q = 23, out = 29
trans_offset 854, q = 25, out = 2
trans_offset 854, q = 25, out = 2
trans_offset 853, q = 25, out = 3
trans_offset 1076, q = 28, out = 29
trans_offset 1681, q = 39, out = 2
trans_offset 854, q = 25, out = 2
trans_offset 853, q = 25, out = 3
trans_offset 1075, q = 28, out = 29
trans_offset 1679, q = 39, out = 7
trans_offset 800, q = 19, out = 2
trans_offset 799, q = 19, out = 10
trans_offset 834, q = 21, out = 8
trans_offset 848, q = 23, out = 29
trans_offset 881, q = 25, out = 76
trans_offset 1175, q = 30, out = 2
trans_offset 1170, q = 30, out = 57
trans_offset 1904, q = 42, out = 75
trans_offset 2882, q = 59, out = 3
trans_offset 3927, q = 74, out = 0
trans_offset 4546, q = 84, out = 0
trans_offset 5145, q = 95, out = 0
trans_offset 5145, q = 95, out = 0
trans_offset 5135, q = 95, out = 0
trans_offset 5133, q = 95, out = 0
trans_offset 3927, q = 74, out = 0
trans_offset 4529, q = 84, out = 0
trans_offset 4912, q = 92, out = 0
trans_offset 4911, q = 92, out = 0
trans_offset 3927, q = 74, out = 0
trans_offset 4529, q = 84, out = 0
trans_offset 4912, q = 92, out = 0
trans_offset 4911, q = 92, out = 0
trans_offset 3926, q = 74, out = 29
trans_offset 4527, q = 84, out = 7
trans_offset 800, q = 19, out = 2
trans_offset 799, q = 19, out = 10
trans_offset 834, q = 21, out = 8
trans_offset 847, q = 23, out = 29
trans_offset 854, q = 25, out = 2
trans_offset 854, q = 25, out = 2
trans_offset 853, q = 25, out = 3
trans_offset 1075, q = 28, out = 29
trans_offset 1679, q = 39, out = 7
trans_offset 800, q = 19, out = 2
trans_offset 799, q = 19, out = 10

Output is(65): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 10, "<Akkor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 0, 0, )
Symbol(57, 0, 0, )
Symbol(87, 153, 5, <sg> )
Symbol(76, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 176, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 196, 6, "nem" )
Symbol(91, 202, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 213, 6, "nem" )
Symbol(54, 219, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 237, 17, "<játszhattak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 266, 11, "játszik" )
Symbol(47, 0, 0, )
Symbol(46, 0, 0, )
Symbol(2, 292, 5, <pl> )
Symbol(2, 297, 6, <s3p> )
Symbol(2, 303, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 321, 12, "<odakint>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 345, 10, "odakint" )
Symbol(54, 355, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 373, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 391, 4, "." )
Symbol(64, 395, 7, <sent> )
Symbol(2, 402, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 75 57 87 76 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 47 46 2 2 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<imádnak>" #BOC# | #0# "ima" <n> <sg> <px2ss> <dat> | #0# "imád" <vblex> <pres> <pl> <s3p> <ind> | #EOC# $0$ "<játszani>" #BOC# | #0# "játszik" <vblex> <inf> <sg> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<mindig>" #BOC# | #0# "mindig" <adv> | #EOC# $0$ "<együtt>" #BOC# | #0# "együtt" <prevb> | #0# "együtt" <adv> | #0# "együtt" <post> | #EOC# $0$ "<játszanak>" #BOC# | #0# "játszik" <vblex> <pres> <pl> <s3p> <ind> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kertben>" #BOC# | #0# "kert" <n> <sg> <ine> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<nagy>" #BOC# | #0# "nagy" <n> <sg> <nom> | #0# "nagy" <adj> <sg> <nom> | #EOC# $0$ "<ház>" #BOC# | #0# "ház" <n> <sg> <nom> | #EOC# $0$ "<előtt>" #BOC# | #0# "előtt" <post> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_150_T_1


LRS T1:
Name: R_1_150_T_1
arity: 2
arccount: 295
statecount: 38
linecount: 296
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 38 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 44 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 45 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 47 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 48 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 49 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 50 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 51 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 52 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 1
  in: 2 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 7 -- 
  out: 18 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 38 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 44 -- 
  out: 19 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 45 -- 
  out: 20 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 1
  in: 47 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 1
  in: 48 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 49 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 50 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 51 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 52 -- 
  out: 21 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 2
  in: 29 -- 
  out: 25 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 3 -- 
  out: 26 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 2 -- 
  out: 27 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 29 -- 
  out: 37 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 4
  in: 38 -- 
  out: 34 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 4
  in: 44 -- 
  out: 31 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 4
  in: 45 -- 
  out: 32 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 4
  in: 47 -- 
  out: 35 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 4
  in: 48 -- 
  out: 36 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 4
  in: 49 -- 
  out: 28 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 4
  in: 50 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 4
  in: 51 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 4
  in: 52 -- 
  out: 33 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 5
  in: 2 -- 
  out: 38 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 5
  in: 29 -- 
  out: 48 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 5
  in: 38 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 5
  in: 44 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 5
  in: 45 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 5
  in: 47 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 5
  in: 48 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 5
  in: 49 -- 
  out: 28 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 5
  in: 50 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 5
  in: 51 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 5
  in: 52 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 6
  in: 3 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 6
  in: 8 -- 
  out: 50 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 7
  in: 3 -- 
  out: 51 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 7
  in: 8 -- 
  out: 50 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 8
  in: 2 -- 
  out: 27 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 8
  in: 29 -- 
  out: 37 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 8
  in: 38 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 8
  in: 44 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 8
  in: 45 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 8
  in: 47 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 8
  in: 48 -- 
  out: 36 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 8
  in: 49 -- 
  out: 28 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 8
  in: 50 -- 
  out: 29 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 8
  in: 51 -- 
  out: 30 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 8
  in: 52 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 9
  in: 10 -- 
  out: 7 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(62):
  state_no: 10
  in: 2 -- 
  out: 65 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 10
  in: 29 -- 
  out: 75 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 10
  in: 38 -- 
  out: 72 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 10
  in: 44 -- 
  out: 69 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 10
  in: 45 -- 
  out: 70 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 10
  in: 47 -- 
  out: 73 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 10
  in: 48 -- 
  out: 74 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 10
  in: 49 -- 
  out: 28 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 10
  in: 50 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 10
  in: 51 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 10
  in: 52 -- 
  out: 71 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 11
  in: 2 -- 
  out: 38 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 11
  in: 29 -- 
  out: 48 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 11
  in: 38 -- 
  out: 45 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 11
  in: 44 -- 
  out: 42 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 11
  in: 45 -- 
  out: 43 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 11
  in: 47 -- 
  out: 46 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 11
  in: 48 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 11
  in: 49 -- 
  out: 28 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 11
  in: 50 -- 
  out: 29 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 11
  in: 51 -- 
  out: 30 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 11
  in: 52 -- 
  out: 44 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 12
  in: 3 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 12
  in: 8 -- 
  out: 50 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 13
  in: 2 -- 
  out: 65 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 13
  in: 29 -- 
  out: 75 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 13
  in: 38 -- 
  out: 72 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 13
  in: 44 -- 
  out: 69 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 13
  in: 45 -- 
  out: 70 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 13
  in: 47 -- 
  out: 73 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 13
  in: 48 -- 
  out: 74 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 13
  in: 49 -- 
  out: 28 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 13
  in: 50 -- 
  out: 29 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 13
  in: 51 -- 
  out: 30 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 13
  in: 52 -- 
  out: 71 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 14
  in: 10 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 15
  in: 2 -- 
  out: 14 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 15
  in: 7 -- 
  out: 18 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 15
  in: 38 -- 
  out: 22 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 15
  in: 44 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 15
  in: 45 -- 
  out: 20 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 15
  in: 47 -- 
  out: 23 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 15
  in: 48 -- 
  out: 24 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 15
  in: 49 -- 
  out: 15 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 15
  in: 50 -- 
  out: 16 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 15
  in: 51 -- 
  out: 17 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 15
  in: 52 -- 
  out: 21 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 16
  in: 29 -- 
  out: 25 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 17
  in: 3 -- 
  out: 26 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 18
  in: 2 -- 
  out: 27 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 18
  in: 29 -- 
  out: 37 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 18
  in: 38 -- 
  out: 34 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 18
  in: 44 -- 
  out: 31 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 18
  in: 45 -- 
  out: 32 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 18
  in: 47 -- 
  out: 35 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 18
  in: 48 -- 
  out: 36 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 18
  in: 49 -- 
  out: 28 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 18
  in: 50 -- 
  out: 29 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 18
  in: 51 -- 
  out: 30 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 18
  in: 52 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 19
  in: 2 -- 
  out: 38 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 19
  in: 29 -- 
  out: 48 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 19
  in: 38 -- 
  out: 45 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 19
  in: 44 -- 
  out: 42 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 19
  in: 45 -- 
  out: 43 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 19
  in: 47 -- 
  out: 46 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 19
  in: 48 -- 
  out: 47 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 19
  in: 49 -- 
  out: 28 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 19
  in: 50 -- 
  out: 29 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 19
  in: 51 -- 
  out: 30 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 19
  in: 52 -- 
  out: 44 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 20
  in: 2 -- 
  out: 27 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 20
  in: 29 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 20
  in: 38 -- 
  out: 34 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 20
  in: 44 -- 
  out: 31 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 20
  in: 45 -- 
  out: 32 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 20
  in: 47 -- 
  out: 35 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 20
  in: 48 -- 
  out: 36 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 20
  in: 49 -- 
  out: 28 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 20
  in: 50 -- 
  out: 29 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 20
  in: 51 -- 
  out: 30 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 20
  in: 52 -- 
  out: 33 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 21
  in: 2 -- 
  out: 27 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 21
  in: 29 -- 
  out: 37 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 21
  in: 38 -- 
  out: 34 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 21
  in: 44 -- 
  out: 31 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 21
  in: 45 -- 
  out: 32 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 21
  in: 47 -- 
  out: 35 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 21
  in: 48 -- 
  out: 36 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 21
  in: 49 -- 
  out: 28 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 21
  in: 50 -- 
  out: 29 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 21
  in: 51 -- 
  out: 30 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 21
  in: 52 -- 
  out: 33 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 22
  in: 3 -- 
  out: 26 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 22
  in: 8 -- 
  out: 50 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 23
  in: 2 -- 
  out: 38 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 23
  in: 29 -- 
  out: 48 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 23
  in: 38 -- 
  out: 45 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 23
  in: 44 -- 
  out: 42 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 23
  in: 45 -- 
  out: 43 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 23
  in: 47 -- 
  out: 46 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 23
  in: 48 -- 
  out: 47 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 23
  in: 49 -- 
  out: 28 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 23
  in: 50 -- 
  out: 29 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 23
  in: 51 -- 
  out: 30 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 23
  in: 52 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 24
  in: 3 -- 
  out: 51 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 24
  in: 8 -- 
  out: 50 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 25
  in: 2 -- 
  out: 27 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 25
  in: 29 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 25
  in: 38 -- 
  out: 34 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 25
  in: 44 -- 
  out: 31 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 25
  in: 45 -- 
  out: 32 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 25
  in: 47 -- 
  out: 35 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 25
  in: 48 -- 
  out: 36 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 25
  in: 49 -- 
  out: 28 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 25
  in: 50 -- 
  out: 29 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 25
  in: 51 -- 
  out: 30 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 25
  in: 52 -- 
  out: 33 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 26
  in: 3 -- 
  out: 26 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 26
  in: 8 -- 
  out: 50 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 27
  in: 2 -- 
  out: 27 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 27
  in: 29 -- 
  out: 37 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 27
  in: 38 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 27
  in: 44 -- 
  out: 31 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 27
  in: 45 -- 
  out: 32 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 27
  in: 47 -- 
  out: 35 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 27
  in: 48 -- 
  out: 36 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 27
  in: 49 -- 
  out: 28 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 27
  in: 50 -- 
  out: 29 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 27
  in: 51 -- 
  out: 30 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 27
  in: 52 -- 
  out: 33 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 28
  in: 2 -- 
  out: 65 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 28
  in: 29 -- 
  out: 75 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 28
  in: 38 -- 
  out: 72 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 28
  in: 44 -- 
  out: 69 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 28
  in: 45 -- 
  out: 70 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 28
  in: 47 -- 
  out: 73 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 28
  in: 48 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 28
  in: 49 -- 
  out: 28 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 28
  in: 50 -- 
  out: 29 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 28
  in: 51 -- 
  out: 30 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 28
  in: 52 -- 
  out: 71 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 29
  in: 2 -- 
  out: 27 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 29
  in: 29 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 29
  in: 38 -- 
  out: 34 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 29
  in: 44 -- 
  out: 31 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 29
  in: 45 -- 
  out: 32 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 29
  in: 47 -- 
  out: 35 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 29
  in: 48 -- 
  out: 36 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 29
  in: 49 -- 
  out: 28 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 29
  in: 50 -- 
  out: 29 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 29
  in: 51 -- 
  out: 30 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 29
  in: 52 -- 
  out: 33 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 30
  in: 2 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 30
  in: 29 -- 
  out: 48 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 30
  in: 38 -- 
  out: 45 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 30
  in: 44 -- 
  out: 42 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 30
  in: 45 -- 
  out: 43 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 30
  in: 47 -- 
  out: 46 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 30
  in: 48 -- 
  out: 47 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 30
  in: 49 -- 
  out: 28 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 30
  in: 50 -- 
  out: 29 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 30
  in: 51 -- 
  out: 30 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 30
  in: 52 -- 
  out: 44 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 31
  in: 2 -- 
  out: 27 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 31
  in: 29 -- 
  out: 37 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 31
  in: 38 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 31
  in: 44 -- 
  out: 31 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 31
  in: 45 -- 
  out: 32 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 31
  in: 47 -- 
  out: 35 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 31
  in: 48 -- 
  out: 36 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 31
  in: 49 -- 
  out: 28 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 31
  in: 50 -- 
  out: 29 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 31
  in: 51 -- 
  out: 30 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 31
  in: 52 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 32
  in: 2 -- 
  out: 65 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 32
  in: 29 -- 
  out: 75 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 32
  in: 38 -- 
  out: 72 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 32
  in: 44 -- 
  out: 69 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 32
  in: 45 -- 
  out: 70 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 32
  in: 47 -- 
  out: 73 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 32
  in: 48 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 32
  in: 49 -- 
  out: 28 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 32
  in: 50 -- 
  out: 29 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 32
  in: 51 -- 
  out: 30 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 32
  in: 52 -- 
  out: 71 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 33
  in: 3 -- 
  out: 51 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 33
  in: 8 -- 
  out: 50 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 34
  in: 2 -- 
  out: 27 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 34
  in: 29 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 34
  in: 38 -- 
  out: 34 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 34
  in: 44 -- 
  out: 31 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 34
  in: 45 -- 
  out: 32 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 34
  in: 47 -- 
  out: 35 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 34
  in: 48 -- 
  out: 36 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 34
  in: 49 -- 
  out: 28 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 34
  in: 50 -- 
  out: 29 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 34
  in: 51 -- 
  out: 30 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 34
  in: 52 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 35
  in: 2 -- 
  out: 38 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 35
  in: 29 -- 
  out: 48 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 35
  in: 38 -- 
  out: 45 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 35
  in: 44 -- 
  out: 42 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 35
  in: 45 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 35
  in: 47 -- 
  out: 46 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 35
  in: 48 -- 
  out: 47 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 35
  in: 49 -- 
  out: 28 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 35
  in: 50 -- 
  out: 29 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 35
  in: 51 -- 
  out: 30 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 35
  in: 52 -- 
  out: 44 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 36
  in: 2 -- 
  out: 65 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 36
  in: 29 -- 
  out: 75 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 36
  in: 38 -- 
  out: 72 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 36
  in: 44 -- 
  out: 69 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 36
  in: 45 -- 
  out: 70 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 36
  in: 47 -- 
  out: 73 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 36
  in: 48 -- 
  out: 74 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 36
  in: 49 -- 
  out: 28 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 36
  in: 50 -- 
  out: 29 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 36
  in: 51 -- 
  out: 30 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 36
  in: 52 -- 
  out: 71 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 37
  in: 2 -- 
  out: 65 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 37
  in: 29 -- 
  out: 75 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 37
  in: 38 -- 
  out: 72 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 37
  in: 44 -- 
  out: 69 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 37
  in: 45 -- 
  out: 70 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 37
  in: 47 -- 
  out: 73 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 37
  in: 48 -- 
  out: 74 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 37
  in: 49 -- 
  out: 28 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 37
  in: 50 -- 
  out: 29 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 37
  in: 51 -- 
  out: 30 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 37
  in: 52 -- 
  out: 71 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(295):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(211): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 57, 6, #BOC# )
Symbol(29, 63, 2, | )
Symbol(3, 65, 4, #0# )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 78, 5, <np> )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 94, 2, | )
Symbol(8, 96, 6, #EOC# )
Symbol(10, 102, 4, $0$ )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 114, 6, #BOC# )
Symbol(29, 120, 2, | )
Symbol(3, 122, 4, #0# )
Symbol(2, 126, 6, "és" )
Symbol(45, 132, 9, <cnjcoo> )
Symbol(29, 141, 2, | )
Symbol(8, 143, 6, #EOC# )
Symbol(10, 149, 4, $0$ )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 162, 6, #BOC# )
Symbol(29, 168, 2, | )
Symbol(3, 170, 4, #0# )
Symbol(2, 174, 7, "mari" )
Symbol(53, 181, 6, <adj> )
Symbol(87, 187, 5, <sg> )
Symbol(55, 192, 6, <nom> )
Symbol(29, 198, 2, | )
Symbol(3, 200, 4, #0# )
Symbol(2, 204, 7, "mari" )
Symbol(15, 211, 4, <n> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 226, 2, | )
Symbol(3, 228, 4, #0# )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 239, 5, <np> )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 255, 2, | )
Symbol(8, 257, 6, #EOC# )
Symbol(10, 263, 4, $0$ )
Symbol(2, 267, 13, "<imádnak>" )
Symbol(7, 280, 6, #BOC# )
Symbol(29, 286, 2, | )
Symbol(3, 288, 4, #0# )
Symbol(2, 292, 6, "ima" )
Symbol(15, 298, 4, <n> )
Symbol(87, 302, 5, <sg> )
Symbol(24, 307, 8, <px2ss> )
Symbol(2, 315, 6, <dat> )
Symbol(29, 321, 2, | )
Symbol(3, 323, 4, #0# )
Symbol(50, 327, 8, "imád" )
Symbol(38, 335, 8, <vblex> )
Symbol(37, 343, 7, <pres> )
Symbol(2, 350, 5, <pl> )
Symbol(2, 355, 6, <s3p> )
Symbol(2, 361, 6, <ind> )
Symbol(29, 367, 2, | )
Symbol(8, 369, 6, #EOC# )
Symbol(10, 375, 4, $0$ )
Symbol(2, 379, 14, "<játszani>" )
Symbol(7, 393, 6, #BOC# )
Symbol(29, 399, 2, | )
Symbol(3, 401, 4, #0# )
Symbol(2, 405, 11, "játszik" )
Symbol(38, 416, 8, <vblex> )
Symbol(52, 424, 6, <inf> )
Symbol(87, 430, 5, <sg> )
Symbol(2, 435, 6, <s3p> )
Symbol(2, 441, 6, <ind> )
Symbol(29, 447, 2, | )
Symbol(8, 449, 6, #EOC# )
Symbol(10, 455, 4, $0$ )
Symbol(2, 459, 6, "<,>" )
Symbol(7, 465, 6, #BOC# )
Symbol(29, 471, 2, | )
Symbol(3, 473, 4, #0# )
Symbol(2, 477, 4, "," )
Symbol(44, 481, 5, <cm> )
Symbol(29, 486, 2, | )
Symbol(8, 488, 6, #EOC# )
Symbol(10, 494, 4, $0$ )
Symbol(2, 498, 11, "<mindig>" )
Symbol(7, 509, 6, #BOC# )
Symbol(29, 515, 2, | )
Symbol(3, 517, 4, #0# )
Symbol(2, 521, 9, "mindig" )
Symbol(54, 530, 6, <adv> )
Symbol(29, 536, 2, | )
Symbol(8, 538, 6, #EOC# )
Symbol(10, 544, 4, $0$ )
Symbol(2, 548, 12, "<együtt>" )
Symbol(7, 560, 6, #BOC# )
Symbol(29, 566, 2, | )
Symbol(3, 568, 4, #0# )
Symbol(2, 572, 10, "együtt" )
Symbol(60, 582, 8, <prevb> )
Symbol(29, 590, 2, | )
Symbol(3, 592, 4, #0# )
Symbol(2, 596, 10, "együtt" )
Symbol(54, 606, 6, <adv> )
Symbol(29, 612, 2, | )
Symbol(3, 614, 4, #0# )
Symbol(2, 618, 10, "együtt" )
Symbol(61, 628, 7, <post> )
Symbol(29, 635, 2, | )
Symbol(8, 637, 6, #EOC# )
Symbol(10, 643, 4, $0$ )
Symbol(2, 647, 15, "<játszanak>" )
Symbol(7, 662, 6, #BOC# )
Symbol(29, 668, 2, | )
Symbol(3, 670, 4, #0# )
Symbol(2, 674, 11, "játszik" )
Symbol(38, 685, 8, <vblex> )
Symbol(37, 693, 7, <pres> )
Symbol(2, 700, 5, <pl> )
Symbol(2, 705, 6, <s3p> )
Symbol(2, 711, 6, <ind> )
Symbol(29, 717, 2, | )
Symbol(8, 719, 6, #EOC# )
Symbol(10, 725, 4, $0$ )
Symbol(2, 729, 6, "<a>" )
Symbol(7, 735, 6, #BOC# )
Symbol(29, 741, 2, | )
Symbol(3, 743, 4, #0# )
Symbol(2, 747, 4, "a" )
Symbol(73, 751, 6, <det> )
Symbol(2, 757, 6, <def> )
Symbol(29, 763, 2, | )
Symbol(8, 765, 6, #EOC# )
Symbol(10, 771, 4, $0$ )
Symbol(2, 775, 12, "<kertben>" )
Symbol(7, 787, 6, #BOC# )
Symbol(29, 793, 2, | )
Symbol(3, 795, 4, #0# )
Symbol(2, 799, 7, "kert" )
Symbol(15, 806, 4, <n> )
Symbol(87, 810, 5, <sg> )
Symbol(2, 815, 6, <ine> )
Symbol(29, 821, 2, | )
Symbol(8, 823, 6, #EOC# )
Symbol(10, 829, 4, $0$ )
Symbol(2, 833, 6, "<a>" )
Symbol(7, 839, 6, #BOC# )
Symbol(29, 845, 2, | )
Symbol(3, 847, 4, #0# )
Symbol(2, 851, 4, "a" )
Symbol(73, 855, 6, <det> )
Symbol(2, 861, 6, <def> )
Symbol(29, 867, 2, | )
Symbol(8, 869, 6, #EOC# )
Symbol(10, 875, 4, $0$ )
Symbol(2, 879, 9, "<nagy>" )
Symbol(7, 888, 6, #BOC# )
Symbol(29, 894, 2, | )
Symbol(3, 896, 4, #0# )
Symbol(2, 900, 7, "nagy" )
Symbol(15, 907, 4, <n> )
Symbol(87, 911, 5, <sg> )
Symbol(55, 916, 6, <nom> )
Symbol(29, 922, 2, | )
Symbol(3, 924, 4, #0# )
Symbol(2, 928, 7, "nagy" )
Symbol(53, 935, 6, <adj> )
Symbol(87, 941, 5, <sg> )
Symbol(55, 946, 6, <nom> )
Symbol(29, 952, 2, | )
Symbol(8, 954, 6, #EOC# )
Symbol(10, 960, 4, $0$ )
Symbol(2, 964, 9, "<ház>" )
Symbol(7, 973, 6, #BOC# )
Symbol(29, 979, 2, | )
Symbol(3, 981, 4, #0# )
Symbol(2, 985, 7, "ház" )
Symbol(15, 992, 4, <n> )
Symbol(87, 996, 5, <sg> )
Symbol(55, 1,001, 6, <nom> )
Symbol(29, 1,007, 2, | )
Symbol(8, 1,009, 6, #EOC# )
Symbol(10, 1,015, 4, $0$ )
Symbol(2, 1,019, 11, "<előtt>" )
Symbol(7, 1,030, 6, #BOC# )
Symbol(29, 1,036, 2, | )
Symbol(3, 1,038, 4, #0# )
Symbol(2, 1,042, 9, "előtt" )
Symbol(61, 1,051, 7, <post> )
Symbol(29, 1,058, 2, | )
Symbol(8, 1,060, 6, #EOC# )
Symbol(10, 1,066, 4, $0$ )
Symbol(2, 1,070, 6, "<.>" )
Symbol(7, 1,076, 6, #BOC# )
Symbol(29, 1,082, 2, | )
Symbol(3, 1,084, 4, #0# )
Symbol(2, 1,088, 4, "." )
Symbol(64, 1,092, 7, <sent> )
Symbol(2, 1,099, 6, <<<<> )
Symbol(29, 1,105, 2, | )
Symbol(8, 1,107, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 15 87 24 2 29 3 50 38 37 2 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 60 29 3 2 54 29 3 2 61 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 28, signum = 45, q = 4, out = 32
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 46, signum = 3, q = 6, out = 26
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 51, signum = 29, q = 8, out = 37
trans_offset 46, signum = 3, q = 6, out = 26
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 51, signum = 29, q = 8, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 46, signum = 3, q = 6, out = 26
trans_offset 58, signum = 50, q = 8, out = 29
trans_offset 75, signum = 38, q = 11, out = 45
trans_offset 73, signum = 2, q = 11, out = 38
trans_offset 73, signum = 2, q = 11, out = 38
trans_offset 73, signum = 2, q = 11, out = 38
trans_offset 73, signum = 2, q = 11, out = 38
trans_offset 74, signum = 29, q = 11, out = 48
trans_offset 85, signum = 8, q = 12, out = 50
trans_offset 97, signum = 10, q = 14, out = 7
trans_offset 98, signum = 2, q = 15, out = 14
trans_offset 99, signum = 7, q = 15, out = 18
trans_offset 109, signum = 29, q = 16, out = 25
trans_offset 110, signum = 3, q = 17, out = 26
trans_offset 111, signum = 2, q = 18, out = 27
trans_offset 113, signum = 38, q = 18, out = 34
trans_offset 154, signum = 52, q = 21, out = 33
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 27, signum = 44, q = 4, out = 31
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 46, signum = 3, q = 6, out = 26
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 51, signum = 29, q = 8, out = 37
trans_offset 46, signum = 3, q = 6, out = 26
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 51, signum = 29, q = 8, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 26, signum = 38, q = 4, out = 34
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 46, signum = 3, q = 6, out = 26
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 50, signum = 2, q = 8, out = 27
trans_offset 51, signum = 29, q = 8, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50
trans_offset 61, signum = 10, q = 9, out = 7
trans_offset 11, signum = 2, q = 1, out = 14
trans_offset 12, signum = 7, q = 1, out = 18
trans_offset 22, signum = 29, q = 2, out = 25
trans_offset 23, signum = 3, q = 3, out = 26
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 24, signum = 2, q = 4, out = 27
trans_offset 25, signum = 29, q = 4, out = 37
trans_offset 47, signum = 8, q = 6, out = 50

Intermediate is(211): 
7 14 18 25 26 27 27 37 50 7 14 18 25 26 27 27 27 27 37 50 7 14 18 25 26 27 32 37 50 7 14 18 25 26 27 27 27 27 37 26 27 27 27 27 37 26 27 27 27 27 37 50 7 14 18 25 26 27 27 27 27 27 37 26 29 45 38 38 38 38 48 50 7 14 18 25 26 27 34 33 27 27 27 37 50 7 14 18 25 26 27 31 37 50 7 14 18 25 26 27 27 37 50 7 14 18 25 26 27 27 37 26 27 27 37 26 27 27 37 50 7 14 18 25 26 27 34 27 27 27 27 37 50 7 14 18 25 26 27 27 27 37 50 7 14 18 25 26 27 27 27 27 37 50 7 14 18 25 26 27 27 27 37 50 7 14 18 25 26 27 27 27 27 37 26 27 27 27 27 37 50 7 14 18 25 26 27 27 27 27 37 50 7 14 18 25 26 27 27 37 50 7 14 18 25 26 27 27 27 37 50 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 31, q = 3, out = 29
trans_offset 62, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 12, q = 2, out = 38
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 31, q = 3, out = 29
trans_offset 62, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 31, q = 3, out = 29
trans_offset 62, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 44
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 11, q = 2, out = 52
trans_offset 42, q = 4, out = 38
trans_offset 88, q = 6, out = 2
trans_offset 87, q = 6, out = 3
trans_offset 124, q = 8, out = 29
trans_offset 139, q = 10, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 197, q = 13, out = 8
trans_offset 199, q = 14, out = 29
trans_offset 212, q = 15, out = 2
trans_offset 212, q = 15, out = 2
trans_offset 212, q = 15, out = 2
trans_offset 212, q = 15, out = 2
trans_offset 216, q = 15, out = 38
trans_offset 204, q = 15, out = 50
trans_offset 227, q = 16, out = 3
trans_offset 310, q = 20, out = 0
trans_offset 424, q = 26, out = 0
trans_offset 507, q = 30, out = 0
trans_offset 507, q = 30, out = 0
trans_offset 507, q = 30, out = 0
trans_offset 507, q = 30, out = 0
trans_offset 506, q = 30, out = 0
trans_offset 309, q = 20, out = 29
trans_offset 422, q = 26, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 31, q = 3, out = 29
trans_offset 62, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 31, q = 3, out = 29
trans_offset 62, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 10, q = 2, out = 45
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10
trans_offset 138, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 30, q = 3, out = 29
trans_offset 60, q = 5, out = 7
trans_offset 114, q = 7, out = 2
trans_offset 113, q = 7, out = 10

Output is(204): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 78, 5, <np> )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 7, "mari" )
Symbol(53, 181, 6, <adj> )
Symbol(87, 187, 5, <sg> )
Symbol(55, 192, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 204, 7, "mari" )
Symbol(15, 211, 4, <n> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 239, 5, <np> )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 267, 13, "<imádnak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(50, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 343, 7, <pres> )
Symbol(2, 350, 5, <pl> )
Symbol(2, 355, 6, <s3p> )
Symbol(2, 361, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 379, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 405, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(52, 0, 0, )
Symbol(87, 430, 5, <sg> )
Symbol(2, 435, 6, <s3p> )
Symbol(2, 441, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 459, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 477, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 498, 11, "<mindig>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 9, "mindig" )
Symbol(54, 530, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 548, 12, "<együtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 572, 10, "együtt" )
Symbol(60, 582, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 596, 10, "együtt" )
Symbol(54, 606, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 618, 10, "együtt" )
Symbol(61, 628, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 647, 15, "<játszanak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 674, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(37, 693, 7, <pres> )
Symbol(2, 700, 5, <pl> )
Symbol(2, 705, 6, <s3p> )
Symbol(2, 711, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 729, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 747, 4, "a" )
Symbol(73, 751, 6, <det> )
Symbol(2, 757, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 775, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 799, 7, "kert" )
Symbol(15, 806, 4, <n> )
Symbol(87, 810, 5, <sg> )
Symbol(2, 815, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 833, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 851, 4, "a" )
Symbol(73, 855, 6, <det> )
Symbol(2, 861, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 879, 9, "<nagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 900, 7, "nagy" )
Symbol(15, 907, 4, <n> )
Symbol(87, 911, 5, <sg> )
Symbol(55, 916, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 928, 7, "nagy" )
Symbol(53, 935, 6, <adj> )
Symbol(87, 941, 5, <sg> )
Symbol(55, 946, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 964, 9, "<ház>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "ház" )
Symbol(15, 992, 4, <n> )
Symbol(87, 996, 5, <sg> )
Symbol(55, 1,001, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,019, 11, "<előtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,042, 9, "előtt" )
Symbol(61, 1,051, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,070, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,088, 4, "." )
Symbol(64, 1,092, 7, <sent> )
Symbol(2, 1,099, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 50 38 37 2 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 60 29 3 2 54 29 3 2 61 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_178_T_1


LRS T1:
Name: R_1_178_T_1
arity: 2
arccount: 365
statecount: 71
linecount: 366
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 38 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 47 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 48 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 52 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 60 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 1
  in: 2 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 38 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 47 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 48 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 52 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 60 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 29 -- 
  out: 17 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 3
  in: 3 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 2 -- 
  out: 19 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 4
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 38 -- 
  out: 22 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 47 -- 
  out: 23 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 48 -- 
  out: 24 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 52 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 60 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 5
  in: 2 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 5
  in: 29 -- 
  out: 32 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 38 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 5
  in: 47 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 5
  in: 48 -- 
  out: 31 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 5
  in: 52 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 60 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 6
  in: 3 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 6
  in: 8 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 7
  in: 3 -- 
  out: 18 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 7
  in: 8 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 8
  in: 2 -- 
  out: 37 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 8
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 8
  in: 38 -- 
  out: 40 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 8
  in: 47 -- 
  out: 41 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 8
  in: 48 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 8
  in: 52 -- 
  out: 38 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 8
  in: 60 -- 
  out: 39 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(42):
  state_no: 10
  in: 2 -- 
  out: 19 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 10
  in: 29 -- 
  out: 25 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 10
  in: 38 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 10
  in: 47 -- 
  out: 23 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 10
  in: 48 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 10
  in: 52 -- 
  out: 20 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 10
  in: 60 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 11
  in: 2 -- 
  out: 52 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 11
  in: 29 -- 
  out: 58 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 11
  in: 38 -- 
  out: 55 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 11
  in: 47 -- 
  out: 56 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 11
  in: 48 -- 
  out: 57 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 11
  in: 52 -- 
  out: 53 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 11
  in: 60 -- 
  out: 39 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 12
  in: 3 -- 
  out: 33 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 12
  in: 8 -- 
  out: 34 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 13
  in: 2 -- 
  out: 37 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 13
  in: 29 -- 
  out: 25 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 13
  in: 38 -- 
  out: 40 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 13
  in: 47 -- 
  out: 41 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 13
  in: 48 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 13
  in: 52 -- 
  out: 38 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 13
  in: 60 -- 
  out: 39 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 14
  in: 10 -- 
  out: 4 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 15
  in: 2 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 15
  in: 7 -- 
  out: 11 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 15
  in: 38 -- 
  out: 14 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 15
  in: 47 -- 
  out: 15 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 15
  in: 48 -- 
  out: 16 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 15
  in: 52 -- 
  out: 12 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 15
  in: 60 -- 
  out: 13 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 16
  in: 29 -- 
  out: 17 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 17
  in: 3 -- 
  out: 18 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 18
  in: 2 -- 
  out: 19 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 18
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 18
  in: 38 -- 
  out: 22 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 18
  in: 47 -- 
  out: 23 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 18
  in: 48 -- 
  out: 24 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 18
  in: 52 -- 
  out: 20 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 18
  in: 60 -- 
  out: 21 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 19
  in: 2 -- 
  out: 26 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 19
  in: 29 -- 
  out: 32 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 19
  in: 38 -- 
  out: 29 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 19
  in: 47 -- 
  out: 30 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 19
  in: 48 -- 
  out: 31 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 19
  in: 52 -- 
  out: 27 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 19
  in: 60 -- 
  out: 21 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 20
  in: 2 -- 
  out: 19 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 20
  in: 29 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 20
  in: 38 -- 
  out: 22 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 20
  in: 47 -- 
  out: 23 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 20
  in: 48 -- 
  out: 24 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 20
  in: 52 -- 
  out: 20 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 20
  in: 60 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 21
  in: 2 -- 
  out: 26 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 21
  in: 29 -- 
  out: 32 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 21
  in: 38 -- 
  out: 29 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 21
  in: 47 -- 
  out: 30 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 21
  in: 48 -- 
  out: 31 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 21
  in: 52 -- 
  out: 27 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 21
  in: 60 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 22
  in: 3 -- 
  out: 33 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 22
  in: 8 -- 
  out: 34 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 23
  in: 3 -- 
  out: 18 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 23
  in: 8 -- 
  out: 34 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 24
  in: 2 -- 
  out: 37 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 24
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 24
  in: 38 -- 
  out: 40 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 24
  in: 47 -- 
  out: 41 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 24
  in: 48 -- 
  out: 42 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 24
  in: 52 -- 
  out: 38 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 24
  in: 60 -- 
  out: 39 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 25
  in: 10 -- 
  out: 4 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 26
  in: 2 -- 
  out: 19 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 26
  in: 29 -- 
  out: 25 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 26
  in: 38 -- 
  out: 22 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 26
  in: 47 -- 
  out: 23 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 26
  in: 48 -- 
  out: 24 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 26
  in: 52 -- 
  out: 20 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 26
  in: 60 -- 
  out: 21 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 27
  in: 2 -- 
  out: 52 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 27
  in: 29 -- 
  out: 58 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 27
  in: 38 -- 
  out: 55 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 27
  in: 47 -- 
  out: 56 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 27
  in: 48 -- 
  out: 57 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 27
  in: 52 -- 
  out: 53 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 27
  in: 60 -- 
  out: 39 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 28
  in: 2 -- 
  out: 37 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 28
  in: 29 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 28
  in: 38 -- 
  out: 40 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 28
  in: 47 -- 
  out: 41 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 28
  in: 48 -- 
  out: 42 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 28
  in: 52 -- 
  out: 38 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 28
  in: 60 -- 
  out: 39 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 29
  in: 2 -- 
  out: 10 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 29
  in: 7 -- 
  out: 11 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 29
  in: 38 -- 
  out: 14 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 29
  in: 47 -- 
  out: 15 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 29
  in: 48 -- 
  out: 16 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 29
  in: 52 -- 
  out: 12 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 29
  in: 60 -- 
  out: 13 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 30
  in: 2 -- 
  out: 19 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 30
  in: 29 -- 
  out: 25 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 30
  in: 38 -- 
  out: 22 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 30
  in: 47 -- 
  out: 23 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 30
  in: 48 -- 
  out: 24 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 30
  in: 52 -- 
  out: 20 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 30
  in: 60 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 31
  in: 2 -- 
  out: 52 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 31
  in: 29 -- 
  out: 58 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 31
  in: 38 -- 
  out: 55 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 31
  in: 47 -- 
  out: 56 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 31
  in: 48 -- 
  out: 57 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 31
  in: 52 -- 
  out: 53 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 31
  in: 60 -- 
  out: 39 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 32
  in: 29 -- 
  out: 17 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 33
  in: 3 -- 
  out: 33 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 33
  in: 8 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 34
  in: 3 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 35
  in: 2 -- 
  out: 37 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 35
  in: 29 -- 
  out: 25 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 35
  in: 38 -- 
  out: 40 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 35
  in: 47 -- 
  out: 41 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 35
  in: 48 -- 
  out: 42 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 35
  in: 52 -- 
  out: 38 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 35
  in: 60 -- 
  out: 39 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 36
  in: 10 -- 
  out: 4 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 37
  in: 2 -- 
  out: 19 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 37
  in: 29 -- 
  out: 25 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 37
  in: 38 -- 
  out: 22 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 37
  in: 47 -- 
  out: 23 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 37
  in: 48 -- 
  out: 24 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 37
  in: 52 -- 
  out: 20 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 37
  in: 60 -- 
  out: 21 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 38
  in: 2 -- 
  out: 37 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 38
  in: 29 -- 
  out: 25 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 38
  in: 38 -- 
  out: 40 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 38
  in: 47 -- 
  out: 41 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 38
  in: 48 -- 
  out: 42 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 38
  in: 52 -- 
  out: 38 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 38
  in: 60 -- 
  out: 39 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 39
  in: 2 -- 
  out: 10 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 39
  in: 7 -- 
  out: 11 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 39
  in: 38 -- 
  out: 14 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 39
  in: 47 -- 
  out: 15 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 39
  in: 48 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 39
  in: 52 -- 
  out: 12 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 39
  in: 60 -- 
  out: 13 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 40
  in: 2 -- 
  out: 26 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 40
  in: 29 -- 
  out: 32 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 40
  in: 38 -- 
  out: 29 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 40
  in: 47 -- 
  out: 30 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 40
  in: 48 -- 
  out: 31 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 40
  in: 52 -- 
  out: 27 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 40
  in: 60 -- 
  out: 21 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 41
  in: 2 -- 
  out: 19 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 41
  in: 29 -- 
  out: 25 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 41
  in: 38 -- 
  out: 22 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 41
  in: 47 -- 
  out: 23 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 41
  in: 48 -- 
  out: 24 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 41
  in: 52 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 41
  in: 60 -- 
  out: 21 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 42
  in: 3 -- 
  out: 33 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 42
  in: 8 -- 
  out: 34 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 43
  in: 29 -- 
  out: 17 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 44
  in: 2 -- 
  out: 26 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 44
  in: 29 -- 
  out: 32 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 44
  in: 38 -- 
  out: 29 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 44
  in: 47 -- 
  out: 30 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 44
  in: 48 -- 
  out: 31 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 44
  in: 52 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 44
  in: 60 -- 
  out: 21 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 45
  in: 3 -- 
  out: 18 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 45
  in: 8 -- 
  out: 34 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 46
  in: 2 -- 
  out: 37 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 46
  in: 29 -- 
  out: 25 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 46
  in: 38 -- 
  out: 40 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 46
  in: 47 -- 
  out: 41 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 46
  in: 48 -- 
  out: 42 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 46
  in: 52 -- 
  out: 38 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 46
  in: 60 -- 
  out: 39 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 47
  in: 3 -- 
  out: 18 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 48
  in: 2 -- 
  out: 19 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 48
  in: 29 -- 
  out: 25 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 48
  in: 38 -- 
  out: 22 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 48
  in: 47 -- 
  out: 23 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 48
  in: 48 -- 
  out: 24 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 48
  in: 52 -- 
  out: 20 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 48
  in: 60 -- 
  out: 21 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 49
  in: 2 -- 
  out: 52 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 49
  in: 29 -- 
  out: 58 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 49
  in: 38 -- 
  out: 55 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 49
  in: 47 -- 
  out: 56 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 49
  in: 48 -- 
  out: 57 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 49
  in: 52 -- 
  out: 53 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 49
  in: 60 -- 
  out: 39 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 50
  in: 2 -- 
  out: 37 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 50
  in: 29 -- 
  out: 25 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 50
  in: 38 -- 
  out: 40 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 50
  in: 47 -- 
  out: 41 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 50
  in: 48 -- 
  out: 42 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 50
  in: 52 -- 
  out: 38 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 50
  in: 60 -- 
  out: 39 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 51
  in: 2 -- 
  out: 19 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 51
  in: 29 -- 
  out: 25 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 51
  in: 38 -- 
  out: 22 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 51
  in: 47 -- 
  out: 23 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 51
  in: 48 -- 
  out: 24 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 51
  in: 52 -- 
  out: 20 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 51
  in: 60 -- 
  out: 21 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 52
  in: 2 -- 
  out: 19 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 52
  in: 29 -- 
  out: 25 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 52
  in: 38 -- 
  out: 22 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 52
  in: 47 -- 
  out: 23 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 52
  in: 48 -- 
  out: 24 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 52
  in: 52 -- 
  out: 20 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 52
  in: 60 -- 
  out: 21 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 53
  in: 3 -- 
  out: 33 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 53
  in: 8 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 54
  in: 2 -- 
  out: 52 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 54
  in: 29 -- 
  out: 58 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 54
  in: 38 -- 
  out: 55 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 54
  in: 47 -- 
  out: 56 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 54
  in: 48 -- 
  out: 57 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 54
  in: 52 -- 
  out: 53 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 54
  in: 60 -- 
  out: 39 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 55
  in: 2 -- 
  out: 26 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 55
  in: 29 -- 
  out: 32 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 55
  in: 38 -- 
  out: 29 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 55
  in: 47 -- 
  out: 30 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 55
  in: 48 -- 
  out: 31 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 55
  in: 52 -- 
  out: 27 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 55
  in: 60 -- 
  out: 21 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 56
  in: 2 -- 
  out: 19 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 56
  in: 29 -- 
  out: 25 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 56
  in: 38 -- 
  out: 22 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 56
  in: 47 -- 
  out: 23 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 56
  in: 48 -- 
  out: 24 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 56
  in: 52 -- 
  out: 20 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 56
  in: 60 -- 
  out: 21 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 57
  in: 2 -- 
  out: 37 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 57
  in: 29 -- 
  out: 25 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 57
  in: 38 -- 
  out: 40 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 57
  in: 47 -- 
  out: 41 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 57
  in: 48 -- 
  out: 42 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 57
  in: 52 -- 
  out: 38 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 57
  in: 60 -- 
  out: 39 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 58
  in: 2 -- 
  out: 26 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 58
  in: 29 -- 
  out: 32 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 58
  in: 38 -- 
  out: 29 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 58
  in: 47 -- 
  out: 30 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 58
  in: 48 -- 
  out: 31 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 58
  in: 52 -- 
  out: 27 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 58
  in: 60 -- 
  out: 21 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 59
  in: 3 -- 
  out: 33 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 59
  in: 8 -- 
  out: 34 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 60
  in: 2 -- 
  out: 37 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 60
  in: 29 -- 
  out: 25 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 60
  in: 38 -- 
  out: 40 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 60
  in: 47 -- 
  out: 41 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 60
  in: 48 -- 
  out: 42 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 60
  in: 52 -- 
  out: 38 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 60
  in: 60 -- 
  out: 39 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 61
  in: 3 -- 
  out: 18 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 61
  in: 8 -- 
  out: 34 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 62
  in: 2 -- 
  out: 37 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 62
  in: 29 -- 
  out: 25 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 62
  in: 38 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 62
  in: 47 -- 
  out: 41 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 62
  in: 48 -- 
  out: 42 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 62
  in: 52 -- 
  out: 38 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 62
  in: 60 -- 
  out: 39 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 63
  in: 2 -- 
  out: 19 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 63
  in: 29 -- 
  out: 25 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 63
  in: 38 -- 
  out: 22 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 63
  in: 47 -- 
  out: 23 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 63
  in: 48 -- 
  out: 24 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 63
  in: 52 -- 
  out: 20 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 63
  in: 60 -- 
  out: 21 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 64
  in: 2 -- 
  out: 52 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 64
  in: 29 -- 
  out: 58 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 64
  in: 38 -- 
  out: 55 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 64
  in: 47 -- 
  out: 56 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 64
  in: 48 -- 
  out: 57 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 64
  in: 52 -- 
  out: 53 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 64
  in: 60 -- 
  out: 39 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 65
  in: 2 -- 
  out: 37 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 65
  in: 29 -- 
  out: 25 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 65
  in: 38 -- 
  out: 40 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 65
  in: 47 -- 
  out: 41 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 65
  in: 48 -- 
  out: 42 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 65
  in: 52 -- 
  out: 38 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 65
  in: 60 -- 
  out: 39 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 66
  in: 2 -- 
  out: 19 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 66
  in: 29 -- 
  out: 25 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 66
  in: 38 -- 
  out: 22 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 66
  in: 47 -- 
  out: 23 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 66
  in: 48 -- 
  out: 24 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 66
  in: 52 -- 
  out: 20 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 66
  in: 60 -- 
  out: 21 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 67
  in: 2 -- 
  out: 52 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 67
  in: 29 -- 
  out: 58 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 67
  in: 38 -- 
  out: 55 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 67
  in: 47 -- 
  out: 56 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 67
  in: 48 -- 
  out: 57 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 67
  in: 52 -- 
  out: 53 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 67
  in: 60 -- 
  out: 39 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 68
  in: 3 -- 
  out: 33 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 68
  in: 8 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 69
  in: 2 -- 
  out: 37 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 69
  in: 29 -- 
  out: 25 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 69
  in: 38 -- 
  out: 40 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 69
  in: 47 -- 
  out: 41 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 69
  in: 48 -- 
  out: 42 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 69
  in: 52 -- 
  out: 38 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 69
  in: 60 -- 
  out: 39 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 70
  in: 2 -- 
  out: 37 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 70
  in: 29 -- 
  out: 25 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 70
  in: 38 -- 
  out: 40 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 70
  in: 47 -- 
  out: 41 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 70
  in: 48 -- 
  out: 42 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 70
  in: 52 -- 
  out: 38 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 70
  in: 60 -- 
  out: 39 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(365):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(204): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 78, 5, <np> )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 7, "mari" )
Symbol(53, 181, 6, <adj> )
Symbol(87, 187, 5, <sg> )
Symbol(55, 192, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 204, 7, "mari" )
Symbol(15, 211, 4, <n> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 239, 5, <np> )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 267, 13, "<imádnak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(50, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 343, 7, <pres> )
Symbol(2, 350, 5, <pl> )
Symbol(2, 355, 6, <s3p> )
Symbol(2, 361, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 379, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 405, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(52, 0, 0, )
Symbol(87, 430, 5, <sg> )
Symbol(2, 435, 6, <s3p> )
Symbol(2, 441, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 459, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 477, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 498, 11, "<mindig>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 9, "mindig" )
Symbol(54, 530, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 548, 12, "<együtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 572, 10, "együtt" )
Symbol(60, 582, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 596, 10, "együtt" )
Symbol(54, 606, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 618, 10, "együtt" )
Symbol(61, 628, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 647, 15, "<játszanak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 674, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(37, 693, 7, <pres> )
Symbol(2, 700, 5, <pl> )
Symbol(2, 705, 6, <s3p> )
Symbol(2, 711, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 729, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 747, 4, "a" )
Symbol(73, 751, 6, <det> )
Symbol(2, 757, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 775, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 799, 7, "kert" )
Symbol(15, 806, 4, <n> )
Symbol(87, 810, 5, <sg> )
Symbol(2, 815, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 833, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 851, 4, "a" )
Symbol(73, 855, 6, <det> )
Symbol(2, 861, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 879, 9, "<nagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 900, 7, "nagy" )
Symbol(15, 907, 4, <n> )
Symbol(87, 911, 5, <sg> )
Symbol(55, 916, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 928, 7, "nagy" )
Symbol(53, 935, 6, <adj> )
Symbol(87, 941, 5, <sg> )
Symbol(55, 946, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 964, 9, "<ház>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "ház" )
Symbol(15, 992, 4, <n> )
Symbol(87, 996, 5, <sg> )
Symbol(55, 1,001, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,019, 11, "<előtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,042, 9, "előtt" )
Symbol(61, 1,051, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,070, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,088, 4, "." )
Symbol(64, 1,092, 7, <sent> )
Symbol(2, 1,099, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 50 38 37 2 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 60 29 3 2 54 29 3 2 61 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 41, signum = 10, q = 9, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 41, signum = 10, q = 9, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 41, signum = 10, q = 9, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 30, signum = 3, q = 6, out = 33
trans_offset 34, signum = 2, q = 8, out = 37
trans_offset 34, signum = 2, q = 8, out = 37
trans_offset 34, signum = 2, q = 8, out = 37
trans_offset 34, signum = 2, q = 8, out = 37
trans_offset 35, signum = 29, q = 8, out = 25
trans_offset 30, signum = 3, q = 6, out = 33
trans_offset 34, signum = 2, q = 8, out = 37
trans_offset 34, signum = 2, q = 8, out = 37
trans_offset 34, signum = 2, q = 8, out = 37
trans_offset 34, signum = 2, q = 8, out = 37
trans_offset 35, signum = 29, q = 8, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 41, signum = 10, q = 9, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 18, signum = 38, q = 4, out = 22
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 41, signum = 10, q = 9, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 18, signum = 38, q = 4, out = 22
trans_offset 21, signum = 52, q = 4, out = 20
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 41, signum = 10, q = 9, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 41, signum = 10, q = 9, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 41, signum = 10, q = 9, out = 4
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 11
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 22, signum = 60, q = 4, out = 21
trans_offset 24, signum = 29, q = 5, out = 32
trans_offset 32, signum = 3, q = 7, out = 18
trans_offset 42, signum = 2, q = 10, out = 19
trans_offset 42, signum = 2, q = 10, out = 19
trans_offset 43, signum = 29, q = 10, out = 25
trans_offset 56, signum = 3, q = 12, out = 33
trans_offset 58, signum = 2, q = 13, out = 37
trans_offset 58, signum = 2, q = 13, out = 37
trans_offset 59, signum = 29, q = 13, out = 25
trans_offset 57, signum = 8, q = 12, out = 34
trans_offset 65, signum = 10, q = 14, out = 4
trans_offset 66, signum = 2, q = 15, out = 10
trans_offset 67, signum = 7, q = 15, out = 11
trans_offset 73, signum = 29, q = 16, out = 17
trans_offset 74, signum = 3, q = 17, out = 18
trans_offset 75, signum = 2, q = 18, out = 19
trans_offset 77, signum = 38, q = 18, out = 22
trans_offset 89, signum = 2, q = 20, out = 19
trans_offset 89, signum = 2, q = 20, out = 19
trans_offset 89, signum = 2, q = 20, out = 19
trans_offset 89, signum = 2, q = 20, out = 19
trans_offset 90, signum = 29, q = 20, out = 25
trans_offset 104, signum = 8, q = 22, out = 34
trans_offset 114, signum = 10, q = 25, out = 4
trans_offset 136, signum = 2, q = 29, out = 10
trans_offset 137, signum = 7, q = 29, out = 11
trans_offset 157, signum = 29, q = 32, out = 17
trans_offset 160, signum = 3, q = 34, out = 18
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 170, signum = 29, q = 37, out = 25
trans_offset 205, signum = 8, q = 42, out = 34
trans_offset 114, signum = 10, q = 25, out = 4
trans_offset 136, signum = 2, q = 29, out = 10
trans_offset 137, signum = 7, q = 29, out = 11
trans_offset 157, signum = 29, q = 32, out = 17
trans_offset 160, signum = 3, q = 34, out = 18
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 170, signum = 29, q = 37, out = 25
trans_offset 205, signum = 8, q = 42, out = 34
trans_offset 114, signum = 10, q = 25, out = 4
trans_offset 136, signum = 2, q = 29, out = 10
trans_offset 137, signum = 7, q = 29, out = 11
trans_offset 157, signum = 29, q = 32, out = 17
trans_offset 160, signum = 3, q = 34, out = 18
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 170, signum = 29, q = 37, out = 25
trans_offset 205, signum = 8, q = 42, out = 34
trans_offset 114, signum = 10, q = 25, out = 4
trans_offset 136, signum = 2, q = 29, out = 10
trans_offset 137, signum = 7, q = 29, out = 11
trans_offset 157, signum = 29, q = 32, out = 17
trans_offset 160, signum = 3, q = 34, out = 18
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 170, signum = 29, q = 37, out = 25
trans_offset 204, signum = 3, q = 42, out = 33
trans_offset 216, signum = 2, q = 46, out = 37
trans_offset 216, signum = 2, q = 46, out = 37
trans_offset 216, signum = 2, q = 46, out = 37
trans_offset 216, signum = 2, q = 46, out = 37
trans_offset 217, signum = 29, q = 46, out = 25
trans_offset 205, signum = 8, q = 42, out = 34
trans_offset 114, signum = 10, q = 25, out = 4
trans_offset 136, signum = 2, q = 29, out = 10
trans_offset 137, signum = 7, q = 29, out = 11
trans_offset 157, signum = 29, q = 32, out = 17
trans_offset 160, signum = 3, q = 34, out = 18
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 170, signum = 29, q = 37, out = 25
trans_offset 205, signum = 8, q = 42, out = 34
trans_offset 114, signum = 10, q = 25, out = 4
trans_offset 136, signum = 2, q = 29, out = 10
trans_offset 137, signum = 7, q = 29, out = 11
trans_offset 157, signum = 29, q = 32, out = 17
trans_offset 160, signum = 3, q = 34, out = 18
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 170, signum = 29, q = 37, out = 25
trans_offset 205, signum = 8, q = 42, out = 34
trans_offset 114, signum = 10, q = 25, out = 4
trans_offset 136, signum = 2, q = 29, out = 10
trans_offset 137, signum = 7, q = 29, out = 11
trans_offset 157, signum = 29, q = 32, out = 17
trans_offset 160, signum = 3, q = 34, out = 18
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 169, signum = 2, q = 37, out = 19
trans_offset 170, signum = 29, q = 37, out = 25
trans_offset 205, signum = 8, q = 42, out = 34

Intermediate is(204): 
4 10 11 17 18 19 19 25 34 4 10 11 17 18 19 19 19 19 25 34 4 10 11 17 18 19 19 25 34 4 10 11 17 18 19 19 19 19 25 33 37 37 37 37 25 33 37 37 37 37 25 34 4 10 11 17 18 19 22 19 19 19 19 25 34 4 10 11 17 18 19 22 20 19 19 19 25 34 4 10 11 17 18 19 19 25 34 4 10 11 17 18 19 19 25 34 4 10 11 17 18 19 21 32 18 19 19 25 33 37 37 25 34 4 10 11 17 18 19 22 19 19 19 19 25 34 4 10 11 17 18 19 19 19 25 34 4 10 11 17 18 19 19 19 19 25 34 4 10 11 17 18 19 19 19 25 34 4 10 11 17 18 19 19 19 19 25 33 37 37 37 37 25 34 4 10 11 17 18 19 19 19 19 25 34 4 10 11 17 18 19 19 25 34 4 10 11 17 18 19 19 19 25 34 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 17, q = 2, out = 2
trans_offset 17, q = 2, out = 2
trans_offset 17, q = 2, out = 2
trans_offset 17, q = 2, out = 2
trans_offset 16, q = 2, out = 3
trans_offset 29, q = 3, out = 29
trans_offset 82, q = 6, out = 2
trans_offset 158, q = 10, out = 2
trans_offset 158, q = 10, out = 2
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 38
trans_offset 57, q = 5, out = 2
trans_offset 56, q = 5, out = 3
trans_offset 129, q = 8, out = 29
trans_offset 216, q = 14, out = 7
trans_offset 298, q = 18, out = 2
trans_offset 297, q = 18, out = 10
trans_offset 351, q = 23, out = 8
trans_offset 384, q = 26, out = 29
trans_offset 410, q = 29, out = 2
trans_offset 410, q = 29, out = 2
trans_offset 409, q = 29, out = 3
trans_offset 453, q = 32, out = 29
trans_offset 561, q = 39, out = 2
trans_offset 718, q = 48, out = 2
trans_offset 717, q = 48, out = 3
trans_offset 454, q = 32, out = 0
trans_offset 563, q = 39, out = 0
trans_offset 766, q = 50, out = 0
trans_offset 765, q = 50, out = 0
trans_offset 452, q = 32, out = 29
trans_offset 559, q = 39, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 80, q = 6, out = 7
trans_offset 182, q = 11, out = 2
trans_offset 181, q = 11, out = 10
trans_offset 247, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 6, q = 2, out = 52
trans_offset 36, q = 4, out = 38
trans_offset 106, q = 7, out = 2
trans_offset 105, q = 7, out = 3
trans_offset 212, q = 13, out = 29
trans_offset 272, q = 17, out = 7
trans_offset 339, q = 22, out = 2
trans_offset 338, q = 22, out = 10
trans_offset 383, q = 25, out = 8
trans_offset 394, q = 28, out = 29
trans_offset 429, q = 31, out = 2
trans_offset 429, q = 31, out = 2
trans_offset 429, q = 31, out = 2
trans_offset 429, q = 31, out = 2
trans_offset 432, q = 31, out = 38
trans_offset 429, q = 31, out = 2
trans_offset 428, q = 31, out = 3
trans_offset 531, q = 37, out = 29
trans_offset 688, q = 46, out = 7
trans_offset 388, q = 27, out = 2
trans_offset 387, q = 27, out = 10
trans_offset 427, q = 30, out = 8
trans_offset 528, q = 36, out = 29
trans_offset 261, q = 16, out = 2
trans_offset 261, q = 16, out = 2
trans_offset 261, q = 16, out = 2
trans_offset 261, q = 16, out = 2
trans_offset 260, q = 16, out = 3
trans_offset 311, q = 20, out = 29
trans_offset 366, q = 24, out = 2
trans_offset 261, q = 16, out = 2
trans_offset 261, q = 16, out = 2
trans_offset 261, q = 16, out = 2
trans_offset 260, q = 16, out = 3
trans_offset 311, q = 20, out = 29
trans_offset 354, q = 24, out = 2
trans_offset 249, q = 16, out = 2
trans_offset 249, q = 16, out = 2
trans_offset 249, q = 16, out = 2
trans_offset 248, q = 16, out = 3
trans_offset 310, q = 20, out = 29
trans_offset 352, q = 24, out = 7
trans_offset 388, q = 27, out = 2
trans_offset 387, q = 27, out = 10
trans_offset 427, q = 30, out = 8
trans_offset 528, q = 36, out = 29
trans_offset 249, q = 16, out = 2
trans_offset 249, q = 16, out = 2
trans_offset 248, q = 16, out = 3
trans_offset 310, q = 20, out = 29
trans_offset 352, q = 24, out = 7
trans_offset 388, q = 27, out = 2
trans_offset 387, q = 27, out = 10
trans_offset 427, q = 30, out = 8
trans_offset 528, q = 36, out = 29
trans_offset 249, q = 16, out = 2
trans_offset 249, q = 16, out = 2
trans_offset 249, q = 16, out = 2
trans_offset 249, q = 16, out = 2
trans_offset 248, q = 16, out = 3
trans_offset 310, q = 20, out = 29
trans_offset 352, q = 24, out = 7
trans_offset 388, q = 27, out = 2
trans_offset 387, q = 27, out = 10
trans_offset 427, q = 30, out = 8
trans_offset 528, q = 36, out = 29
trans_offset 249, q = 16, out = 2
trans_offset 249, q = 16, out = 2
trans_offset 248, q = 16, out = 3
trans_offset 310, q = 20, out = 29
trans_offset 352, q = 24, out = 7
trans_offset 388, q = 27, out = 2
trans_offset 387, q = 27, out = 10

Output is(200): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 78, 5, <np> )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 7, "mari" )
Symbol(53, 181, 6, <adj> )
Symbol(87, 187, 5, <sg> )
Symbol(55, 192, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 204, 7, "mari" )
Symbol(15, 211, 4, <n> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 239, 5, <np> )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 267, 13, "<imádnak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(50, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 343, 7, <pres> )
Symbol(2, 350, 5, <pl> )
Symbol(2, 355, 6, <s3p> )
Symbol(2, 361, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 379, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 405, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(52, 0, 0, )
Symbol(87, 430, 5, <sg> )
Symbol(2, 435, 6, <s3p> )
Symbol(2, 441, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 459, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 477, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 498, 11, "<mindig>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 9, "mindig" )
Symbol(54, 530, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 548, 12, "<együtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 596, 10, "együtt" )
Symbol(54, 606, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 618, 10, "együtt" )
Symbol(61, 628, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 647, 15, "<játszanak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 674, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(37, 693, 7, <pres> )
Symbol(2, 700, 5, <pl> )
Symbol(2, 705, 6, <s3p> )
Symbol(2, 711, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 729, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 747, 4, "a" )
Symbol(73, 751, 6, <det> )
Symbol(2, 757, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 775, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 799, 7, "kert" )
Symbol(15, 806, 4, <n> )
Symbol(87, 810, 5, <sg> )
Symbol(2, 815, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 833, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 851, 4, "a" )
Symbol(73, 855, 6, <det> )
Symbol(2, 861, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 879, 9, "<nagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 900, 7, "nagy" )
Symbol(15, 907, 4, <n> )
Symbol(87, 911, 5, <sg> )
Symbol(55, 916, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 928, 7, "nagy" )
Symbol(53, 935, 6, <adj> )
Symbol(87, 941, 5, <sg> )
Symbol(55, 946, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 964, 9, "<ház>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "ház" )
Symbol(15, 992, 4, <n> )
Symbol(87, 996, 5, <sg> )
Symbol(55, 1,001, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,019, 11, "<előtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,042, 9, "előtt" )
Symbol(61, 1,051, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,070, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,088, 4, "." )
Symbol(64, 1,092, 7, <sent> )
Symbol(2, 1,099, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 50 38 37 2 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 3 2 61 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_185_T_1


LRS T1:
Name: R_1_185_T_1
arity: 2
arccount: 138
statecount: 32
linecount: 139
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 16 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 53 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 61 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 16 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 53 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 61 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 29 -- 
  out: 15 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 3
  in: 3 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 2 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 15 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 16 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 4
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 53 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 61 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 5
  in: 16 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 5
  in: 29 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 5
  in: 53 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 61 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 2 -- 
  out: 29 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 6
  in: 15 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 6
  in: 16 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 6
  in: 29 -- 
  out: 34 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 6
  in: 53 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 6
  in: 61 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 7
  in: 3 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 7
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 8
  in: 2 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 8
  in: 15 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 8
  in: 16 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 8
  in: 29 -- 
  out: 34 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 8
  in: 53 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 8
  in: 61 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 9
  in: 3 -- 
  out: 35 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 9
  in: 8 -- 
  out: 36 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 10
  in: 3 -- 
  out: 16 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 10
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 2 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 15 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 16 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 11
  in: 53 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 11
  in: 61 -- 
  out: 51 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 13
  in: 3 -- 
  out: 16 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 13
  in: 8 -- 
  out: 36 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 2 -- 
  out: 47 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 15 -- 
  out: 49 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 16 -- 
  out: 50 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 14
  in: 53 -- 
  out: 48 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 14
  in: 61 -- 
  out: 51 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 21
  final_state: 1
  start_state: 0
Elem(60):
  state_no: 16
  in: 2 -- 
  out: 17 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 15 -- 
  out: 19 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 16 -- 
  out: 20 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 53 -- 
  out: 18 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 16
  in: 61 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 2 -- 
  out: 69 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 15 -- 
  out: 69 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 16 -- 
  out: 69 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 29 -- 
  out: 74 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 17
  in: 53 -- 
  out: 69 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 17
  in: 61 -- 
  out: 51 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 18
  in: 2 -- 
  out: 17 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 18
  in: 15 -- 
  out: 19 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 18
  in: 16 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 18
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 18
  in: 53 -- 
  out: 18 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 18
  in: 61 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 19
  in: 2 -- 
  out: 47 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 19
  in: 15 -- 
  out: 49 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 19
  in: 16 -- 
  out: 50 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 19
  in: 29 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 19
  in: 53 -- 
  out: 48 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 19
  in: 61 -- 
  out: 51 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 20
  in: 2 -- 
  out: 69 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 20
  in: 15 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 20
  in: 16 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 20
  in: 29 -- 
  out: 74 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 20
  in: 53 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 20
  in: 61 -- 
  out: 51 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 21
  in: 2 -- 
  out: 9 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 21
  in: 7 -- 
  out: 10 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 21
  in: 15 -- 
  out: 12 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 21
  in: 16 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 21
  in: 53 -- 
  out: 11 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 21
  in: 61 -- 
  out: 14 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 22
  in: 2 -- 
  out: 29 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 22
  in: 15 -- 
  out: 31 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 22
  in: 16 -- 
  out: 32 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 22
  in: 29 -- 
  out: 34 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 22
  in: 53 -- 
  out: 30 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 22
  in: 61 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 23
  in: 2 -- 
  out: 17 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 23
  in: 15 -- 
  out: 19 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 23
  in: 16 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 23
  in: 29 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 23
  in: 53 -- 
  out: 18 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 23
  in: 61 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 24
  in: 2 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 24
  in: 15 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 24
  in: 16 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 24
  in: 29 -- 
  out: 74 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 24
  in: 53 -- 
  out: 69 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 24
  in: 61 -- 
  out: 51 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 25
  in: 29 -- 
  out: 15 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 26
  in: 3 -- 
  out: 118 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 27
  in: 2 -- 
  out: 119 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 27
  in: 15 -- 
  out: 121 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 27
  in: 16 -- 
  out: 122 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 27
  in: 29 -- 
  out: 22 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 27
  in: 53 -- 
  out: 120 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 27
  in: 61 -- 
  out: 123 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 28
  in: 2 -- 
  out: 119 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 28
  in: 15 -- 
  out: 121 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 28
  in: 16 -- 
  out: 122 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 28
  in: 29 -- 
  out: 22 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 28
  in: 53 -- 
  out: 120 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 28
  in: 61 -- 
  out: 123 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 29
  in: 3 -- 
  out: 118 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 29
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 30
  in: 3 -- 
  out: 118 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 30
  in: 8 -- 
  out: 36 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 31
  in: 2 -- 
  out: 119 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 31
  in: 15 -- 
  out: 121 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 31
  in: 16 -- 
  out: 122 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 31
  in: 29 -- 
  out: 22 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 31
  in: 53 -- 
  out: 120 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 31
  in: 61 -- 
  out: 123 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(138):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(200): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 78, 5, <np> )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 7, "mari" )
Symbol(53, 181, 6, <adj> )
Symbol(87, 187, 5, <sg> )
Symbol(55, 192, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 204, 7, "mari" )
Symbol(15, 211, 4, <n> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 239, 5, <np> )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 267, 13, "<imádnak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(50, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 343, 7, <pres> )
Symbol(2, 350, 5, <pl> )
Symbol(2, 355, 6, <s3p> )
Symbol(2, 361, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 379, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 405, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(52, 0, 0, )
Symbol(87, 430, 5, <sg> )
Symbol(2, 435, 6, <s3p> )
Symbol(2, 441, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 459, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 477, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 498, 11, "<mindig>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 9, "mindig" )
Symbol(54, 530, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 548, 12, "<együtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 596, 10, "együtt" )
Symbol(54, 606, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 618, 10, "együtt" )
Symbol(61, 628, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 647, 15, "<játszanak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 674, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(37, 693, 7, <pres> )
Symbol(2, 700, 5, <pl> )
Symbol(2, 705, 6, <s3p> )
Symbol(2, 711, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 729, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 747, 4, "a" )
Symbol(73, 751, 6, <det> )
Symbol(2, 757, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 775, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 799, 7, "kert" )
Symbol(15, 806, 4, <n> )
Symbol(87, 810, 5, <sg> )
Symbol(2, 815, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 833, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 851, 4, "a" )
Symbol(73, 855, 6, <det> )
Symbol(2, 861, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 879, 9, "<nagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 900, 7, "nagy" )
Symbol(15, 907, 4, <n> )
Symbol(87, 911, 5, <sg> )
Symbol(55, 916, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 928, 7, "nagy" )
Symbol(53, 935, 6, <adj> )
Symbol(87, 941, 5, <sg> )
Symbol(55, 946, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 964, 9, "<ház>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "ház" )
Symbol(15, 992, 4, <n> )
Symbol(87, 996, 5, <sg> )
Symbol(55, 1,001, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,019, 11, "<előtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,042, 9, "előtt" )
Symbol(61, 1,051, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,070, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,088, 4, "." )
Symbol(64, 1,092, 7, <sent> )
Symbol(2, 1,099, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 50 38 37 2 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 3 2 61 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 16, signum = 16, q = 4, out = 20
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 41, signum = 8, q = 9, out = 36
trans_offset 59, signum = 10, q = 15, out = 4
trans_offset 90, signum = 2, q = 21, out = 9
trans_offset 91, signum = 7, q = 21, out = 10
trans_offset 114, signum = 29, q = 25, out = 15
trans_offset 115, signum = 3, q = 26, out = 118
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 119, signum = 29, q = 27, out = 22
trans_offset 129, signum = 8, q = 29, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 18, signum = 53, q = 4, out = 18
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 40, signum = 3, q = 9, out = 35
trans_offset 53, signum = 2, q = 14, out = 47
trans_offset 54, signum = 15, q = 14, out = 49
trans_offset 78, signum = 2, q = 19, out = 47
trans_offset 78, signum = 2, q = 19, out = 47
trans_offset 81, signum = 29, q = 19, out = 22
trans_offset 40, signum = 3, q = 9, out = 35
trans_offset 53, signum = 2, q = 14, out = 47
trans_offset 55, signum = 16, q = 14, out = 50
trans_offset 78, signum = 2, q = 19, out = 47
trans_offset 78, signum = 2, q = 19, out = 47
trans_offset 81, signum = 29, q = 19, out = 22
trans_offset 41, signum = 8, q = 9, out = 36
trans_offset 59, signum = 10, q = 15, out = 4
trans_offset 90, signum = 2, q = 21, out = 9
trans_offset 91, signum = 7, q = 21, out = 10
trans_offset 114, signum = 29, q = 25, out = 15
trans_offset 115, signum = 3, q = 26, out = 118
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 119, signum = 29, q = 27, out = 22
trans_offset 129, signum = 8, q = 29, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 32, signum = 3, q = 7, out = 35
trans_offset 44, signum = 2, q = 11, out = 47
trans_offset 49, signum = 61, q = 11, out = 51
trans_offset 69, signum = 29, q = 17, out = 74
trans_offset 33, signum = 8, q = 7, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 19
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 41, signum = 8, q = 9, out = 36
trans_offset 59, signum = 10, q = 15, out = 4
trans_offset 90, signum = 2, q = 21, out = 9
trans_offset 91, signum = 7, q = 21, out = 10
trans_offset 114, signum = 29, q = 25, out = 15
trans_offset 115, signum = 3, q = 26, out = 118
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 119, signum = 29, q = 27, out = 22
trans_offset 129, signum = 8, q = 29, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 19
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 40, signum = 3, q = 9, out = 35
trans_offset 53, signum = 2, q = 14, out = 47
trans_offset 57, signum = 53, q = 14, out = 48
trans_offset 78, signum = 2, q = 19, out = 47
trans_offset 78, signum = 2, q = 19, out = 47
trans_offset 81, signum = 29, q = 19, out = 22
trans_offset 41, signum = 8, q = 9, out = 36
trans_offset 59, signum = 10, q = 15, out = 4
trans_offset 90, signum = 2, q = 21, out = 9
trans_offset 91, signum = 7, q = 21, out = 10
trans_offset 114, signum = 29, q = 25, out = 15
trans_offset 115, signum = 3, q = 26, out = 118
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 117, signum = 15, q = 27, out = 121
trans_offset 122, signum = 2, q = 28, out = 119
trans_offset 122, signum = 2, q = 28, out = 119
trans_offset 125, signum = 29, q = 28, out = 22
trans_offset 131, signum = 8, q = 30, out = 36
trans_offset 59, signum = 10, q = 15, out = 4
trans_offset 90, signum = 2, q = 21, out = 9
trans_offset 91, signum = 7, q = 21, out = 10
trans_offset 114, signum = 29, q = 25, out = 15
trans_offset 115, signum = 3, q = 26, out = 118
trans_offset 116, signum = 2, q = 27, out = 119
trans_offset 121, signum = 61, q = 27, out = 123
trans_offset 119, signum = 29, q = 27, out = 22
trans_offset 129, signum = 8, q = 29, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36

Intermediate is(200): 
4 9 10 15 16 17 17 22 36 4 9 10 15 16 17 20 17 17 22 36 4 9 10 15 118 119 119 22 36 4 9 10 15 16 17 18 17 17 22 35 47 49 47 47 22 35 47 50 47 47 22 36 4 9 10 15 118 119 119 119 119 119 119 22 36 4 9 10 15 16 17 17 17 17 17 17 22 36 4 9 10 15 16 17 17 22 36 4 9 10 15 16 17 17 22 36 4 9 10 15 16 17 17 22 35 47 51 74 36 4 9 10 15 16 17 17 17 17 17 17 22 36 4 9 10 15 16 17 17 17 22 36 4 9 10 15 16 17 19 17 17 22 36 4 9 10 15 118 119 119 119 22 36 4 9 10 15 16 17 19 17 17 22 35 47 48 47 47 22 36 4 9 10 15 118 119 121 119 119 22 36 4 9 10 15 118 119 123 22 36 4 9 10 15 16 17 17 17 22 36 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 26, q = 2, out = 61
trans_offset 49, q = 4, out = 2
trans_offset 48, q = 4, out = 3
trans_offset 78, q = 6, out = 29
trans_offset 134, q = 10, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 24, q = 2, out = 15
trans_offset 22, q = 2, out = 2
trans_offset 21, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 15, q = 2, out = 2
trans_offset 15, q = 2, out = 2
trans_offset 16, q = 2, out = 53
trans_offset 15, q = 2, out = 2
trans_offset 14, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 56, q = 5, out = 2
trans_offset 83, q = 7, out = 2
trans_offset 85, q = 7, out = 15
trans_offset 83, q = 7, out = 2
trans_offset 82, q = 7, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 21, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 19, q = 2, out = 0
trans_offset 42, q = 4, out = 0
trans_offset 41, q = 4, out = 0
trans_offset 79, q = 6, out = 29
trans_offset 136, q = 10, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 21, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 15, q = 2, out = 2
trans_offset 15, q = 2, out = 2
trans_offset 18, q = 2, out = 16
trans_offset 15, q = 2, out = 2
trans_offset 14, q = 2, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 66, q = 5, out = 2
trans_offset 93, q = 7, out = 2
trans_offset 95, q = 7, out = 15
trans_offset 93, q = 7, out = 2
trans_offset 92, q = 7, out = 3
trans_offset 28, q = 3, out = 29
trans_offset 56, q = 5, out = 2
trans_offset 83, q = 7, out = 2
trans_offset 84, q = 7, out = 53
trans_offset 83, q = 7, out = 2
trans_offset 82, q = 7, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 21, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 16
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10
trans_offset 163, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 7
trans_offset 106, q = 8, out = 2
trans_offset 105, q = 8, out = 10

Output is(196): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 7, "mari" )
Symbol(53, 0, 0, )
Symbol(87, 187, 5, <sg> )
Symbol(55, 192, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 204, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 267, 13, "<imádnak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(50, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 343, 7, <pres> )
Symbol(2, 350, 5, <pl> )
Symbol(2, 355, 6, <s3p> )
Symbol(2, 361, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 379, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 405, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(52, 0, 0, )
Symbol(87, 430, 5, <sg> )
Symbol(2, 435, 6, <s3p> )
Symbol(2, 441, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 459, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 477, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 498, 11, "<mindig>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 9, "mindig" )
Symbol(54, 530, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 548, 12, "<együtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 596, 10, "együtt" )
Symbol(54, 606, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 647, 15, "<játszanak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 674, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(37, 693, 7, <pres> )
Symbol(2, 700, 5, <pl> )
Symbol(2, 705, 6, <s3p> )
Symbol(2, 711, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 729, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 747, 4, "a" )
Symbol(73, 751, 6, <det> )
Symbol(2, 757, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 775, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 799, 7, "kert" )
Symbol(15, 0, 0, )
Symbol(87, 810, 5, <sg> )
Symbol(2, 815, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 833, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 851, 4, "a" )
Symbol(73, 855, 6, <det> )
Symbol(2, 861, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 879, 9, "<nagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 900, 7, "nagy" )
Symbol(15, 0, 0, )
Symbol(87, 911, 5, <sg> )
Symbol(55, 916, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 928, 7, "nagy" )
Symbol(53, 0, 0, )
Symbol(87, 941, 5, <sg> )
Symbol(55, 946, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 964, 9, "<ház>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(55, 1,001, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,019, 11, "<előtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,042, 9, "előtt" )
Symbol(61, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,070, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,088, 4, "." )
Symbol(64, 1,092, 7, <sent> )
Symbol(2, 1,099, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 50 38 37 2 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_87_T_1


LRS T1:
Name: R_1_87_T_1
arity: 2
arccount: 70
statecount: 25
linecount: 71
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 80 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 80 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 12 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 13 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 18
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 16
  in: 2 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 50 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 17
  in: 2 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 17
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 17
  in: 29 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 18
  in: 2 -- 
  out: 7 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 18
  in: 7 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 18
  in: 16 -- 
  out: 10 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 80 -- 
  out: 9 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 19
  in: 29 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 2 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 16 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 21
  in: 29 -- 
  out: 24 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 21
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 16 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 22
  in: 29 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 22
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 3 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(196): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 7, "mari" )
Symbol(53, 0, 0, )
Symbol(87, 187, 5, <sg> )
Symbol(55, 192, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 204, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 267, 13, "<imádnak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(50, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 343, 7, <pres> )
Symbol(2, 350, 5, <pl> )
Symbol(2, 355, 6, <s3p> )
Symbol(2, 361, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 379, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 405, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(52, 0, 0, )
Symbol(87, 430, 5, <sg> )
Symbol(2, 435, 6, <s3p> )
Symbol(2, 441, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 459, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 477, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 498, 11, "<mindig>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 9, "mindig" )
Symbol(54, 530, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 548, 12, "<együtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 596, 10, "együtt" )
Symbol(54, 606, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 647, 15, "<játszanak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 674, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(37, 693, 7, <pres> )
Symbol(2, 700, 5, <pl> )
Symbol(2, 705, 6, <s3p> )
Symbol(2, 711, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 729, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 747, 4, "a" )
Symbol(73, 751, 6, <det> )
Symbol(2, 757, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 775, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 799, 7, "kert" )
Symbol(15, 0, 0, )
Symbol(87, 810, 5, <sg> )
Symbol(2, 815, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 833, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 851, 4, "a" )
Symbol(73, 855, 6, <det> )
Symbol(2, 861, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 879, 9, "<nagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 900, 7, "nagy" )
Symbol(15, 0, 0, )
Symbol(87, 911, 5, <sg> )
Symbol(55, 916, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 928, 7, "nagy" )
Symbol(53, 0, 0, )
Symbol(87, 941, 5, <sg> )
Symbol(55, 946, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 964, 9, "<ház>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(55, 1,001, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,019, 11, "<előtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,042, 9, "előtt" )
Symbol(61, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,070, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,088, 4, "." )
Symbol(64, 1,092, 7, <sent> )
Symbol(2, 1,099, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 50 38 37 2 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 80, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 43, signum = 10, q = 15, out = 4
trans_offset 52, signum = 2, q = 18, out = 7
trans_offset 53, signum = 7, q = 18, out = 8
trans_offset 56, signum = 29, q = 19, out = 11
trans_offset 57, signum = 3, q = 20, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 59, signum = 16, q = 21, out = 15
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 67, signum = 8, q = 23, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 33, signum = 16, q = 11, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(196): 
4 7 8 11 12 13 14 16 26 4 7 8 11 60 21 15 21 21 24 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 12 13 15 21 21 24 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 22, q = 4, out = 2
trans_offset 27, q = 4, out = 3
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10

Output is(184): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 153, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 232, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 244, 5, <sg> )
Symbol(55, 249, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 267, 13, "<imádnak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(50, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 343, 7, <pres> )
Symbol(2, 350, 5, <pl> )
Symbol(2, 355, 6, <s3p> )
Symbol(2, 361, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 379, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 405, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(52, 0, 0, )
Symbol(87, 430, 5, <sg> )
Symbol(2, 435, 6, <s3p> )
Symbol(2, 441, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 459, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 477, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 498, 11, "<mindig>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 9, "mindig" )
Symbol(54, 530, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 548, 12, "<együtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 596, 10, "együtt" )
Symbol(54, 606, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 647, 15, "<játszanak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 674, 11, "játszik" )
Symbol(38, 0, 0, )
Symbol(37, 693, 7, <pres> )
Symbol(2, 700, 5, <pl> )
Symbol(2, 705, 6, <s3p> )
Symbol(2, 711, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 729, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 747, 4, "a" )
Symbol(73, 751, 6, <det> )
Symbol(2, 757, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 775, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 799, 7, "kert" )
Symbol(15, 0, 0, )
Symbol(87, 810, 5, <sg> )
Symbol(2, 815, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 833, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 851, 4, "a" )
Symbol(73, 855, 6, <det> )
Symbol(2, 861, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 879, 9, "<nagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 900, 7, "nagy" )
Symbol(15, 0, 0, )
Symbol(87, 911, 5, <sg> )
Symbol(55, 916, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 928, 7, "nagy" )
Symbol(53, 0, 0, )
Symbol(87, 941, 5, <sg> )
Symbol(55, 946, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 964, 9, "<ház>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(55, 1,001, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,019, 11, "<előtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,042, 9, "előtt" )
Symbol(61, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,070, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,088, 4, "." )
Symbol(64, 1,092, 7, <sent> )
Symbol(2, 1,099, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 50 38 37 2 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<kisfiú>" #BOC# | #0# "kisfiú" <n> <sg> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<hatéves>" #BOC# | #0# "hatéves" <adj> <sg> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<A>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kislány>" #BOC# | #0# "kislány" <n> <sg> <nom> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<húga>" #BOC# | #0# "húg" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<ő>" #BOC# | #0# "ő" <prn> <pers> <p3> <mf> <sg> <nom> | #EOC# $0$ "<ötéves>" #BOC# | #0# "ötéves" <n> <sg> <nom> | #0# "ötéves" <adj> <sg> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_3_285_T_1


LRS T1:
Name: R_3_285_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 84 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 53 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 84 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 53 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 84 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 53 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 84 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 53 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 84 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 53 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 84 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 53 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 84 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 53 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 84 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 53 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 84 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(102): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 6, "<A>" )
Symbol(7, 52, 6, #BOC# )
Symbol(29, 58, 2, | )
Symbol(3, 60, 4, #0# )
Symbol(2, 64, 4, "a" )
Symbol(73, 68, 6, <det> )
Symbol(2, 74, 6, <def> )
Symbol(29, 80, 2, | )
Symbol(8, 82, 6, #EOC# )
Symbol(10, 88, 4, $0$ )
Symbol(2, 92, 13, "<kislány>" )
Symbol(7, 105, 6, #BOC# )
Symbol(29, 111, 2, | )
Symbol(3, 113, 4, #0# )
Symbol(2, 117, 11, "kislány" )
Symbol(15, 128, 4, <n> )
Symbol(87, 132, 5, <sg> )
Symbol(55, 137, 6, <nom> )
Symbol(29, 143, 2, | )
Symbol(8, 145, 6, #EOC# )
Symbol(10, 151, 4, $0$ )
Symbol(2, 155, 6, "<a>" )
Symbol(7, 161, 6, #BOC# )
Symbol(29, 167, 2, | )
Symbol(3, 169, 4, #0# )
Symbol(2, 173, 4, "a" )
Symbol(73, 177, 6, <det> )
Symbol(2, 183, 6, <def> )
Symbol(29, 189, 2, | )
Symbol(8, 191, 6, #EOC# )
Symbol(10, 197, 4, $0$ )
Symbol(2, 201, 10, "<húga>" )
Symbol(7, 211, 6, #BOC# )
Symbol(29, 217, 2, | )
Symbol(3, 219, 4, #0# )
Symbol(2, 223, 7, "húg" )
Symbol(15, 230, 4, <n> )
Symbol(87, 234, 5, <sg> )
Symbol(28, 239, 8, <px3ss> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 253, 2, | )
Symbol(8, 255, 6, #EOC# )
Symbol(10, 261, 4, $0$ )
Symbol(2, 265, 6, "<,>" )
Symbol(7, 271, 6, #BOC# )
Symbol(29, 277, 2, | )
Symbol(3, 279, 4, #0# )
Symbol(2, 283, 4, "," )
Symbol(44, 287, 5, <cm> )
Symbol(29, 292, 2, | )
Symbol(8, 294, 6, #EOC# )
Symbol(10, 300, 4, $0$ )
Symbol(2, 304, 7, "<ő>" )
Symbol(7, 311, 6, #BOC# )
Symbol(29, 317, 2, | )
Symbol(3, 319, 4, #0# )
Symbol(2, 323, 5, "ő" )
Symbol(57, 328, 6, <prn> )
Symbol(56, 334, 7, <pers> )
Symbol(2, 341, 5, <p3> )
Symbol(2, 346, 5, <mf> )
Symbol(87, 351, 5, <sg> )
Symbol(55, 356, 6, <nom> )
Symbol(29, 362, 2, | )
Symbol(8, 364, 6, #EOC# )
Symbol(10, 370, 4, $0$ )
Symbol(2, 374, 13, "<ötéves>" )
Symbol(7, 387, 6, #BOC# )
Symbol(29, 393, 2, | )
Symbol(3, 395, 4, #0# )
Symbol(84, 399, 11, "ötéves" )
Symbol(15, 410, 4, <n> )
Symbol(87, 414, 5, <sg> )
Symbol(55, 419, 6, <nom> )
Symbol(29, 425, 2, | )
Symbol(3, 427, 4, #0# )
Symbol(84, 431, 11, "ötéves" )
Symbol(53, 442, 6, <adj> )
Symbol(87, 448, 5, <sg> )
Symbol(55, 453, 6, <nom> )
Symbol(29, 459, 2, | )
Symbol(8, 461, 6, #EOC# )
Symbol(10, 467, 4, $0$ )
Symbol(2, 471, 6, "<.>" )
Symbol(7, 477, 6, #BOC# )
Symbol(29, 483, 2, | )
Symbol(3, 485, 4, #0# )
Symbol(2, 489, 4, "." )
Symbol(64, 493, 7, <sent> )
Symbol(2, 500, 6, <<<<> )
Symbol(29, 506, 2, | )
Symbol(8, 508, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 84 15 87 55 29 3 84 53 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 84, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 15, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 84, q = 8, out = 14
trans_offset 33, signum = 53, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 21, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(102): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 13 16 22 5 7 9 11 12 14 17 17 17 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 53
trans_offset 23, q = 4, out = 84
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 78, q = 10, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 92, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(96): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 6, "<A>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 64, 4, "a" )
Symbol(73, 68, 6, <det> )
Symbol(2, 74, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 92, 13, "<kislány>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 117, 11, "kislány" )
Symbol(15, 128, 4, <n> )
Symbol(87, 132, 5, <sg> )
Symbol(55, 137, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 155, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 173, 4, "a" )
Symbol(73, 177, 6, <det> )
Symbol(2, 183, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 201, 10, "<húga>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 223, 7, "húg" )
Symbol(15, 230, 4, <n> )
Symbol(87, 234, 5, <sg> )
Symbol(28, 239, 8, <px3ss> )
Symbol(55, 247, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 265, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 283, 4, "," )
Symbol(44, 287, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 304, 7, "<ő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 323, 5, "ő" )
Symbol(57, 328, 6, <prn> )
Symbol(56, 334, 7, <pers> )
Symbol(2, 341, 5, <p3> )
Symbol(2, 346, 5, <mf> )
Symbol(87, 351, 5, <sg> )
Symbol(55, 356, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 374, 13, "<ötéves>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(84, 0, 0, )
Symbol(53, 0, 0, )
Symbol(87, 448, 5, <sg> )
Symbol(55, 453, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 471, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 489, 4, "." )
Symbol(64, 493, 7, <sent> )
Symbol(2, 500, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 84 53 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Jancsinak>" #BOC# | #0# "Jancsi" <np> <sg> <dat> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<egy>" #BOC# | #0# "egy" <det> <ind> | #0# "egy" <adv> | #EOC# $0$ "<kicsi>" #BOC# | #0# "kicsi" <adj> <sg> <nom> | #0# "kicsi" <n> <sg> <nom> | #EOC# $0$ "<kutyája>" #BOC# | #0# "kutya" <adj> <sg> <px3ss> <nom> | #0# "kutya" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<most>" #BOC# | #0# "most" <adv> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kutya>" #BOC# | #0# "kutya" <adj> <sg> <nom> | #0# "kutya" <n> <sg> <nom> | #EOC# $0$ "<is>" #BOC# | #0# "is" <adv> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kertben>" #BOC# | #0# "kert" <n> <sg> <ine> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_99_T_1


LRS T1:
Name: R_1_99_T_1
arity: 2
arccount: 523
statecount: 38
linecount: 524
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 16 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 17 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 18 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 19 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 20 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 21 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 22 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 23 -- 
  out: 14 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 0
  in: 24 -- 
  out: 15 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(12):
  state_no: 0
  in: 25 -- 
  out: 16 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(13):
  state_no: 0
  in: 26 -- 
  out: 17 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(14):
  state_no: 0
  in: 27 -- 
  out: 18 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(15):
  state_no: 0
  in: 28 -- 
  out: 19 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(16):
  state_no: 0
  in: 53 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(17):
  state_no: 1
  in: 2 -- 
  out: 20 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 7 -- 
  out: 21 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 15 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 16 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 17 -- 
  out: 25 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 1
  in: 18 -- 
  out: 26 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 1
  in: 19 -- 
  out: 27 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 1
  in: 20 -- 
  out: 28 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 1
  in: 21 -- 
  out: 29 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 1
  in: 22 -- 
  out: 30 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 1
  in: 23 -- 
  out: 31 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 1
  in: 24 -- 
  out: 32 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 1
  in: 25 -- 
  out: 33 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 1
  in: 26 -- 
  out: 34 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 1
  in: 27 -- 
  out: 35 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 1
  in: 28 -- 
  out: 36 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 1
  in: 53 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 2
  in: 29 -- 
  out: 37 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 3
  in: 3 -- 
  out: 38 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 4
  in: 2 -- 
  out: 39 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 4
  in: 15 -- 
  out: 41 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 4
  in: 16 -- 
  out: 42 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 4
  in: 17 -- 
  out: 43 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 4
  in: 18 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 4
  in: 19 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 4
  in: 20 -- 
  out: 46 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 4
  in: 21 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 4
  in: 22 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 4
  in: 23 -- 
  out: 49 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 4
  in: 24 -- 
  out: 50 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 4
  in: 25 -- 
  out: 51 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 4
  in: 26 -- 
  out: 52 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 4
  in: 27 -- 
  out: 53 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 4
  in: 28 -- 
  out: 54 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 4
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 4
  in: 53 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 5
  in: 2 -- 
  out: 56 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 5
  in: 15 -- 
  out: 58 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 5
  in: 16 -- 
  out: 59 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 5
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 5
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 5
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 5
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 5
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 5
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 5
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 5
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 5
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 5
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 5
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 5
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 5
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 5
  in: 53 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 6
  in: 2 -- 
  out: 73 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 6
  in: 15 -- 
  out: 41 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 6
  in: 16 -- 
  out: 42 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 6
  in: 17 -- 
  out: 77 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 6
  in: 18 -- 
  out: 78 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 6
  in: 19 -- 
  out: 79 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 6
  in: 20 -- 
  out: 80 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 6
  in: 21 -- 
  out: 81 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 6
  in: 22 -- 
  out: 82 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 6
  in: 23 -- 
  out: 83 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 6
  in: 24 -- 
  out: 84 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 6
  in: 25 -- 
  out: 85 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 6
  in: 26 -- 
  out: 86 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 6
  in: 27 -- 
  out: 87 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 6
  in: 28 -- 
  out: 88 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 6
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 6
  in: 53 -- 
  out: 74 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 7
  in: 3 -- 
  out: 90 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 7
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 8
  in: 2 -- 
  out: 92 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 8
  in: 15 -- 
  out: 58 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 8
  in: 16 -- 
  out: 59 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 8
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 8
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 8
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 8
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 8
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 8
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 8
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 8
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 8
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 8
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 8
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 8
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 8
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 8
  in: 53 -- 
  out: 74 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 9
  in: 2 -- 
  out: 109 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 9
  in: 15 -- 
  out: 111 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 9
  in: 16 -- 
  out: 112 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 9
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 9
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 9
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 9
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 9
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 9
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 9
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 9
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 9
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 9
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 9
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 9
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 9
  in: 29 -- 
  out: 125 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 9
  in: 53 -- 
  out: 110 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 10
  in: 2 -- 
  out: 73 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 10
  in: 15 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 10
  in: 16 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 10
  in: 17 -- 
  out: 77 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 10
  in: 18 -- 
  out: 78 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 10
  in: 19 -- 
  out: 79 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 10
  in: 20 -- 
  out: 80 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 10
  in: 21 -- 
  out: 81 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 10
  in: 22 -- 
  out: 82 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 10
  in: 23 -- 
  out: 83 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 10
  in: 24 -- 
  out: 84 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 10
  in: 25 -- 
  out: 85 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 10
  in: 26 -- 
  out: 86 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 10
  in: 27 -- 
  out: 87 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 10
  in: 28 -- 
  out: 88 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 10
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 10
  in: 53 -- 
  out: 74 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 11
  in: 2 -- 
  out: 143 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 11
  in: 15 -- 
  out: 145 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 11
  in: 16 -- 
  out: 146 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 11
  in: 17 -- 
  out: 147 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 11
  in: 18 -- 
  out: 148 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 11
  in: 19 -- 
  out: 149 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 11
  in: 20 -- 
  out: 150 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 11
  in: 21 -- 
  out: 151 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 11
  in: 22 -- 
  out: 152 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 11
  in: 23 -- 
  out: 153 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 11
  in: 24 -- 
  out: 154 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 11
  in: 25 -- 
  out: 155 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 11
  in: 26 -- 
  out: 156 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 11
  in: 27 -- 
  out: 157 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 11
  in: 28 -- 
  out: 158 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 11
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 11
  in: 53 -- 
  out: 144 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(158):
  state_no: 13
  in: 2 -- 
  out: 161 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 13
  in: 15 -- 
  out: 163 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 13
  in: 16 -- 
  out: 164 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 13
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 13
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 13
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 13
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 13
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 13
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 13
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 13
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 13
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 13
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 13
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 13
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 13
  in: 29 -- 
  out: 177 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 13
  in: 53 -- 
  out: 162 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 14
  in: 2 -- 
  out: 178 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 14
  in: 15 -- 
  out: 111 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 14
  in: 16 -- 
  out: 112 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 14
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 14
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 14
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 14
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 14
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 14
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 14
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 14
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 14
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 14
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 14
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 14
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 14
  in: 29 -- 
  out: 125 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 14
  in: 53 -- 
  out: 179 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 15
  in: 3 -- 
  out: 38 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 15
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 16
  in: 2 -- 
  out: 92 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 16
  in: 15 -- 
  out: 58 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 16
  in: 16 -- 
  out: 59 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 16
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 16
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 16
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 16
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 16
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 16
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 16
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 16
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 16
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 16
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 16
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 16
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 16
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 16
  in: 53 -- 
  out: 74 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 17
  in: 3 -- 
  out: 214 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 17
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 18
  in: 2 -- 
  out: 216 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 18
  in: 15 -- 
  out: 218 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 18
  in: 16 -- 
  out: 219 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 18
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 18
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 18
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 18
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 18
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 18
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 18
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 18
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 18
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 18
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 18
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 18
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 18
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 18
  in: 53 -- 
  out: 144 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 19
  in: 2 -- 
  out: 233 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 19
  in: 15 -- 
  out: 145 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 19
  in: 16 -- 
  out: 146 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 19
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 19
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 19
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 19
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 19
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 19
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 19
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 19
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 19
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 19
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 19
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 19
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 19
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 19
  in: 53 -- 
  out: 234 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 20
  in: 3 -- 
  out: 250 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 20
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 21
  in: 2 -- 
  out: 39 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 21
  in: 15 -- 
  out: 41 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 21
  in: 16 -- 
  out: 42 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 21
  in: 17 -- 
  out: 43 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 21
  in: 18 -- 
  out: 44 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 21
  in: 19 -- 
  out: 45 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 21
  in: 20 -- 
  out: 46 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 21
  in: 21 -- 
  out: 47 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 21
  in: 22 -- 
  out: 48 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 21
  in: 23 -- 
  out: 49 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 21
  in: 24 -- 
  out: 50 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 21
  in: 25 -- 
  out: 51 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 21
  in: 26 -- 
  out: 52 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 21
  in: 27 -- 
  out: 53 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 21
  in: 28 -- 
  out: 54 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 21
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 21
  in: 53 -- 
  out: 40 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 22
  in: 2 -- 
  out: 233 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 22
  in: 15 -- 
  out: 145 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 22
  in: 16 -- 
  out: 146 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 22
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 22
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 22
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 22
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 22
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 22
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 22
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 22
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 22
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 22
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 22
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 22
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 22
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 22
  in: 53 -- 
  out: 234 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 23
  in: 2 -- 
  out: 286 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 23
  in: 15 -- 
  out: 218 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 23
  in: 16 -- 
  out: 219 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 23
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 23
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 23
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 23
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 23
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 23
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 23
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 23
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 23
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 23
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 23
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 23
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 23
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 23
  in: 53 -- 
  out: 234 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 24
  in: 2 -- 
  out: 303 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 24
  in: 15 -- 
  out: 305 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 24
  in: 16 -- 
  out: 306 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 24
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 24
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 24
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 24
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 24
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 24
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 24
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 24
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 24
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 24
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 24
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 24
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 24
  in: 29 -- 
  out: 319 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 24
  in: 53 -- 
  out: 304 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 25
  in: 2 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 25
  in: 15 -- 
  out: 41 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 25
  in: 16 -- 
  out: 42 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 25
  in: 17 -- 
  out: 77 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 25
  in: 18 -- 
  out: 78 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 25
  in: 19 -- 
  out: 79 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 25
  in: 20 -- 
  out: 80 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 25
  in: 21 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 25
  in: 22 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 25
  in: 23 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 25
  in: 24 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 25
  in: 25 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 25
  in: 26 -- 
  out: 86 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 25
  in: 27 -- 
  out: 87 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 25
  in: 28 -- 
  out: 88 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 25
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 25
  in: 53 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 26
  in: 2 -- 
  out: 56 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 26
  in: 15 -- 
  out: 58 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 26
  in: 16 -- 
  out: 59 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 26
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 26
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 26
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 26
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 26
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 26
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 26
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 26
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 26
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 26
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 26
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 26
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 26
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 26
  in: 53 -- 
  out: 40 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 27
  in: 2 -- 
  out: 73 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 27
  in: 15 -- 
  out: 41 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 27
  in: 16 -- 
  out: 42 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 27
  in: 17 -- 
  out: 77 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 27
  in: 18 -- 
  out: 78 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 27
  in: 19 -- 
  out: 79 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 27
  in: 20 -- 
  out: 80 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 27
  in: 21 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 27
  in: 22 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 27
  in: 23 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 27
  in: 24 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 27
  in: 25 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 27
  in: 26 -- 
  out: 86 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 27
  in: 27 -- 
  out: 87 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(365):
  state_no: 27
  in: 28 -- 
  out: 88 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(366):
  state_no: 27
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(367):
  state_no: 27
  in: 53 -- 
  out: 74 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(368):
  state_no: 28
  in: 3 -- 
  out: 90 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(369):
  state_no: 28
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(370):
  state_no: 29
  in: 2 -- 
  out: 286 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(371):
  state_no: 29
  in: 15 -- 
  out: 218 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(372):
  state_no: 29
  in: 16 -- 
  out: 219 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(373):
  state_no: 29
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(374):
  state_no: 29
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(375):
  state_no: 29
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(376):
  state_no: 29
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(377):
  state_no: 29
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(378):
  state_no: 29
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(379):
  state_no: 29
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(380):
  state_no: 29
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(381):
  state_no: 29
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(382):
  state_no: 29
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(383):
  state_no: 29
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(384):
  state_no: 29
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(385):
  state_no: 29
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(386):
  state_no: 29
  in: 53 -- 
  out: 234 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(387):
  state_no: 30
  in: 2 -- 
  out: 390 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(388):
  state_no: 30
  in: 15 -- 
  out: 392 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(389):
  state_no: 30
  in: 16 -- 
  out: 392 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(390):
  state_no: 30
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(391):
  state_no: 30
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(392):
  state_no: 30
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(393):
  state_no: 30
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(394):
  state_no: 30
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(395):
  state_no: 30
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(396):
  state_no: 30
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(397):
  state_no: 30
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(398):
  state_no: 30
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(399):
  state_no: 30
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(400):
  state_no: 30
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(401):
  state_no: 30
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(402):
  state_no: 30
  in: 29 -- 
  out: 406 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(403):
  state_no: 30
  in: 53 -- 
  out: 391 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(404):
  state_no: 31
  in: 2 -- 
  out: 407 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(405):
  state_no: 31
  in: 15 -- 
  out: 305 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(406):
  state_no: 31
  in: 16 -- 
  out: 306 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(407):
  state_no: 31
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(408):
  state_no: 31
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(409):
  state_no: 31
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(410):
  state_no: 31
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(411):
  state_no: 31
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(412):
  state_no: 31
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(413):
  state_no: 31
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(414):
  state_no: 31
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(415):
  state_no: 31
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(416):
  state_no: 31
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(417):
  state_no: 31
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(418):
  state_no: 31
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(419):
  state_no: 31
  in: 29 -- 
  out: 319 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(420):
  state_no: 31
  in: 53 -- 
  out: 408 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(421):
  state_no: 32
  in: 2 -- 
  out: 92 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(422):
  state_no: 32
  in: 15 -- 
  out: 58 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(423):
  state_no: 32
  in: 16 -- 
  out: 59 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(424):
  state_no: 32
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(425):
  state_no: 32
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(426):
  state_no: 32
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(427):
  state_no: 32
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(428):
  state_no: 32
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(429):
  state_no: 32
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(430):
  state_no: 32
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(431):
  state_no: 32
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(432):
  state_no: 32
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(433):
  state_no: 32
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(434):
  state_no: 32
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(435):
  state_no: 32
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(436):
  state_no: 32
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(437):
  state_no: 32
  in: 53 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(438):
  state_no: 33
  in: 2 -- 
  out: 92 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(439):
  state_no: 33
  in: 15 -- 
  out: 58 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(440):
  state_no: 33
  in: 16 -- 
  out: 59 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(441):
  state_no: 33
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(442):
  state_no: 33
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(443):
  state_no: 33
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(444):
  state_no: 33
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(445):
  state_no: 33
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(446):
  state_no: 33
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(447):
  state_no: 33
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(448):
  state_no: 33
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(449):
  state_no: 33
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(450):
  state_no: 33
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(451):
  state_no: 33
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(452):
  state_no: 33
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(453):
  state_no: 33
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(454):
  state_no: 33
  in: 53 -- 
  out: 74 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(455):
  state_no: 34
  in: 2 -- 
  out: 143 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(456):
  state_no: 34
  in: 15 -- 
  out: 145 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(457):
  state_no: 34
  in: 16 -- 
  out: 146 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(458):
  state_no: 34
  in: 17 -- 
  out: 147 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(459):
  state_no: 34
  in: 18 -- 
  out: 148 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(460):
  state_no: 34
  in: 19 -- 
  out: 149 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(461):
  state_no: 34
  in: 20 -- 
  out: 150 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(462):
  state_no: 34
  in: 21 -- 
  out: 151 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(463):
  state_no: 34
  in: 22 -- 
  out: 152 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(464):
  state_no: 34
  in: 23 -- 
  out: 153 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(465):
  state_no: 34
  in: 24 -- 
  out: 154 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(466):
  state_no: 34
  in: 25 -- 
  out: 155 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(467):
  state_no: 34
  in: 26 -- 
  out: 156 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(468):
  state_no: 34
  in: 27 -- 
  out: 157 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(469):
  state_no: 34
  in: 28 -- 
  out: 158 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(470):
  state_no: 34
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(471):
  state_no: 34
  in: 53 -- 
  out: 144 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(472):
  state_no: 35
  in: 2 -- 
  out: 216 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(473):
  state_no: 35
  in: 15 -- 
  out: 218 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(474):
  state_no: 35
  in: 16 -- 
  out: 219 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(475):
  state_no: 35
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(476):
  state_no: 35
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(477):
  state_no: 35
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(478):
  state_no: 35
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(479):
  state_no: 35
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(480):
  state_no: 35
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(481):
  state_no: 35
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(482):
  state_no: 35
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(483):
  state_no: 35
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(484):
  state_no: 35
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(485):
  state_no: 35
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(486):
  state_no: 35
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(487):
  state_no: 35
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(488):
  state_no: 35
  in: 53 -- 
  out: 144 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(489):
  state_no: 36
  in: 2 -- 
  out: 233 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(490):
  state_no: 36
  in: 15 -- 
  out: 145 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(491):
  state_no: 36
  in: 16 -- 
  out: 146 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(492):
  state_no: 36
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(493):
  state_no: 36
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(494):
  state_no: 36
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(495):
  state_no: 36
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(496):
  state_no: 36
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(497):
  state_no: 36
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(498):
  state_no: 36
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(499):
  state_no: 36
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(500):
  state_no: 36
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(501):
  state_no: 36
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(502):
  state_no: 36
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(503):
  state_no: 36
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(504):
  state_no: 36
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(505):
  state_no: 36
  in: 53 -- 
  out: 234 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(506):
  state_no: 37
  in: 2 -- 
  out: 286 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(507):
  state_no: 37
  in: 15 -- 
  out: 218 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(508):
  state_no: 37
  in: 16 -- 
  out: 219 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(509):
  state_no: 37
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(510):
  state_no: 37
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(511):
  state_no: 37
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(512):
  state_no: 37
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(513):
  state_no: 37
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(514):
  state_no: 37
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(515):
  state_no: 37
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(516):
  state_no: 37
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(517):
  state_no: 37
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(518):
  state_no: 37
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(519):
  state_no: 37
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(520):
  state_no: 37
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(521):
  state_no: 37
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(522):
  state_no: 37
  in: 53 -- 
  out: 234 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(523):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(181): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 14, "<Jancsinak>" )
Symbol(7, 60, 6, #BOC# )
Symbol(29, 66, 2, | )
Symbol(3, 68, 4, #0# )
Symbol(2, 72, 9, "Jancsi" )
Symbol(16, 81, 5, <np> )
Symbol(87, 86, 5, <sg> )
Symbol(2, 91, 6, <dat> )
Symbol(29, 97, 2, | )
Symbol(8, 99, 6, #EOC# )
Symbol(10, 105, 4, $0$ )
Symbol(2, 109, 8, "<van>" )
Symbol(7, 117, 6, #BOC# )
Symbol(29, 123, 2, | )
Symbol(3, 125, 4, #0# )
Symbol(35, 129, 6, "van" )
Symbol(48, 135, 8, <vbser> )
Symbol(37, 143, 7, <pres> )
Symbol(87, 150, 5, <sg> )
Symbol(2, 155, 6, <s3p> )
Symbol(2, 161, 6, <ind> )
Symbol(29, 167, 2, | )
Symbol(8, 169, 6, #EOC# )
Symbol(10, 175, 4, $0$ )
Symbol(2, 179, 8, "<egy>" )
Symbol(7, 187, 6, #BOC# )
Symbol(29, 193, 2, | )
Symbol(3, 195, 4, #0# )
Symbol(2, 199, 6, "egy" )
Symbol(73, 205, 6, <det> )
Symbol(2, 211, 6, <ind> )
Symbol(29, 217, 2, | )
Symbol(3, 219, 4, #0# )
Symbol(2, 223, 6, "egy" )
Symbol(54, 229, 6, <adv> )
Symbol(29, 235, 2, | )
Symbol(8, 237, 6, #EOC# )
Symbol(10, 243, 4, $0$ )
Symbol(2, 247, 10, "<kicsi>" )
Symbol(7, 257, 6, #BOC# )
Symbol(29, 263, 2, | )
Symbol(3, 265, 4, #0# )
Symbol(2, 269, 8, "kicsi" )
Symbol(53, 277, 6, <adj> )
Symbol(87, 283, 5, <sg> )
Symbol(55, 288, 6, <nom> )
Symbol(29, 294, 2, | )
Symbol(3, 296, 4, #0# )
Symbol(2, 300, 8, "kicsi" )
Symbol(15, 308, 4, <n> )
Symbol(87, 312, 5, <sg> )
Symbol(55, 317, 6, <nom> )
Symbol(29, 323, 2, | )
Symbol(8, 325, 6, #EOC# )
Symbol(10, 331, 4, $0$ )
Symbol(2, 335, 13, "<kutyája>" )
Symbol(7, 348, 6, #BOC# )
Symbol(29, 354, 2, | )
Symbol(3, 356, 4, #0# )
Symbol(83, 360, 8, "kutya" )
Symbol(53, 368, 6, <adj> )
Symbol(87, 374, 5, <sg> )
Symbol(28, 379, 8, <px3ss> )
Symbol(55, 387, 6, <nom> )
Symbol(29, 393, 2, | )
Symbol(3, 395, 4, #0# )
Symbol(83, 399, 8, "kutya" )
Symbol(15, 407, 4, <n> )
Symbol(87, 411, 5, <sg> )
Symbol(28, 416, 8, <px3ss> )
Symbol(55, 424, 6, <nom> )
Symbol(29, 430, 2, | )
Symbol(8, 432, 6, #EOC# )
Symbol(10, 438, 4, $0$ )
Symbol(2, 442, 6, "<,>" )
Symbol(7, 448, 6, #BOC# )
Symbol(29, 454, 2, | )
Symbol(3, 456, 4, #0# )
Symbol(2, 460, 4, "," )
Symbol(44, 464, 5, <cm> )
Symbol(29, 469, 2, | )
Symbol(8, 471, 6, #EOC# )
Symbol(10, 477, 4, $0$ )
Symbol(2, 481, 9, "<most>" )
Symbol(7, 490, 6, #BOC# )
Symbol(29, 496, 2, | )
Symbol(3, 498, 4, #0# )
Symbol(2, 502, 7, "most" )
Symbol(54, 509, 6, <adv> )
Symbol(29, 515, 2, | )
Symbol(8, 517, 6, #EOC# )
Symbol(10, 523, 4, $0$ )
Symbol(2, 527, 6, "<a>" )
Symbol(7, 533, 6, #BOC# )
Symbol(29, 539, 2, | )
Symbol(3, 541, 4, #0# )
Symbol(2, 545, 4, "a" )
Symbol(73, 549, 6, <det> )
Symbol(2, 555, 6, <def> )
Symbol(29, 561, 2, | )
Symbol(8, 563, 6, #EOC# )
Symbol(10, 569, 4, $0$ )
Symbol(2, 573, 10, "<kutya>" )
Symbol(7, 583, 6, #BOC# )
Symbol(29, 589, 2, | )
Symbol(3, 591, 4, #0# )
Symbol(83, 595, 8, "kutya" )
Symbol(53, 603, 6, <adj> )
Symbol(87, 609, 5, <sg> )
Symbol(55, 614, 6, <nom> )
Symbol(29, 620, 2, | )
Symbol(3, 622, 4, #0# )
Symbol(83, 626, 8, "kutya" )
Symbol(15, 634, 4, <n> )
Symbol(87, 638, 5, <sg> )
Symbol(55, 643, 6, <nom> )
Symbol(29, 649, 2, | )
Symbol(8, 651, 6, #EOC# )
Symbol(10, 657, 4, $0$ )
Symbol(2, 661, 7, "<is>" )
Symbol(7, 668, 6, #BOC# )
Symbol(29, 674, 2, | )
Symbol(3, 676, 4, #0# )
Symbol(30, 680, 5, "is" )
Symbol(54, 685, 6, <adv> )
Symbol(29, 691, 2, | )
Symbol(8, 693, 6, #EOC# )
Symbol(10, 699, 4, $0$ )
Symbol(2, 703, 6, "<a>" )
Symbol(7, 709, 6, #BOC# )
Symbol(29, 715, 2, | )
Symbol(3, 717, 4, #0# )
Symbol(2, 721, 4, "a" )
Symbol(73, 725, 6, <det> )
Symbol(2, 731, 6, <def> )
Symbol(29, 737, 2, | )
Symbol(8, 739, 6, #EOC# )
Symbol(10, 745, 4, $0$ )
Symbol(2, 749, 12, "<kertben>" )
Symbol(7, 761, 6, #BOC# )
Symbol(29, 767, 2, | )
Symbol(3, 769, 4, #0# )
Symbol(2, 773, 7, "kert" )
Symbol(15, 780, 4, <n> )
Symbol(87, 784, 5, <sg> )
Symbol(2, 789, 6, <ine> )
Symbol(29, 795, 2, | )
Symbol(8, 797, 6, #EOC# )
Symbol(10, 803, 4, $0$ )
Symbol(2, 807, 8, "<van>" )
Symbol(7, 815, 6, #BOC# )
Symbol(29, 821, 2, | )
Symbol(3, 823, 4, #0# )
Symbol(35, 827, 6, "van" )
Symbol(48, 833, 8, <vbser> )
Symbol(37, 841, 7, <pres> )
Symbol(87, 848, 5, <sg> )
Symbol(2, 853, 6, <s3p> )
Symbol(2, 859, 6, <ind> )
Symbol(29, 865, 2, | )
Symbol(8, 867, 6, #EOC# )
Symbol(10, 873, 4, $0$ )
Symbol(2, 877, 6, "<.>" )
Symbol(7, 883, 6, #BOC# )
Symbol(29, 889, 2, | )
Symbol(3, 891, 4, #0# )
Symbol(2, 895, 4, "." )
Symbol(64, 899, 7, <sent> )
Symbol(2, 906, 6, <<<<> )
Symbol(29, 912, 2, | )
Symbol(8, 914, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 83 53 87 28 55 29 3 83 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 38, signum = 16, q = 4, out = 42
trans_offset 70, signum = 2, q = 6, out = 73
trans_offset 70, signum = 2, q = 6, out = 73
trans_offset 85, signum = 29, q = 6, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 87, signum = 3, q = 7, out = 90
trans_offset 140, signum = 2, q = 11, out = 143
trans_offset 140, signum = 2, q = 11, out = 143
trans_offset 155, signum = 29, q = 11, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 52, signum = 53, q = 4, out = 40
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 68, signum = 29, q = 5, out = 55
trans_offset 87, signum = 3, q = 7, out = 90
trans_offset 140, signum = 2, q = 11, out = 143
trans_offset 141, signum = 15, q = 11, out = 145
trans_offset 230, signum = 2, q = 19, out = 233
trans_offset 230, signum = 2, q = 19, out = 233
trans_offset 245, signum = 29, q = 19, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 52, signum = 53, q = 4, out = 40
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 67, signum = 28, q = 5, out = 71
trans_offset 106, signum = 2, q = 9, out = 109
trans_offset 121, signum = 29, q = 9, out = 125
trans_offset 192, signum = 3, q = 15, out = 38
trans_offset 249, signum = 2, q = 21, out = 39
trans_offset 250, signum = 15, q = 21, out = 41
trans_offset 351, signum = 2, q = 27, out = 73
trans_offset 365, signum = 28, q = 27, out = 88
trans_offset 317, signum = 2, q = 25, out = 73
trans_offset 332, signum = 29, q = 25, out = 55
trans_offset 212, signum = 8, q = 17, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 52, signum = 53, q = 4, out = 40
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 68, signum = 29, q = 5, out = 55
trans_offset 87, signum = 3, q = 7, out = 90
trans_offset 140, signum = 2, q = 11, out = 143
trans_offset 141, signum = 15, q = 11, out = 145
trans_offset 230, signum = 2, q = 19, out = 233
trans_offset 230, signum = 2, q = 19, out = 233
trans_offset 245, signum = 29, q = 19, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 37, signum = 15, q = 4, out = 41
trans_offset 70, signum = 2, q = 6, out = 73
trans_offset 70, signum = 2, q = 6, out = 73
trans_offset 85, signum = 29, q = 6, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91

Intermediate is(181): 
4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 42 73 73 55 91 4 20 21 37 38 39 39 39 39 39 39 55 91 4 20 21 37 38 39 39 39 55 90 143 143 55 91 4 20 21 37 38 39 40 56 56 55 90 143 145 233 233 55 91 4 20 21 37 38 39 40 56 71 109 125 38 39 41 73 88 73 55 91 4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 39 39 55 91 4 20 21 37 38 39 40 56 56 55 90 143 145 233 233 55 91 4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 39 39 55 91 4 20 21 37 38 39 41 73 73 55 91 4 20 21 37 38 39 39 39 39 39 39 55 91 4 20 21 37 38 39 39 39 55 91 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 38, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 108, q = 2, out = 2
trans_offset 108, q = 2, out = 2
trans_offset 72, q = 2, out = 15
trans_offset 70, q = 2, out = 2
trans_offset 52, q = 2, out = 3
trans_offset 135, q = 3, out = 29
trans_offset 286, q = 5, out = 2
trans_offset 670, q = 8, out = 2
trans_offset 655, q = 8, out = 53
trans_offset 654, q = 8, out = 2
trans_offset 653, q = 8, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 51, q = 2, out = 28
trans_offset 172, q = 4, out = 2
trans_offset 143, q = 4, out = 15
trans_offset 526, q = 7, out = 2
trans_offset 525, q = 7, out = 3
trans_offset 1062, q = 13, out = 0
trans_offset 1535, q = 19, out = 0
trans_offset 1907, q = 23, out = 0
trans_offset 1228, q = 16, out = 0
trans_offset 1213, q = 16, out = 0
trans_offset 1620, q = 21, out = 0
trans_offset 1619, q = 21, out = 0
trans_offset 1060, q = 13, out = 29
trans_offset 1474, q = 19, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 108, q = 2, out = 2
trans_offset 108, q = 2, out = 2
trans_offset 72, q = 2, out = 15
trans_offset 70, q = 2, out = 2
trans_offset 52, q = 2, out = 3
trans_offset 135, q = 3, out = 29
trans_offset 286, q = 5, out = 2
trans_offset 670, q = 8, out = 2
trans_offset 655, q = 8, out = 53
trans_offset 654, q = 8, out = 2
trans_offset 653, q = 8, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 70, q = 2, out = 2
trans_offset 70, q = 2, out = 2
trans_offset 52, q = 2, out = 3
trans_offset 135, q = 3, out = 29
trans_offset 270, q = 5, out = 2
trans_offset 654, q = 8, out = 2
trans_offset 654, q = 8, out = 2
trans_offset 653, q = 8, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 38, q = 2, out = 2
trans_offset 10, q = 2, out = 16
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10

Output is(174): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 14, "<Jancsinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 72, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 86, 5, <sg> )
Symbol(2, 91, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 109, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 129, 6, "van" )
Symbol(48, 135, 8, <vbser> )
Symbol(37, 143, 7, <pres> )
Symbol(87, 150, 5, <sg> )
Symbol(2, 155, 6, <s3p> )
Symbol(2, 161, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 179, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 6, "egy" )
Symbol(73, 205, 6, <det> )
Symbol(2, 211, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 223, 6, "egy" )
Symbol(54, 229, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 10, "<kicsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 269, 8, "kicsi" )
Symbol(53, 0, 0, )
Symbol(87, 283, 5, <sg> )
Symbol(55, 288, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 300, 8, "kicsi" )
Symbol(15, 0, 0, )
Symbol(87, 312, 5, <sg> )
Symbol(55, 317, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 335, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 399, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 411, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 424, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 442, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 460, 4, "," )
Symbol(44, 464, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 481, 9, "<most>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 502, 7, "most" )
Symbol(54, 509, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 527, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 4, "a" )
Symbol(73, 549, 6, <det> )
Symbol(2, 555, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 573, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 595, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 609, 5, <sg> )
Symbol(55, 614, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 626, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 638, 5, <sg> )
Symbol(55, 643, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 661, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 680, 5, "is" )
Symbol(54, 685, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 703, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 721, 4, "a" )
Symbol(73, 725, 6, <det> )
Symbol(2, 731, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 749, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 773, 7, "kert" )
Symbol(15, 0, 0, )
Symbol(87, 784, 5, <sg> )
Symbol(2, 789, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 807, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 827, 6, "van" )
Symbol(48, 833, 8, <vbser> )
Symbol(37, 841, 7, <pres> )
Symbol(87, 848, 5, <sg> )
Symbol(2, 853, 6, <s3p> )
Symbol(2, 859, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 877, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 895, 4, "." )
Symbol(64, 899, 7, <sent> )
Symbol(2, 906, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 83 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_3_284_T_1


LRS T1:
Name: R_3_284_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 83 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 83 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 83 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 15 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(174): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 14, "<Jancsinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 72, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 86, 5, <sg> )
Symbol(2, 91, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 109, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 129, 6, "van" )
Symbol(48, 135, 8, <vbser> )
Symbol(37, 143, 7, <pres> )
Symbol(87, 150, 5, <sg> )
Symbol(2, 155, 6, <s3p> )
Symbol(2, 161, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 179, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 6, "egy" )
Symbol(73, 205, 6, <det> )
Symbol(2, 211, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 223, 6, "egy" )
Symbol(54, 229, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 10, "<kicsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 269, 8, "kicsi" )
Symbol(53, 0, 0, )
Symbol(87, 283, 5, <sg> )
Symbol(55, 288, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 300, 8, "kicsi" )
Symbol(15, 0, 0, )
Symbol(87, 312, 5, <sg> )
Symbol(55, 317, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 335, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 399, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 411, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 424, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 442, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 460, 4, "," )
Symbol(44, 464, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 481, 9, "<most>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 502, 7, "most" )
Symbol(54, 509, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 527, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 4, "a" )
Symbol(73, 549, 6, <det> )
Symbol(2, 555, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 573, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 595, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 609, 5, <sg> )
Symbol(55, 614, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 626, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 638, 5, <sg> )
Symbol(55, 643, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 661, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 680, 5, "is" )
Symbol(54, 685, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 703, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 721, 4, "a" )
Symbol(73, 725, 6, <det> )
Symbol(2, 731, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 749, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 773, 7, "kert" )
Symbol(15, 0, 0, )
Symbol(87, 784, 5, <sg> )
Symbol(2, 789, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 807, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 827, 6, "van" )
Symbol(48, 833, 8, <vbser> )
Symbol(37, 841, 7, <pres> )
Symbol(87, 848, 5, <sg> )
Symbol(2, 853, 6, <s3p> )
Symbol(2, 859, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 877, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 895, 4, "." )
Symbol(64, 899, 7, <sent> )
Symbol(2, 906, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 83 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 25, signum = 15, q = 8, out = 15
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 83, q = 4, out = 14
trans_offset 15, signum = 15, q = 5, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 83, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 83, q = 8, out = 14
trans_offset 32, signum = 15, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(174): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 15 13 13 16 22 5 7 9 11 12 14 19 23 23 23 26 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 14 17 17 17 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 15 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 22, q = 4, out = 2
trans_offset 21, q = 4, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 23, q = 4, out = 83
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 78, q = 10, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 92, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 23, q = 4, out = 83
trans_offset 48, q = 6, out = 3
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 22, q = 4, out = 2
trans_offset 21, q = 4, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(168): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 14, "<Jancsinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 72, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 86, 5, <sg> )
Symbol(2, 91, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 109, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 129, 6, "van" )
Symbol(48, 135, 8, <vbser> )
Symbol(37, 143, 7, <pres> )
Symbol(87, 150, 5, <sg> )
Symbol(2, 155, 6, <s3p> )
Symbol(2, 161, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 179, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 6, "egy" )
Symbol(73, 205, 6, <det> )
Symbol(2, 211, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 223, 6, "egy" )
Symbol(54, 229, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 10, "<kicsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 269, 8, "kicsi" )
Symbol(53, 0, 0, )
Symbol(87, 283, 5, <sg> )
Symbol(55, 288, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 300, 8, "kicsi" )
Symbol(15, 0, 0, )
Symbol(87, 312, 5, <sg> )
Symbol(55, 317, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 335, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 411, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 424, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 442, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 460, 4, "," )
Symbol(44, 464, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 481, 9, "<most>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 502, 7, "most" )
Symbol(54, 509, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 527, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 4, "a" )
Symbol(73, 549, 6, <det> )
Symbol(2, 555, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 573, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 638, 5, <sg> )
Symbol(55, 643, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 661, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 680, 5, "is" )
Symbol(54, 685, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 703, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 721, 4, "a" )
Symbol(73, 725, 6, <det> )
Symbol(2, 731, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 749, 12, "<kertben>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 773, 7, "kert" )
Symbol(15, 0, 0, )
Symbol(87, 784, 5, <sg> )
Symbol(2, 789, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 807, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 827, 6, "van" )
Symbol(48, 833, 8, <vbser> )
Symbol(37, 841, 7, <pres> )
Symbol(87, 848, 5, <sg> )
Symbol(2, 853, 6, <s3p> )
Symbol(2, 859, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 877, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 895, 4, "." )
Symbol(64, 899, 7, <sent> )
Symbol(2, 906, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 83 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 15 87 55 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<A>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kutya>" #BOC# | #0# "kutya" <adj> <sg> <nom> | #0# "kutya" <n> <sg> <nom> | #EOC# $0$ "<szeret>" #BOC# | #0# "szeret" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<játszani>" #BOC# | #0# "játszik" <vblex> <inf> <sg> <s3p> <ind> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<két>" #BOC# | #0# "kettő" <num> <sg> <nom> | #EOC# $0$ "<gyerekkel>" #BOC# | #0# "gyerek" <n> <sg> <ins> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_3_284_T_1


LRS T1:
Name: R_3_284_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 83 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 83 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 83 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 15 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(104): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 6, "<A>" )
Symbol(7, 52, 6, #BOC# )
Symbol(29, 58, 2, | )
Symbol(3, 60, 4, #0# )
Symbol(2, 64, 4, "a" )
Symbol(73, 68, 6, <det> )
Symbol(2, 74, 6, <def> )
Symbol(29, 80, 2, | )
Symbol(8, 82, 6, #EOC# )
Symbol(10, 88, 4, $0$ )
Symbol(2, 92, 10, "<kutya>" )
Symbol(7, 102, 6, #BOC# )
Symbol(29, 108, 2, | )
Symbol(3, 110, 4, #0# )
Symbol(83, 114, 8, "kutya" )
Symbol(53, 122, 6, <adj> )
Symbol(87, 128, 5, <sg> )
Symbol(55, 133, 6, <nom> )
Symbol(29, 139, 2, | )
Symbol(3, 141, 4, #0# )
Symbol(83, 145, 8, "kutya" )
Symbol(15, 153, 4, <n> )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 168, 2, | )
Symbol(8, 170, 6, #EOC# )
Symbol(10, 176, 4, $0$ )
Symbol(2, 180, 11, "<szeret>" )
Symbol(7, 191, 6, #BOC# )
Symbol(29, 197, 2, | )
Symbol(3, 199, 4, #0# )
Symbol(51, 203, 9, "szeret" )
Symbol(38, 212, 8, <vblex> )
Symbol(37, 220, 7, <pres> )
Symbol(87, 227, 5, <sg> )
Symbol(2, 232, 6, <s3p> )
Symbol(2, 238, 6, <ind> )
Symbol(29, 244, 2, | )
Symbol(8, 246, 6, #EOC# )
Symbol(10, 252, 4, $0$ )
Symbol(2, 256, 14, "<játszani>" )
Symbol(7, 270, 6, #BOC# )
Symbol(29, 276, 2, | )
Symbol(3, 278, 4, #0# )
Symbol(2, 282, 11, "játszik" )
Symbol(38, 293, 8, <vblex> )
Symbol(52, 301, 6, <inf> )
Symbol(87, 307, 5, <sg> )
Symbol(2, 312, 6, <s3p> )
Symbol(2, 318, 6, <ind> )
Symbol(29, 324, 2, | )
Symbol(8, 326, 6, #EOC# )
Symbol(10, 332, 4, $0$ )
Symbol(2, 336, 6, "<a>" )
Symbol(7, 342, 6, #BOC# )
Symbol(29, 348, 2, | )
Symbol(3, 350, 4, #0# )
Symbol(2, 354, 4, "a" )
Symbol(73, 358, 6, <det> )
Symbol(2, 364, 6, <def> )
Symbol(29, 370, 2, | )
Symbol(8, 372, 6, #EOC# )
Symbol(10, 378, 4, $0$ )
Symbol(2, 382, 9, "<két>" )
Symbol(7, 391, 6, #BOC# )
Symbol(29, 397, 2, | )
Symbol(3, 399, 4, #0# )
Symbol(2, 403, 9, "kettő" )
Symbol(2, 412, 6, <num> )
Symbol(87, 418, 5, <sg> )
Symbol(55, 423, 6, <nom> )
Symbol(29, 429, 2, | )
Symbol(8, 431, 6, #EOC# )
Symbol(10, 437, 4, $0$ )
Symbol(2, 441, 14, "<gyerekkel>" )
Symbol(7, 455, 6, #BOC# )
Symbol(29, 461, 2, | )
Symbol(3, 463, 4, #0# )
Symbol(2, 467, 9, "gyerek" )
Symbol(15, 476, 4, <n> )
Symbol(87, 480, 5, <sg> )
Symbol(2, 485, 6, <ins> )
Symbol(29, 491, 2, | )
Symbol(8, 493, 6, #EOC# )
Symbol(10, 499, 4, $0$ )
Symbol(2, 503, 6, "<.>" )
Symbol(7, 509, 6, #BOC# )
Symbol(29, 515, 2, | )
Symbol(3, 517, 4, #0# )
Symbol(2, 521, 4, "." )
Symbol(64, 525, 7, <sent> )
Symbol(2, 532, 6, <<<<> )
Symbol(29, 538, 2, | )
Symbol(8, 540, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 51 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 2 87 55 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 83, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 83, q = 8, out = 14
trans_offset 32, signum = 15, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(104): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 14 17 17 17 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 15 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 22, q = 4, out = 2
trans_offset 21, q = 4, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 23, q = 4, out = 83
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 78, q = 10, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 92, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(98): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 6, "<A>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 64, 4, "a" )
Symbol(73, 68, 6, <det> )
Symbol(2, 74, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 92, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 180, 11, "<szeret>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(51, 203, 9, "szeret" )
Symbol(38, 212, 8, <vblex> )
Symbol(37, 220, 7, <pres> )
Symbol(87, 227, 5, <sg> )
Symbol(2, 232, 6, <s3p> )
Symbol(2, 238, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 256, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 282, 11, "játszik" )
Symbol(38, 293, 8, <vblex> )
Symbol(52, 301, 6, <inf> )
Symbol(87, 307, 5, <sg> )
Symbol(2, 312, 6, <s3p> )
Symbol(2, 318, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 336, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 4, "a" )
Symbol(73, 358, 6, <det> )
Symbol(2, 364, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 382, 9, "<két>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 403, 9, "kettő" )
Symbol(2, 412, 6, <num> )
Symbol(87, 418, 5, <sg> )
Symbol(55, 423, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 441, 14, "<gyerekkel>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 467, 9, "gyerek" )
Symbol(15, 0, 0, )
Symbol(87, 480, 5, <sg> )
Symbol(2, 485, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 503, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 4, "." )
Symbol(64, 525, 7, <sent> )
Symbol(2, 532, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 15 87 55 29 8 10 2 7 29 3 51 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 2 87 55 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<A>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kutya>" #BOC# | #0# "kutya" <adj> <sg> <nom> | #0# "kutya" <n> <sg> <nom> | #EOC# $0$ "<most>" #BOC# | #0# "most" <adv> | #EOC# $0$ "<nagyon>" #BOC# | #0# "nagyon" <adv> | #EOC# $0$ "<boldog>" #BOC# | #0# "boldog" <n> <sg> <nom> | #0# "boldog" <adj> <sg> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_83_T_1


LRS T1:
Name: R_1_83_T_1
arity: 2
arccount: 98
statecount: 32
linecount: 99
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 54 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 54 -- 
  out: 14 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 10 -- 
  out: 4 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(28):
  state_no: 11
  in: 2 -- 
  out: 7 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 11
  in: 7 -- 
  out: 8 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 11
  in: 15 -- 
  out: 10 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 54 -- 
  out: 9 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 12
  in: 29 -- 
  out: 11 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 13
  in: 3 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 14
  in: 2 -- 
  out: 37 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 14
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 14
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 15
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 15
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 15
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 16
  in: 2 -- 
  out: 45 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 16
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 16
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 17
  in: 3 -- 
  out: 49 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 45 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 29 -- 
  out: 48 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 3 -- 
  out: 49 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 20
  in: 3 -- 
  out: 36 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 21
  in: 2 -- 
  out: 59 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 21
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 54 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 3 -- 
  out: 36 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 23
  in: 2 -- 
  out: 59 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 23
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 24
  in: 2 -- 
  out: 37 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 24
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 54 -- 
  out: 38 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 25
  in: 2 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 25
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 54 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 27
  in: 2 -- 
  out: 59 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 27
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 27
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 27
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 28
  in: 2 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 28
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 28
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 28
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 29
  in: 2 -- 
  out: 45 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 29
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 29
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 29
  in: 54 -- 
  out: 46 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 30
  in: 2 -- 
  out: 37 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 30
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 30
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 30
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 31
  in: 2 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 31
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 31
  in: 29 -- 
  out: 76 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 31
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(98):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(81): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 6, "<A>" )
Symbol(7, 52, 6, #BOC# )
Symbol(29, 58, 2, | )
Symbol(3, 60, 4, #0# )
Symbol(2, 64, 4, "a" )
Symbol(73, 68, 6, <det> )
Symbol(2, 74, 6, <def> )
Symbol(29, 80, 2, | )
Symbol(8, 82, 6, #EOC# )
Symbol(10, 88, 4, $0$ )
Symbol(2, 92, 10, "<kutya>" )
Symbol(7, 102, 6, #BOC# )
Symbol(29, 108, 2, | )
Symbol(3, 110, 4, #0# )
Symbol(83, 114, 8, "kutya" )
Symbol(53, 122, 6, <adj> )
Symbol(87, 128, 5, <sg> )
Symbol(55, 133, 6, <nom> )
Symbol(29, 139, 2, | )
Symbol(3, 141, 4, #0# )
Symbol(83, 145, 8, "kutya" )
Symbol(15, 153, 4, <n> )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 168, 2, | )
Symbol(8, 170, 6, #EOC# )
Symbol(10, 176, 4, $0$ )
Symbol(2, 180, 9, "<most>" )
Symbol(7, 189, 6, #BOC# )
Symbol(29, 195, 2, | )
Symbol(3, 197, 4, #0# )
Symbol(2, 201, 7, "most" )
Symbol(54, 208, 6, <adv> )
Symbol(29, 214, 2, | )
Symbol(8, 216, 6, #EOC# )
Symbol(10, 222, 4, $0$ )
Symbol(2, 226, 11, "<nagyon>" )
Symbol(7, 237, 6, #BOC# )
Symbol(29, 243, 2, | )
Symbol(3, 245, 4, #0# )
Symbol(2, 249, 9, "nagyon" )
Symbol(54, 258, 6, <adv> )
Symbol(29, 264, 2, | )
Symbol(8, 266, 6, #EOC# )
Symbol(10, 272, 4, $0$ )
Symbol(2, 276, 11, "<boldog>" )
Symbol(7, 287, 6, #BOC# )
Symbol(29, 293, 2, | )
Symbol(3, 295, 4, #0# )
Symbol(2, 299, 9, "boldog" )
Symbol(15, 308, 4, <n> )
Symbol(87, 312, 5, <sg> )
Symbol(55, 317, 6, <nom> )
Symbol(29, 323, 2, | )
Symbol(3, 325, 4, #0# )
Symbol(2, 329, 9, "boldog" )
Symbol(53, 338, 6, <adj> )
Symbol(87, 344, 5, <sg> )
Symbol(55, 349, 6, <nom> )
Symbol(29, 355, 2, | )
Symbol(8, 357, 6, #EOC# )
Symbol(10, 363, 4, $0$ )
Symbol(2, 367, 6, "<.>" )
Symbol(7, 373, 6, #BOC# )
Symbol(29, 379, 2, | )
Symbol(3, 381, 4, #0# )
Symbol(2, 385, 4, "." )
Symbol(64, 389, 7, <sent> )
Symbol(2, 396, 6, <<<<> )
Symbol(29, 402, 2, | )
Symbol(8, 404, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 23, signum = 15, q = 8, out = 15
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 24, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 54, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 21, signum = 8, q = 7, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 37, signum = 54, q = 14, out = 38
trans_offset 40, signum = 29, q = 15, out = 16
trans_offset 53, signum = 8, q = 19, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 35, signum = 15, q = 14, out = 39
trans_offset 42, signum = 2, q = 16, out = 45
trans_offset 42, signum = 2, q = 16, out = 45
trans_offset 44, signum = 29, q = 16, out = 48
trans_offset 54, signum = 3, q = 20, out = 36
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 68, signum = 29, q = 24, out = 16
trans_offset 47, signum = 8, q = 17, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(81): 
4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 13 16 22 4 7 8 11 12 13 13 13 13 16 12 13 15 13 13 16 22 4 7 8 11 12 13 14 16 22 4 7 8 11 36 37 38 16 22 4 7 8 11 36 37 39 45 45 48 36 37 37 37 37 16 22 4 7 8 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 21, q = 3, out = 0
trans_offset 47, q = 5, out = 0
trans_offset 66, q = 7, out = 0
trans_offset 65, q = 7, out = 0
trans_offset 82, q = 9, out = 0
trans_offset 81, q = 9, out = 0
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 10, q = 2, out = 54
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 55, q = 6, out = 29
trans_offset 94, q = 10, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10

Output is(75): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 6, "<A>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 64, 4, "a" )
Symbol(73, 68, 6, <det> )
Symbol(2, 74, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 92, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 114, 8, "kutya" )
Symbol(53, 122, 6, <adj> )
Symbol(87, 128, 5, <sg> )
Symbol(55, 133, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 145, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 180, 9, "<most>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 201, 7, "most" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 226, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 249, 9, "nagyon" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 276, 11, "<boldog>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 329, 9, "boldog" )
Symbol(53, 338, 6, <adj> )
Symbol(87, 344, 5, <sg> )
Symbol(55, 349, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 367, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 385, 4, "." )
Symbol(64, 389, 7, <sent> )
Symbol(2, 396, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_3_284_T_1


LRS T1:
Name: R_3_284_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 83 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 83 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 83 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 15 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(75): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 6, "<A>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 64, 4, "a" )
Symbol(73, 68, 6, <det> )
Symbol(2, 74, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 92, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 114, 8, "kutya" )
Symbol(53, 122, 6, <adj> )
Symbol(87, 128, 5, <sg> )
Symbol(55, 133, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 145, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 180, 9, "<most>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 201, 7, "most" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 226, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 249, 9, "nagyon" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 276, 11, "<boldog>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 329, 9, "boldog" )
Symbol(53, 338, 6, <adj> )
Symbol(87, 344, 5, <sg> )
Symbol(55, 349, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 367, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 385, 4, "." )
Symbol(64, 389, 7, <sent> )
Symbol(2, 396, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 83, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 83, q = 8, out = 14
trans_offset 32, signum = 15, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(75): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 14 17 17 17 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 23, q = 4, out = 83
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 78, q = 10, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 92, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(69): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 6, "<A>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 64, 4, "a" )
Symbol(73, 68, 6, <det> )
Symbol(2, 74, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 92, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 180, 9, "<most>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 201, 7, "most" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 226, 11, "<nagyon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 249, 9, "nagyon" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 276, 11, "<boldog>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 329, 9, "boldog" )
Symbol(53, 338, 6, <adj> )
Symbol(87, 344, 5, <sg> )
Symbol(55, 349, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 367, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 385, 4, "." )
Symbol(64, 389, 7, <sent> )
Symbol(2, 396, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Marinak>" #BOC# | #0# "mari" <adj> <sg> <dat> | #0# "mari" <n> <sg> <dat> | #0# "Mari" <np> <sg> <dat> | #EOC# $0$ "<is>" #BOC# | #0# "is" <adv> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<kutyája>" #BOC# | #0# "kutya" <adj> <sg> <px3ss> <nom> | #0# "kutya" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Rule found: R_1_99_T_1


LRS T1:
Name: R_1_99_T_1
arity: 2
arccount: 523
statecount: 38
linecount: 524
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 16 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 17 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 18 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 19 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 20 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 21 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 22 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 23 -- 
  out: 14 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 0
  in: 24 -- 
  out: 15 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(12):
  state_no: 0
  in: 25 -- 
  out: 16 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(13):
  state_no: 0
  in: 26 -- 
  out: 17 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(14):
  state_no: 0
  in: 27 -- 
  out: 18 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(15):
  state_no: 0
  in: 28 -- 
  out: 19 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(16):
  state_no: 0
  in: 53 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(17):
  state_no: 1
  in: 2 -- 
  out: 20 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 7 -- 
  out: 21 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 15 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 16 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 17 -- 
  out: 25 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 1
  in: 18 -- 
  out: 26 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 1
  in: 19 -- 
  out: 27 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 1
  in: 20 -- 
  out: 28 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 1
  in: 21 -- 
  out: 29 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 1
  in: 22 -- 
  out: 30 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 1
  in: 23 -- 
  out: 31 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 1
  in: 24 -- 
  out: 32 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 1
  in: 25 -- 
  out: 33 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 1
  in: 26 -- 
  out: 34 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 1
  in: 27 -- 
  out: 35 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 1
  in: 28 -- 
  out: 36 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 1
  in: 53 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 2
  in: 29 -- 
  out: 37 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 3
  in: 3 -- 
  out: 38 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 4
  in: 2 -- 
  out: 39 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 4
  in: 15 -- 
  out: 41 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 4
  in: 16 -- 
  out: 42 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 4
  in: 17 -- 
  out: 43 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 4
  in: 18 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 4
  in: 19 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 4
  in: 20 -- 
  out: 46 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 4
  in: 21 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 4
  in: 22 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 4
  in: 23 -- 
  out: 49 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 4
  in: 24 -- 
  out: 50 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 4
  in: 25 -- 
  out: 51 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 4
  in: 26 -- 
  out: 52 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 4
  in: 27 -- 
  out: 53 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 4
  in: 28 -- 
  out: 54 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 4
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 4
  in: 53 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 5
  in: 2 -- 
  out: 56 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 5
  in: 15 -- 
  out: 58 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 5
  in: 16 -- 
  out: 59 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 5
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 5
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 5
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 5
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 5
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 5
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 5
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 5
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 5
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 5
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 5
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 5
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 5
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 5
  in: 53 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 6
  in: 2 -- 
  out: 73 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 6
  in: 15 -- 
  out: 41 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 6
  in: 16 -- 
  out: 42 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 6
  in: 17 -- 
  out: 77 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 6
  in: 18 -- 
  out: 78 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 6
  in: 19 -- 
  out: 79 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 6
  in: 20 -- 
  out: 80 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 6
  in: 21 -- 
  out: 81 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 6
  in: 22 -- 
  out: 82 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 6
  in: 23 -- 
  out: 83 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 6
  in: 24 -- 
  out: 84 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 6
  in: 25 -- 
  out: 85 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 6
  in: 26 -- 
  out: 86 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 6
  in: 27 -- 
  out: 87 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 6
  in: 28 -- 
  out: 88 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 6
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 6
  in: 53 -- 
  out: 74 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 7
  in: 3 -- 
  out: 90 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 7
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 8
  in: 2 -- 
  out: 92 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 8
  in: 15 -- 
  out: 58 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 8
  in: 16 -- 
  out: 59 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 8
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 8
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 8
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 8
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 8
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 8
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 8
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 8
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 8
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 8
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 8
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 8
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 8
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 8
  in: 53 -- 
  out: 74 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 9
  in: 2 -- 
  out: 109 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 9
  in: 15 -- 
  out: 111 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 9
  in: 16 -- 
  out: 112 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 9
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 9
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 9
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 9
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 9
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 9
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 9
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 9
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 9
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 9
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 9
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 9
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 9
  in: 29 -- 
  out: 125 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 9
  in: 53 -- 
  out: 110 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 10
  in: 2 -- 
  out: 73 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 10
  in: 15 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 10
  in: 16 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 10
  in: 17 -- 
  out: 77 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 10
  in: 18 -- 
  out: 78 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 10
  in: 19 -- 
  out: 79 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 10
  in: 20 -- 
  out: 80 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 10
  in: 21 -- 
  out: 81 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 10
  in: 22 -- 
  out: 82 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 10
  in: 23 -- 
  out: 83 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 10
  in: 24 -- 
  out: 84 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 10
  in: 25 -- 
  out: 85 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 10
  in: 26 -- 
  out: 86 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 10
  in: 27 -- 
  out: 87 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 10
  in: 28 -- 
  out: 88 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 10
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 10
  in: 53 -- 
  out: 74 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 11
  in: 2 -- 
  out: 143 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 11
  in: 15 -- 
  out: 145 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 11
  in: 16 -- 
  out: 146 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 11
  in: 17 -- 
  out: 147 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 11
  in: 18 -- 
  out: 148 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 11
  in: 19 -- 
  out: 149 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 11
  in: 20 -- 
  out: 150 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 11
  in: 21 -- 
  out: 151 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 11
  in: 22 -- 
  out: 152 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 11
  in: 23 -- 
  out: 153 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 11
  in: 24 -- 
  out: 154 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 11
  in: 25 -- 
  out: 155 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 11
  in: 26 -- 
  out: 156 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 11
  in: 27 -- 
  out: 157 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 11
  in: 28 -- 
  out: 158 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 11
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 11
  in: 53 -- 
  out: 144 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(158):
  state_no: 13
  in: 2 -- 
  out: 161 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 13
  in: 15 -- 
  out: 163 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 13
  in: 16 -- 
  out: 164 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 13
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 13
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 13
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 13
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 13
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 13
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 13
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 13
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 13
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 13
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 13
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 13
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 13
  in: 29 -- 
  out: 177 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 13
  in: 53 -- 
  out: 162 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 14
  in: 2 -- 
  out: 178 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 14
  in: 15 -- 
  out: 111 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 14
  in: 16 -- 
  out: 112 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 14
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 14
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 14
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 14
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 14
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 14
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 14
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 14
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 14
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 14
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 14
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 14
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 14
  in: 29 -- 
  out: 125 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 14
  in: 53 -- 
  out: 179 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 15
  in: 3 -- 
  out: 38 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 15
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 16
  in: 2 -- 
  out: 92 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 16
  in: 15 -- 
  out: 58 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 16
  in: 16 -- 
  out: 59 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 16
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 16
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 16
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 16
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 16
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 16
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 16
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 16
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 16
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 16
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 16
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 16
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 16
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 16
  in: 53 -- 
  out: 74 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 17
  in: 3 -- 
  out: 214 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 17
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 18
  in: 2 -- 
  out: 216 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 18
  in: 15 -- 
  out: 218 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 18
  in: 16 -- 
  out: 219 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 18
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 18
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 18
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 18
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 18
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 18
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 18
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 18
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 18
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 18
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 18
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 18
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 18
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 18
  in: 53 -- 
  out: 144 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 19
  in: 2 -- 
  out: 233 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 19
  in: 15 -- 
  out: 145 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 19
  in: 16 -- 
  out: 146 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 19
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 19
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 19
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 19
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 19
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 19
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 19
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 19
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 19
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 19
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 19
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 19
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 19
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 19
  in: 53 -- 
  out: 234 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 20
  in: 3 -- 
  out: 250 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 20
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 21
  in: 2 -- 
  out: 39 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 21
  in: 15 -- 
  out: 41 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 21
  in: 16 -- 
  out: 42 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 21
  in: 17 -- 
  out: 43 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 21
  in: 18 -- 
  out: 44 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 21
  in: 19 -- 
  out: 45 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 21
  in: 20 -- 
  out: 46 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 21
  in: 21 -- 
  out: 47 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 21
  in: 22 -- 
  out: 48 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 21
  in: 23 -- 
  out: 49 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 21
  in: 24 -- 
  out: 50 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 21
  in: 25 -- 
  out: 51 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 21
  in: 26 -- 
  out: 52 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 21
  in: 27 -- 
  out: 53 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 21
  in: 28 -- 
  out: 54 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 21
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 21
  in: 53 -- 
  out: 40 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 22
  in: 2 -- 
  out: 233 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 22
  in: 15 -- 
  out: 145 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 22
  in: 16 -- 
  out: 146 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 22
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 22
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 22
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 22
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 22
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 22
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 22
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 22
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 22
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 22
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 22
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 22
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 22
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 22
  in: 53 -- 
  out: 234 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 23
  in: 2 -- 
  out: 286 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 23
  in: 15 -- 
  out: 218 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 23
  in: 16 -- 
  out: 219 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 23
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 23
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 23
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 23
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 23
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 23
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 23
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 23
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 23
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 23
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 23
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 23
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 23
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 23
  in: 53 -- 
  out: 234 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 24
  in: 2 -- 
  out: 303 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 24
  in: 15 -- 
  out: 305 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 24
  in: 16 -- 
  out: 306 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 24
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 24
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 24
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 24
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 24
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 24
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 24
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 24
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 24
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 24
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 24
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 24
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 24
  in: 29 -- 
  out: 319 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 24
  in: 53 -- 
  out: 304 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 25
  in: 2 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 25
  in: 15 -- 
  out: 41 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 25
  in: 16 -- 
  out: 42 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 25
  in: 17 -- 
  out: 77 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 25
  in: 18 -- 
  out: 78 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 25
  in: 19 -- 
  out: 79 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 25
  in: 20 -- 
  out: 80 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 25
  in: 21 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 25
  in: 22 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 25
  in: 23 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 25
  in: 24 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 25
  in: 25 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 25
  in: 26 -- 
  out: 86 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 25
  in: 27 -- 
  out: 87 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 25
  in: 28 -- 
  out: 88 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 25
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 25
  in: 53 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 26
  in: 2 -- 
  out: 56 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 26
  in: 15 -- 
  out: 58 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 26
  in: 16 -- 
  out: 59 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 26
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 26
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 26
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 26
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 26
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 26
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 26
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 26
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 26
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 26
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 26
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 26
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 26
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 26
  in: 53 -- 
  out: 40 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 27
  in: 2 -- 
  out: 73 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 27
  in: 15 -- 
  out: 41 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 27
  in: 16 -- 
  out: 42 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 27
  in: 17 -- 
  out: 77 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 27
  in: 18 -- 
  out: 78 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 27
  in: 19 -- 
  out: 79 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 27
  in: 20 -- 
  out: 80 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 27
  in: 21 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 27
  in: 22 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 27
  in: 23 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 27
  in: 24 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 27
  in: 25 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 27
  in: 26 -- 
  out: 86 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 27
  in: 27 -- 
  out: 87 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(365):
  state_no: 27
  in: 28 -- 
  out: 88 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(366):
  state_no: 27
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(367):
  state_no: 27
  in: 53 -- 
  out: 74 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(368):
  state_no: 28
  in: 3 -- 
  out: 90 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(369):
  state_no: 28
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(370):
  state_no: 29
  in: 2 -- 
  out: 286 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(371):
  state_no: 29
  in: 15 -- 
  out: 218 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(372):
  state_no: 29
  in: 16 -- 
  out: 219 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(373):
  state_no: 29
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(374):
  state_no: 29
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(375):
  state_no: 29
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(376):
  state_no: 29
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(377):
  state_no: 29
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(378):
  state_no: 29
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(379):
  state_no: 29
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(380):
  state_no: 29
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(381):
  state_no: 29
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(382):
  state_no: 29
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(383):
  state_no: 29
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(384):
  state_no: 29
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(385):
  state_no: 29
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(386):
  state_no: 29
  in: 53 -- 
  out: 234 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(387):
  state_no: 30
  in: 2 -- 
  out: 390 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(388):
  state_no: 30
  in: 15 -- 
  out: 392 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(389):
  state_no: 30
  in: 16 -- 
  out: 392 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(390):
  state_no: 30
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(391):
  state_no: 30
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(392):
  state_no: 30
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(393):
  state_no: 30
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(394):
  state_no: 30
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(395):
  state_no: 30
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(396):
  state_no: 30
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(397):
  state_no: 30
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(398):
  state_no: 30
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(399):
  state_no: 30
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(400):
  state_no: 30
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(401):
  state_no: 30
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(402):
  state_no: 30
  in: 29 -- 
  out: 406 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(403):
  state_no: 30
  in: 53 -- 
  out: 391 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(404):
  state_no: 31
  in: 2 -- 
  out: 407 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(405):
  state_no: 31
  in: 15 -- 
  out: 305 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(406):
  state_no: 31
  in: 16 -- 
  out: 306 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(407):
  state_no: 31
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(408):
  state_no: 31
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(409):
  state_no: 31
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(410):
  state_no: 31
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(411):
  state_no: 31
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(412):
  state_no: 31
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(413):
  state_no: 31
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(414):
  state_no: 31
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(415):
  state_no: 31
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(416):
  state_no: 31
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(417):
  state_no: 31
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(418):
  state_no: 31
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(419):
  state_no: 31
  in: 29 -- 
  out: 319 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(420):
  state_no: 31
  in: 53 -- 
  out: 408 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(421):
  state_no: 32
  in: 2 -- 
  out: 92 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(422):
  state_no: 32
  in: 15 -- 
  out: 58 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(423):
  state_no: 32
  in: 16 -- 
  out: 59 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(424):
  state_no: 32
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(425):
  state_no: 32
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(426):
  state_no: 32
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(427):
  state_no: 32
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(428):
  state_no: 32
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(429):
  state_no: 32
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(430):
  state_no: 32
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(431):
  state_no: 32
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(432):
  state_no: 32
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(433):
  state_no: 32
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(434):
  state_no: 32
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(435):
  state_no: 32
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(436):
  state_no: 32
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(437):
  state_no: 32
  in: 53 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(438):
  state_no: 33
  in: 2 -- 
  out: 92 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(439):
  state_no: 33
  in: 15 -- 
  out: 58 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(440):
  state_no: 33
  in: 16 -- 
  out: 59 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(441):
  state_no: 33
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(442):
  state_no: 33
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(443):
  state_no: 33
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(444):
  state_no: 33
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(445):
  state_no: 33
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(446):
  state_no: 33
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(447):
  state_no: 33
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(448):
  state_no: 33
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(449):
  state_no: 33
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(450):
  state_no: 33
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(451):
  state_no: 33
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(452):
  state_no: 33
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(453):
  state_no: 33
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(454):
  state_no: 33
  in: 53 -- 
  out: 74 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(455):
  state_no: 34
  in: 2 -- 
  out: 143 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(456):
  state_no: 34
  in: 15 -- 
  out: 145 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(457):
  state_no: 34
  in: 16 -- 
  out: 146 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(458):
  state_no: 34
  in: 17 -- 
  out: 147 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(459):
  state_no: 34
  in: 18 -- 
  out: 148 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(460):
  state_no: 34
  in: 19 -- 
  out: 149 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(461):
  state_no: 34
  in: 20 -- 
  out: 150 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(462):
  state_no: 34
  in: 21 -- 
  out: 151 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(463):
  state_no: 34
  in: 22 -- 
  out: 152 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(464):
  state_no: 34
  in: 23 -- 
  out: 153 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(465):
  state_no: 34
  in: 24 -- 
  out: 154 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(466):
  state_no: 34
  in: 25 -- 
  out: 155 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(467):
  state_no: 34
  in: 26 -- 
  out: 156 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(468):
  state_no: 34
  in: 27 -- 
  out: 157 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(469):
  state_no: 34
  in: 28 -- 
  out: 158 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(470):
  state_no: 34
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(471):
  state_no: 34
  in: 53 -- 
  out: 144 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(472):
  state_no: 35
  in: 2 -- 
  out: 216 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(473):
  state_no: 35
  in: 15 -- 
  out: 218 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(474):
  state_no: 35
  in: 16 -- 
  out: 219 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(475):
  state_no: 35
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(476):
  state_no: 35
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(477):
  state_no: 35
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(478):
  state_no: 35
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(479):
  state_no: 35
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(480):
  state_no: 35
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(481):
  state_no: 35
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(482):
  state_no: 35
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(483):
  state_no: 35
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(484):
  state_no: 35
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(485):
  state_no: 35
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(486):
  state_no: 35
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(487):
  state_no: 35
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(488):
  state_no: 35
  in: 53 -- 
  out: 144 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(489):
  state_no: 36
  in: 2 -- 
  out: 233 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(490):
  state_no: 36
  in: 15 -- 
  out: 145 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(491):
  state_no: 36
  in: 16 -- 
  out: 146 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(492):
  state_no: 36
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(493):
  state_no: 36
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(494):
  state_no: 36
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(495):
  state_no: 36
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(496):
  state_no: 36
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(497):
  state_no: 36
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(498):
  state_no: 36
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(499):
  state_no: 36
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(500):
  state_no: 36
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(501):
  state_no: 36
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(502):
  state_no: 36
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(503):
  state_no: 36
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(504):
  state_no: 36
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(505):
  state_no: 36
  in: 53 -- 
  out: 234 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(506):
  state_no: 37
  in: 2 -- 
  out: 286 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(507):
  state_no: 37
  in: 15 -- 
  out: 218 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(508):
  state_no: 37
  in: 16 -- 
  out: 219 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(509):
  state_no: 37
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(510):
  state_no: 37
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(511):
  state_no: 37
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(512):
  state_no: 37
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(513):
  state_no: 37
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(514):
  state_no: 37
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(515):
  state_no: 37
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(516):
  state_no: 37
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(517):
  state_no: 37
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(518):
  state_no: 37
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(519):
  state_no: 37
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(520):
  state_no: 37
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(521):
  state_no: 37
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(522):
  state_no: 37
  in: 53 -- 
  out: 234 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(523):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(83): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 12, "<Marinak>" )
Symbol(7, 58, 6, #BOC# )
Symbol(29, 64, 2, | )
Symbol(3, 66, 4, #0# )
Symbol(2, 70, 7, "mari" )
Symbol(53, 77, 6, <adj> )
Symbol(87, 83, 5, <sg> )
Symbol(2, 88, 6, <dat> )
Symbol(29, 94, 2, | )
Symbol(3, 96, 4, #0# )
Symbol(2, 100, 7, "mari" )
Symbol(15, 107, 4, <n> )
Symbol(87, 111, 5, <sg> )
Symbol(2, 116, 6, <dat> )
Symbol(29, 122, 2, | )
Symbol(3, 124, 4, #0# )
Symbol(82, 128, 7, "Mari" )
Symbol(16, 135, 5, <np> )
Symbol(87, 140, 5, <sg> )
Symbol(2, 145, 6, <dat> )
Symbol(29, 151, 2, | )
Symbol(8, 153, 6, #EOC# )
Symbol(10, 159, 4, $0$ )
Symbol(2, 163, 7, "<is>" )
Symbol(7, 170, 6, #BOC# )
Symbol(29, 176, 2, | )
Symbol(3, 178, 4, #0# )
Symbol(30, 182, 5, "is" )
Symbol(54, 187, 6, <adv> )
Symbol(29, 193, 2, | )
Symbol(8, 195, 6, #EOC# )
Symbol(10, 201, 4, $0$ )
Symbol(2, 205, 8, "<van>" )
Symbol(7, 213, 6, #BOC# )
Symbol(29, 219, 2, | )
Symbol(3, 221, 4, #0# )
Symbol(35, 225, 6, "van" )
Symbol(48, 231, 8, <vbser> )
Symbol(37, 239, 7, <pres> )
Symbol(87, 246, 5, <sg> )
Symbol(2, 251, 6, <s3p> )
Symbol(2, 257, 6, <ind> )
Symbol(29, 263, 2, | )
Symbol(8, 265, 6, #EOC# )
Symbol(10, 271, 4, $0$ )
Symbol(2, 275, 13, "<kutyája>" )
Symbol(7, 288, 6, #BOC# )
Symbol(29, 294, 2, | )
Symbol(3, 296, 4, #0# )
Symbol(83, 300, 8, "kutya" )
Symbol(53, 308, 6, <adj> )
Symbol(87, 314, 5, <sg> )
Symbol(28, 319, 8, <px3ss> )
Symbol(55, 327, 6, <nom> )
Symbol(29, 333, 2, | )
Symbol(3, 335, 4, #0# )
Symbol(83, 339, 8, "kutya" )
Symbol(15, 347, 4, <n> )
Symbol(87, 351, 5, <sg> )
Symbol(28, 356, 8, <px3ss> )
Symbol(55, 364, 6, <nom> )
Symbol(29, 370, 2, | )
Symbol(8, 372, 6, #EOC# )
Symbol(10, 378, 4, $0$ )
Symbol(2, 382, 6, "<?>" )
Symbol(7, 388, 6, #BOC# )
Symbol(29, 394, 2, | )
Symbol(3, 396, 4, #0# )
Symbol(68, 400, 4, "?" )
Symbol(64, 404, 7, <sent> )
Symbol(2, 411, 6, <<<<> )
Symbol(29, 417, 2, | )
Symbol(8, 419, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 2 29 3 2 15 87 2 29 3 82 16 87 2 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 83 53 87 28 55 29 3 83 15 87 28 55 29 8 10 2 7 29 3 68 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 52, signum = 53, q = 4, out = 40
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 68, signum = 29, q = 5, out = 55
trans_offset 87, signum = 3, q = 7, out = 90
trans_offset 140, signum = 2, q = 11, out = 143
trans_offset 141, signum = 15, q = 11, out = 145
trans_offset 230, signum = 2, q = 19, out = 233
trans_offset 230, signum = 2, q = 19, out = 233
trans_offset 245, signum = 29, q = 19, out = 55
trans_offset 87, signum = 3, q = 7, out = 90
trans_offset 140, signum = 2, q = 11, out = 143
trans_offset 142, signum = 16, q = 11, out = 146
trans_offset 230, signum = 2, q = 19, out = 233
trans_offset 230, signum = 2, q = 19, out = 233
trans_offset 245, signum = 29, q = 19, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 52, signum = 53, q = 4, out = 40
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 67, signum = 28, q = 5, out = 71
trans_offset 106, signum = 2, q = 9, out = 109
trans_offset 121, signum = 29, q = 9, out = 125
trans_offset 192, signum = 3, q = 15, out = 38
trans_offset 249, signum = 2, q = 21, out = 39
trans_offset 250, signum = 15, q = 21, out = 41
trans_offset 351, signum = 2, q = 27, out = 73
trans_offset 365, signum = 28, q = 27, out = 88
trans_offset 317, signum = 2, q = 25, out = 73
trans_offset 332, signum = 29, q = 25, out = 55
trans_offset 212, signum = 8, q = 17, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91

Intermediate is(83): 
4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 40 56 56 55 90 143 145 233 233 55 90 143 146 233 233 55 91 4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 39 39 39 39 39 55 91 4 20 21 37 38 39 40 56 71 109 125 38 39 41 73 88 73 55 91 4 20 21 37 38 39 39 39 55 91 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 51, q = 2, out = 28
trans_offset 172, q = 4, out = 2
trans_offset 143, q = 4, out = 15
trans_offset 526, q = 7, out = 2
trans_offset 525, q = 7, out = 3
trans_offset 1062, q = 13, out = 0
trans_offset 1535, q = 19, out = 0
trans_offset 1907, q = 23, out = 0
trans_offset 1228, q = 16, out = 0
trans_offset 1213, q = 16, out = 0
trans_offset 1620, q = 21, out = 0
trans_offset 1619, q = 21, out = 0
trans_offset 1060, q = 13, out = 29
trans_offset 1474, q = 19, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 108, q = 2, out = 2
trans_offset 108, q = 2, out = 2
trans_offset 73, q = 2, out = 16
trans_offset 70, q = 2, out = 2
trans_offset 52, q = 2, out = 3
trans_offset 135, q = 3, out = 29
trans_offset 371, q = 5, out = 2
trans_offset 755, q = 8, out = 2
trans_offset 719, q = 8, out = 15
trans_offset 717, q = 8, out = 2
trans_offset 699, q = 8, out = 3
trans_offset 135, q = 3, out = 29
trans_offset 286, q = 5, out = 2
trans_offset 670, q = 8, out = 2
trans_offset 655, q = 8, out = 53
trans_offset 654, q = 8, out = 2
trans_offset 653, q = 8, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10

Output is(76): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 12, "<Marinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 70, 7, "mari" )
Symbol(53, 0, 0, )
Symbol(87, 83, 5, <sg> )
Symbol(2, 88, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 100, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 111, 5, <sg> )
Symbol(2, 116, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 128, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 140, 5, <sg> )
Symbol(2, 145, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 163, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 182, 5, "is" )
Symbol(54, 187, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 205, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 225, 6, "van" )
Symbol(48, 231, 8, <vbser> )
Symbol(37, 239, 7, <pres> )
Symbol(87, 246, 5, <sg> )
Symbol(2, 251, 6, <s3p> )
Symbol(2, 257, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 275, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 339, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 351, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 364, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 382, 6, "<?>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(68, 400, 4, "?" )
Symbol(64, 404, 7, <sent> )
Symbol(2, 411, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 2 29 3 2 15 87 2 29 3 82 16 87 2 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 83 15 87 28 55 29 8 10 2 7 29 3 68 64 2 29 8 Rule found: R_3_283_T_1


LRS T1:
Name: R_3_283_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 82 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 82 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 82 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 16 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(76): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 12, "<Marinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 70, 7, "mari" )
Symbol(53, 0, 0, )
Symbol(87, 83, 5, <sg> )
Symbol(2, 88, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 100, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 111, 5, <sg> )
Symbol(2, 116, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 128, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 140, 5, <sg> )
Symbol(2, 145, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 163, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 182, 5, "is" )
Symbol(54, 187, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 205, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 225, 6, "van" )
Symbol(48, 231, 8, <vbser> )
Symbol(37, 239, 7, <pres> )
Symbol(87, 246, 5, <sg> )
Symbol(2, 251, 6, <s3p> )
Symbol(2, 257, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 275, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 339, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 351, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 364, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 382, 6, "<?>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(68, 400, 4, "?" )
Symbol(64, 404, 7, <sent> )
Symbol(2, 411, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 2 29 3 2 15 87 2 29 3 82 16 87 2 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 83 15 87 28 55 29 8 10 2 7 29 3 68 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 82, q = 8, out = 14
trans_offset 32, signum = 16, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(76): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 16
trans_offset 23, q = 4, out = 82
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(64): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 12, "<Marinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 0, 0, )
Symbol(16, 0, 0, )
Symbol(87, 140, 5, <sg> )
Symbol(2, 145, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 163, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 182, 5, "is" )
Symbol(54, 187, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 205, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 225, 6, "van" )
Symbol(48, 231, 8, <vbser> )
Symbol(37, 239, 7, <pres> )
Symbol(87, 246, 5, <sg> )
Symbol(2, 251, 6, <s3p> )
Symbol(2, 257, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 275, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 339, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 351, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 364, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 382, 6, "<?>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(68, 400, 4, "?" )
Symbol(64, 404, 7, <sent> )
Symbol(2, 411, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 82 16 87 2 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 83 15 87 28 55 29 8 10 2 7 29 3 68 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<Marinak>" #BOC# | #0# "mari" <adj> <sg> <dat> | #0# "mari" <n> <sg> <dat> | #0# "Mari" <np> <sg> <dat> | #EOC# $0$ "<nincs>" #BOC# | #0# "nincs" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<kutyája>" #BOC# | #0# "kutya" <adj> <sg> <px3ss> <nom> | #0# "kutya" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<macskája>" #BOC# | #0# "macska" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_87_T_1


LRS T1:
Name: R_1_87_T_1
arity: 2
arccount: 70
statecount: 25
linecount: 71
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 80 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 80 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 12 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 13 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 18
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 16
  in: 2 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 50 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 17
  in: 2 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 17
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 17
  in: 29 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 18
  in: 2 -- 
  out: 7 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 18
  in: 7 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 18
  in: 16 -- 
  out: 10 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 80 -- 
  out: 9 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 19
  in: 29 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 2 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 16 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 21
  in: 29 -- 
  out: 24 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 21
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 16 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 22
  in: 29 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 22
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 3 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(130): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 8, "<Nem>" )
Symbol(7, 54, 6, #BOC# )
Symbol(29, 60, 2, | )
Symbol(3, 62, 4, #0# )
Symbol(2, 66, 6, "nem" )
Symbol(91, 72, 5, <ij> )
Symbol(29, 77, 2, | )
Symbol(3, 79, 4, #0# )
Symbol(2, 83, 6, "nem" )
Symbol(54, 89, 6, <adv> )
Symbol(29, 95, 2, | )
Symbol(8, 97, 6, #EOC# )
Symbol(10, 103, 4, $0$ )
Symbol(2, 107, 6, "<,>" )
Symbol(7, 113, 6, #BOC# )
Symbol(29, 119, 2, | )
Symbol(3, 121, 4, #0# )
Symbol(2, 125, 4, "," )
Symbol(44, 129, 5, <cm> )
Symbol(29, 134, 2, | )
Symbol(8, 136, 6, #EOC# )
Symbol(10, 142, 4, $0$ )
Symbol(2, 146, 12, "<Marinak>" )
Symbol(7, 158, 6, #BOC# )
Symbol(29, 164, 2, | )
Symbol(3, 166, 4, #0# )
Symbol(2, 170, 7, "mari" )
Symbol(53, 177, 6, <adj> )
Symbol(87, 183, 5, <sg> )
Symbol(2, 188, 6, <dat> )
Symbol(29, 194, 2, | )
Symbol(3, 196, 4, #0# )
Symbol(2, 200, 7, "mari" )
Symbol(15, 207, 4, <n> )
Symbol(87, 211, 5, <sg> )
Symbol(2, 216, 6, <dat> )
Symbol(29, 222, 2, | )
Symbol(3, 224, 4, #0# )
Symbol(82, 228, 7, "Mari" )
Symbol(16, 235, 5, <np> )
Symbol(87, 240, 5, <sg> )
Symbol(2, 245, 6, <dat> )
Symbol(29, 251, 2, | )
Symbol(8, 253, 6, #EOC# )
Symbol(10, 259, 4, $0$ )
Symbol(2, 263, 10, "<nincs>" )
Symbol(7, 273, 6, #BOC# )
Symbol(29, 279, 2, | )
Symbol(3, 281, 4, #0# )
Symbol(34, 285, 8, "nincs" )
Symbol(48, 293, 8, <vbser> )
Symbol(37, 301, 7, <pres> )
Symbol(87, 308, 5, <sg> )
Symbol(2, 313, 6, <s3p> )
Symbol(2, 319, 6, <ind> )
Symbol(29, 325, 2, | )
Symbol(8, 327, 6, #EOC# )
Symbol(10, 333, 4, $0$ )
Symbol(2, 337, 13, "<kutyája>" )
Symbol(7, 350, 6, #BOC# )
Symbol(29, 356, 2, | )
Symbol(3, 358, 4, #0# )
Symbol(83, 362, 8, "kutya" )
Symbol(53, 370, 6, <adj> )
Symbol(87, 376, 5, <sg> )
Symbol(28, 381, 8, <px3ss> )
Symbol(55, 389, 6, <nom> )
Symbol(29, 395, 2, | )
Symbol(3, 397, 4, #0# )
Symbol(83, 401, 8, "kutya" )
Symbol(15, 409, 4, <n> )
Symbol(87, 413, 5, <sg> )
Symbol(28, 418, 8, <px3ss> )
Symbol(55, 426, 6, <nom> )
Symbol(29, 432, 2, | )
Symbol(8, 434, 6, #EOC# )
Symbol(10, 440, 4, $0$ )
Symbol(2, 444, 6, "<,>" )
Symbol(7, 450, 6, #BOC# )
Symbol(29, 456, 2, | )
Symbol(3, 458, 4, #0# )
Symbol(2, 462, 4, "," )
Symbol(44, 466, 5, <cm> )
Symbol(29, 471, 2, | )
Symbol(8, 473, 6, #EOC# )
Symbol(10, 479, 4, $0$ )
Symbol(2, 483, 14, "<macskája>" )
Symbol(7, 497, 6, #BOC# )
Symbol(29, 503, 2, | )
Symbol(3, 505, 4, #0# )
Symbol(2, 509, 9, "macska" )
Symbol(15, 518, 4, <n> )
Symbol(87, 522, 5, <sg> )
Symbol(28, 527, 8, <px3ss> )
Symbol(55, 535, 6, <nom> )
Symbol(29, 541, 2, | )
Symbol(8, 543, 6, #EOC# )
Symbol(10, 549, 4, $0$ )
Symbol(2, 553, 8, "<van>" )
Symbol(7, 561, 6, #BOC# )
Symbol(29, 567, 2, | )
Symbol(3, 569, 4, #0# )
Symbol(35, 573, 6, "van" )
Symbol(48, 579, 8, <vbser> )
Symbol(37, 587, 7, <pres> )
Symbol(87, 594, 5, <sg> )
Symbol(2, 599, 6, <s3p> )
Symbol(2, 605, 6, <ind> )
Symbol(29, 611, 2, | )
Symbol(8, 613, 6, #EOC# )
Symbol(10, 619, 4, $0$ )
Symbol(2, 623, 6, "<.>" )
Symbol(7, 629, 6, #BOC# )
Symbol(29, 635, 2, | )
Symbol(3, 637, 4, #0# )
Symbol(2, 641, 4, "." )
Symbol(64, 645, 7, <sent> )
Symbol(2, 652, 6, <<<<> )
Symbol(29, 658, 2, | )
Symbol(8, 660, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 53 87 2 29 3 2 15 87 2 29 3 82 16 87 2 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 83 53 87 28 55 29 3 83 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 80, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 43, signum = 10, q = 15, out = 4
trans_offset 52, signum = 2, q = 18, out = 7
trans_offset 53, signum = 7, q = 18, out = 8
trans_offset 56, signum = 29, q = 19, out = 11
trans_offset 57, signum = 3, q = 20, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 66, signum = 3, q = 23, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 67, signum = 8, q = 23, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 33, signum = 16, q = 11, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(130): 
4 7 8 11 12 13 14 16 26 4 7 8 11 60 21 21 24 60 21 21 24 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 12 13 15 21 21 24 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 13 16 12 13 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 13, q = 2, out = 3
trans_offset 16, q = 3, out = 29
trans_offset 33, q = 5, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 13, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10

Output is(118): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<Nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "nem" )
Symbol(91, 72, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 83, 6, "nem" )
Symbol(54, 89, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 107, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 125, 4, "," )
Symbol(44, 129, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 146, 12, "<Marinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 228, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 240, 5, <sg> )
Symbol(2, 245, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 263, 10, "<nincs>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(34, 285, 8, "nincs" )
Symbol(48, 293, 8, <vbser> )
Symbol(37, 301, 7, <pres> )
Symbol(87, 308, 5, <sg> )
Symbol(2, 313, 6, <s3p> )
Symbol(2, 319, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 337, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 362, 8, "kutya" )
Symbol(53, 370, 6, <adj> )
Symbol(87, 376, 5, <sg> )
Symbol(28, 381, 8, <px3ss> )
Symbol(55, 389, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 401, 8, "kutya" )
Symbol(15, 409, 4, <n> )
Symbol(87, 413, 5, <sg> )
Symbol(28, 418, 8, <px3ss> )
Symbol(55, 426, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 444, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 462, 4, "," )
Symbol(44, 466, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 483, 14, "<macskája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 509, 9, "macska" )
Symbol(15, 518, 4, <n> )
Symbol(87, 522, 5, <sg> )
Symbol(28, 527, 8, <px3ss> )
Symbol(55, 535, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 573, 6, "van" )
Symbol(48, 579, 8, <vbser> )
Symbol(37, 587, 7, <pres> )
Symbol(87, 594, 5, <sg> )
Symbol(2, 599, 6, <s3p> )
Symbol(2, 605, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 623, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 4, "." )
Symbol(64, 645, 7, <sent> )
Symbol(2, 652, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 82 16 87 2 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 83 53 87 28 55 29 3 83 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_99_T_1


LRS T1:
Name: R_1_99_T_1
arity: 2
arccount: 523
statecount: 38
linecount: 524
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 16 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 17 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 18 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 19 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 20 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 21 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 22 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 23 -- 
  out: 14 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 0
  in: 24 -- 
  out: 15 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(12):
  state_no: 0
  in: 25 -- 
  out: 16 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(13):
  state_no: 0
  in: 26 -- 
  out: 17 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(14):
  state_no: 0
  in: 27 -- 
  out: 18 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(15):
  state_no: 0
  in: 28 -- 
  out: 19 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(16):
  state_no: 0
  in: 53 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(17):
  state_no: 1
  in: 2 -- 
  out: 20 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 7 -- 
  out: 21 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 15 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 16 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 17 -- 
  out: 25 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 1
  in: 18 -- 
  out: 26 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 1
  in: 19 -- 
  out: 27 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 1
  in: 20 -- 
  out: 28 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 1
  in: 21 -- 
  out: 29 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 1
  in: 22 -- 
  out: 30 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 1
  in: 23 -- 
  out: 31 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 1
  in: 24 -- 
  out: 32 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 1
  in: 25 -- 
  out: 33 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 1
  in: 26 -- 
  out: 34 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 1
  in: 27 -- 
  out: 35 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 1
  in: 28 -- 
  out: 36 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 1
  in: 53 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 2
  in: 29 -- 
  out: 37 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 3
  in: 3 -- 
  out: 38 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 4
  in: 2 -- 
  out: 39 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 4
  in: 15 -- 
  out: 41 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 4
  in: 16 -- 
  out: 42 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 4
  in: 17 -- 
  out: 43 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 4
  in: 18 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 4
  in: 19 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 4
  in: 20 -- 
  out: 46 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 4
  in: 21 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 4
  in: 22 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 4
  in: 23 -- 
  out: 49 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 4
  in: 24 -- 
  out: 50 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 4
  in: 25 -- 
  out: 51 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 4
  in: 26 -- 
  out: 52 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 4
  in: 27 -- 
  out: 53 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 4
  in: 28 -- 
  out: 54 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 4
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 4
  in: 53 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 5
  in: 2 -- 
  out: 56 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 5
  in: 15 -- 
  out: 58 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 5
  in: 16 -- 
  out: 59 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 5
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 5
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 5
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 5
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 5
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 5
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 5
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 5
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 5
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 5
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 5
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 5
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 5
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 5
  in: 53 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 6
  in: 2 -- 
  out: 73 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 6
  in: 15 -- 
  out: 41 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 6
  in: 16 -- 
  out: 42 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 6
  in: 17 -- 
  out: 77 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 6
  in: 18 -- 
  out: 78 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 6
  in: 19 -- 
  out: 79 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 6
  in: 20 -- 
  out: 80 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 6
  in: 21 -- 
  out: 81 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 6
  in: 22 -- 
  out: 82 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 6
  in: 23 -- 
  out: 83 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 6
  in: 24 -- 
  out: 84 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 6
  in: 25 -- 
  out: 85 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 6
  in: 26 -- 
  out: 86 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 6
  in: 27 -- 
  out: 87 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 6
  in: 28 -- 
  out: 88 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 6
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 6
  in: 53 -- 
  out: 74 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 7
  in: 3 -- 
  out: 90 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 7
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 8
  in: 2 -- 
  out: 92 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 8
  in: 15 -- 
  out: 58 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 8
  in: 16 -- 
  out: 59 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 8
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 8
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 8
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 8
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 8
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 8
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 8
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 8
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 8
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 8
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 8
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 8
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 8
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 8
  in: 53 -- 
  out: 74 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 9
  in: 2 -- 
  out: 109 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 9
  in: 15 -- 
  out: 111 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 9
  in: 16 -- 
  out: 112 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 9
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 9
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 9
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 9
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 9
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 9
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 9
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 9
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 9
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 9
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 9
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 9
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 9
  in: 29 -- 
  out: 125 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 9
  in: 53 -- 
  out: 110 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 10
  in: 2 -- 
  out: 73 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 10
  in: 15 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 10
  in: 16 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 10
  in: 17 -- 
  out: 77 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 10
  in: 18 -- 
  out: 78 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 10
  in: 19 -- 
  out: 79 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 10
  in: 20 -- 
  out: 80 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 10
  in: 21 -- 
  out: 81 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 10
  in: 22 -- 
  out: 82 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 10
  in: 23 -- 
  out: 83 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 10
  in: 24 -- 
  out: 84 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 10
  in: 25 -- 
  out: 85 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 10
  in: 26 -- 
  out: 86 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 10
  in: 27 -- 
  out: 87 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 10
  in: 28 -- 
  out: 88 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 10
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 10
  in: 53 -- 
  out: 74 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 11
  in: 2 -- 
  out: 143 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 11
  in: 15 -- 
  out: 145 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 11
  in: 16 -- 
  out: 146 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 11
  in: 17 -- 
  out: 147 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 11
  in: 18 -- 
  out: 148 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 11
  in: 19 -- 
  out: 149 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 11
  in: 20 -- 
  out: 150 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 11
  in: 21 -- 
  out: 151 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 11
  in: 22 -- 
  out: 152 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 11
  in: 23 -- 
  out: 153 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 11
  in: 24 -- 
  out: 154 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 11
  in: 25 -- 
  out: 155 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 11
  in: 26 -- 
  out: 156 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 11
  in: 27 -- 
  out: 157 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 11
  in: 28 -- 
  out: 158 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 11
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 11
  in: 53 -- 
  out: 144 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(158):
  state_no: 13
  in: 2 -- 
  out: 161 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 13
  in: 15 -- 
  out: 163 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 13
  in: 16 -- 
  out: 164 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 13
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 13
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 13
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 13
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 13
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 13
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 13
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 13
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 13
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 13
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 13
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 13
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 13
  in: 29 -- 
  out: 177 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 13
  in: 53 -- 
  out: 162 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 14
  in: 2 -- 
  out: 178 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 14
  in: 15 -- 
  out: 111 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 14
  in: 16 -- 
  out: 112 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 14
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 14
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 14
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 14
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 14
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 14
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 14
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 14
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 14
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 14
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 14
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 14
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 14
  in: 29 -- 
  out: 125 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 14
  in: 53 -- 
  out: 179 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 15
  in: 3 -- 
  out: 38 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 15
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 16
  in: 2 -- 
  out: 92 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 16
  in: 15 -- 
  out: 58 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 16
  in: 16 -- 
  out: 59 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 16
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 16
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 16
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 16
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 16
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 16
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 16
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 16
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 16
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 16
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 16
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 16
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 16
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 16
  in: 53 -- 
  out: 74 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 17
  in: 3 -- 
  out: 214 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 17
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 18
  in: 2 -- 
  out: 216 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 18
  in: 15 -- 
  out: 218 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 18
  in: 16 -- 
  out: 219 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 18
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 18
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 18
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 18
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 18
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 18
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 18
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 18
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 18
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 18
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 18
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 18
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 18
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 18
  in: 53 -- 
  out: 144 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 19
  in: 2 -- 
  out: 233 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 19
  in: 15 -- 
  out: 145 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 19
  in: 16 -- 
  out: 146 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 19
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 19
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 19
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 19
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 19
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 19
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 19
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 19
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 19
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 19
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 19
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 19
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 19
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 19
  in: 53 -- 
  out: 234 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 20
  in: 3 -- 
  out: 250 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 20
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 21
  in: 2 -- 
  out: 39 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 21
  in: 15 -- 
  out: 41 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 21
  in: 16 -- 
  out: 42 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 21
  in: 17 -- 
  out: 43 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 21
  in: 18 -- 
  out: 44 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 21
  in: 19 -- 
  out: 45 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 21
  in: 20 -- 
  out: 46 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 21
  in: 21 -- 
  out: 47 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 21
  in: 22 -- 
  out: 48 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 21
  in: 23 -- 
  out: 49 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 21
  in: 24 -- 
  out: 50 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 21
  in: 25 -- 
  out: 51 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 21
  in: 26 -- 
  out: 52 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 21
  in: 27 -- 
  out: 53 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 21
  in: 28 -- 
  out: 54 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 21
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 21
  in: 53 -- 
  out: 40 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 22
  in: 2 -- 
  out: 233 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 22
  in: 15 -- 
  out: 145 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 22
  in: 16 -- 
  out: 146 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 22
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 22
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 22
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 22
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 22
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 22
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 22
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 22
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 22
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 22
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 22
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 22
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 22
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 22
  in: 53 -- 
  out: 234 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 23
  in: 2 -- 
  out: 286 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 23
  in: 15 -- 
  out: 218 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 23
  in: 16 -- 
  out: 219 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 23
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 23
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 23
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 23
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 23
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 23
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 23
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 23
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 23
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 23
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 23
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 23
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 23
  in: 29 -- 
  out: 55 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 23
  in: 53 -- 
  out: 234 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 24
  in: 2 -- 
  out: 303 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 24
  in: 15 -- 
  out: 305 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 24
  in: 16 -- 
  out: 306 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 24
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 24
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 24
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 24
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 24
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 24
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 24
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 24
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 24
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 24
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 24
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 24
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 24
  in: 29 -- 
  out: 319 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 24
  in: 53 -- 
  out: 304 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 25
  in: 2 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 25
  in: 15 -- 
  out: 41 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 25
  in: 16 -- 
  out: 42 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 25
  in: 17 -- 
  out: 77 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 25
  in: 18 -- 
  out: 78 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 25
  in: 19 -- 
  out: 79 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 25
  in: 20 -- 
  out: 80 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 25
  in: 21 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 25
  in: 22 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 25
  in: 23 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 25
  in: 24 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 25
  in: 25 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 25
  in: 26 -- 
  out: 86 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 25
  in: 27 -- 
  out: 87 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 25
  in: 28 -- 
  out: 88 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 25
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 25
  in: 53 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 26
  in: 2 -- 
  out: 56 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 26
  in: 15 -- 
  out: 58 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 26
  in: 16 -- 
  out: 59 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 26
  in: 17 -- 
  out: 60 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 26
  in: 18 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 26
  in: 19 -- 
  out: 62 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 26
  in: 20 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 26
  in: 21 -- 
  out: 64 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 26
  in: 22 -- 
  out: 65 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 26
  in: 23 -- 
  out: 66 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 26
  in: 24 -- 
  out: 67 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 26
  in: 25 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 26
  in: 26 -- 
  out: 69 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 26
  in: 27 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 26
  in: 28 -- 
  out: 71 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 26
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 26
  in: 53 -- 
  out: 40 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 27
  in: 2 -- 
  out: 73 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 27
  in: 15 -- 
  out: 41 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 27
  in: 16 -- 
  out: 42 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 27
  in: 17 -- 
  out: 77 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 27
  in: 18 -- 
  out: 78 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 27
  in: 19 -- 
  out: 79 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 27
  in: 20 -- 
  out: 80 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 27
  in: 21 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 27
  in: 22 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 27
  in: 23 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 27
  in: 24 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 27
  in: 25 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 27
  in: 26 -- 
  out: 86 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 27
  in: 27 -- 
  out: 87 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(365):
  state_no: 27
  in: 28 -- 
  out: 88 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(366):
  state_no: 27
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(367):
  state_no: 27
  in: 53 -- 
  out: 74 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(368):
  state_no: 28
  in: 3 -- 
  out: 90 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(369):
  state_no: 28
  in: 8 -- 
  out: 91 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(370):
  state_no: 29
  in: 2 -- 
  out: 286 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(371):
  state_no: 29
  in: 15 -- 
  out: 218 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(372):
  state_no: 29
  in: 16 -- 
  out: 219 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(373):
  state_no: 29
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(374):
  state_no: 29
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(375):
  state_no: 29
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(376):
  state_no: 29
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(377):
  state_no: 29
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(378):
  state_no: 29
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(379):
  state_no: 29
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(380):
  state_no: 29
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(381):
  state_no: 29
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(382):
  state_no: 29
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(383):
  state_no: 29
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(384):
  state_no: 29
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(385):
  state_no: 29
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(386):
  state_no: 29
  in: 53 -- 
  out: 234 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(387):
  state_no: 30
  in: 2 -- 
  out: 390 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(388):
  state_no: 30
  in: 15 -- 
  out: 392 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(389):
  state_no: 30
  in: 16 -- 
  out: 392 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(390):
  state_no: 30
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(391):
  state_no: 30
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(392):
  state_no: 30
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(393):
  state_no: 30
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(394):
  state_no: 30
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(395):
  state_no: 30
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(396):
  state_no: 30
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(397):
  state_no: 30
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(398):
  state_no: 30
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(399):
  state_no: 30
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(400):
  state_no: 30
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(401):
  state_no: 30
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(402):
  state_no: 30
  in: 29 -- 
  out: 406 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(403):
  state_no: 30
  in: 53 -- 
  out: 391 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(404):
  state_no: 31
  in: 2 -- 
  out: 407 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(405):
  state_no: 31
  in: 15 -- 
  out: 305 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(406):
  state_no: 31
  in: 16 -- 
  out: 306 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(407):
  state_no: 31
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(408):
  state_no: 31
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(409):
  state_no: 31
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(410):
  state_no: 31
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(411):
  state_no: 31
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(412):
  state_no: 31
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(413):
  state_no: 31
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(414):
  state_no: 31
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(415):
  state_no: 31
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(416):
  state_no: 31
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(417):
  state_no: 31
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(418):
  state_no: 31
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(419):
  state_no: 31
  in: 29 -- 
  out: 319 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(420):
  state_no: 31
  in: 53 -- 
  out: 408 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(421):
  state_no: 32
  in: 2 -- 
  out: 92 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(422):
  state_no: 32
  in: 15 -- 
  out: 58 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(423):
  state_no: 32
  in: 16 -- 
  out: 59 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(424):
  state_no: 32
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(425):
  state_no: 32
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(426):
  state_no: 32
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(427):
  state_no: 32
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(428):
  state_no: 32
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(429):
  state_no: 32
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(430):
  state_no: 32
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(431):
  state_no: 32
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(432):
  state_no: 32
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(433):
  state_no: 32
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(434):
  state_no: 32
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(435):
  state_no: 32
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(436):
  state_no: 32
  in: 29 -- 
  out: 55 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(437):
  state_no: 32
  in: 53 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(438):
  state_no: 33
  in: 2 -- 
  out: 92 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(439):
  state_no: 33
  in: 15 -- 
  out: 58 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(440):
  state_no: 33
  in: 16 -- 
  out: 59 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(441):
  state_no: 33
  in: 17 -- 
  out: 96 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(442):
  state_no: 33
  in: 18 -- 
  out: 97 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(443):
  state_no: 33
  in: 19 -- 
  out: 98 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(444):
  state_no: 33
  in: 20 -- 
  out: 99 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(445):
  state_no: 33
  in: 21 -- 
  out: 100 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(446):
  state_no: 33
  in: 22 -- 
  out: 101 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(447):
  state_no: 33
  in: 23 -- 
  out: 102 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(448):
  state_no: 33
  in: 24 -- 
  out: 103 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(449):
  state_no: 33
  in: 25 -- 
  out: 104 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(450):
  state_no: 33
  in: 26 -- 
  out: 105 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(451):
  state_no: 33
  in: 27 -- 
  out: 106 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(452):
  state_no: 33
  in: 28 -- 
  out: 107 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(453):
  state_no: 33
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(454):
  state_no: 33
  in: 53 -- 
  out: 74 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(455):
  state_no: 34
  in: 2 -- 
  out: 143 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(456):
  state_no: 34
  in: 15 -- 
  out: 145 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(457):
  state_no: 34
  in: 16 -- 
  out: 146 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(458):
  state_no: 34
  in: 17 -- 
  out: 147 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(459):
  state_no: 34
  in: 18 -- 
  out: 148 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(460):
  state_no: 34
  in: 19 -- 
  out: 149 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(461):
  state_no: 34
  in: 20 -- 
  out: 150 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(462):
  state_no: 34
  in: 21 -- 
  out: 151 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(463):
  state_no: 34
  in: 22 -- 
  out: 152 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(464):
  state_no: 34
  in: 23 -- 
  out: 153 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(465):
  state_no: 34
  in: 24 -- 
  out: 154 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(466):
  state_no: 34
  in: 25 -- 
  out: 155 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(467):
  state_no: 34
  in: 26 -- 
  out: 156 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(468):
  state_no: 34
  in: 27 -- 
  out: 157 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(469):
  state_no: 34
  in: 28 -- 
  out: 158 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(470):
  state_no: 34
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(471):
  state_no: 34
  in: 53 -- 
  out: 144 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(472):
  state_no: 35
  in: 2 -- 
  out: 216 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(473):
  state_no: 35
  in: 15 -- 
  out: 218 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(474):
  state_no: 35
  in: 16 -- 
  out: 219 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(475):
  state_no: 35
  in: 17 -- 
  out: 220 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(476):
  state_no: 35
  in: 18 -- 
  out: 221 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(477):
  state_no: 35
  in: 19 -- 
  out: 222 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(478):
  state_no: 35
  in: 20 -- 
  out: 223 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(479):
  state_no: 35
  in: 21 -- 
  out: 224 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(480):
  state_no: 35
  in: 22 -- 
  out: 225 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(481):
  state_no: 35
  in: 23 -- 
  out: 226 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(482):
  state_no: 35
  in: 24 -- 
  out: 227 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(483):
  state_no: 35
  in: 25 -- 
  out: 228 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(484):
  state_no: 35
  in: 26 -- 
  out: 229 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(485):
  state_no: 35
  in: 27 -- 
  out: 230 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(486):
  state_no: 35
  in: 28 -- 
  out: 231 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(487):
  state_no: 35
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(488):
  state_no: 35
  in: 53 -- 
  out: 144 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(489):
  state_no: 36
  in: 2 -- 
  out: 233 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(490):
  state_no: 36
  in: 15 -- 
  out: 145 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(491):
  state_no: 36
  in: 16 -- 
  out: 146 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(492):
  state_no: 36
  in: 17 -- 
  out: 237 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(493):
  state_no: 36
  in: 18 -- 
  out: 238 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(494):
  state_no: 36
  in: 19 -- 
  out: 239 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(495):
  state_no: 36
  in: 20 -- 
  out: 240 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(496):
  state_no: 36
  in: 21 -- 
  out: 241 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(497):
  state_no: 36
  in: 22 -- 
  out: 242 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(498):
  state_no: 36
  in: 23 -- 
  out: 243 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(499):
  state_no: 36
  in: 24 -- 
  out: 244 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(500):
  state_no: 36
  in: 25 -- 
  out: 245 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(501):
  state_no: 36
  in: 26 -- 
  out: 246 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(502):
  state_no: 36
  in: 27 -- 
  out: 247 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(503):
  state_no: 36
  in: 28 -- 
  out: 248 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(504):
  state_no: 36
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(505):
  state_no: 36
  in: 53 -- 
  out: 234 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(506):
  state_no: 37
  in: 2 -- 
  out: 286 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(507):
  state_no: 37
  in: 15 -- 
  out: 218 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(508):
  state_no: 37
  in: 16 -- 
  out: 219 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(509):
  state_no: 37
  in: 17 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(510):
  state_no: 37
  in: 18 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(511):
  state_no: 37
  in: 19 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(512):
  state_no: 37
  in: 20 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(513):
  state_no: 37
  in: 21 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(514):
  state_no: 37
  in: 22 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(515):
  state_no: 37
  in: 23 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(516):
  state_no: 37
  in: 24 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(517):
  state_no: 37
  in: 25 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(518):
  state_no: 37
  in: 26 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(519):
  state_no: 37
  in: 27 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(520):
  state_no: 37
  in: 28 -- 
  out: 290 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(521):
  state_no: 37
  in: 29 -- 
  out: 55 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(522):
  state_no: 37
  in: 53 -- 
  out: 234 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(523):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(118): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<Nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "nem" )
Symbol(91, 72, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 83, 6, "nem" )
Symbol(54, 89, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 107, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 125, 4, "," )
Symbol(44, 129, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 146, 12, "<Marinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 228, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 240, 5, <sg> )
Symbol(2, 245, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 263, 10, "<nincs>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(34, 285, 8, "nincs" )
Symbol(48, 293, 8, <vbser> )
Symbol(37, 301, 7, <pres> )
Symbol(87, 308, 5, <sg> )
Symbol(2, 313, 6, <s3p> )
Symbol(2, 319, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 337, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 362, 8, "kutya" )
Symbol(53, 370, 6, <adj> )
Symbol(87, 376, 5, <sg> )
Symbol(28, 381, 8, <px3ss> )
Symbol(55, 389, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 401, 8, "kutya" )
Symbol(15, 409, 4, <n> )
Symbol(87, 413, 5, <sg> )
Symbol(28, 418, 8, <px3ss> )
Symbol(55, 426, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 444, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 462, 4, "," )
Symbol(44, 466, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 483, 14, "<macskája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 509, 9, "macska" )
Symbol(15, 518, 4, <n> )
Symbol(87, 522, 5, <sg> )
Symbol(28, 527, 8, <px3ss> )
Symbol(55, 535, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 573, 6, "van" )
Symbol(48, 579, 8, <vbser> )
Symbol(37, 587, 7, <pres> )
Symbol(87, 594, 5, <sg> )
Symbol(2, 599, 6, <s3p> )
Symbol(2, 605, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 623, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 4, "." )
Symbol(64, 645, 7, <sent> )
Symbol(2, 652, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 82 16 87 2 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 83 53 87 28 55 29 3 83 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 87, signum = 3, q = 7, out = 90
trans_offset 140, signum = 2, q = 11, out = 143
trans_offset 140, signum = 2, q = 11, out = 143
trans_offset 155, signum = 29, q = 11, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 38, signum = 16, q = 4, out = 42
trans_offset 70, signum = 2, q = 6, out = 73
trans_offset 70, signum = 2, q = 6, out = 73
trans_offset 85, signum = 29, q = 6, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 52, signum = 53, q = 4, out = 40
trans_offset 53, signum = 2, q = 5, out = 56
trans_offset 67, signum = 28, q = 5, out = 71
trans_offset 106, signum = 2, q = 9, out = 109
trans_offset 121, signum = 29, q = 9, out = 125
trans_offset 192, signum = 3, q = 15, out = 38
trans_offset 249, signum = 2, q = 21, out = 39
trans_offset 250, signum = 15, q = 21, out = 41
trans_offset 351, signum = 2, q = 27, out = 73
trans_offset 365, signum = 28, q = 27, out = 88
trans_offset 317, signum = 2, q = 25, out = 73
trans_offset 332, signum = 29, q = 25, out = 55
trans_offset 212, signum = 8, q = 17, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 37, signum = 15, q = 4, out = 41
trans_offset 70, signum = 2, q = 6, out = 73
trans_offset 84, signum = 28, q = 6, out = 88
trans_offset 123, signum = 2, q = 10, out = 73
trans_offset 138, signum = 29, q = 10, out = 55
trans_offset 212, signum = 8, q = 17, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91
trans_offset 157, signum = 10, q = 12, out = 4
trans_offset 17, signum = 2, q = 1, out = 20
trans_offset 18, signum = 7, q = 1, out = 21
trans_offset 34, signum = 29, q = 2, out = 37
trans_offset 35, signum = 3, q = 3, out = 38
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 36, signum = 2, q = 4, out = 39
trans_offset 51, signum = 29, q = 4, out = 55
trans_offset 88, signum = 8, q = 7, out = 91

Intermediate is(118): 
4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 39 55 90 143 143 55 91 4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 42 73 73 55 91 4 20 21 37 38 39 39 39 39 39 39 55 91 4 20 21 37 38 39 40 56 71 109 125 38 39 41 73 88 73 55 91 4 20 21 37 38 39 39 55 91 4 20 21 37 38 39 41 73 88 73 55 91 4 20 21 37 38 39 39 39 39 39 39 55 91 4 20 21 37 38 39 39 39 55 91 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 51, q = 2, out = 28
trans_offset 172, q = 4, out = 2
trans_offset 143, q = 4, out = 15
trans_offset 526, q = 7, out = 2
trans_offset 525, q = 7, out = 3
trans_offset 1060, q = 13, out = 29
trans_offset 1474, q = 19, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 51, q = 2, out = 28
trans_offset 172, q = 4, out = 2
trans_offset 143, q = 4, out = 15
trans_offset 526, q = 7, out = 2
trans_offset 525, q = 7, out = 3
trans_offset 1062, q = 13, out = 0
trans_offset 1535, q = 19, out = 0
trans_offset 1907, q = 23, out = 0
trans_offset 1228, q = 16, out = 0
trans_offset 1213, q = 16, out = 0
trans_offset 1620, q = 21, out = 0
trans_offset 1619, q = 21, out = 0
trans_offset 1060, q = 13, out = 29
trans_offset 1474, q = 19, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 38, q = 2, out = 2
trans_offset 10, q = 2, out = 16
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 70, q = 2, out = 2
trans_offset 70, q = 2, out = 2
trans_offset 52, q = 2, out = 3
trans_offset 135, q = 3, out = 29
trans_offset 270, q = 5, out = 2
trans_offset 654, q = 8, out = 2
trans_offset 653, q = 8, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10
trans_offset 1082, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 134, q = 3, out = 29
trans_offset 268, q = 5, out = 7
trans_offset 782, q = 9, out = 2
trans_offset 781, q = 9, out = 10

Output is(111): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<Nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "nem" )
Symbol(91, 72, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 83, 6, "nem" )
Symbol(54, 89, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 107, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 125, 4, "," )
Symbol(44, 129, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 146, 12, "<Marinak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 228, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 240, 5, <sg> )
Symbol(2, 245, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 263, 10, "<nincs>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(34, 285, 8, "nincs" )
Symbol(48, 293, 8, <vbser> )
Symbol(37, 301, 7, <pres> )
Symbol(87, 308, 5, <sg> )
Symbol(2, 313, 6, <s3p> )
Symbol(2, 319, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 337, 13, "<kutyája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 401, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 413, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 426, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 444, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 462, 4, "," )
Symbol(44, 466, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 483, 14, "<macskája>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 509, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 522, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 535, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 573, 6, "van" )
Symbol(48, 579, 8, <vbser> )
Symbol(37, 587, 7, <pres> )
Symbol(87, 594, 5, <sg> )
Symbol(2, 599, 6, <s3p> )
Symbol(2, 605, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 623, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 4, "." )
Symbol(64, 645, 7, <sent> )
Symbol(2, 652, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 82 16 87 2 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 83 15 87 28 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<De>" #BOC# | #0# "de" <adv> | #0# "de" <cnjcoo> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<macska>" #BOC# | #0# "macska" <n> <sg> <nom> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<házban>" #BOC# | #0# "ház" <n> <sg> <ine> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<macska>" #BOC# | #0# "macska" <n> <sg> <nom> | #EOC# $0$ "<alszik>" #BOC# | #0# "alszik" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_198_T_1


LRS T1:
Name: R_1_198_T_1
arity: 2
arccount: 183
statecount: 45
linecount: 184
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 65 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 53 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 54 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 65 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 53 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 54 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 53 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 3 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 7
  in: 2 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 7
  in: 53 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 65 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 54 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 10
  in: 3 -- 
  out: 14 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 11
  in: 2 -- 
  out: 40 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 53 -- 
  out: 42 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 12
  in: 2 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 53 -- 
  out: 17 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 12
  in: 54 -- 
  out: 18 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 12
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 13
  in: 2 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 13
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 13
  in: 53 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 65 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 2 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 53 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 3 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 32 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 53 -- 
  out: 34 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 54 -- 
  out: 35 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 10 -- 
  out: 5 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 2 -- 
  out: 40 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 53 -- 
  out: 42 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 2 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 7 -- 
  out: 10 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 53 -- 
  out: 11 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 54 -- 
  out: 12 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 65 -- 
  out: 9 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 29 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 21
  in: 3 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 22
  in: 2 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 22
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 22
  in: 54 -- 
  out: 18 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 22
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 2 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 23
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 23
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 23
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 2 -- 
  out: 15 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 24
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 24
  in: 54 -- 
  out: 18 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 24
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 2 -- 
  out: 20 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 25
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 25
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 25
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 2 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 26
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 26
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 26
  in: 65 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 27
  in: 3 -- 
  out: 25 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 27
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 2 -- 
  out: 27 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 29 -- 
  out: 31 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 28
  in: 65 -- 
  out: 28 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 2 -- 
  out: 32 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 54 -- 
  out: 35 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 14 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 40 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 32
  in: 2 -- 
  out: 32 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 32
  in: 54 -- 
  out: 35 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 32
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 33
  in: 2 -- 
  out: 15 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 33
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 33
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 33
  in: 54 -- 
  out: 18 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 33
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 2 -- 
  out: 40 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 34
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 34
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 34
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 34
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 2 -- 
  out: 50 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 35
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 35
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 35
  in: 65 -- 
  out: 51 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 2 -- 
  out: 20 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 36
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 36
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 37
  in: 2 -- 
  out: 15 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 37
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 37
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 37
  in: 54 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 37
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 2 -- 
  out: 50 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 38
  in: 29 -- 
  out: 54 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 38
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 38
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 38
  in: 65 -- 
  out: 51 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 39
  in: 2 -- 
  out: 20 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 39
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 39
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 39
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 39
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 40
  in: 3 -- 
  out: 25 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 40
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 41
  in: 2 -- 
  out: 32 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 41
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 41
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 41
  in: 54 -- 
  out: 35 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 41
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 42
  in: 2 -- 
  out: 40 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 42
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 42
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 42
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 42
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 43
  in: 2 -- 
  out: 32 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 43
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 43
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 43
  in: 54 -- 
  out: 35 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 43
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 44
  in: 2 -- 
  out: 40 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 44
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 44
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 44
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 44
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(183):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(130): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(65, 65, 5, "de" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 76, 2, | )
Symbol(3, 78, 4, #0# )
Symbol(65, 82, 5, "de" )
Symbol(45, 87, 9, <cnjcoo> )
Symbol(29, 96, 2, | )
Symbol(8, 98, 6, #EOC# )
Symbol(10, 104, 4, $0$ )
Symbol(2, 108, 6, "<a>" )
Symbol(7, 114, 6, #BOC# )
Symbol(29, 120, 2, | )
Symbol(3, 122, 4, #0# )
Symbol(2, 126, 4, "a" )
Symbol(73, 130, 6, <det> )
Symbol(2, 136, 6, <def> )
Symbol(29, 142, 2, | )
Symbol(8, 144, 6, #EOC# )
Symbol(10, 150, 4, $0$ )
Symbol(2, 154, 11, "<macska>" )
Symbol(7, 165, 6, #BOC# )
Symbol(29, 171, 2, | )
Symbol(3, 173, 4, #0# )
Symbol(2, 177, 9, "macska" )
Symbol(15, 186, 4, <n> )
Symbol(87, 190, 5, <sg> )
Symbol(55, 195, 6, <nom> )
Symbol(29, 201, 2, | )
Symbol(8, 203, 6, #EOC# )
Symbol(10, 209, 4, $0$ )
Symbol(2, 213, 6, "<a>" )
Symbol(7, 219, 6, #BOC# )
Symbol(29, 225, 2, | )
Symbol(3, 227, 4, #0# )
Symbol(2, 231, 4, "a" )
Symbol(73, 235, 6, <det> )
Symbol(2, 241, 6, <def> )
Symbol(29, 247, 2, | )
Symbol(8, 249, 6, #EOC# )
Symbol(10, 255, 4, $0$ )
Symbol(2, 259, 12, "<házban>" )
Symbol(7, 271, 6, #BOC# )
Symbol(29, 277, 2, | )
Symbol(3, 279, 4, #0# )
Symbol(2, 283, 7, "ház" )
Symbol(15, 290, 4, <n> )
Symbol(87, 294, 5, <sg> )
Symbol(2, 299, 6, <ine> )
Symbol(29, 305, 2, | )
Symbol(8, 307, 6, #EOC# )
Symbol(10, 313, 4, $0$ )
Symbol(2, 317, 8, "<van>" )
Symbol(7, 325, 6, #BOC# )
Symbol(29, 331, 2, | )
Symbol(3, 333, 4, #0# )
Symbol(35, 337, 6, "van" )
Symbol(48, 343, 8, <vbser> )
Symbol(37, 351, 7, <pres> )
Symbol(87, 358, 5, <sg> )
Symbol(2, 363, 6, <s3p> )
Symbol(2, 369, 6, <ind> )
Symbol(29, 375, 2, | )
Symbol(8, 377, 6, #EOC# )
Symbol(10, 383, 4, $0$ )
Symbol(2, 387, 6, "<,>" )
Symbol(7, 393, 6, #BOC# )
Symbol(29, 399, 2, | )
Symbol(3, 401, 4, #0# )
Symbol(2, 405, 4, "," )
Symbol(44, 409, 5, <cm> )
Symbol(29, 414, 2, | )
Symbol(8, 416, 6, #EOC# )
Symbol(10, 422, 4, $0$ )
Symbol(2, 426, 6, "<a>" )
Symbol(7, 432, 6, #BOC# )
Symbol(29, 438, 2, | )
Symbol(3, 440, 4, #0# )
Symbol(2, 444, 4, "a" )
Symbol(73, 448, 6, <det> )
Symbol(2, 454, 6, <def> )
Symbol(29, 460, 2, | )
Symbol(8, 462, 6, #EOC# )
Symbol(10, 468, 4, $0$ )
Symbol(2, 472, 11, "<macska>" )
Symbol(7, 483, 6, #BOC# )
Symbol(29, 489, 2, | )
Symbol(3, 491, 4, #0# )
Symbol(2, 495, 9, "macska" )
Symbol(15, 504, 4, <n> )
Symbol(87, 508, 5, <sg> )
Symbol(55, 513, 6, <nom> )
Symbol(29, 519, 2, | )
Symbol(8, 521, 6, #EOC# )
Symbol(10, 527, 4, $0$ )
Symbol(2, 531, 11, "<alszik>" )
Symbol(7, 542, 6, #BOC# )
Symbol(29, 548, 2, | )
Symbol(3, 550, 4, #0# )
Symbol(2, 554, 9, "alszik" )
Symbol(38, 563, 8, <vblex> )
Symbol(37, 571, 7, <pres> )
Symbol(87, 578, 5, <sg> )
Symbol(2, 583, 6, <s3p> )
Symbol(2, 589, 6, <ind> )
Symbol(29, 595, 2, | )
Symbol(8, 597, 6, #EOC# )
Symbol(10, 603, 4, $0$ )
Symbol(2, 607, 6, "<.>" )
Symbol(7, 613, 6, #BOC# )
Symbol(29, 619, 2, | )
Symbol(3, 621, 4, #0# )
Symbol(2, 625, 4, "." )
Symbol(64, 629, 7, <sent> )
Symbol(2, 636, 6, <<<<> )
Symbol(29, 642, 2, | )
Symbol(8, 644, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 16, signum = 65, q = 4, out = 16
trans_offset 20, signum = 54, q = 5, out = 23
trans_offset 25, signum = 29, q = 7, out = 31
trans_offset 35, signum = 3, q = 10, out = 14
trans_offset 46, signum = 65, q = 12, out = 16
trans_offset 52, signum = 2, q = 14, out = 20
trans_offset 53, signum = 29, q = 14, out = 19
trans_offset 58, signum = 8, q = 15, out = 26
trans_offset 64, signum = 10, q = 17, out = 5
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 10
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26

Intermediate is(130): 
5 8 10 13 14 15 15 19 26 5 8 10 13 14 16 23 31 14 16 20 19 26 5 8 10 13 14 15 15 15 19 26 5 8 10 13 14 15 15 15 15 19 26 5 8 10 13 14 15 15 15 19 26 5 8 10 13 14 15 15 15 15 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 19 26 5 8 10 13 14 15 15 15 19 26 5 8 10 13 14 15 15 15 15 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 15 19 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 6, q = 2, out = 65
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 0
trans_offset 82, q = 6, out = 0
trans_offset 174, q = 12, out = 0
trans_offset 248, q = 17, out = 0
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10

Output is(126): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 87, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 126, 4, "a" )
Symbol(73, 130, 6, <det> )
Symbol(2, 136, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 154, 11, "<macska>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 177, 9, "macska" )
Symbol(15, 186, 4, <n> )
Symbol(87, 190, 5, <sg> )
Symbol(55, 195, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 213, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 231, 4, "a" )
Symbol(73, 235, 6, <det> )
Symbol(2, 241, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 259, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 283, 7, "ház" )
Symbol(15, 290, 4, <n> )
Symbol(87, 294, 5, <sg> )
Symbol(2, 299, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 317, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 337, 6, "van" )
Symbol(48, 343, 8, <vbser> )
Symbol(37, 351, 7, <pres> )
Symbol(87, 358, 5, <sg> )
Symbol(2, 363, 6, <s3p> )
Symbol(2, 369, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 387, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 405, 4, "," )
Symbol(44, 409, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 426, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 444, 4, "a" )
Symbol(73, 448, 6, <det> )
Symbol(2, 454, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 472, 11, "<macska>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 495, 9, "macska" )
Symbol(15, 504, 4, <n> )
Symbol(87, 508, 5, <sg> )
Symbol(55, 513, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 531, 11, "<alszik>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 554, 9, "alszik" )
Symbol(38, 563, 8, <vblex> )
Symbol(37, 571, 7, <pres> )
Symbol(87, 578, 5, <sg> )
Symbol(2, 583, 6, <s3p> )
Symbol(2, 589, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 607, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 625, 4, "." )
Symbol(64, 629, 7, <sent> )
Symbol(2, 636, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<anyjuk>" #BOC# | #0# "anya" <n> <sg> <px3ps> <nom> | #0# "anyjuk" <n> <sg> <nom> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<házban>" #BOC# | #0# "ház" <n> <sg> <ine> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<macskával>" #BOC# | #0# "macska" <n> <sg> <ins> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<kinéz>" #BOC# | #0# "kinéz" <vblex> <pres> <sg> <s3p> <ind> | #0# "ki" <prevb> + "néz" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<ablakon>" #BOC# | #0# "ablak" <n> <sg> <ses> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<látja>" #BOC# | #0# "lát" <vblex> <pres> <sg> <s3p> <def> | #0# "lát" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<Jancsit>" #BOC# | #0# "Jancsi" <np> <sg> <acc> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<Marit>" #BOC# | #0# "mari" <adj> <sg> <acc> | #0# "mari" <n> <sg> <acc> | #0# "Mari" <np> <sg> <acc> | #0# "Marit" <np> <sg> <nom> | #EOC# $0$ "<játszani>" #BOC# | #0# "játszik" <vblex> <inf> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_224_T_1


LRS T1:
Name: R_1_224_T_1
arity: 2
arccount: 246
statecount: 59
linecount: 247
finalcount: 4
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 16 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 45 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 71 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 16 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 45 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 71 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 29 -- 
  out: 15 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 3
  in: 3 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 2 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 15 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 16 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 4
  in: 29 -- 
  out: 22 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 45 -- 
  out: 19 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 71 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 15 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 5
  in: 16 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 5
  in: 29 -- 
  out: 22 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 5
  in: 45 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 71 -- 
  out: 18 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 6
  in: 8 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 2 -- 
  out: 17 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 7
  in: 15 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 7
  in: 16 -- 
  out: 21 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 7
  in: 29 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 7
  in: 45 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 7
  in: 71 -- 
  out: 18 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 8
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 9
  in: 3 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 10
  in: 10 -- 
  out: 4 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(38):
  state_no: 11
  in: 2 -- 
  out: 9 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 7 -- 
  out: 10 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 15 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 16 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 45 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 71 -- 
  out: 11 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 29 -- 
  out: 15 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 13
  in: 3 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 14
  in: 2 -- 
  out: 17 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 14
  in: 15 -- 
  out: 20 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 14
  in: 16 -- 
  out: 21 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 14
  in: 29 -- 
  out: 22 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 14
  in: 45 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 14
  in: 71 -- 
  out: 18 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 15
  in: 2 -- 
  out: 17 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 15 -- 
  out: 20 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 16 -- 
  out: 21 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 22 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 45 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 71 -- 
  out: 18 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 16
  in: 2 -- 
  out: 17 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 15 -- 
  out: 20 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 16 -- 
  out: 21 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 22 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 45 -- 
  out: 19 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 71 -- 
  out: 18 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 3 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 8 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 2 -- 
  out: 17 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 15 -- 
  out: 20 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 16 -- 
  out: 21 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 29 -- 
  out: 22 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 18
  in: 45 -- 
  out: 19 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 71 -- 
  out: 18 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 3 -- 
  out: 16 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 8 -- 
  out: 30 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 20
  in: 2 -- 
  out: 17 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 15 -- 
  out: 20 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 20
  in: 16 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 20
  in: 29 -- 
  out: 22 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 20
  in: 45 -- 
  out: 19 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 71 -- 
  out: 18 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 2 -- 
  out: 17 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 15 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 21
  in: 16 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 21
  in: 29 -- 
  out: 22 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 45 -- 
  out: 19 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 71 -- 
  out: 18 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 10 -- 
  out: 4 -- 
  target: 25
  final_state: 1
  start_state: 0
Elem(87):
  state_no: 23
  in: 3 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 23
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 24
  in: 3 -- 
  out: 16 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 24
  in: 8 -- 
  out: 30 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 25
  in: 2 -- 
  out: 9 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 7 -- 
  out: 10 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 15 -- 
  out: 13 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 25
  in: 16 -- 
  out: 14 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 25
  in: 45 -- 
  out: 12 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 25
  in: 71 -- 
  out: 11 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 10 -- 
  out: 4 -- 
  target: 28
  final_state: 1
  start_state: 0
Elem(98):
  state_no: 27
  in: 29 -- 
  out: 15 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 28
  in: 2 -- 
  out: 9 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 28
  in: 7 -- 
  out: 10 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 28
  in: 15 -- 
  out: 13 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 16 -- 
  out: 14 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 45 -- 
  out: 12 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 71 -- 
  out: 11 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 29
  in: 3 -- 
  out: 108 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 30
  in: 29 -- 
  out: 15 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 31
  in: 2 -- 
  out: 110 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 31
  in: 15 -- 
  out: 113 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 31
  in: 16 -- 
  out: 114 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 31
  in: 29 -- 
  out: 115 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 31
  in: 45 -- 
  out: 112 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 31
  in: 71 -- 
  out: 111 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 32
  in: 3 -- 
  out: 108 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 33
  in: 2 -- 
  out: 117 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 33
  in: 15 -- 
  out: 113 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 33
  in: 16 -- 
  out: 114 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 33
  in: 29 -- 
  out: 115 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 33
  in: 45 -- 
  out: 119 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 33
  in: 71 -- 
  out: 18 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 34
  in: 3 -- 
  out: 108 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 34
  in: 8 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 35
  in: 2 -- 
  out: 110 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 35
  in: 15 -- 
  out: 113 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 35
  in: 16 -- 
  out: 114 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 35
  in: 29 -- 
  out: 115 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 35
  in: 45 -- 
  out: 112 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 35
  in: 71 -- 
  out: 111 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 36
  in: 2 -- 
  out: 17 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 36
  in: 15 -- 
  out: 20 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 36
  in: 16 -- 
  out: 21 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 36
  in: 29 -- 
  out: 22 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 36
  in: 45 -- 
  out: 19 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 36
  in: 71 -- 
  out: 18 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 37
  in: 2 -- 
  out: 110 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 37
  in: 15 -- 
  out: 113 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 37
  in: 16 -- 
  out: 114 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 37
  in: 29 -- 
  out: 115 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 37
  in: 45 -- 
  out: 112 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 37
  in: 71 -- 
  out: 111 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 38
  in: 2 -- 
  out: 110 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 38
  in: 15 -- 
  out: 113 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 38
  in: 16 -- 
  out: 114 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 38
  in: 29 -- 
  out: 115 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 38
  in: 45 -- 
  out: 112 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 38
  in: 71 -- 
  out: 111 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 39
  in: 2 -- 
  out: 117 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 39
  in: 15 -- 
  out: 113 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 39
  in: 16 -- 
  out: 114 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 39
  in: 29 -- 
  out: 115 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 39
  in: 45 -- 
  out: 119 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 39
  in: 71 -- 
  out: 18 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 40
  in: 3 -- 
  out: 108 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 40
  in: 8 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 41
  in: 3 -- 
  out: 157 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 41
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 42
  in: 2 -- 
  out: 117 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 42
  in: 15 -- 
  out: 113 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 42
  in: 16 -- 
  out: 114 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 42
  in: 29 -- 
  out: 115 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 42
  in: 45 -- 
  out: 119 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 42
  in: 71 -- 
  out: 18 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 43
  in: 2 -- 
  out: 117 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 43
  in: 15 -- 
  out: 113 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 43
  in: 16 -- 
  out: 114 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 43
  in: 29 -- 
  out: 115 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 43
  in: 45 -- 
  out: 119 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 43
  in: 71 -- 
  out: 18 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 44
  in: 3 -- 
  out: 108 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 44
  in: 8 -- 
  out: 30 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 45
  in: 2 -- 
  out: 17 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 45
  in: 15 -- 
  out: 20 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 45
  in: 16 -- 
  out: 21 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 45
  in: 29 -- 
  out: 22 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 45
  in: 45 -- 
  out: 19 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 45
  in: 71 -- 
  out: 18 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 46
  in: 2 -- 
  out: 110 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 46
  in: 15 -- 
  out: 113 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 46
  in: 16 -- 
  out: 114 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 46
  in: 29 -- 
  out: 115 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 46
  in: 45 -- 
  out: 112 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 46
  in: 71 -- 
  out: 111 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 47
  in: 2 -- 
  out: 185 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 47
  in: 15 -- 
  out: 188 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 47
  in: 16 -- 
  out: 189 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 47
  in: 29 -- 
  out: 190 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 47
  in: 45 -- 
  out: 187 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 47
  in: 71 -- 
  out: 186 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 48
  in: 2 -- 
  out: 17 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 48
  in: 15 -- 
  out: 20 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 48
  in: 16 -- 
  out: 21 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 48
  in: 29 -- 
  out: 22 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 48
  in: 45 -- 
  out: 19 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 48
  in: 71 -- 
  out: 18 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 49
  in: 2 -- 
  out: 110 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 49
  in: 15 -- 
  out: 113 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 49
  in: 16 -- 
  out: 114 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 49
  in: 29 -- 
  out: 115 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 49
  in: 45 -- 
  out: 112 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 49
  in: 71 -- 
  out: 111 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 50
  in: 3 -- 
  out: 157 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 50
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 51
  in: 2 -- 
  out: 117 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 51
  in: 15 -- 
  out: 113 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 51
  in: 16 -- 
  out: 114 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 51
  in: 29 -- 
  out: 115 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 51
  in: 45 -- 
  out: 119 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 51
  in: 71 -- 
  out: 18 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 52
  in: 2 -- 
  out: 211 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 52
  in: 15 -- 
  out: 188 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 52
  in: 16 -- 
  out: 189 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 52
  in: 29 -- 
  out: 190 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 52
  in: 45 -- 
  out: 213 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 52
  in: 71 -- 
  out: 18 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 53
  in: 3 -- 
  out: 157 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 53
  in: 8 -- 
  out: 30 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 54
  in: 2 -- 
  out: 117 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 54
  in: 15 -- 
  out: 113 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 54
  in: 16 -- 
  out: 114 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 54
  in: 29 -- 
  out: 115 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 54
  in: 45 -- 
  out: 119 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 54
  in: 71 -- 
  out: 18 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 55
  in: 2 -- 
  out: 185 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 55
  in: 15 -- 
  out: 188 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 55
  in: 16 -- 
  out: 189 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 55
  in: 29 -- 
  out: 190 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 55
  in: 45 -- 
  out: 187 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 55
  in: 71 -- 
  out: 186 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 56
  in: 2 -- 
  out: 185 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 56
  in: 15 -- 
  out: 188 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 56
  in: 16 -- 
  out: 189 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 56
  in: 29 -- 
  out: 190 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 56
  in: 45 -- 
  out: 187 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 56
  in: 71 -- 
  out: 186 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 57
  in: 2 -- 
  out: 211 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 57
  in: 15 -- 
  out: 188 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 57
  in: 16 -- 
  out: 189 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 57
  in: 29 -- 
  out: 190 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 57
  in: 45 -- 
  out: 213 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 57
  in: 71 -- 
  out: 18 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 58
  in: 2 -- 
  out: 211 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 58
  in: 15 -- 
  out: 188 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 58
  in: 16 -- 
  out: 189 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 58
  in: 29 -- 
  out: 190 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 58
  in: 45 -- 
  out: 213 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 58
  in: 71 -- 
  out: 18 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(246):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(271): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 90, 2, | )
Symbol(3, 92, 4, #0# )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 118, 2, | )
Symbol(3, 120, 4, #0# )
Symbol(2, 124, 4, "a" )
Symbol(73, 128, 6, <det> )
Symbol(2, 134, 6, <def> )
Symbol(29, 140, 2, | )
Symbol(8, 142, 6, #EOC# )
Symbol(10, 148, 4, $0$ )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 163, 6, #BOC# )
Symbol(29, 169, 2, | )
Symbol(3, 171, 4, #0# )
Symbol(2, 175, 7, "anya" )
Symbol(15, 182, 4, <n> )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 205, 2, | )
Symbol(3, 207, 4, #0# )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 220, 4, <n> )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 235, 2, | )
Symbol(8, 237, 6, #EOC# )
Symbol(10, 243, 4, $0$ )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 253, 6, #BOC# )
Symbol(29, 259, 2, | )
Symbol(3, 261, 4, #0# )
Symbol(2, 265, 4, "a" )
Symbol(73, 269, 6, <det> )
Symbol(2, 275, 6, <def> )
Symbol(29, 281, 2, | )
Symbol(8, 283, 6, #EOC# )
Symbol(10, 289, 4, $0$ )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 305, 6, #BOC# )
Symbol(29, 311, 2, | )
Symbol(3, 313, 4, #0# )
Symbol(2, 317, 7, "ház" )
Symbol(15, 324, 4, <n> )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 339, 2, | )
Symbol(8, 341, 6, #EOC# )
Symbol(10, 347, 4, $0$ )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 359, 6, #BOC# )
Symbol(29, 365, 2, | )
Symbol(3, 367, 4, #0# )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 409, 2, | )
Symbol(8, 411, 6, #EOC# )
Symbol(10, 417, 4, $0$ )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 427, 6, #BOC# )
Symbol(29, 433, 2, | )
Symbol(3, 435, 4, #0# )
Symbol(2, 439, 4, "a" )
Symbol(73, 443, 6, <det> )
Symbol(2, 449, 6, <def> )
Symbol(29, 455, 2, | )
Symbol(8, 457, 6, #EOC# )
Symbol(10, 463, 4, $0$ )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 482, 6, #BOC# )
Symbol(29, 488, 2, | )
Symbol(3, 490, 4, #0# )
Symbol(2, 494, 9, "macska" )
Symbol(15, 503, 4, <n> )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 518, 2, | )
Symbol(8, 520, 6, #EOC# )
Symbol(10, 526, 4, $0$ )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 536, 6, #BOC# )
Symbol(29, 542, 2, | )
Symbol(3, 544, 4, #0# )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 557, 2, | )
Symbol(8, 559, 6, #EOC# )
Symbol(10, 565, 4, $0$ )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 580, 6, #BOC# )
Symbol(29, 586, 2, | )
Symbol(3, 588, 4, #0# )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 633, 2, | )
Symbol(3, 635, 4, #0# )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 693, 2, | )
Symbol(8, 695, 6, #EOC# )
Symbol(10, 701, 4, $0$ )
Symbol(72, 705, 7, "<az>" )
Symbol(7, 712, 6, #BOC# )
Symbol(29, 718, 2, | )
Symbol(3, 720, 4, #0# )
Symbol(75, 724, 5, "az" )
Symbol(2, 729, 9, <predet> )
Symbol(87, 738, 5, <sg> )
Symbol(55, 743, 6, <nom> )
Symbol(29, 749, 2, | )
Symbol(3, 751, 4, #0# )
Symbol(75, 755, 5, "az" )
Symbol(57, 760, 6, <prn> )
Symbol(87, 766, 5, <sg> )
Symbol(55, 771, 6, <nom> )
Symbol(29, 777, 2, | )
Symbol(3, 779, 4, #0# )
Symbol(2, 783, 4, "a" )
Symbol(73, 787, 6, <det> )
Symbol(2, 793, 6, <def> )
Symbol(29, 799, 2, | )
Symbol(8, 801, 6, #EOC# )
Symbol(10, 807, 4, $0$ )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 823, 6, #BOC# )
Symbol(29, 829, 2, | )
Symbol(3, 831, 4, #0# )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 843, 4, <n> )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 858, 2, | )
Symbol(8, 860, 6, #EOC# )
Symbol(10, 866, 4, $0$ )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 878, 6, #BOC# )
Symbol(29, 884, 2, | )
Symbol(3, 886, 4, #0# )
Symbol(2, 890, 6, "és" )
Symbol(45, 896, 9, <cnjcoo> )
Symbol(29, 905, 2, | )
Symbol(8, 907, 6, #EOC# )
Symbol(10, 913, 4, $0$ )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 928, 6, #BOC# )
Symbol(29, 934, 2, | )
Symbol(3, 936, 4, #0# )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 979, 2, | )
Symbol(3, 981, 4, #0# )
Symbol(2, 985, 7, "lát" )
Symbol(15, 992, 4, <n> )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 1,015, 2, | )
Symbol(8, 1,017, 6, #EOC# )
Symbol(10, 1,023, 4, $0$ )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 1,039, 6, #BOC# )
Symbol(29, 1,045, 2, | )
Symbol(3, 1,047, 4, #0# )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 1,060, 5, <np> )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 1,070, 6, <acc> )
Symbol(29, 1,076, 2, | )
Symbol(8, 1,078, 6, #EOC# )
Symbol(10, 1,084, 4, $0$ )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 1,096, 6, #BOC# )
Symbol(29, 1,102, 2, | )
Symbol(3, 1,104, 4, #0# )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 1,114, 9, <cnjcoo> )
Symbol(29, 1,123, 2, | )
Symbol(8, 1,125, 6, #EOC# )
Symbol(10, 1,131, 4, $0$ )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 1,145, 6, #BOC# )
Symbol(29, 1,151, 2, | )
Symbol(3, 1,153, 4, #0# )
Symbol(2, 1,157, 7, "mari" )
Symbol(53, 1,164, 6, <adj> )
Symbol(87, 1,170, 5, <sg> )
Symbol(71, 1,175, 6, <acc> )
Symbol(29, 1,181, 2, | )
Symbol(3, 1,183, 4, #0# )
Symbol(2, 1,187, 7, "mari" )
Symbol(15, 1,194, 4, <n> )
Symbol(87, 1,198, 5, <sg> )
Symbol(71, 1,203, 6, <acc> )
Symbol(29, 1,209, 2, | )
Symbol(3, 1,211, 4, #0# )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 1,222, 5, <np> )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 1,232, 6, <acc> )
Symbol(29, 1,238, 2, | )
Symbol(3, 1,240, 4, #0# )
Symbol(2, 1,244, 8, "Marit" )
Symbol(16, 1,252, 5, <np> )
Symbol(87, 1,257, 5, <sg> )
Symbol(55, 1,262, 6, <nom> )
Symbol(29, 1,268, 2, | )
Symbol(8, 1,270, 6, #EOC# )
Symbol(10, 1,276, 4, $0$ )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 1,294, 6, #BOC# )
Symbol(29, 1,300, 2, | )
Symbol(3, 1,302, 4, #0# )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 1,348, 2, | )
Symbol(8, 1,350, 6, #EOC# )
Symbol(10, 1,356, 4, $0$ )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 1,366, 6, #BOC# )
Symbol(29, 1,372, 2, | )
Symbol(3, 1,374, 4, #0# )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 1,395, 2, | )
Symbol(8, 1,397, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 53 87 71 29 3 2 15 87 71 29 3 82 16 87 71 29 3 2 16 87 55 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 20
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 20
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 20
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 20
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 20
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 18, signum = 45, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 20
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 16, signum = 16, q = 4, out = 21
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 25, signum = 71, q = 5, out = 18
trans_offset 31, signum = 29, q = 7, out = 22
trans_offset 36, signum = 8, q = 9, out = 30
trans_offset 37, signum = 10, q = 10, out = 4
trans_offset 38, signum = 2, q = 11, out = 9
trans_offset 39, signum = 7, q = 11, out = 10
trans_offset 44, signum = 29, q = 12, out = 15
trans_offset 45, signum = 3, q = 13, out = 16
trans_offset 46, signum = 2, q = 14, out = 17
trans_offset 50, signum = 45, q = 14, out = 19
trans_offset 55, signum = 29, q = 15, out = 22
trans_offset 73, signum = 8, q = 19, out = 30
trans_offset 86, signum = 10, q = 22, out = 4
trans_offset 91, signum = 2, q = 25, out = 9
trans_offset 92, signum = 7, q = 25, out = 10
trans_offset 98, signum = 29, q = 27, out = 15
trans_offset 105, signum = 3, q = 29, out = 108
trans_offset 107, signum = 2, q = 31, out = 110
trans_offset 107, signum = 2, q = 31, out = 110
trans_offset 107, signum = 2, q = 31, out = 110
trans_offset 112, signum = 71, q = 31, out = 111
trans_offset 110, signum = 29, q = 31, out = 115
trans_offset 120, signum = 3, q = 34, out = 108
trans_offset 134, signum = 2, q = 37, out = 110
trans_offset 135, signum = 15, q = 37, out = 113
trans_offset 156, signum = 2, q = 42, out = 117
trans_offset 161, signum = 71, q = 42, out = 18
trans_offset 131, signum = 29, q = 36, out = 22
trans_offset 154, signum = 3, q = 41, out = 157
trans_offset 182, signum = 2, q = 47, out = 185
trans_offset 184, signum = 16, q = 47, out = 189
trans_offset 208, signum = 2, q = 52, out = 211
trans_offset 213, signum = 71, q = 52, out = 18
trans_offset 131, signum = 29, q = 36, out = 22
trans_offset 154, signum = 3, q = 41, out = 157
trans_offset 182, signum = 2, q = 47, out = 185
trans_offset 184, signum = 16, q = 47, out = 189
trans_offset 208, signum = 2, q = 52, out = 211
trans_offset 208, signum = 2, q = 52, out = 211
trans_offset 211, signum = 29, q = 52, out = 190
trans_offset 155, signum = 8, q = 41, out = 30
trans_offset 37, signum = 10, q = 10, out = 4
trans_offset 38, signum = 2, q = 11, out = 9
trans_offset 39, signum = 7, q = 11, out = 10
trans_offset 44, signum = 29, q = 12, out = 15
trans_offset 45, signum = 3, q = 13, out = 16
trans_offset 46, signum = 2, q = 14, out = 17
trans_offset 46, signum = 2, q = 14, out = 17
trans_offset 46, signum = 2, q = 14, out = 17
trans_offset 46, signum = 2, q = 14, out = 17
trans_offset 46, signum = 2, q = 14, out = 17
trans_offset 46, signum = 2, q = 14, out = 17
trans_offset 49, signum = 29, q = 14, out = 22
trans_offset 65, signum = 8, q = 17, out = 30
trans_offset 34, signum = 10, q = 8, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30

Intermediate is(271): 
4 9 10 15 16 17 17 22 30 4 9 10 15 16 17 17 17 17 22 16 17 17 17 17 22 16 17 17 17 22 30 4 9 10 15 16 17 20 17 17 17 22 16 17 20 17 17 22 30 4 9 10 15 16 17 17 17 22 30 4 9 10 15 16 17 20 17 17 22 30 4 9 10 15 16 17 17 17 17 17 17 22 30 4 9 10 15 16 17 17 17 22 30 4 9 10 15 16 17 20 17 17 22 30 4 9 10 15 16 17 17 22 30 4 9 10 15 16 17 17 17 17 17 17 22 16 17 17 17 17 17 17 17 17 17 22 30 4 9 10 15 16 17 17 17 17 22 16 17 17 17 17 22 16 17 17 17 22 30 4 9 10 15 16 17 20 17 17 22 30 4 9 10 15 16 17 19 22 30 4 9 10 15 16 17 17 17 17 17 17 22 16 17 20 17 17 17 22 30 4 9 10 15 16 17 21 17 18 22 30 4 9 10 15 16 17 19 22 30 4 9 10 15 108 110 110 110 111 115 108 110 113 117 18 22 157 185 189 211 18 22 157 185 189 211 211 190 30 4 9 10 15 16 17 17 17 17 17 17 22 30 4 9 10 15 16 17 17 17 22 30 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 24, q = 2, out = 0
trans_offset 24, q = 2, out = 0
trans_offset 23, q = 2, out = 0
trans_offset 19, q = 2, out = 0
trans_offset 18, q = 2, out = 0
trans_offset 27, q = 3, out = 29
trans_offset 55, q = 5, out = 71
trans_offset 50, q = 4, out = 2
trans_offset 49, q = 4, out = 16
trans_offset 90, q = 6, out = 2
trans_offset 89, q = 6, out = 3
trans_offset 104, q = 8, out = 29
trans_offset 116, q = 10, out = 71
trans_offset 175, q = 13, out = 2
trans_offset 173, q = 13, out = 15
trans_offset 82, q = 6, out = 2
trans_offset 81, q = 6, out = 3
trans_offset 105, q = 8, out = 0
trans_offset 122, q = 10, out = 0
trans_offset 170, q = 13, out = 0
trans_offset 170, q = 13, out = 0
trans_offset 170, q = 13, out = 0
trans_offset 169, q = 13, out = 0
trans_offset 103, q = 8, out = 29
trans_offset 113, q = 10, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 45
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 71
trans_offset 31, q = 4, out = 2
trans_offset 35, q = 4, out = 16
trans_offset 76, q = 6, out = 2
trans_offset 75, q = 6, out = 3
trans_offset 103, q = 8, out = 29
trans_offset 113, q = 10, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 45
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 54, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10
trans_offset 112, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 52, q = 5, out = 7
trans_offset 98, q = 7, out = 2
trans_offset 97, q = 7, out = 10

Output is(259): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 128, 6, <det> )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 0, 0, )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 269, 6, <det> )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 443, 6, <det> )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 705, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 724, 5, "az" )
Symbol(2, 729, 9, <predet> )
Symbol(87, 738, 5, <sg> )
Symbol(55, 743, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 755, 5, "az" )
Symbol(57, 760, 6, <prn> )
Symbol(87, 766, 5, <sg> )
Symbol(55, 771, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 787, 6, <det> )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,187, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 1,198, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 15 87 71 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_43_T_1


LRS T1:
Name: R_1_43_T_1
arity: 2
arccount: 152
statecount: 39
linecount: 153
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 72 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 73 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 2
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 2
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 72 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 2
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 3
  in: 2 -- 
  out: 9 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 7 -- 
  out: 11 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 3
  in: 15 -- 
  out: 14 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 3
  in: 53 -- 
  out: 12 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 3
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 73 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 29 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 29 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 3 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 8
  in: 2 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 36 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 72 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 73 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 2 -- 
  out: 37 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 9
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 9
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 9
  in: 72 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 9
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 2 -- 
  out: 31 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 72 -- 
  out: 32 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 12
  in: 3 -- 
  out: 30 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 14
  in: 3 -- 
  out: 54 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 72 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 62 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 72 -- 
  out: 63 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 2 -- 
  out: 31 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 29 -- 
  out: 36 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 72 -- 
  out: 32 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 17
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 3 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 18
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 2 -- 
  out: 62 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 72 -- 
  out: 63 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 19
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 10 -- 
  out: 5 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 21
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 21
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 22
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 22
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 22
  in: 72 -- 
  out: 10 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 22
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 2 -- 
  out: 9 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 7 -- 
  out: 11 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 23
  in: 15 -- 
  out: 14 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 23
  in: 53 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 23
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 23
  in: 73 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 29 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 25
  in: 29 -- 
  out: 27 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 27
  in: 3 -- 
  out: 30 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 2 -- 
  out: 31 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 29 -- 
  out: 36 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 72 -- 
  out: 32 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 73 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 2 -- 
  out: 37 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 72 -- 
  out: 38 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 31 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 29 -- 
  out: 36 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 72 -- 
  out: 32 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 31
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 3 -- 
  out: 30 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 3 -- 
  out: 54 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 34
  in: 2 -- 
  out: 37 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 34
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 72 -- 
  out: 38 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 35
  in: 2 -- 
  out: 62 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 35
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 35
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 35
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 72 -- 
  out: 63 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 36
  in: 2 -- 
  out: 31 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 36
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 36
  in: 29 -- 
  out: 36 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 72 -- 
  out: 32 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 37
  in: 3 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 37
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 38
  in: 2 -- 
  out: 62 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 38
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 38
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 38
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 38
  in: 72 -- 
  out: 63 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(152):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(259): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 128, 6, <det> )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 0, 0, )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 269, 6, <det> )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 443, 6, <det> )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 705, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 724, 5, "az" )
Symbol(2, 729, 9, <predet> )
Symbol(87, 738, 5, <sg> )
Symbol(55, 743, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 755, 5, "az" )
Symbol(57, 760, 6, <prn> )
Symbol(87, 766, 5, <sg> )
Symbol(55, 771, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 787, 6, <det> )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,187, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 1,198, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 15 87 71 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 33, signum = 73, q = 8, out = 34
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 33, signum = 73, q = 8, out = 34
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 33, signum = 73, q = 8, out = 34
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 10, signum = 72, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 58, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44

Intermediate is(259): 
5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 31 31 36 29 31 31 31 31 36 29 31 34 31 36 44 5 9 11 27 29 31 35 31 31 31 36 29 31 35 31 31 36 44 5 9 11 27 29 31 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 29 31 31 31 31 31 31 31 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 29 31 35 31 31 31 36 44 5 9 11 27 29 31 31 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 35 31 31 36 29 31 31 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 31 31 36 44 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 110, q = 14, out = 3
trans_offset 126, q = 15, out = 29
trans_offset 162, q = 18, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 58, q = 6, out = 29
trans_offset 70, q = 8, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 110, q = 14, out = 3
trans_offset 126, q = 15, out = 29
trans_offset 162, q = 18, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 72
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 148, q = 17, out = 2
trans_offset 146, q = 17, out = 3
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 148, q = 17, out = 2
trans_offset 146, q = 17, out = 3
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 58, q = 6, out = 29
trans_offset 70, q = 8, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 30, q = 4, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 148, q = 17, out = 2
trans_offset 146, q = 17, out = 3
trans_offset 200, q = 21, out = 29
trans_offset 227, q = 24, out = 2
trans_offset 260, q = 26, out = 2
trans_offset 260, q = 26, out = 2
trans_offset 260, q = 26, out = 2
trans_offset 258, q = 26, out = 3
trans_offset 200, q = 21, out = 29
trans_offset 227, q = 24, out = 2
trans_offset 260, q = 26, out = 2
trans_offset 260, q = 26, out = 2
trans_offset 260, q = 26, out = 2
trans_offset 258, q = 26, out = 3
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(247): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 0, 0, )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,187, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 1,198, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 15 87 71 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_44_T_1


LRS T1:
Name: R_1_44_T_1
arity: 2
arccount: 152
statecount: 39
linecount: 153
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 73 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 74 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 74 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 2
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 2
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 2
  in: 74 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 3
  in: 2 -- 
  out: 9 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 7 -- 
  out: 11 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 3
  in: 15 -- 
  out: 14 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 3
  in: 53 -- 
  out: 12 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 3
  in: 73 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 74 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 29 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 29 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 3 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 8
  in: 2 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 36 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 73 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 74 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 2 -- 
  out: 37 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 9
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 9
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 9
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 9
  in: 74 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 2 -- 
  out: 31 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 74 -- 
  out: 32 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 12
  in: 3 -- 
  out: 30 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 14
  in: 3 -- 
  out: 54 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 74 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 62 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 74 -- 
  out: 63 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 2 -- 
  out: 31 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 29 -- 
  out: 36 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 17
  in: 74 -- 
  out: 32 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 3 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 18
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 2 -- 
  out: 62 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 19
  in: 74 -- 
  out: 63 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 10 -- 
  out: 5 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 21
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 21
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 74 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 22
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 22
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 22
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 22
  in: 74 -- 
  out: 10 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 2 -- 
  out: 9 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 7 -- 
  out: 11 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 23
  in: 15 -- 
  out: 14 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 23
  in: 53 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 23
  in: 73 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 23
  in: 74 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 29 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 25
  in: 29 -- 
  out: 27 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 27
  in: 3 -- 
  out: 30 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 2 -- 
  out: 31 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 29 -- 
  out: 36 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 73 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 74 -- 
  out: 32 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 2 -- 
  out: 37 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 74 -- 
  out: 38 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 31 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 29 -- 
  out: 36 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 31
  in: 74 -- 
  out: 32 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 3 -- 
  out: 30 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 3 -- 
  out: 54 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 34
  in: 2 -- 
  out: 37 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 34
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 74 -- 
  out: 38 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 35
  in: 2 -- 
  out: 62 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 35
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 35
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 35
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 74 -- 
  out: 63 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 36
  in: 2 -- 
  out: 31 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 36
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 36
  in: 29 -- 
  out: 36 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 74 -- 
  out: 32 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 37
  in: 3 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 37
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 38
  in: 2 -- 
  out: 62 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 38
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 38
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 38
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 38
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 74 -- 
  out: 63 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(152):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(247): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 0, 0, )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,187, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 1,198, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 15 87 71 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 11, signum = 74, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 57, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 32, signum = 73, q = 8, out = 34
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 32, signum = 73, q = 8, out = 34
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 32, signum = 73, q = 8, out = 34
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44

Intermediate is(247): 
5 9 11 27 29 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 31 36 29 31 35 31 31 36 44 5 9 11 27 29 31 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 29 31 31 31 31 31 31 31 31 31 36 44 5 9 11 27 29 31 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 29 31 35 31 31 31 36 44 5 9 11 27 29 31 31 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 35 31 31 36 29 31 31 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 31 31 36 44 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 110, q = 14, out = 3
trans_offset 126, q = 15, out = 29
trans_offset 162, q = 18, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 58, q = 6, out = 29
trans_offset 70, q = 8, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 110, q = 14, out = 3
trans_offset 126, q = 15, out = 29
trans_offset 162, q = 18, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 148, q = 17, out = 2
trans_offset 146, q = 17, out = 3
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 148, q = 17, out = 2
trans_offset 146, q = 17, out = 3
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 148, q = 17, out = 2
trans_offset 146, q = 17, out = 3
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 58, q = 6, out = 29
trans_offset 70, q = 8, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 30, q = 4, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 74
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(235): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 0, 0, )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,187, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 1,198, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 15 87 71 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_87_T_1


LRS T1:
Name: R_1_87_T_1
arity: 2
arccount: 70
statecount: 25
linecount: 71
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 80 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 80 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 12 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 13 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 18
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 16
  in: 2 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 50 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 17
  in: 2 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 17
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 17
  in: 29 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 18
  in: 2 -- 
  out: 7 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 18
  in: 7 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 18
  in: 16 -- 
  out: 10 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 80 -- 
  out: 9 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 19
  in: 29 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 2 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 16 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 21
  in: 29 -- 
  out: 24 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 21
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 16 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 22
  in: 29 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 22
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 3 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(235): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 0, 0, )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,187, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 1,198, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 15 87 71 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 80, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 43, signum = 10, q = 15, out = 4
trans_offset 52, signum = 2, q = 18, out = 7
trans_offset 53, signum = 7, q = 18, out = 8
trans_offset 56, signum = 29, q = 19, out = 11
trans_offset 57, signum = 3, q = 20, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 67, signum = 8, q = 23, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 16, q = 4, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 33, signum = 16, q = 11, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(235): 
4 7 8 11 12 13 14 16 26 4 7 8 11 60 21 21 21 24 26 4 7 8 11 12 13 13 13 13 13 16 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 12 13 13 13 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 12 13 13 13 13 13 16 26 4 7 8 11 12 13 15 21 21 24 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 15 21 21 24 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 13, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10

Output is(229): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 0, 0, )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_3_301_T_1


LRS T1:
Name: R_3_301_T_1
arity: 2
arccount: 100
statecount: 29
linecount: 101
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 44 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 90 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 91 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 44 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 90 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 91 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 44 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 90 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 91 -- 
  out: 18 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 24 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 44 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 90 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 91 -- 
  out: 23 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 2 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 29 -- 
  out: 19 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 6
  in: 44 -- 
  out: 17 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 6
  in: 90 -- 
  out: 16 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 91 -- 
  out: 18 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 3 -- 
  out: 30 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 8 -- 
  out: 31 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 20 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 44 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 90 -- 
  out: 16 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 91 -- 
  out: 23 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 3 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 9
  in: 8 -- 
  out: 31 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 3 -- 
  out: 30 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 10
  in: 8 -- 
  out: 31 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 2 -- 
  out: 41 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 44 -- 
  out: 43 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 90 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 91 -- 
  out: 44 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 13
  in: 3 -- 
  out: 14 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 13
  in: 8 -- 
  out: 31 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 14
  in: 2 -- 
  out: 15 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 14
  in: 29 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 14
  in: 44 -- 
  out: 17 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 14
  in: 90 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 14
  in: 91 -- 
  out: 18 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 15
  in: 2 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 15
  in: 29 -- 
  out: 19 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 44 -- 
  out: 43 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 90 -- 
  out: 42 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 91 -- 
  out: 44 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 16
  in: 10 -- 
  out: 5 -- 
  target: 20
  final_state: 1
  start_state: 0
Elem(57):
  state_no: 17
  in: 2 -- 
  out: 60 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 17
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 17
  in: 44 -- 
  out: 60 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 17
  in: 90 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 17
  in: 91 -- 
  out: 60 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 18
  in: 2 -- 
  out: 15 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 18
  in: 29 -- 
  out: 19 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 18
  in: 44 -- 
  out: 17 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 90 -- 
  out: 16 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 91 -- 
  out: 18 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 19
  in: 2 -- 
  out: 60 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 19
  in: 29 -- 
  out: 64 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 19
  in: 44 -- 
  out: 60 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 90 -- 
  out: 42 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 91 -- 
  out: 60 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 20
  in: 2 -- 
  out: 8 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 20
  in: 7 -- 
  out: 10 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 20
  in: 44 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 90 -- 
  out: 9 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 20
  in: 91 -- 
  out: 12 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 21
  in: 29 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 3 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 23
  in: 2 -- 
  out: 82 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 23
  in: 44 -- 
  out: 84 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 90 -- 
  out: 83 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 91 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 24
  in: 2 -- 
  out: 82 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 24
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 24
  in: 44 -- 
  out: 84 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 90 -- 
  out: 83 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 91 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 25
  in: 2 -- 
  out: 82 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 25
  in: 29 -- 
  out: 19 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 25
  in: 44 -- 
  out: 84 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 90 -- 
  out: 83 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 91 -- 
  out: 85 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 26
  in: 3 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 26
  in: 8 -- 
  out: 31 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 27
  in: 3 -- 
  out: 81 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 27
  in: 8 -- 
  out: 31 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 28
  in: 3 -- 
  out: 81 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 28
  in: 8 -- 
  out: 31 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(100):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(229): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(90, 211, 9, "anyjuk" )
Symbol(15, 0, 0, )
Symbol(87, 224, 5, <sg> )
Symbol(55, 229, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 552, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 3 90 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 41, signum = 90, q = 11, out = 42
trans_offset 57, signum = 2, q = 17, out = 60
trans_offset 57, signum = 2, q = 17, out = 60
trans_offset 57, signum = 2, q = 17, out = 60
trans_offset 58, signum = 29, q = 17, out = 64
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 14, signum = 44, q = 4, out = 17
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 39, signum = 29, q = 11, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 38, signum = 2, q = 11, out = 41
trans_offset 39, signum = 29, q = 11, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31
trans_offset 43, signum = 10, q = 12, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 28, signum = 8, q = 7, out = 31

Intermediate is(229): 
5 8 10 13 14 15 15 19 31 5 8 10 13 14 15 15 15 19 31 5 8 10 13 14 15 15 15 15 15 19 30 42 60 60 60 64 31 5 8 10 13 14 15 15 15 19 31 5 8 10 13 14 15 15 15 15 19 31 5 8 10 13 14 15 15 15 15 15 15 19 31 5 8 10 13 14 15 15 15 19 31 5 8 10 13 14 15 15 15 15 19 31 5 8 10 13 14 15 17 19 31 5 8 10 13 14 15 15 15 15 15 15 19 30 41 41 41 41 41 41 41 41 41 19 31 5 8 10 13 14 15 15 15 19 31 5 8 10 13 14 15 15 15 15 19 31 5 8 10 13 14 15 15 19 31 5 8 10 13 14 15 15 15 15 15 15 19 30 41 41 41 41 41 19 31 5 8 10 13 14 15 15 15 15 19 31 5 8 10 13 14 15 15 19 31 5 8 10 13 14 15 15 15 15 19 31 5 8 10 13 14 15 15 15 15 15 15 19 31 5 8 10 13 14 15 15 15 19 31 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 43, q = 4, out = 29
trans_offset 52, q = 6, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 90, q = 8, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 43, q = 4, out = 29
trans_offset 52, q = 6, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 91, q = 8, out = 2
trans_offset 90, q = 8, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 44
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 17, q = 2, out = 0
trans_offset 17, q = 2, out = 0
trans_offset 17, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 31, q = 3, out = 0
trans_offset 47, q = 5, out = 29
trans_offset 72, q = 7, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10
trans_offset 137, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 42, q = 4, out = 29
trans_offset 50, q = 6, out = 7
trans_offset 129, q = 10, out = 2
trans_offset 128, q = 10, out = 10

Output is(223): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 11, "<anyjuk>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 175, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(26, 191, 8, <px3ps> )
Symbol(55, 199, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 247, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 293, 12, "<házban>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 317, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 328, 5, <sg> )
Symbol(2, 333, 6, <ine> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 371, 6, "van" )
Symbol(48, 377, 8, <vbser> )
Symbol(37, 385, 7, <pres> )
Symbol(87, 392, 5, <sg> )
Symbol(2, 397, 6, <s3p> )
Symbol(2, 403, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 421, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 439, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 449, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 15, "<macskával>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 494, 9, "macska" )
Symbol(15, 0, 0, )
Symbol(87, 507, 5, <sg> )
Symbol(2, 512, 6, <ins> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 530, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 548, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 569, 11, "<kinéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 592, 9, "kinéz" )
Symbol(38, 601, 8, <vblex> )
Symbol(37, 609, 7, <pres> )
Symbol(87, 616, 5, <sg> )
Symbol(2, 621, 6, <s3p> )
Symbol(2, 627, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 639, 5, "ki" )
Symbol(60, 644, 8, <prevb> )
Symbol(2, 652, 2, + )
Symbol(2, 654, 7, "néz" )
Symbol(38, 661, 8, <vblex> )
Symbol(37, 669, 7, <pres> )
Symbol(87, 676, 5, <sg> )
Symbol(2, 681, 6, <s3p> )
Symbol(2, 687, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 783, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 793, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 811, 12, "<ablakon>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 835, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 847, 5, <sg> )
Symbol(2, 852, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 870, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 890, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 917, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 940, 7, "lát" )
Symbol(38, 947, 8, <vblex> )
Symbol(37, 955, 7, <pres> )
Symbol(87, 962, 5, <sg> )
Symbol(2, 967, 6, <s3p> )
Symbol(2, 973, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 985, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 996, 5, <sg> )
Symbol(28, 1,001, 8, <px3ss> )
Symbol(55, 1,009, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,027, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,051, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 1,065, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,088, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,108, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,135, 10, "<Marit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 1,215, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 1,227, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,280, 14, "<játszani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,306, 11, "játszik" )
Symbol(38, 1,317, 8, <vblex> )
Symbol(52, 1,325, 6, <inf> )
Symbol(87, 1,331, 5, <sg> )
Symbol(2, 1,336, 6, <s3p> )
Symbol(2, 1,342, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,360, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,378, 4, "." )
Symbol(64, 1,382, 7, <sent> )
Symbol(2, 1,389, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 26 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 82 16 87 71 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<gyorsan>" #BOC# | #0# "gyors" <adv> | #EOC# $0$ "<egy>" #BOC# | #0# "egy" <det> <ind> | #0# "egy" <adv> | #EOC# $0$ "<nagy>" #BOC# | #0# "nagy" <n> <sg> <nom> | #0# "nagy" <adj> <sg> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<vén>" #BOC# | #0# "vén" <adj> <sg> <nom> | #0# "vén" <n> <sg> <nom> | #EOC# $0$ "<fához>" #BOC# | #0# "fa" <n> <sg> <all> | #EOC# $0$ "<szalad>" #BOC# | #0# "szalad" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<elbújik>" #BOC# | #0# "elbújik" <vblex> <pres> <sg> <s3p> <ind> | #0# "el" <prevb> + "bújik" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<elől>" #BOC# | #0# "elől" <post> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_87_T_1


LRS T1:
Name: R_1_87_T_1
arity: 2
arccount: 70
statecount: 25
linecount: 71
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 80 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 80 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 12 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 13 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 18
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 16
  in: 2 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 50 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 17
  in: 2 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 17
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 17
  in: 29 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 18
  in: 2 -- 
  out: 7 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 18
  in: 7 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 18
  in: 16 -- 
  out: 10 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 80 -- 
  out: 9 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 19
  in: 29 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 2 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 16 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 21
  in: 29 -- 
  out: 24 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 21
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 16 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 22
  in: 29 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 22
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 3 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(194): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 57, 6, #BOC# )
Symbol(29, 63, 2, | )
Symbol(3, 65, 4, #0# )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 78, 5, <np> )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 94, 2, | )
Symbol(8, 96, 6, #EOC# )
Symbol(10, 102, 4, $0$ )
Symbol(2, 106, 12, "<gyorsan>" )
Symbol(7, 118, 6, #BOC# )
Symbol(29, 124, 2, | )
Symbol(3, 126, 4, #0# )
Symbol(2, 130, 8, "gyors" )
Symbol(54, 138, 6, <adv> )
Symbol(29, 144, 2, | )
Symbol(8, 146, 6, #EOC# )
Symbol(10, 152, 4, $0$ )
Symbol(2, 156, 8, "<egy>" )
Symbol(7, 164, 6, #BOC# )
Symbol(29, 170, 2, | )
Symbol(3, 172, 4, #0# )
Symbol(2, 176, 6, "egy" )
Symbol(73, 182, 6, <det> )
Symbol(2, 188, 6, <ind> )
Symbol(29, 194, 2, | )
Symbol(3, 196, 4, #0# )
Symbol(2, 200, 6, "egy" )
Symbol(54, 206, 6, <adv> )
Symbol(29, 212, 2, | )
Symbol(8, 214, 6, #EOC# )
Symbol(10, 220, 4, $0$ )
Symbol(2, 224, 9, "<nagy>" )
Symbol(7, 233, 6, #BOC# )
Symbol(29, 239, 2, | )
Symbol(3, 241, 4, #0# )
Symbol(2, 245, 7, "nagy" )
Symbol(15, 252, 4, <n> )
Symbol(87, 256, 5, <sg> )
Symbol(55, 261, 6, <nom> )
Symbol(29, 267, 2, | )
Symbol(3, 269, 4, #0# )
Symbol(2, 273, 7, "nagy" )
Symbol(53, 280, 6, <adj> )
Symbol(87, 286, 5, <sg> )
Symbol(55, 291, 6, <nom> )
Symbol(29, 297, 2, | )
Symbol(8, 299, 6, #EOC# )
Symbol(10, 305, 4, $0$ )
Symbol(2, 309, 6, "<,>" )
Symbol(7, 315, 6, #BOC# )
Symbol(29, 321, 2, | )
Symbol(3, 323, 4, #0# )
Symbol(2, 327, 4, "," )
Symbol(44, 331, 5, <cm> )
Symbol(29, 336, 2, | )
Symbol(8, 338, 6, #EOC# )
Symbol(10, 344, 4, $0$ )
Symbol(2, 348, 9, "<vén>" )
Symbol(7, 357, 6, #BOC# )
Symbol(29, 363, 2, | )
Symbol(3, 365, 4, #0# )
Symbol(2, 369, 7, "vén" )
Symbol(53, 376, 6, <adj> )
Symbol(87, 382, 5, <sg> )
Symbol(55, 387, 6, <nom> )
Symbol(29, 393, 2, | )
Symbol(3, 395, 4, #0# )
Symbol(2, 399, 7, "vén" )
Symbol(15, 406, 4, <n> )
Symbol(87, 410, 5, <sg> )
Symbol(55, 415, 6, <nom> )
Symbol(29, 421, 2, | )
Symbol(8, 423, 6, #EOC# )
Symbol(10, 429, 4, $0$ )
Symbol(2, 433, 11, "<fához>" )
Symbol(7, 444, 6, #BOC# )
Symbol(29, 450, 2, | )
Symbol(3, 452, 4, #0# )
Symbol(2, 456, 5, "fa" )
Symbol(15, 461, 4, <n> )
Symbol(87, 465, 5, <sg> )
Symbol(2, 470, 6, <all> )
Symbol(29, 476, 2, | )
Symbol(8, 478, 6, #EOC# )
Symbol(10, 484, 4, $0$ )
Symbol(2, 488, 11, "<szalad>" )
Symbol(7, 499, 6, #BOC# )
Symbol(29, 505, 2, | )
Symbol(3, 507, 4, #0# )
Symbol(2, 511, 9, "szalad" )
Symbol(38, 520, 8, <vblex> )
Symbol(37, 528, 7, <pres> )
Symbol(87, 535, 5, <sg> )
Symbol(2, 540, 6, <s3p> )
Symbol(2, 546, 6, <ind> )
Symbol(29, 552, 2, | )
Symbol(8, 554, 6, #EOC# )
Symbol(10, 560, 4, $0$ )
Symbol(2, 564, 6, "<,>" )
Symbol(7, 570, 6, #BOC# )
Symbol(29, 576, 2, | )
Symbol(3, 578, 4, #0# )
Symbol(2, 582, 4, "," )
Symbol(44, 586, 5, <cm> )
Symbol(29, 591, 2, | )
Symbol(8, 593, 6, #EOC# )
Symbol(10, 599, 4, $0$ )
Symbol(2, 603, 8, "<és>" )
Symbol(7, 611, 6, #BOC# )
Symbol(29, 617, 2, | )
Symbol(3, 619, 4, #0# )
Symbol(2, 623, 6, "és" )
Symbol(45, 629, 9, <cnjcoo> )
Symbol(29, 638, 2, | )
Symbol(8, 640, 6, #EOC# )
Symbol(10, 646, 4, $0$ )
Symbol(2, 650, 13, "<elbújik>" )
Symbol(7, 663, 6, #BOC# )
Symbol(29, 669, 2, | )
Symbol(3, 671, 4, #0# )
Symbol(2, 675, 11, "elbújik" )
Symbol(38, 686, 8, <vblex> )
Symbol(37, 694, 7, <pres> )
Symbol(87, 701, 5, <sg> )
Symbol(2, 706, 6, <s3p> )
Symbol(2, 712, 6, <ind> )
Symbol(29, 718, 2, | )
Symbol(3, 720, 4, #0# )
Symbol(2, 724, 5, "el" )
Symbol(60, 729, 8, <prevb> )
Symbol(2, 737, 2, + )
Symbol(2, 739, 9, "bújik" )
Symbol(38, 748, 8, <vblex> )
Symbol(37, 756, 7, <pres> )
Symbol(87, 763, 5, <sg> )
Symbol(2, 768, 6, <s3p> )
Symbol(2, 774, 6, <ind> )
Symbol(29, 780, 2, | )
Symbol(8, 782, 6, #EOC# )
Symbol(10, 788, 4, $0$ )
Symbol(2, 792, 9, "<Mari>" )
Symbol(7, 801, 6, #BOC# )
Symbol(29, 807, 2, | )
Symbol(3, 809, 4, #0# )
Symbol(2, 813, 7, "mari" )
Symbol(53, 820, 6, <adj> )
Symbol(87, 826, 5, <sg> )
Symbol(55, 831, 6, <nom> )
Symbol(29, 837, 2, | )
Symbol(3, 839, 4, #0# )
Symbol(2, 843, 7, "mari" )
Symbol(15, 850, 4, <n> )
Symbol(87, 854, 5, <sg> )
Symbol(55, 859, 6, <nom> )
Symbol(29, 865, 2, | )
Symbol(3, 867, 4, #0# )
Symbol(82, 871, 7, "Mari" )
Symbol(16, 878, 5, <np> )
Symbol(87, 883, 5, <sg> )
Symbol(55, 888, 6, <nom> )
Symbol(29, 894, 2, | )
Symbol(8, 896, 6, #EOC# )
Symbol(10, 902, 4, $0$ )
Symbol(2, 906, 10, "<elől>" )
Symbol(7, 916, 6, #BOC# )
Symbol(29, 922, 2, | )
Symbol(3, 924, 4, #0# )
Symbol(2, 928, 8, "elől" )
Symbol(61, 936, 7, <post> )
Symbol(29, 943, 2, | )
Symbol(8, 945, 6, #EOC# )
Symbol(10, 951, 4, $0$ )
Symbol(2, 955, 6, "<.>" )
Symbol(7, 961, 6, #BOC# )
Symbol(29, 967, 2, | )
Symbol(3, 969, 4, #0# )
Symbol(2, 973, 4, "." )
Symbol(64, 977, 7, <sent> )
Symbol(2, 984, 6, <<<<> )
Symbol(29, 990, 2, | )
Symbol(8, 992, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 80, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 43, signum = 10, q = 15, out = 4
trans_offset 52, signum = 2, q = 18, out = 7
trans_offset 53, signum = 7, q = 18, out = 8
trans_offset 56, signum = 29, q = 19, out = 11
trans_offset 57, signum = 3, q = 20, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 59, signum = 16, q = 21, out = 15
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 67, signum = 8, q = 23, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 33, signum = 16, q = 11, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(194): 
4 7 8 11 12 13 14 16 26 4 7 8 11 60 21 15 21 21 24 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 16 12 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 12 13 13 13 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 12 13 15 21 21 24 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 22, q = 4, out = 2
trans_offset 27, q = 4, out = 3
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10

Output is(182): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 83, 5, <sg> )
Symbol(55, 88, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 12, "<gyorsan>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 130, 8, "gyors" )
Symbol(54, 138, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 156, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 176, 6, "egy" )
Symbol(73, 182, 6, <det> )
Symbol(2, 188, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 200, 6, "egy" )
Symbol(54, 206, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 224, 9, "<nagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 245, 7, "nagy" )
Symbol(15, 252, 4, <n> )
Symbol(87, 256, 5, <sg> )
Symbol(55, 261, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 273, 7, "nagy" )
Symbol(53, 280, 6, <adj> )
Symbol(87, 286, 5, <sg> )
Symbol(55, 291, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 309, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 327, 4, "," )
Symbol(44, 331, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 348, 9, "<vén>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 369, 7, "vén" )
Symbol(53, 376, 6, <adj> )
Symbol(87, 382, 5, <sg> )
Symbol(55, 387, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 399, 7, "vén" )
Symbol(15, 406, 4, <n> )
Symbol(87, 410, 5, <sg> )
Symbol(55, 415, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 433, 11, "<fához>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 456, 5, "fa" )
Symbol(15, 461, 4, <n> )
Symbol(87, 465, 5, <sg> )
Symbol(2, 470, 6, <all> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 488, 11, "<szalad>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 511, 9, "szalad" )
Symbol(38, 520, 8, <vblex> )
Symbol(37, 528, 7, <pres> )
Symbol(87, 535, 5, <sg> )
Symbol(2, 540, 6, <s3p> )
Symbol(2, 546, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 564, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 582, 4, "," )
Symbol(44, 586, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 603, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 623, 6, "és" )
Symbol(45, 629, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 650, 13, "<elbújik>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 675, 11, "elbújik" )
Symbol(38, 686, 8, <vblex> )
Symbol(37, 694, 7, <pres> )
Symbol(87, 701, 5, <sg> )
Symbol(2, 706, 6, <s3p> )
Symbol(2, 712, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 724, 5, "el" )
Symbol(60, 729, 8, <prevb> )
Symbol(2, 737, 2, + )
Symbol(2, 739, 9, "bújik" )
Symbol(38, 748, 8, <vblex> )
Symbol(37, 756, 7, <pres> )
Symbol(87, 763, 5, <sg> )
Symbol(2, 768, 6, <s3p> )
Symbol(2, 774, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 792, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 871, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 883, 5, <sg> )
Symbol(55, 888, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 906, 10, "<elől>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 928, 8, "elől" )
Symbol(61, 936, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 955, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 973, 4, "." )
Symbol(64, 977, 7, <sent> )
Symbol(2, 984, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Tudod>" #BOC# | #0# "tud" <vblex> <pres> <sg> <s2p> <def> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<miért>" #BOC# | #0# "miért" <adv> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<ül>" #BOC# | #0# "ül" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kezét>" #BOC# | #0# "kéz" <n> <sg> <px3ss> <acc> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<szeme>" #BOC# | #0# "szem" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<előtt>" #BOC# | #0# "előtt" <post> | #EOC# $0$ "<tartja>" #BOC# | #0# "tart" <vblex> <pres> <sg> <s3p> <def> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_3_283_T_1


LRS T1:
Name: R_3_283_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 82 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 82 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 82 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 16 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(139): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 91, 2, | )
Symbol(3, 93, 4, #0# )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 119, 2, | )
Symbol(3, 121, 4, #0# )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 148, 2, | )
Symbol(8, 150, 6, #EOC# )
Symbol(10, 156, 4, $0$ )
Symbol(2, 160, 8, "<ül>" )
Symbol(7, 168, 6, #BOC# )
Symbol(29, 174, 2, | )
Symbol(3, 176, 4, #0# )
Symbol(2, 180, 6, "ül" )
Symbol(38, 186, 8, <vblex> )
Symbol(37, 194, 7, <pres> )
Symbol(87, 201, 5, <sg> )
Symbol(2, 206, 6, <s3p> )
Symbol(2, 212, 6, <ind> )
Symbol(29, 218, 2, | )
Symbol(8, 220, 6, #EOC# )
Symbol(10, 226, 4, $0$ )
Symbol(2, 230, 6, "<,>" )
Symbol(7, 236, 6, #BOC# )
Symbol(29, 242, 2, | )
Symbol(3, 244, 4, #0# )
Symbol(2, 248, 4, "," )
Symbol(44, 252, 5, <cm> )
Symbol(29, 257, 2, | )
Symbol(8, 259, 6, #EOC# )
Symbol(10, 265, 4, $0$ )
Symbol(2, 269, 8, "<és>" )
Symbol(7, 277, 6, #BOC# )
Symbol(29, 283, 2, | )
Symbol(3, 285, 4, #0# )
Symbol(2, 289, 6, "és" )
Symbol(45, 295, 9, <cnjcoo> )
Symbol(29, 304, 2, | )
Symbol(8, 306, 6, #EOC# )
Symbol(10, 312, 4, $0$ )
Symbol(2, 316, 6, "<a>" )
Symbol(7, 322, 6, #BOC# )
Symbol(29, 328, 2, | )
Symbol(3, 330, 4, #0# )
Symbol(2, 334, 4, "a" )
Symbol(73, 338, 6, <det> )
Symbol(2, 344, 6, <def> )
Symbol(29, 350, 2, | )
Symbol(8, 352, 6, #EOC# )
Symbol(10, 358, 4, $0$ )
Symbol(2, 362, 11, "<kezét>" )
Symbol(7, 373, 6, #BOC# )
Symbol(29, 379, 2, | )
Symbol(3, 381, 4, #0# )
Symbol(2, 385, 7, "kéz" )
Symbol(15, 392, 4, <n> )
Symbol(87, 396, 5, <sg> )
Symbol(28, 401, 8, <px3ss> )
Symbol(71, 409, 6, <acc> )
Symbol(29, 415, 2, | )
Symbol(8, 417, 6, #EOC# )
Symbol(10, 423, 4, $0$ )
Symbol(2, 427, 6, "<a>" )
Symbol(7, 433, 6, #BOC# )
Symbol(29, 439, 2, | )
Symbol(3, 441, 4, #0# )
Symbol(2, 445, 4, "a" )
Symbol(73, 449, 6, <det> )
Symbol(2, 455, 6, <def> )
Symbol(29, 461, 2, | )
Symbol(8, 463, 6, #EOC# )
Symbol(10, 469, 4, $0$ )
Symbol(2, 473, 10, "<szeme>" )
Symbol(7, 483, 6, #BOC# )
Symbol(29, 489, 2, | )
Symbol(3, 491, 4, #0# )
Symbol(2, 495, 7, "szem" )
Symbol(15, 502, 4, <n> )
Symbol(87, 506, 5, <sg> )
Symbol(28, 511, 8, <px3ss> )
Symbol(55, 519, 6, <nom> )
Symbol(29, 525, 2, | )
Symbol(8, 527, 6, #EOC# )
Symbol(10, 533, 4, $0$ )
Symbol(2, 537, 11, "<előtt>" )
Symbol(7, 548, 6, #BOC# )
Symbol(29, 554, 2, | )
Symbol(3, 556, 4, #0# )
Symbol(2, 560, 9, "előtt" )
Symbol(61, 569, 7, <post> )
Symbol(29, 576, 2, | )
Symbol(8, 578, 6, #EOC# )
Symbol(10, 584, 4, $0$ )
Symbol(2, 588, 11, "<tartja>" )
Symbol(7, 599, 6, #BOC# )
Symbol(29, 605, 2, | )
Symbol(3, 607, 4, #0# )
Symbol(2, 611, 7, "tart" )
Symbol(38, 618, 8, <vblex> )
Symbol(37, 626, 7, <pres> )
Symbol(87, 633, 5, <sg> )
Symbol(2, 638, 6, <s3p> )
Symbol(2, 644, 6, <def> )
Symbol(29, 650, 2, | )
Symbol(8, 652, 6, #EOC# )
Symbol(10, 658, 4, $0$ )
Symbol(2, 662, 6, "<.>" )
Symbol(7, 668, 6, #BOC# )
Symbol(29, 674, 2, | )
Symbol(3, 676, 4, #0# )
Symbol(2, 680, 4, "." )
Symbol(64, 684, 7, <sent> )
Symbol(2, 691, 6, <<<<> )
Symbol(29, 697, 2, | )
Symbol(8, 699, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 71 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 82, q = 8, out = 14
trans_offset 32, signum = 16, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(139): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 16
trans_offset 23, q = 4, out = 82
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(127): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 0, 0, )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<ül>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 180, 6, "ül" )
Symbol(38, 186, 8, <vblex> )
Symbol(37, 194, 7, <pres> )
Symbol(87, 201, 5, <sg> )
Symbol(2, 206, 6, <s3p> )
Symbol(2, 212, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 230, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 4, "," )
Symbol(44, 252, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 269, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 289, 6, "és" )
Symbol(45, 295, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 316, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 334, 4, "a" )
Symbol(73, 338, 6, <det> )
Symbol(2, 344, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 362, 11, "<kezét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 385, 7, "kéz" )
Symbol(15, 392, 4, <n> )
Symbol(87, 396, 5, <sg> )
Symbol(28, 401, 8, <px3ss> )
Symbol(71, 409, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 427, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 445, 4, "a" )
Symbol(73, 449, 6, <det> )
Symbol(2, 455, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 473, 10, "<szeme>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 495, 7, "szem" )
Symbol(15, 502, 4, <n> )
Symbol(87, 506, 5, <sg> )
Symbol(28, 511, 8, <px3ss> )
Symbol(55, 519, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 537, 11, "<előtt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 560, 9, "előtt" )
Symbol(61, 569, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 588, 11, "<tartja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 611, 7, "tart" )
Symbol(38, 618, 8, <vblex> )
Symbol(37, 626, 7, <pres> )
Symbol(87, 633, 5, <sg> )
Symbol(2, 638, 6, <s3p> )
Symbol(2, 644, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 662, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 680, 4, "." )
Symbol(64, 684, 7, <sent> )
Symbol(2, 691, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 71 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<lát>" #BOC# | #0# "la" <n> <sg> <acc> | #0# "lát" <vblex> <pres> <sg> <s3p> <ind> | #0# "lát" <n> <sg> <nom> | #EOC# $0$ "<semmit>" #BOC# | #0# "semmi" <n> <sg> <acc> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<számol>" #BOC# | #0# "számol" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Miért>" #BOC# | #0# "miért" <adv> | #EOC# $0$ "<csinálja>" #BOC# | #0# "csinál" <vblex> <pres> <sg> <s3p> <def> | #0# "csinál" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<ezt>" #BOC# | #0# "ez" <predet> <sg> <acc> | #0# "ez" <prn> <sg> <acc> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(66): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 11, "<Miért>" )
Symbol(7, 57, 6, #BOC# )
Symbol(29, 63, 2, | )
Symbol(3, 65, 4, #0# )
Symbol(2, 69, 9, "miért" )
Symbol(54, 78, 6, <adv> )
Symbol(29, 84, 2, | )
Symbol(8, 86, 6, #EOC# )
Symbol(10, 92, 4, $0$ )
Symbol(2, 96, 14, "<csinálja>" )
Symbol(7, 110, 6, #BOC# )
Symbol(29, 116, 2, | )
Symbol(3, 118, 4, #0# )
Symbol(2, 122, 10, "csinál" )
Symbol(38, 132, 8, <vblex> )
Symbol(37, 140, 7, <pres> )
Symbol(87, 147, 5, <sg> )
Symbol(2, 152, 6, <s3p> )
Symbol(2, 158, 6, <def> )
Symbol(29, 164, 2, | )
Symbol(3, 166, 4, #0# )
Symbol(2, 170, 10, "csinál" )
Symbol(38, 180, 8, <vblex> )
Symbol(40, 188, 6, <pis> )
Symbol(87, 194, 5, <sg> )
Symbol(2, 199, 6, <s3p> )
Symbol(2, 205, 6, <def> )
Symbol(29, 211, 2, | )
Symbol(8, 213, 6, #EOC# )
Symbol(10, 219, 4, $0$ )
Symbol(2, 223, 8, "<ezt>" )
Symbol(7, 231, 6, #BOC# )
Symbol(29, 237, 2, | )
Symbol(3, 239, 4, #0# )
Symbol(77, 243, 5, "ez" )
Symbol(2, 248, 9, <predet> )
Symbol(87, 257, 5, <sg> )
Symbol(71, 262, 6, <acc> )
Symbol(29, 268, 2, | )
Symbol(3, 270, 4, #0# )
Symbol(77, 274, 5, "ez" )
Symbol(57, 279, 6, <prn> )
Symbol(87, 285, 5, <sg> )
Symbol(71, 290, 6, <acc> )
Symbol(29, 296, 2, | )
Symbol(8, 298, 6, #EOC# )
Symbol(10, 304, 4, $0$ )
Symbol(2, 308, 6, "<?>" )
Symbol(7, 314, 6, #BOC# )
Symbol(29, 320, 2, | )
Symbol(3, 322, 4, #0# )
Symbol(68, 326, 4, "?" )
Symbol(64, 330, 7, <sent> )
Symbol(2, 337, 6, <<<<> )
Symbol(29, 343, 2, | )
Symbol(8, 345, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 8 10 2 7 29 3 77 2 87 71 29 3 77 57 87 71 29 8 10 2 7 29 3 68 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 56, signum = 3, q = 20, out = 21
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 61, signum = 29, q = 22, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(66): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 13 13 16 21 25 25 25 25 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(58): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Miért>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "miért" )
Symbol(54, 78, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 96, 14, "<csinálja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 122, 10, "csinál" )
Symbol(38, 132, 8, <vblex> )
Symbol(37, 140, 7, <pres> )
Symbol(87, 147, 5, <sg> )
Symbol(2, 152, 6, <s3p> )
Symbol(2, 158, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 223, 8, "<ezt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(77, 243, 5, "ez" )
Symbol(2, 248, 9, <predet> )
Symbol(87, 257, 5, <sg> )
Symbol(71, 262, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(77, 274, 5, "ez" )
Symbol(57, 279, 6, <prn> )
Symbol(87, 285, 5, <sg> )
Symbol(71, 290, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 308, 6, "<?>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(68, 326, 4, "?" )
Symbol(64, 330, 7, <sent> )
Symbol(2, 337, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 77 2 87 71 29 3 77 57 87 71 29 8 10 2 7 29 3 68 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<És>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<mit>" #BOC# | #0# "mi" <n> <itg> <sg> <acc> | #EOC# $0$ "<csinál>" #BOC# | #0# "csinál" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<fánál>" #BOC# | #0# "fa" <n> <sg> <ade> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Ez>" #BOC# | #0# "ez" <predet> <sg> <nom> | #0# "ez" <prn> <sg> <nom> | #EOC# $0$ "<egy>" #BOC# | #0# "egy" <det> <ind> | #0# "egy" <adv> | #EOC# $0$ "<játék>" #BOC# | #0# "ját" <n> <plfam> <nom> | #0# "játék" <n> <sg> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Mikor>" #BOC# | #0# "mikor" <cnjadv> | #0# "mikor" <adv> <itg> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<befejezte>" #BOC# | #0# "befejez" <vblex> <past> <sg> <s3p> <def> | #0# "be" <prevb> + "fej" <vblex> <past> <sg> <s3p> <def> | #0# "be" <prevb> + "fejez" <vblex> <past> <sg> <s3p> <def> | #0# "befejezte" <n> <sg> <px3ss> <nom> | #0# "befejezte" <n> <sg> <nom> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<számolást>" #BOC# | #0# "számolás" <n> <sg> <acc> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<körülnéz>" #BOC# | #0# "körülnéz" <vblex> <pres> <sg> <s3p> <ind> | #0# "körül" <prevb> + "néz" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_207_T_1


LRS T1:
Name: R_1_207_T_1
arity: 2
arccount: 133
statecount: 35
linecount: 134
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 68 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 69 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 70 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 68 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 69 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 70 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 68 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 69 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 70 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 68 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 69 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 70 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 3 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 7
  in: 2 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 7
  in: 68 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 69 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 70 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 68 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 69 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 70 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 10
  in: 3 -- 
  out: 14 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 11
  in: 2 -- 
  out: 40 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 68 -- 
  out: 41 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 69 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 70 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 12
  in: 2 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 68 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 12
  in: 69 -- 
  out: 17 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 12
  in: 70 -- 
  out: 18 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 13
  in: 2 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 13
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 13
  in: 68 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 69 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 70 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 2 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 68 -- 
  out: 21 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 69 -- 
  out: 17 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 70 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 3 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 32 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 68 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 69 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 70 -- 
  out: 35 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 10 -- 
  out: 6 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 2 -- 
  out: 40 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 68 -- 
  out: 41 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 69 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 70 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 2 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 7 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 68 -- 
  out: 9 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 69 -- 
  out: 10 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 70 -- 
  out: 12 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 29 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 21
  in: 3 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 22
  in: 2 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 22
  in: 68 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 22
  in: 69 -- 
  out: 17 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 22
  in: 70 -- 
  out: 18 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 2 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 23
  in: 68 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 23
  in: 69 -- 
  out: 17 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 23
  in: 70 -- 
  out: 23 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 3 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 25
  in: 2 -- 
  out: 27 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 25
  in: 29 -- 
  out: 31 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 25
  in: 68 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 69 -- 
  out: 29 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 70 -- 
  out: 23 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 26
  in: 2 -- 
  out: 32 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 26
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 26
  in: 68 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 69 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 26
  in: 70 -- 
  out: 35 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 27
  in: 3 -- 
  out: 14 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 27
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 28
  in: 2 -- 
  out: 40 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 68 -- 
  out: 41 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 69 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 70 -- 
  out: 43 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 29
  in: 2 -- 
  out: 15 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 29
  in: 29 -- 
  out: 19 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 68 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 69 -- 
  out: 17 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 70 -- 
  out: 18 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 30
  in: 2 -- 
  out: 50 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 30
  in: 29 -- 
  out: 54 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 30
  in: 68 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 69 -- 
  out: 52 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 70 -- 
  out: 43 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 20 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 29 -- 
  out: 19 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 68 -- 
  out: 21 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 69 -- 
  out: 17 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 70 -- 
  out: 23 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 32
  in: 3 -- 
  out: 25 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 33
  in: 2 -- 
  out: 32 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 29 -- 
  out: 19 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 68 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 33
  in: 69 -- 
  out: 34 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 33
  in: 70 -- 
  out: 35 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 2 -- 
  out: 40 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 29 -- 
  out: 19 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 68 -- 
  out: 41 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 69 -- 
  out: 34 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 34
  in: 70 -- 
  out: 43 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(133):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(158): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 10, "<Mikor>" )
Symbol(7, 56, 6, #BOC# )
Symbol(29, 62, 2, | )
Symbol(3, 64, 4, #0# )
Symbol(69, 68, 8, "mikor" )
Symbol(2, 76, 9, <cnjadv> )
Symbol(29, 85, 2, | )
Symbol(3, 87, 4, #0# )
Symbol(69, 91, 8, "mikor" )
Symbol(54, 99, 6, <adv> )
Symbol(70, 105, 6, <itg> )
Symbol(29, 111, 2, | )
Symbol(8, 113, 6, #EOC# )
Symbol(10, 119, 4, $0$ )
Symbol(2, 123, 9, "<Mari>" )
Symbol(7, 132, 6, #BOC# )
Symbol(29, 138, 2, | )
Symbol(3, 140, 4, #0# )
Symbol(2, 144, 7, "mari" )
Symbol(53, 151, 6, <adj> )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 168, 2, | )
Symbol(3, 170, 4, #0# )
Symbol(2, 174, 7, "mari" )
Symbol(15, 181, 4, <n> )
Symbol(87, 185, 5, <sg> )
Symbol(55, 190, 6, <nom> )
Symbol(29, 196, 2, | )
Symbol(3, 198, 4, #0# )
Symbol(82, 202, 7, "Mari" )
Symbol(16, 209, 5, <np> )
Symbol(87, 214, 5, <sg> )
Symbol(55, 219, 6, <nom> )
Symbol(29, 225, 2, | )
Symbol(8, 227, 6, #EOC# )
Symbol(10, 233, 4, $0$ )
Symbol(2, 237, 14, "<befejezte>" )
Symbol(7, 251, 6, #BOC# )
Symbol(29, 257, 2, | )
Symbol(3, 259, 4, #0# )
Symbol(2, 263, 10, "befejez" )
Symbol(38, 273, 8, <vblex> )
Symbol(46, 281, 7, <past> )
Symbol(87, 288, 5, <sg> )
Symbol(2, 293, 6, <s3p> )
Symbol(2, 299, 6, <def> )
Symbol(29, 305, 2, | )
Symbol(3, 307, 4, #0# )
Symbol(2, 311, 5, "be" )
Symbol(60, 316, 8, <prevb> )
Symbol(2, 324, 2, + )
Symbol(88, 326, 6, "fej" )
Symbol(38, 332, 8, <vblex> )
Symbol(46, 340, 7, <past> )
Symbol(87, 347, 5, <sg> )
Symbol(2, 352, 6, <s3p> )
Symbol(2, 358, 6, <def> )
Symbol(29, 364, 2, | )
Symbol(3, 366, 4, #0# )
Symbol(2, 370, 5, "be" )
Symbol(60, 375, 8, <prevb> )
Symbol(2, 383, 2, + )
Symbol(2, 385, 8, "fejez" )
Symbol(38, 393, 8, <vblex> )
Symbol(46, 401, 7, <past> )
Symbol(87, 408, 5, <sg> )
Symbol(2, 413, 6, <s3p> )
Symbol(2, 419, 6, <def> )
Symbol(29, 425, 2, | )
Symbol(3, 427, 4, #0# )
Symbol(2, 431, 12, "befejezte" )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(28, 452, 8, <px3ss> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 466, 2, | )
Symbol(3, 468, 4, #0# )
Symbol(2, 472, 12, "befejezte" )
Symbol(15, 484, 4, <n> )
Symbol(87, 488, 5, <sg> )
Symbol(55, 493, 6, <nom> )
Symbol(29, 499, 2, | )
Symbol(8, 501, 6, #EOC# )
Symbol(10, 507, 4, $0$ )
Symbol(2, 511, 6, "<a>" )
Symbol(7, 517, 6, #BOC# )
Symbol(29, 523, 2, | )
Symbol(3, 525, 4, #0# )
Symbol(2, 529, 4, "a" )
Symbol(73, 533, 6, <det> )
Symbol(2, 539, 6, <def> )
Symbol(29, 545, 2, | )
Symbol(8, 547, 6, #EOC# )
Symbol(10, 553, 4, $0$ )
Symbol(2, 557, 16, "<számolást>" )
Symbol(7, 573, 6, #BOC# )
Symbol(29, 579, 2, | )
Symbol(3, 581, 4, #0# )
Symbol(2, 585, 13, "számolás" )
Symbol(15, 598, 4, <n> )
Symbol(87, 602, 5, <sg> )
Symbol(71, 607, 6, <acc> )
Symbol(29, 613, 2, | )
Symbol(8, 615, 6, #EOC# )
Symbol(10, 621, 4, $0$ )
Symbol(2, 625, 6, "<,>" )
Symbol(7, 631, 6, #BOC# )
Symbol(29, 637, 2, | )
Symbol(3, 639, 4, #0# )
Symbol(2, 643, 4, "," )
Symbol(44, 647, 5, <cm> )
Symbol(29, 652, 2, | )
Symbol(8, 654, 6, #EOC# )
Symbol(10, 660, 4, $0$ )
Symbol(2, 664, 16, "<körülnéz>" )
Symbol(7, 680, 6, #BOC# )
Symbol(29, 686, 2, | )
Symbol(3, 688, 4, #0# )
Symbol(2, 692, 14, "körülnéz" )
Symbol(38, 706, 8, <vblex> )
Symbol(37, 714, 7, <pres> )
Symbol(87, 721, 5, <sg> )
Symbol(2, 726, 6, <s3p> )
Symbol(2, 732, 6, <ind> )
Symbol(29, 738, 2, | )
Symbol(3, 740, 4, #0# )
Symbol(2, 744, 10, "körül" )
Symbol(60, 754, 8, <prevb> )
Symbol(2, 762, 2, + )
Symbol(2, 764, 7, "néz" )
Symbol(38, 771, 8, <vblex> )
Symbol(37, 779, 7, <pres> )
Symbol(87, 786, 5, <sg> )
Symbol(2, 791, 6, <s3p> )
Symbol(2, 797, 6, <ind> )
Symbol(29, 803, 2, | )
Symbol(8, 805, 6, #EOC# )
Symbol(10, 811, 4, $0$ )
Symbol(2, 815, 6, "<.>" )
Symbol(7, 821, 6, #BOC# )
Symbol(29, 827, 2, | )
Symbol(3, 829, 4, #0# )
Symbol(2, 833, 4, "." )
Symbol(64, 837, 7, <sent> )
Symbol(2, 844, 6, <<<<> )
Symbol(29, 850, 2, | )
Symbol(8, 852, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 69 2 29 3 69 54 70 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 60 2 88 38 46 87 2 2 29 3 2 60 2 2 38 46 87 2 2 29 3 2 15 87 28 55 29 3 2 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 15, signum = 69, q = 4, out = 17
trans_offset 17, signum = 2, q = 5, out = 20
trans_offset 18, signum = 29, q = 5, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 32, signum = 69, q = 8, out = 34
trans_offset 37, signum = 2, q = 11, out = 40
trans_offset 41, signum = 70, q = 11, out = 43
trans_offset 48, signum = 29, q = 13, out = 54
trans_offset 58, signum = 8, q = 15, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26

Intermediate is(158): 
6 8 11 13 14 15 15 19 26 6 8 11 13 14 17 20 19 25 34 40 43 54 26 6 8 11 13 14 15 15 15 15 19 25 32 32 32 32 19 25 32 32 32 32 19 26 6 8 11 13 14 15 15 15 15 15 15 19 25 32 32 32 32 32 32 32 32 32 19 25 32 32 32 32 32 32 32 32 32 19 25 32 32 32 32 32 19 25 32 32 32 32 19 26 6 8 11 13 14 15 15 15 19 26 6 8 11 13 14 15 15 15 15 19 26 6 8 11 13 14 15 15 19 26 6 8 11 13 14 15 15 15 15 15 15 19 25 32 32 32 32 32 32 32 32 32 19 26 6 8 11 13 14 15 15 15 19 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 102, q = 8, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 190, q = 12, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 113, q = 8, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 198, q = 12, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 113, q = 8, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 198, q = 12, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 113, q = 8, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 198, q = 12, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 102, q = 8, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 190, q = 12, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 113, q = 8, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 198, q = 12, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 102, q = 8, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 190, q = 12, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 22, q = 2, out = 0
trans_offset 68, q = 5, out = 0
trans_offset 66, q = 5, out = 0
trans_offset 131, q = 9, out = 0
trans_offset 262, q = 16, out = 29
trans_offset 329, q = 22, out = 2
trans_offset 7, q = 2, out = 69
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10

Output is(153): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 10, "<Mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 76, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 123, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 144, 7, "mari" )
Symbol(53, 151, 6, <adj> )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 7, "mari" )
Symbol(15, 181, 4, <n> )
Symbol(87, 185, 5, <sg> )
Symbol(55, 190, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 202, 7, "Mari" )
Symbol(16, 209, 5, <np> )
Symbol(87, 214, 5, <sg> )
Symbol(55, 219, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 237, 14, "<befejezte>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 263, 10, "befejez" )
Symbol(38, 273, 8, <vblex> )
Symbol(46, 281, 7, <past> )
Symbol(87, 288, 5, <sg> )
Symbol(2, 293, 6, <s3p> )
Symbol(2, 299, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 5, "be" )
Symbol(60, 316, 8, <prevb> )
Symbol(2, 324, 2, + )
Symbol(88, 326, 6, "fej" )
Symbol(38, 332, 8, <vblex> )
Symbol(46, 340, 7, <past> )
Symbol(87, 347, 5, <sg> )
Symbol(2, 352, 6, <s3p> )
Symbol(2, 358, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 370, 5, "be" )
Symbol(60, 375, 8, <prevb> )
Symbol(2, 383, 2, + )
Symbol(2, 385, 8, "fejez" )
Symbol(38, 393, 8, <vblex> )
Symbol(46, 401, 7, <past> )
Symbol(87, 408, 5, <sg> )
Symbol(2, 413, 6, <s3p> )
Symbol(2, 419, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 431, 12, "befejezte" )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(28, 452, 8, <px3ss> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 472, 12, "befejezte" )
Symbol(15, 484, 4, <n> )
Symbol(87, 488, 5, <sg> )
Symbol(55, 493, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 511, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 529, 4, "a" )
Symbol(73, 533, 6, <det> )
Symbol(2, 539, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 557, 16, "<számolást>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 13, "számolás" )
Symbol(15, 598, 4, <n> )
Symbol(87, 602, 5, <sg> )
Symbol(71, 607, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 625, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 643, 4, "," )
Symbol(44, 647, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 664, 16, "<körülnéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 692, 14, "körülnéz" )
Symbol(38, 706, 8, <vblex> )
Symbol(37, 714, 7, <pres> )
Symbol(87, 721, 5, <sg> )
Symbol(2, 726, 6, <s3p> )
Symbol(2, 732, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 744, 10, "körül" )
Symbol(60, 754, 8, <prevb> )
Symbol(2, 762, 2, + )
Symbol(2, 764, 7, "néz" )
Symbol(38, 771, 8, <vblex> )
Symbol(37, 779, 7, <pres> )
Symbol(87, 786, 5, <sg> )
Symbol(2, 791, 6, <s3p> )
Symbol(2, 797, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 815, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 833, 4, "." )
Symbol(64, 837, 7, <sent> )
Symbol(2, 844, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 60 2 88 38 46 87 2 2 29 3 2 60 2 2 38 46 87 2 2 29 3 2 15 87 28 55 29 3 2 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_87_T_1


LRS T1:
Name: R_1_87_T_1
arity: 2
arccount: 70
statecount: 25
linecount: 71
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 80 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 80 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 12 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 13 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 18
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 16
  in: 2 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 50 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 17
  in: 2 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 17
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 17
  in: 29 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 18
  in: 2 -- 
  out: 7 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 18
  in: 7 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 18
  in: 16 -- 
  out: 10 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 80 -- 
  out: 9 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 19
  in: 29 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 2 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 16 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 21
  in: 29 -- 
  out: 24 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 21
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 16 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 22
  in: 29 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 22
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 3 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(153): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 10, "<Mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 76, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 123, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 144, 7, "mari" )
Symbol(53, 151, 6, <adj> )
Symbol(87, 157, 5, <sg> )
Symbol(55, 162, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 7, "mari" )
Symbol(15, 181, 4, <n> )
Symbol(87, 185, 5, <sg> )
Symbol(55, 190, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 202, 7, "Mari" )
Symbol(16, 209, 5, <np> )
Symbol(87, 214, 5, <sg> )
Symbol(55, 219, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 237, 14, "<befejezte>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 263, 10, "befejez" )
Symbol(38, 273, 8, <vblex> )
Symbol(46, 281, 7, <past> )
Symbol(87, 288, 5, <sg> )
Symbol(2, 293, 6, <s3p> )
Symbol(2, 299, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 5, "be" )
Symbol(60, 316, 8, <prevb> )
Symbol(2, 324, 2, + )
Symbol(88, 326, 6, "fej" )
Symbol(38, 332, 8, <vblex> )
Symbol(46, 340, 7, <past> )
Symbol(87, 347, 5, <sg> )
Symbol(2, 352, 6, <s3p> )
Symbol(2, 358, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 370, 5, "be" )
Symbol(60, 375, 8, <prevb> )
Symbol(2, 383, 2, + )
Symbol(2, 385, 8, "fejez" )
Symbol(38, 393, 8, <vblex> )
Symbol(46, 401, 7, <past> )
Symbol(87, 408, 5, <sg> )
Symbol(2, 413, 6, <s3p> )
Symbol(2, 419, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 431, 12, "befejezte" )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(28, 452, 8, <px3ss> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 472, 12, "befejezte" )
Symbol(15, 484, 4, <n> )
Symbol(87, 488, 5, <sg> )
Symbol(55, 493, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 511, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 529, 4, "a" )
Symbol(73, 533, 6, <det> )
Symbol(2, 539, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 557, 16, "<számolást>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 13, "számolás" )
Symbol(15, 598, 4, <n> )
Symbol(87, 602, 5, <sg> )
Symbol(71, 607, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 625, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 643, 4, "," )
Symbol(44, 647, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 664, 16, "<körülnéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 692, 14, "körülnéz" )
Symbol(38, 706, 8, <vblex> )
Symbol(37, 714, 7, <pres> )
Symbol(87, 721, 5, <sg> )
Symbol(2, 726, 6, <s3p> )
Symbol(2, 732, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 744, 10, "körül" )
Symbol(60, 754, 8, <prevb> )
Symbol(2, 762, 2, + )
Symbol(2, 764, 7, "néz" )
Symbol(38, 771, 8, <vblex> )
Symbol(37, 779, 7, <pres> )
Symbol(87, 786, 5, <sg> )
Symbol(2, 791, 6, <s3p> )
Symbol(2, 797, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 815, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 833, 4, "." )
Symbol(64, 837, 7, <sent> )
Symbol(2, 844, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 60 2 88 38 46 87 2 2 29 3 2 60 2 2 38 46 87 2 2 29 3 2 15 87 28 55 29 3 2 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 80, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 43, signum = 10, q = 15, out = 4
trans_offset 52, signum = 2, q = 18, out = 7
trans_offset 53, signum = 7, q = 18, out = 8
trans_offset 56, signum = 29, q = 19, out = 11
trans_offset 57, signum = 3, q = 20, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 67, signum = 8, q = 23, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 33, signum = 16, q = 11, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(153): 
4 7 8 11 12 13 14 16 26 4 7 8 11 60 21 21 24 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 12 13 15 21 21 24 26 4 7 8 11 12 13 13 13 13 13 13 16 12 13 13 13 13 13 13 13 13 13 16 12 13 13 13 13 13 13 13 13 13 16 12 13 13 13 13 13 16 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 12 13 13 13 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 13, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10

Output is(141): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 10, "<Mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 76, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 123, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 202, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 214, 5, <sg> )
Symbol(55, 219, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 237, 14, "<befejezte>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 263, 10, "befejez" )
Symbol(38, 273, 8, <vblex> )
Symbol(46, 281, 7, <past> )
Symbol(87, 288, 5, <sg> )
Symbol(2, 293, 6, <s3p> )
Symbol(2, 299, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 5, "be" )
Symbol(60, 316, 8, <prevb> )
Symbol(2, 324, 2, + )
Symbol(88, 326, 6, "fej" )
Symbol(38, 332, 8, <vblex> )
Symbol(46, 340, 7, <past> )
Symbol(87, 347, 5, <sg> )
Symbol(2, 352, 6, <s3p> )
Symbol(2, 358, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 370, 5, "be" )
Symbol(60, 375, 8, <prevb> )
Symbol(2, 383, 2, + )
Symbol(2, 385, 8, "fejez" )
Symbol(38, 393, 8, <vblex> )
Symbol(46, 401, 7, <past> )
Symbol(87, 408, 5, <sg> )
Symbol(2, 413, 6, <s3p> )
Symbol(2, 419, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 431, 12, "befejezte" )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(28, 452, 8, <px3ss> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 472, 12, "befejezte" )
Symbol(15, 484, 4, <n> )
Symbol(87, 488, 5, <sg> )
Symbol(55, 493, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 511, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 529, 4, "a" )
Symbol(73, 533, 6, <det> )
Symbol(2, 539, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 557, 16, "<számolást>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 13, "számolás" )
Symbol(15, 598, 4, <n> )
Symbol(87, 602, 5, <sg> )
Symbol(71, 607, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 625, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 643, 4, "," )
Symbol(44, 647, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 664, 16, "<körülnéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 692, 14, "körülnéz" )
Symbol(38, 706, 8, <vblex> )
Symbol(37, 714, 7, <pres> )
Symbol(87, 721, 5, <sg> )
Symbol(2, 726, 6, <s3p> )
Symbol(2, 732, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 744, 10, "körül" )
Symbol(60, 754, 8, <prevb> )
Symbol(2, 762, 2, + )
Symbol(2, 764, 7, "néz" )
Symbol(38, 771, 8, <vblex> )
Symbol(37, 779, 7, <pres> )
Symbol(87, 786, 5, <sg> )
Symbol(2, 791, 6, <s3p> )
Symbol(2, 797, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 815, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 833, 4, "." )
Symbol(64, 837, 7, <sent> )
Symbol(2, 844, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 60 2 88 38 46 87 2 2 29 3 2 60 2 2 38 46 87 2 2 29 3 2 15 87 28 55 29 3 2 15 87 55 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Keresi>" #BOC# | #0# "keres" <vblex> <pres> <sg> <s3p> <def> | #0# "Keresi" <np> <sg> <nom> | #EOC# $0$ "<Jancsit>" #BOC# | #0# "Jancsi" <np> <sg> <acc> | #EOC# $0$ "<:>" #BOC# | #0# ":" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<hova>" #BOC# | #0# "hova" <adv> <itg> | #EOC# $0$ "<ment>" #BOC# | #0# "megy" <vblex> <past> <sg> <s3p> <ind> | #0# "ment" <vblex> <pres> <sg> <s3p> <ind> | #0# "ment" <adj> <sg> <nom> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Láttad>" #BOC# | #0# "lát" <vblex> <past> <sg> <s2p> <def> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<tudja>" #BOC# | #0# "tud" <vblex> <pres> <sg> <s3p> <def> | #0# "tud" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<hol>" #BOC# | #0# "hol" <adv> <itg> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(119): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 91, 2, | )
Symbol(3, 93, 4, #0# )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 119, 2, | )
Symbol(3, 121, 4, #0# )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 148, 2, | )
Symbol(8, 150, 6, #EOC# )
Symbol(10, 156, 4, $0$ )
Symbol(2, 160, 8, "<nem>" )
Symbol(7, 168, 6, #BOC# )
Symbol(29, 174, 2, | )
Symbol(3, 176, 4, #0# )
Symbol(2, 180, 6, "nem" )
Symbol(91, 186, 5, <ij> )
Symbol(29, 191, 2, | )
Symbol(3, 193, 4, #0# )
Symbol(2, 197, 6, "nem" )
Symbol(54, 203, 6, <adv> )
Symbol(29, 209, 2, | )
Symbol(8, 211, 6, #EOC# )
Symbol(10, 217, 4, $0$ )
Symbol(2, 221, 10, "<tudja>" )
Symbol(7, 231, 6, #BOC# )
Symbol(29, 237, 2, | )
Symbol(3, 239, 4, #0# )
Symbol(2, 243, 6, "tud" )
Symbol(38, 249, 8, <vblex> )
Symbol(37, 257, 7, <pres> )
Symbol(87, 264, 5, <sg> )
Symbol(2, 269, 6, <s3p> )
Symbol(2, 275, 6, <def> )
Symbol(29, 281, 2, | )
Symbol(3, 283, 4, #0# )
Symbol(2, 287, 6, "tud" )
Symbol(38, 293, 8, <vblex> )
Symbol(40, 301, 6, <pis> )
Symbol(87, 307, 5, <sg> )
Symbol(2, 312, 6, <s3p> )
Symbol(2, 318, 6, <def> )
Symbol(29, 324, 2, | )
Symbol(8, 326, 6, #EOC# )
Symbol(10, 332, 4, $0$ )
Symbol(2, 336, 6, "<,>" )
Symbol(7, 342, 6, #BOC# )
Symbol(29, 348, 2, | )
Symbol(3, 350, 4, #0# )
Symbol(2, 354, 4, "," )
Symbol(44, 358, 5, <cm> )
Symbol(29, 363, 2, | )
Symbol(8, 365, 6, #EOC# )
Symbol(10, 371, 4, $0$ )
Symbol(2, 375, 8, "<hol>" )
Symbol(7, 383, 6, #BOC# )
Symbol(29, 389, 2, | )
Symbol(3, 391, 4, #0# )
Symbol(2, 395, 6, "hol" )
Symbol(54, 401, 6, <adv> )
Symbol(70, 407, 6, <itg> )
Symbol(29, 413, 2, | )
Symbol(8, 415, 6, #EOC# )
Symbol(10, 421, 4, $0$ )
Symbol(2, 425, 8, "<van>" )
Symbol(7, 433, 6, #BOC# )
Symbol(29, 439, 2, | )
Symbol(3, 441, 4, #0# )
Symbol(35, 445, 6, "van" )
Symbol(48, 451, 8, <vbser> )
Symbol(37, 459, 7, <pres> )
Symbol(87, 466, 5, <sg> )
Symbol(2, 471, 6, <s3p> )
Symbol(2, 477, 6, <ind> )
Symbol(29, 483, 2, | )
Symbol(8, 485, 6, #EOC# )
Symbol(10, 491, 4, $0$ )
Symbol(2, 495, 11, "<Jancsi>" )
Symbol(7, 506, 6, #BOC# )
Symbol(29, 512, 2, | )
Symbol(3, 514, 4, #0# )
Symbol(2, 518, 9, "Jancsi" )
Symbol(16, 527, 5, <np> )
Symbol(87, 532, 5, <sg> )
Symbol(55, 537, 6, <nom> )
Symbol(29, 543, 2, | )
Symbol(8, 545, 6, #EOC# )
Symbol(10, 551, 4, $0$ )
Symbol(2, 555, 6, "<.>" )
Symbol(7, 561, 6, #BOC# )
Symbol(29, 567, 2, | )
Symbol(3, 569, 4, #0# )
Symbol(2, 573, 4, "." )
Symbol(64, 577, 7, <sent> )
Symbol(2, 584, 6, <<<<> )
Symbol(29, 590, 2, | )
Symbol(8, 592, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 70 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(119): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 21 25 25 25 25 16 21 25 25 25 25 16 22 5 7 9 11 12 13 13 16 21 25 25 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 68, q = 8, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 100, q = 12, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(111): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 180, 6, "nem" )
Symbol(91, 186, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 197, 6, "nem" )
Symbol(54, 203, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 221, 10, "<tudja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 243, 6, "tud" )
Symbol(38, 249, 8, <vblex> )
Symbol(37, 257, 7, <pres> )
Symbol(87, 264, 5, <sg> )
Symbol(2, 269, 6, <s3p> )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 336, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 4, "," )
Symbol(44, 358, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 375, 8, "<hol>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 395, 6, "hol" )
Symbol(54, 401, 6, <adv> )
Symbol(70, 407, 6, <itg> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 425, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 445, 6, "van" )
Symbol(48, 451, 8, <vbser> )
Symbol(37, 459, 7, <pres> )
Symbol(87, 466, 5, <sg> )
Symbol(2, 471, 6, <s3p> )
Symbol(2, 477, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 495, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 518, 9, "Jancsi" )
Symbol(16, 527, 5, <np> )
Symbol(87, 532, 5, <sg> )
Symbol(55, 537, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 555, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 573, 4, "." )
Symbol(64, 577, 7, <sent> )
Symbol(2, 584, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 70 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_3_283_T_1


LRS T1:
Name: R_3_283_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 82 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 82 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 82 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 16 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(111): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 180, 6, "nem" )
Symbol(91, 186, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 197, 6, "nem" )
Symbol(54, 203, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 221, 10, "<tudja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 243, 6, "tud" )
Symbol(38, 249, 8, <vblex> )
Symbol(37, 257, 7, <pres> )
Symbol(87, 264, 5, <sg> )
Symbol(2, 269, 6, <s3p> )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 336, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 4, "," )
Symbol(44, 358, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 375, 8, "<hol>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 395, 6, "hol" )
Symbol(54, 401, 6, <adv> )
Symbol(70, 407, 6, <itg> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 425, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 445, 6, "van" )
Symbol(48, 451, 8, <vbser> )
Symbol(37, 459, 7, <pres> )
Symbol(87, 466, 5, <sg> )
Symbol(2, 471, 6, <s3p> )
Symbol(2, 477, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 495, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 518, 9, "Jancsi" )
Symbol(16, 527, 5, <np> )
Symbol(87, 532, 5, <sg> )
Symbol(55, 537, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 555, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 573, 4, "." )
Symbol(64, 577, 7, <sent> )
Symbol(2, 584, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 70 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 82, q = 8, out = 14
trans_offset 32, signum = 16, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 16, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(111): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 16 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 15 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 22, q = 4, out = 2
trans_offset 21, q = 4, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 16
trans_offset 23, q = 4, out = 82
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(99): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 0, 0, )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 180, 6, "nem" )
Symbol(91, 186, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 197, 6, "nem" )
Symbol(54, 203, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 221, 10, "<tudja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 243, 6, "tud" )
Symbol(38, 249, 8, <vblex> )
Symbol(37, 257, 7, <pres> )
Symbol(87, 264, 5, <sg> )
Symbol(2, 269, 6, <s3p> )
Symbol(2, 275, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 336, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 4, "," )
Symbol(44, 358, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 375, 8, "<hol>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 395, 6, "hol" )
Symbol(54, 401, 6, <adv> )
Symbol(70, 407, 6, <itg> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 425, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 445, 6, "van" )
Symbol(48, 451, 8, <vbser> )
Symbol(37, 459, 7, <pres> )
Symbol(87, 466, 5, <sg> )
Symbol(2, 471, 6, <s3p> )
Symbol(2, 477, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 495, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 518, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 532, 5, <sg> )
Symbol(55, 537, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 555, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 573, 4, "." )
Symbol(64, 577, 7, <sent> )
Symbol(2, 584, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 70 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Megkérdezi>" #BOC# | #0# "megkérdez" <vblex> <pres> <sg> <s3p> <def> | #0# "meg" <prevb> + "kérdez" <vblex> <pres> <sg> <s3p> <def> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kutyát>" #BOC# | #0# "kutya" <adj> <sg> <acc> | #0# "kutya" <n> <sg> <acc> | #EOC# $0$ "<:>" #BOC# | #0# ":" <sent> <<<<> | #EOC# 
Rule found: R_3_284_T_1


LRS T1:
Name: R_3_284_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 83 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 83 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 83 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 15 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(70): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 16, "<Megkérdezi>" )
Symbol(7, 62, 6, #BOC# )
Symbol(29, 68, 2, | )
Symbol(3, 70, 4, #0# )
Symbol(2, 74, 13, "megkérdez" )
Symbol(38, 87, 8, <vblex> )
Symbol(37, 95, 7, <pres> )
Symbol(87, 102, 5, <sg> )
Symbol(2, 107, 6, <s3p> )
Symbol(2, 113, 6, <def> )
Symbol(29, 119, 2, | )
Symbol(3, 121, 4, #0# )
Symbol(2, 125, 6, "meg" )
Symbol(60, 131, 8, <prevb> )
Symbol(2, 139, 2, + )
Symbol(2, 141, 10, "kérdez" )
Symbol(38, 151, 8, <vblex> )
Symbol(37, 159, 7, <pres> )
Symbol(87, 166, 5, <sg> )
Symbol(2, 171, 6, <s3p> )
Symbol(2, 177, 6, <def> )
Symbol(29, 183, 2, | )
Symbol(8, 185, 6, #EOC# )
Symbol(10, 191, 4, $0$ )
Symbol(2, 195, 6, "<a>" )
Symbol(7, 201, 6, #BOC# )
Symbol(29, 207, 2, | )
Symbol(3, 209, 4, #0# )
Symbol(2, 213, 4, "a" )
Symbol(73, 217, 6, <det> )
Symbol(2, 223, 6, <def> )
Symbol(29, 229, 2, | )
Symbol(8, 231, 6, #EOC# )
Symbol(10, 237, 4, $0$ )
Symbol(2, 241, 12, "<kutyát>" )
Symbol(7, 253, 6, #BOC# )
Symbol(29, 259, 2, | )
Symbol(3, 261, 4, #0# )
Symbol(83, 265, 8, "kutya" )
Symbol(53, 273, 6, <adj> )
Symbol(87, 279, 5, <sg> )
Symbol(71, 284, 6, <acc> )
Symbol(29, 290, 2, | )
Symbol(3, 292, 4, #0# )
Symbol(83, 296, 8, "kutya" )
Symbol(15, 304, 4, <n> )
Symbol(87, 308, 5, <sg> )
Symbol(71, 313, 6, <acc> )
Symbol(29, 319, 2, | )
Symbol(8, 321, 6, #EOC# )
Symbol(10, 327, 4, $0$ )
Symbol(2, 331, 6, "<:>" )
Symbol(7, 337, 6, #BOC# )
Symbol(29, 343, 2, | )
Symbol(3, 345, 4, #0# )
Symbol(2, 349, 4, ":" )
Symbol(64, 353, 7, <sent> )
Symbol(2, 360, 6, <<<<> )
Symbol(29, 366, 2, | )
Symbol(8, 368, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 71 29 3 83 15 87 71 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 83, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 83, q = 8, out = 14
trans_offset 32, signum = 15, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(70): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 12 13 13 13 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 14 17 17 17 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 23, q = 4, out = 83
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 78, q = 10, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 92, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(64): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 16, "<Megkérdezi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 74, 13, "megkérdez" )
Symbol(38, 87, 8, <vblex> )
Symbol(37, 95, 7, <pres> )
Symbol(87, 102, 5, <sg> )
Symbol(2, 107, 6, <s3p> )
Symbol(2, 113, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 125, 6, "meg" )
Symbol(60, 131, 8, <prevb> )
Symbol(2, 139, 2, + )
Symbol(2, 141, 10, "kérdez" )
Symbol(38, 151, 8, <vblex> )
Symbol(37, 159, 7, <pres> )
Symbol(87, 166, 5, <sg> )
Symbol(2, 171, 6, <s3p> )
Symbol(2, 177, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 195, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 213, 4, "a" )
Symbol(73, 217, 6, <det> )
Symbol(2, 223, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 241, 12, "<kutyát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 308, 5, <sg> )
Symbol(71, 313, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 331, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 349, 4, ":" )
Symbol(64, 353, 7, <sent> )
Symbol(2, 360, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 15 87 71 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<„>" #BOC# | #0# "„" <quot> | #EOC# $0$ "<Láttad>" #BOC# | #0# "lát" <vblex> <past> <sg> <s2p> <def> | #EOC# $0$ "<Jancsit>" #BOC# | #0# "Jancsi" <np> <sg> <acc> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<”>" #BOC# | #0# "”" <quot> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<De>" #BOC# | #0# "de" <adv> | #0# "de" <cnjcoo> | #EOC# $0$ "<persze>" #BOC# | #0# "persze" <ij> | #0# "persze" <cnjcoo> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kutya>" #BOC# | #0# "kutya" <adj> <sg> <nom> | #0# "kutya" <n> <sg> <nom> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<tud>" #BOC# | #0# "tud" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<beszélni>" #BOC# | #0# "beszél" <vblex> <inf> <sg> <s3p> <ind> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Rule found: R_1_198_T_1


LRS T1:
Name: R_1_198_T_1
arity: 2
arccount: 183
statecount: 45
linecount: 184
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 65 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 53 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 54 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 65 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 53 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 54 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 53 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 3 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 7
  in: 2 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 7
  in: 53 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 65 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 54 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 10
  in: 3 -- 
  out: 14 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 11
  in: 2 -- 
  out: 40 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 53 -- 
  out: 42 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 12
  in: 2 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 53 -- 
  out: 17 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 12
  in: 54 -- 
  out: 18 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 12
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 13
  in: 2 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 13
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 13
  in: 53 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 65 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 2 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 53 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 3 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 32 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 53 -- 
  out: 34 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 54 -- 
  out: 35 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 10 -- 
  out: 5 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 2 -- 
  out: 40 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 53 -- 
  out: 42 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 2 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 7 -- 
  out: 10 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 53 -- 
  out: 11 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 54 -- 
  out: 12 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 65 -- 
  out: 9 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 29 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 21
  in: 3 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 22
  in: 2 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 22
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 22
  in: 54 -- 
  out: 18 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 22
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 2 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 23
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 23
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 23
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 2 -- 
  out: 15 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 24
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 24
  in: 54 -- 
  out: 18 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 24
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 2 -- 
  out: 20 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 25
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 25
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 25
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 2 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 26
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 26
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 26
  in: 65 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 27
  in: 3 -- 
  out: 25 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 27
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 2 -- 
  out: 27 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 29 -- 
  out: 31 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 28
  in: 65 -- 
  out: 28 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 2 -- 
  out: 32 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 54 -- 
  out: 35 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 14 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 40 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 32
  in: 2 -- 
  out: 32 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 32
  in: 54 -- 
  out: 35 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 32
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 33
  in: 2 -- 
  out: 15 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 33
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 33
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 33
  in: 54 -- 
  out: 18 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 33
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 2 -- 
  out: 40 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 34
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 34
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 34
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 34
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 2 -- 
  out: 50 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 35
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 35
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 35
  in: 65 -- 
  out: 51 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 2 -- 
  out: 20 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 36
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 36
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 37
  in: 2 -- 
  out: 15 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 37
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 37
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 37
  in: 54 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 37
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 2 -- 
  out: 50 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 38
  in: 29 -- 
  out: 54 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 38
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 38
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 38
  in: 65 -- 
  out: 51 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 39
  in: 2 -- 
  out: 20 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 39
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 39
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 39
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 39
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 40
  in: 3 -- 
  out: 25 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 40
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 41
  in: 2 -- 
  out: 32 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 41
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 41
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 41
  in: 54 -- 
  out: 35 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 41
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 42
  in: 2 -- 
  out: 40 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 42
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 42
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 42
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 42
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 43
  in: 2 -- 
  out: 32 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 43
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 43
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 43
  in: 54 -- 
  out: 35 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 43
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 44
  in: 2 -- 
  out: 40 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 44
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 44
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 44
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 44
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(183):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(111): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(65, 65, 5, "de" )
Symbol(54, 70, 6, <adv> )
Symbol(29, 76, 2, | )
Symbol(3, 78, 4, #0# )
Symbol(65, 82, 5, "de" )
Symbol(45, 87, 9, <cnjcoo> )
Symbol(29, 96, 2, | )
Symbol(8, 98, 6, #EOC# )
Symbol(10, 104, 4, $0$ )
Symbol(2, 108, 11, "<persze>" )
Symbol(7, 119, 6, #BOC# )
Symbol(29, 125, 2, | )
Symbol(3, 127, 4, #0# )
Symbol(2, 131, 9, "persze" )
Symbol(91, 140, 5, <ij> )
Symbol(29, 145, 2, | )
Symbol(3, 147, 4, #0# )
Symbol(2, 151, 9, "persze" )
Symbol(45, 160, 9, <cnjcoo> )
Symbol(29, 169, 2, | )
Symbol(8, 171, 6, #EOC# )
Symbol(10, 177, 4, $0$ )
Symbol(2, 181, 6, "<a>" )
Symbol(7, 187, 6, #BOC# )
Symbol(29, 193, 2, | )
Symbol(3, 195, 4, #0# )
Symbol(2, 199, 4, "a" )
Symbol(73, 203, 6, <det> )
Symbol(2, 209, 6, <def> )
Symbol(29, 215, 2, | )
Symbol(8, 217, 6, #EOC# )
Symbol(10, 223, 4, $0$ )
Symbol(2, 227, 10, "<kutya>" )
Symbol(7, 237, 6, #BOC# )
Symbol(29, 243, 2, | )
Symbol(3, 245, 4, #0# )
Symbol(83, 249, 8, "kutya" )
Symbol(53, 257, 6, <adj> )
Symbol(87, 263, 5, <sg> )
Symbol(55, 268, 6, <nom> )
Symbol(29, 274, 2, | )
Symbol(3, 276, 4, #0# )
Symbol(83, 280, 8, "kutya" )
Symbol(15, 288, 4, <n> )
Symbol(87, 292, 5, <sg> )
Symbol(55, 297, 6, <nom> )
Symbol(29, 303, 2, | )
Symbol(8, 305, 6, #EOC# )
Symbol(10, 311, 4, $0$ )
Symbol(2, 315, 8, "<nem>" )
Symbol(7, 323, 6, #BOC# )
Symbol(29, 329, 2, | )
Symbol(3, 331, 4, #0# )
Symbol(2, 335, 6, "nem" )
Symbol(91, 341, 5, <ij> )
Symbol(29, 346, 2, | )
Symbol(3, 348, 4, #0# )
Symbol(2, 352, 6, "nem" )
Symbol(54, 358, 6, <adv> )
Symbol(29, 364, 2, | )
Symbol(8, 366, 6, #EOC# )
Symbol(10, 372, 4, $0$ )
Symbol(2, 376, 8, "<tud>" )
Symbol(7, 384, 6, #BOC# )
Symbol(29, 390, 2, | )
Symbol(3, 392, 4, #0# )
Symbol(2, 396, 6, "tud" )
Symbol(38, 402, 8, <vblex> )
Symbol(37, 410, 7, <pres> )
Symbol(87, 417, 5, <sg> )
Symbol(2, 422, 6, <s3p> )
Symbol(2, 428, 6, <ind> )
Symbol(29, 434, 2, | )
Symbol(8, 436, 6, #EOC# )
Symbol(10, 442, 4, $0$ )
Symbol(2, 446, 14, "<beszélni>" )
Symbol(7, 460, 6, #BOC# )
Symbol(29, 466, 2, | )
Symbol(3, 468, 4, #0# )
Symbol(2, 472, 10, "beszél" )
Symbol(38, 482, 8, <vblex> )
Symbol(52, 490, 6, <inf> )
Symbol(87, 496, 5, <sg> )
Symbol(2, 501, 6, <s3p> )
Symbol(2, 507, 6, <ind> )
Symbol(29, 513, 2, | )
Symbol(8, 515, 6, #EOC# )
Symbol(10, 521, 4, $0$ )
Symbol(2, 525, 6, "<!>" )
Symbol(7, 531, 6, #BOC# )
Symbol(29, 537, 2, | )
Symbol(3, 539, 4, #0# )
Symbol(39, 543, 4, "!" )
Symbol(64, 547, 7, <sent> )
Symbol(2, 554, 6, <<<<> )
Symbol(29, 560, 2, | )
Symbol(8, 562, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 2 91 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 16, signum = 65, q = 4, out = 16
trans_offset 20, signum = 54, q = 5, out = 23
trans_offset 25, signum = 29, q = 7, out = 31
trans_offset 35, signum = 3, q = 10, out = 14
trans_offset 46, signum = 65, q = 12, out = 16
trans_offset 52, signum = 2, q = 14, out = 20
trans_offset 53, signum = 29, q = 14, out = 19
trans_offset 58, signum = 8, q = 15, out = 26
trans_offset 64, signum = 10, q = 17, out = 5
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 10
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 14, signum = 53, q = 4, out = 17
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 32, signum = 54, q = 8, out = 35
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26

Intermediate is(111): 
5 8 10 13 14 15 15 19 26 5 8 10 13 14 16 23 31 14 16 20 19 26 5 8 10 13 14 15 15 19 25 32 32 19 26 5 8 10 13 14 15 15 15 19 26 5 8 10 13 14 15 17 15 15 19 25 32 32 32 32 19 26 5 8 10 13 14 15 15 19 25 32 35 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 15 19 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 19, q = 2, out = 54
trans_offset 64, q = 5, out = 2
trans_offset 60, q = 5, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 76, q = 6, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 145, q = 10, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 76, q = 6, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 148, q = 10, out = 53
trans_offset 146, q = 10, out = 2
trans_offset 145, q = 10, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 76, q = 6, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 145, q = 10, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 6, q = 2, out = 65
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 0
trans_offset 82, q = 6, out = 0
trans_offset 174, q = 12, out = 0
trans_offset 248, q = 17, out = 0
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10

Output is(107): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 87, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<persze>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 131, 9, "persze" )
Symbol(91, 140, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 151, 9, "persze" )
Symbol(45, 160, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 181, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 4, "a" )
Symbol(73, 203, 6, <det> )
Symbol(2, 209, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 227, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 249, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 263, 5, <sg> )
Symbol(55, 268, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 280, 8, "kutya" )
Symbol(15, 288, 4, <n> )
Symbol(87, 292, 5, <sg> )
Symbol(55, 297, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 315, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 335, 6, "nem" )
Symbol(91, 341, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 352, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 376, 8, "<tud>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 396, 6, "tud" )
Symbol(38, 402, 8, <vblex> )
Symbol(37, 410, 7, <pres> )
Symbol(87, 417, 5, <sg> )
Symbol(2, 422, 6, <s3p> )
Symbol(2, 428, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 446, 14, "<beszélni>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 472, 10, "beszél" )
Symbol(38, 482, 8, <vblex> )
Symbol(52, 490, 6, <inf> )
Symbol(87, 496, 5, <sg> )
Symbol(2, 501, 6, <s3p> )
Symbol(2, 507, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 525, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 543, 4, "!" )
Symbol(64, 547, 7, <sent> )
Symbol(2, 554, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 91 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_2_242_T_1


LRS T1:
Name: R_2_242_T_1
arity: 2
arccount: 158
statecount: 31
linecount: 159
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 44 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 45 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 63 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 64 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 80 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 81 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 1
  in: 2 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 7 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 44 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 45 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 63 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 64 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 80 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 81 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 29 -- 
  out: 19 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 3
  in: 3 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 2 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 29 -- 
  out: 28 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 44 -- 
  out: 24 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 63 -- 
  out: 26 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 4
  in: 64 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 80 -- 
  out: 23 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 5
  in: 2 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 5
  in: 29 -- 
  out: 28 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 5
  in: 44 -- 
  out: 32 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 45 -- 
  out: 33 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 5
  in: 63 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 5
  in: 64 -- 
  out: 35 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 5
  in: 80 -- 
  out: 31 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 5
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 6
  in: 29 -- 
  out: 28 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 6
  in: 44 -- 
  out: 24 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 6
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 6
  in: 63 -- 
  out: 26 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 6
  in: 64 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 6
  in: 80 -- 
  out: 23 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 6
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 7
  in: 2 -- 
  out: 45 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 7
  in: 29 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 7
  in: 44 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 7
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 7
  in: 63 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 7
  in: 64 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 7
  in: 80 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 7
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 8
  in: 3 -- 
  out: 53 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 8
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 9
  in: 2 -- 
  out: 29 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 9
  in: 29 -- 
  out: 28 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 9
  in: 44 -- 
  out: 32 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 9
  in: 45 -- 
  out: 33 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 9
  in: 63 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 9
  in: 64 -- 
  out: 35 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 9
  in: 80 -- 
  out: 31 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 9
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 10
  in: 3 -- 
  out: 63 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 10
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 11
  in: 2 -- 
  out: 45 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 11
  in: 29 -- 
  out: 52 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 11
  in: 44 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 11
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 11
  in: 63 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 11
  in: 64 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 11
  in: 80 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 11
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 12
  in: 3 -- 
  out: 53 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 12
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 13
  in: 3 -- 
  out: 20 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 13
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 14
  in: 2 -- 
  out: 77 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 14
  in: 29 -- 
  out: 28 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 14
  in: 44 -- 
  out: 80 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 14
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 14
  in: 63 -- 
  out: 82 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 14
  in: 64 -- 
  out: 83 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 14
  in: 80 -- 
  out: 79 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 14
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 15
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(83):
  state_no: 16
  in: 3 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 16
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 17
  in: 3 -- 
  out: 20 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 17
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 18
  in: 2 -- 
  out: 77 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 18
  in: 29 -- 
  out: 28 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 18
  in: 44 -- 
  out: 80 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 18
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 18
  in: 63 -- 
  out: 82 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 18
  in: 64 -- 
  out: 83 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 18
  in: 80 -- 
  out: 79 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 18
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 19
  in: 10 -- 
  out: 5 -- 
  target: 24
  final_state: 1
  start_state: 0
Elem(96):
  state_no: 20
  in: 2 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 20
  in: 29 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 20
  in: 44 -- 
  out: 24 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 20
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 20
  in: 63 -- 
  out: 26 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 20
  in: 64 -- 
  out: 27 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 20
  in: 80 -- 
  out: 23 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 20
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 21
  in: 2 -- 
  out: 107 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 21
  in: 29 -- 
  out: 114 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 21
  in: 44 -- 
  out: 110 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 21
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 21
  in: 63 -- 
  out: 112 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 21
  in: 64 -- 
  out: 113 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 21
  in: 80 -- 
  out: 109 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 21
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 22
  in: 29 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 22
  in: 44 -- 
  out: 24 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 22
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 22
  in: 63 -- 
  out: 26 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 22
  in: 64 -- 
  out: 27 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 22
  in: 80 -- 
  out: 23 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 22
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 23
  in: 2 -- 
  out: 107 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 23
  in: 29 -- 
  out: 114 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 23
  in: 44 -- 
  out: 110 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 23
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 23
  in: 63 -- 
  out: 112 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 23
  in: 64 -- 
  out: 113 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 23
  in: 80 -- 
  out: 109 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 23
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 24
  in: 2 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 24
  in: 7 -- 
  out: 13 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 24
  in: 44 -- 
  out: 15 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 24
  in: 45 -- 
  out: 16 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 24
  in: 63 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 24
  in: 64 -- 
  out: 18 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 24
  in: 80 -- 
  out: 14 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 24
  in: 81 -- 
  out: 12 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 25
  in: 3 -- 
  out: 53 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 25
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 26
  in: 3 -- 
  out: 53 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 26
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 27
  in: 29 -- 
  out: 19 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 28
  in: 2 -- 
  out: 77 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 28
  in: 29 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 28
  in: 44 -- 
  out: 80 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 28
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 28
  in: 63 -- 
  out: 82 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 28
  in: 64 -- 
  out: 83 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 28
  in: 80 -- 
  out: 79 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 28
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 29
  in: 2 -- 
  out: 77 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 29
  in: 29 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 29
  in: 44 -- 
  out: 80 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 29
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 29
  in: 63 -- 
  out: 82 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 29
  in: 64 -- 
  out: 83 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 29
  in: 80 -- 
  out: 79 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 29
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 30
  in: 3 -- 
  out: 63 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(158):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(107): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 87, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<persze>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 131, 9, "persze" )
Symbol(91, 140, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 151, 9, "persze" )
Symbol(45, 160, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 181, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 4, "a" )
Symbol(73, 203, 6, <det> )
Symbol(2, 209, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 227, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 249, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 263, 5, <sg> )
Symbol(55, 268, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 280, 8, "kutya" )
Symbol(15, 288, 4, <n> )
Symbol(87, 292, 5, <sg> )
Symbol(55, 297, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 315, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 335, 6, "nem" )
Symbol(91, 341, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 352, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 376, 8, "<tud>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 396, 6, "tud" )
Symbol(38, 402, 8, <vblex> )
Symbol(37, 410, 7, <pres> )
Symbol(87, 417, 5, <sg> )
Symbol(2, 422, 6, <s3p> )
Symbol(2, 428, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 446, 14, "<beszélni>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 472, 10, "beszél" )
Symbol(38, 482, 8, <vblex> )
Symbol(52, 490, 6, <inf> )
Symbol(87, 496, 5, <sg> )
Symbol(2, 501, 6, <s3p> )
Symbol(2, 507, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 525, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 543, 4, "!" )
Symbol(64, 547, 7, <sent> )
Symbol(2, 554, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 91 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 24, signum = 80, q = 4, out = 23
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54
trans_offset 95, signum = 10, q = 19, out = 5
trans_offset 128, signum = 2, q = 24, out = 11
trans_offset 129, signum = 7, q = 24, out = 13
trans_offset 140, signum = 29, q = 27, out = 19
trans_offset 157, signum = 3, q = 30, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 29, signum = 45, q = 5, out = 33
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 61, signum = 8, q = 10, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 77, signum = 45, q = 14, out = 81
trans_offset 105, signum = 29, q = 21, out = 114
trans_offset 137, signum = 8, q = 25, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 75, signum = 29, q = 14, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 75, signum = 29, q = 14, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 23, signum = 64, q = 4, out = 27
trans_offset 34, signum = 2, q = 6, out = 21
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54

Intermediate is(107): 
5 11 13 19 20 21 23 28 54 5 11 13 19 63 29 33 28 54 5 11 13 19 20 21 21 28 53 77 81 114 54 5 11 13 19 20 21 21 21 28 54 5 11 13 19 20 21 21 21 21 28 53 77 77 77 77 28 54 5 11 13 19 20 21 21 28 53 77 77 28 54 5 11 13 19 20 21 21 21 21 21 21 28 54 5 11 13 19 20 21 21 21 21 21 21 28 54 5 11 13 19 20 21 27 21 28 54 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 11, q = 2, out = 64
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 23, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 110, q = 7, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 178, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 23, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 110, q = 7, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 178, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 28, q = 2, out = 0
trans_offset 93, q = 5, out = 0
trans_offset 91, q = 5, out = 0
trans_offset 142, q = 8, out = 29
trans_offset 252, q = 13, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 15, q = 2, out = 45
trans_offset 80, q = 5, out = 2
trans_offset 92, q = 5, out = 3
trans_offset 141, q = 8, out = 29
trans_offset 250, q = 13, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10

Output is(103): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<persze>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 131, 9, "persze" )
Symbol(91, 140, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 181, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 4, "a" )
Symbol(73, 203, 6, <det> )
Symbol(2, 209, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 227, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 249, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 263, 5, <sg> )
Symbol(55, 268, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 280, 8, "kutya" )
Symbol(15, 288, 4, <n> )
Symbol(87, 292, 5, <sg> )
Symbol(55, 297, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 315, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 335, 6, "nem" )
Symbol(91, 341, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 352, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 376, 8, "<tud>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 396, 6, "tud" )
Symbol(38, 402, 8, <vblex> )
Symbol(37, 410, 7, <pres> )
Symbol(87, 417, 5, <sg> )
Symbol(2, 422, 6, <s3p> )
Symbol(2, 428, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 446, 14, "<beszélni>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 472, 10, "beszél" )
Symbol(38, 482, 8, <vblex> )
Symbol(52, 490, 6, <inf> )
Symbol(87, 496, 5, <sg> )
Symbol(2, 501, 6, <s3p> )
Symbol(2, 507, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 525, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 543, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 554, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 91 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_3_284_T_1


LRS T1:
Name: R_3_284_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 83 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 83 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 83 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 15 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(103): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<persze>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 131, 9, "persze" )
Symbol(91, 140, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 181, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 4, "a" )
Symbol(73, 203, 6, <det> )
Symbol(2, 209, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 227, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 249, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 263, 5, <sg> )
Symbol(55, 268, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 280, 8, "kutya" )
Symbol(15, 288, 4, <n> )
Symbol(87, 292, 5, <sg> )
Symbol(55, 297, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 315, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 335, 6, "nem" )
Symbol(91, 341, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 352, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 376, 8, "<tud>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 396, 6, "tud" )
Symbol(38, 402, 8, <vblex> )
Symbol(37, 410, 7, <pres> )
Symbol(87, 417, 5, <sg> )
Symbol(2, 422, 6, <s3p> )
Symbol(2, 428, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 446, 14, "<beszélni>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 472, 10, "beszél" )
Symbol(38, 482, 8, <vblex> )
Symbol(52, 490, 6, <inf> )
Symbol(87, 496, 5, <sg> )
Symbol(2, 501, 6, <s3p> )
Symbol(2, 507, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 525, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 543, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 554, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 91 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 83, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 83, q = 8, out = 14
trans_offset 32, signum = 15, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(103): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 14 17 17 17 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 16 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 23, q = 4, out = 83
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 78, q = 10, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 92, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(97): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<De>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 108, 11, "<persze>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 131, 9, "persze" )
Symbol(91, 140, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 181, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 4, "a" )
Symbol(73, 203, 6, <det> )
Symbol(2, 209, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 227, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 292, 5, <sg> )
Symbol(55, 297, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 315, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 335, 6, "nem" )
Symbol(91, 341, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 352, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 376, 8, "<tud>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 396, 6, "tud" )
Symbol(38, 402, 8, <vblex> )
Symbol(37, 410, 7, <pres> )
Symbol(87, 417, 5, <sg> )
Symbol(2, 422, 6, <s3p> )
Symbol(2, 428, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 446, 14, "<beszélni>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 472, 10, "beszél" )
Symbol(38, 482, 8, <vblex> )
Symbol(52, 490, 6, <inf> )
Symbol(87, 496, 5, <sg> )
Symbol(2, 501, 6, <s3p> )
Symbol(2, 507, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 525, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 543, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 554, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 91 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 15 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Így>" #BOC# | #0# "így" <adv> | #0# "így" <cnjadv> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<kap>" #BOC# | #0# "kap" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<választ>" #BOC# | #0# "válasz" <n> <sg> <acc> | #0# "választ" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kérdésére>" #BOC# | #0# "kérdés" <n> <sg> <px3ss> <sub> | #0# "kérdés" <n> <sg> <pxs> <sub> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_201_T_1


LRS T1:
Name: R_1_201_T_1
arity: 2
arccount: 249
statecount: 45
linecount: 250
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 38 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 47 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 48 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 54 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 66 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 1
  in: 2 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 7 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 38 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 47 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 48 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 54 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 66 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 29 -- 
  out: 17 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 3
  in: 3 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 2 -- 
  out: 19 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 4
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 38 -- 
  out: 22 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 47 -- 
  out: 23 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 48 -- 
  out: 24 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 54 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 66 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 5
  in: 2 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 5
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 38 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 5
  in: 47 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 5
  in: 48 -- 
  out: 31 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 5
  in: 54 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 66 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 6
  in: 3 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 6
  in: 8 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 7
  in: 2 -- 
  out: 35 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 7
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 7
  in: 38 -- 
  out: 38 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 7
  in: 47 -- 
  out: 39 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 7
  in: 48 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 7
  in: 54 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 7
  in: 66 -- 
  out: 36 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 8
  in: 2 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 8
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 8
  in: 38 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 8
  in: 47 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 8
  in: 48 -- 
  out: 47 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 8
  in: 54 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 8
  in: 66 -- 
  out: 43 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(47):
  state_no: 10
  in: 3 -- 
  out: 18 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 10
  in: 8 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 11
  in: 2 -- 
  out: 52 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 11
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 11
  in: 38 -- 
  out: 55 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 11
  in: 47 -- 
  out: 56 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 11
  in: 48 -- 
  out: 57 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 11
  in: 54 -- 
  out: 54 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 11
  in: 66 -- 
  out: 43 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 12
  in: 2 -- 
  out: 19 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 12
  in: 29 -- 
  out: 25 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 12
  in: 38 -- 
  out: 22 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 12
  in: 47 -- 
  out: 23 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 12
  in: 48 -- 
  out: 24 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 12
  in: 54 -- 
  out: 21 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 12
  in: 66 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 13
  in: 2 -- 
  out: 66 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 13
  in: 29 -- 
  out: 72 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 13
  in: 38 -- 
  out: 69 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 13
  in: 47 -- 
  out: 70 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 13
  in: 48 -- 
  out: 71 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 13
  in: 54 -- 
  out: 54 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 13
  in: 66 -- 
  out: 67 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 14
  in: 2 -- 
  out: 26 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 14
  in: 29 -- 
  out: 25 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 14
  in: 38 -- 
  out: 29 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 14
  in: 47 -- 
  out: 30 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 14
  in: 48 -- 
  out: 31 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 14
  in: 54 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 14
  in: 66 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 15
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 15
  in: 8 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 16
  in: 2 -- 
  out: 42 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 16
  in: 29 -- 
  out: 25 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 16
  in: 38 -- 
  out: 45 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 16
  in: 47 -- 
  out: 46 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 16
  in: 48 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 16
  in: 54 -- 
  out: 44 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 16
  in: 66 -- 
  out: 43 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 17
  in: 10 -- 
  out: 5 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 18
  in: 2 -- 
  out: 52 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 18
  in: 29 -- 
  out: 25 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 18
  in: 38 -- 
  out: 55 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 18
  in: 47 -- 
  out: 56 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 18
  in: 48 -- 
  out: 57 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 18
  in: 54 -- 
  out: 54 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 18
  in: 66 -- 
  out: 43 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 19
  in: 2 -- 
  out: 10 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 19
  in: 7 -- 
  out: 12 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 19
  in: 38 -- 
  out: 14 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 19
  in: 47 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 19
  in: 48 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 19
  in: 54 -- 
  out: 13 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 19
  in: 66 -- 
  out: 11 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 20
  in: 29 -- 
  out: 17 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 21
  in: 3 -- 
  out: 18 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 22
  in: 2 -- 
  out: 19 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 22
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 22
  in: 38 -- 
  out: 22 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 22
  in: 47 -- 
  out: 23 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 22
  in: 48 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 22
  in: 54 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 22
  in: 66 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 23
  in: 2 -- 
  out: 26 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 23
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 23
  in: 38 -- 
  out: 29 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 23
  in: 47 -- 
  out: 30 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 23
  in: 48 -- 
  out: 31 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 23
  in: 54 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 23
  in: 66 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 24
  in: 2 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 24
  in: 29 -- 
  out: 25 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 24
  in: 38 -- 
  out: 22 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 24
  in: 47 -- 
  out: 23 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 24
  in: 48 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 24
  in: 54 -- 
  out: 21 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 24
  in: 66 -- 
  out: 20 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 25
  in: 2 -- 
  out: 35 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 25
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 25
  in: 38 -- 
  out: 38 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 25
  in: 47 -- 
  out: 39 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 25
  in: 48 -- 
  out: 40 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 25
  in: 54 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 25
  in: 66 -- 
  out: 36 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 26
  in: 2 -- 
  out: 26 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 26
  in: 29 -- 
  out: 25 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 26
  in: 38 -- 
  out: 29 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 26
  in: 47 -- 
  out: 30 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 26
  in: 48 -- 
  out: 31 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 26
  in: 54 -- 
  out: 28 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 26
  in: 66 -- 
  out: 20 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 27
  in: 3 -- 
  out: 33 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 27
  in: 8 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 28
  in: 2 -- 
  out: 35 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 28
  in: 29 -- 
  out: 41 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 28
  in: 38 -- 
  out: 38 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 28
  in: 47 -- 
  out: 39 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 28
  in: 48 -- 
  out: 40 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 28
  in: 54 -- 
  out: 28 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 28
  in: 66 -- 
  out: 36 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 29
  in: 2 -- 
  out: 42 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 29
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 29
  in: 38 -- 
  out: 45 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 29
  in: 47 -- 
  out: 46 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 29
  in: 48 -- 
  out: 47 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 29
  in: 54 -- 
  out: 44 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 29
  in: 66 -- 
  out: 43 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 30
  in: 3 -- 
  out: 18 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 30
  in: 8 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 31
  in: 2 -- 
  out: 52 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 31
  in: 29 -- 
  out: 25 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 31
  in: 38 -- 
  out: 55 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 31
  in: 47 -- 
  out: 56 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 31
  in: 48 -- 
  out: 57 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 31
  in: 54 -- 
  out: 54 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 31
  in: 66 -- 
  out: 43 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 32
  in: 2 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 32
  in: 29 -- 
  out: 25 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 32
  in: 38 -- 
  out: 45 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 32
  in: 47 -- 
  out: 46 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 32
  in: 48 -- 
  out: 47 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 32
  in: 54 -- 
  out: 44 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 32
  in: 66 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 33
  in: 2 -- 
  out: 19 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 33
  in: 29 -- 
  out: 25 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 33
  in: 38 -- 
  out: 22 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 33
  in: 47 -- 
  out: 23 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 33
  in: 48 -- 
  out: 24 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 33
  in: 54 -- 
  out: 21 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 33
  in: 66 -- 
  out: 20 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 34
  in: 2 -- 
  out: 66 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 34
  in: 29 -- 
  out: 72 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 34
  in: 38 -- 
  out: 69 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 34
  in: 47 -- 
  out: 70 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 34
  in: 48 -- 
  out: 71 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 34
  in: 54 -- 
  out: 54 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 34
  in: 66 -- 
  out: 67 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 35
  in: 2 -- 
  out: 52 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 35
  in: 29 -- 
  out: 25 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 35
  in: 38 -- 
  out: 55 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 35
  in: 47 -- 
  out: 56 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 35
  in: 48 -- 
  out: 57 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 35
  in: 54 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 35
  in: 66 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 36
  in: 2 -- 
  out: 26 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 36
  in: 29 -- 
  out: 25 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 36
  in: 38 -- 
  out: 29 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 36
  in: 47 -- 
  out: 30 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 36
  in: 48 -- 
  out: 31 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 36
  in: 54 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 36
  in: 66 -- 
  out: 20 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 37
  in: 2 -- 
  out: 19 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 37
  in: 29 -- 
  out: 25 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 37
  in: 38 -- 
  out: 22 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 37
  in: 47 -- 
  out: 23 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 37
  in: 48 -- 
  out: 24 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 37
  in: 54 -- 
  out: 21 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 37
  in: 66 -- 
  out: 20 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 38
  in: 2 -- 
  out: 66 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 38
  in: 29 -- 
  out: 72 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 38
  in: 38 -- 
  out: 69 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 38
  in: 47 -- 
  out: 70 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 38
  in: 48 -- 
  out: 71 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 38
  in: 54 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 38
  in: 66 -- 
  out: 67 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 39
  in: 2 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 39
  in: 29 -- 
  out: 25 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 39
  in: 38 -- 
  out: 29 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 39
  in: 47 -- 
  out: 30 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 39
  in: 48 -- 
  out: 31 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 39
  in: 54 -- 
  out: 28 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 39
  in: 66 -- 
  out: 20 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 40
  in: 3 -- 
  out: 33 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 40
  in: 8 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 41
  in: 2 -- 
  out: 42 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 41
  in: 29 -- 
  out: 25 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 41
  in: 38 -- 
  out: 45 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 41
  in: 47 -- 
  out: 46 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 41
  in: 48 -- 
  out: 47 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 41
  in: 54 -- 
  out: 44 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 41
  in: 66 -- 
  out: 43 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 42
  in: 2 -- 
  out: 52 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 42
  in: 29 -- 
  out: 25 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 42
  in: 38 -- 
  out: 55 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 42
  in: 47 -- 
  out: 56 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 42
  in: 48 -- 
  out: 57 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 42
  in: 54 -- 
  out: 54 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 42
  in: 66 -- 
  out: 43 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 43
  in: 2 -- 
  out: 42 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 43
  in: 29 -- 
  out: 25 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 43
  in: 38 -- 
  out: 45 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 43
  in: 47 -- 
  out: 46 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 43
  in: 48 -- 
  out: 47 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 43
  in: 54 -- 
  out: 44 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 43
  in: 66 -- 
  out: 43 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 44
  in: 2 -- 
  out: 52 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 44
  in: 29 -- 
  out: 25 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 44
  in: 38 -- 
  out: 55 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 44
  in: 47 -- 
  out: 56 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 44
  in: 48 -- 
  out: 57 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 44
  in: 54 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 44
  in: 66 -- 
  out: 43 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(249):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(129): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Így>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(66, 67, 7, "így" )
Symbol(54, 74, 6, <adv> )
Symbol(29, 80, 2, | )
Symbol(3, 82, 4, #0# )
Symbol(66, 86, 7, "így" )
Symbol(2, 93, 9, <cnjadv> )
Symbol(29, 102, 2, | )
Symbol(8, 104, 6, #EOC# )
Symbol(10, 110, 4, $0$ )
Symbol(2, 114, 9, "<Mari>" )
Symbol(7, 123, 6, #BOC# )
Symbol(29, 129, 2, | )
Symbol(3, 131, 4, #0# )
Symbol(2, 135, 7, "mari" )
Symbol(53, 142, 6, <adj> )
Symbol(87, 148, 5, <sg> )
Symbol(55, 153, 6, <nom> )
Symbol(29, 159, 2, | )
Symbol(3, 161, 4, #0# )
Symbol(2, 165, 7, "mari" )
Symbol(15, 172, 4, <n> )
Symbol(87, 176, 5, <sg> )
Symbol(55, 181, 6, <nom> )
Symbol(29, 187, 2, | )
Symbol(3, 189, 4, #0# )
Symbol(82, 193, 7, "Mari" )
Symbol(16, 200, 5, <np> )
Symbol(87, 205, 5, <sg> )
Symbol(55, 210, 6, <nom> )
Symbol(29, 216, 2, | )
Symbol(8, 218, 6, #EOC# )
Symbol(10, 224, 4, $0$ )
Symbol(2, 228, 8, "<nem>" )
Symbol(7, 236, 6, #BOC# )
Symbol(29, 242, 2, | )
Symbol(3, 244, 4, #0# )
Symbol(2, 248, 6, "nem" )
Symbol(91, 254, 5, <ij> )
Symbol(29, 259, 2, | )
Symbol(3, 261, 4, #0# )
Symbol(2, 265, 6, "nem" )
Symbol(54, 271, 6, <adv> )
Symbol(29, 277, 2, | )
Symbol(8, 279, 6, #EOC# )
Symbol(10, 285, 4, $0$ )
Symbol(2, 289, 8, "<kap>" )
Symbol(7, 297, 6, #BOC# )
Symbol(29, 303, 2, | )
Symbol(3, 305, 4, #0# )
Symbol(78, 309, 6, "kap" )
Symbol(38, 315, 8, <vblex> )
Symbol(37, 323, 7, <pres> )
Symbol(87, 330, 5, <sg> )
Symbol(2, 335, 6, <s3p> )
Symbol(2, 341, 6, <ind> )
Symbol(29, 347, 2, | )
Symbol(8, 349, 6, #EOC# )
Symbol(10, 355, 4, $0$ )
Symbol(2, 359, 13, "<választ>" )
Symbol(7, 372, 6, #BOC# )
Symbol(29, 378, 2, | )
Symbol(3, 380, 4, #0# )
Symbol(79, 384, 10, "válasz" )
Symbol(15, 394, 4, <n> )
Symbol(87, 398, 5, <sg> )
Symbol(71, 403, 6, <acc> )
Symbol(29, 409, 2, | )
Symbol(3, 411, 4, #0# )
Symbol(2, 415, 11, "választ" )
Symbol(38, 426, 8, <vblex> )
Symbol(37, 434, 7, <pres> )
Symbol(87, 441, 5, <sg> )
Symbol(2, 446, 6, <s3p> )
Symbol(2, 452, 6, <ind> )
Symbol(29, 458, 2, | )
Symbol(8, 460, 6, #EOC# )
Symbol(10, 466, 4, $0$ )
Symbol(2, 470, 6, "<a>" )
Symbol(7, 476, 6, #BOC# )
Symbol(29, 482, 2, | )
Symbol(3, 484, 4, #0# )
Symbol(2, 488, 4, "a" )
Symbol(73, 492, 6, <det> )
Symbol(2, 498, 6, <def> )
Symbol(29, 504, 2, | )
Symbol(8, 506, 6, #EOC# )
Symbol(10, 512, 4, $0$ )
Symbol(2, 516, 17, "<kérdésére>" )
Symbol(7, 533, 6, #BOC# )
Symbol(29, 539, 2, | )
Symbol(3, 541, 4, #0# )
Symbol(2, 545, 11, "kérdés" )
Symbol(15, 556, 4, <n> )
Symbol(87, 560, 5, <sg> )
Symbol(28, 565, 8, <px3ss> )
Symbol(2, 573, 6, <sub> )
Symbol(29, 579, 2, | )
Symbol(3, 581, 4, #0# )
Symbol(2, 585, 11, "kérdés" )
Symbol(15, 596, 4, <n> )
Symbol(87, 600, 5, <sg> )
Symbol(32, 605, 6, <pxs> )
Symbol(2, 611, 6, <sub> )
Symbol(29, 617, 2, | )
Symbol(8, 619, 6, #EOC# )
Symbol(10, 625, 4, $0$ )
Symbol(2, 629, 6, "<.>" )
Symbol(7, 635, 6, #BOC# )
Symbol(29, 641, 2, | )
Symbol(3, 643, 4, #0# )
Symbol(2, 647, 4, "." )
Symbol(64, 651, 7, <sent> )
Symbol(2, 658, 6, <<<<> )
Symbol(29, 664, 2, | )
Symbol(8, 666, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 66 54 29 3 66 2 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 3 2 15 87 32 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 12
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 46, signum = 10, q = 9, out = 5
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 12
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 22, signum = 66, q = 4, out = 20
trans_offset 28, signum = 54, q = 5, out = 28
trans_offset 33, signum = 29, q = 7, out = 41
trans_offset 47, signum = 3, q = 10, out = 18
trans_offset 62, signum = 66, q = 12, out = 20
trans_offset 70, signum = 2, q = 14, out = 26
trans_offset 71, signum = 29, q = 14, out = 25
trans_offset 78, signum = 8, q = 15, out = 34
trans_offset 86, signum = 10, q = 17, out = 5
trans_offset 94, signum = 2, q = 19, out = 10
trans_offset 95, signum = 7, q = 19, out = 12
trans_offset 101, signum = 29, q = 20, out = 17
trans_offset 102, signum = 3, q = 21, out = 18
trans_offset 103, signum = 2, q = 22, out = 19
trans_offset 103, signum = 2, q = 22, out = 19
trans_offset 103, signum = 2, q = 22, out = 19
trans_offset 103, signum = 2, q = 22, out = 19
trans_offset 104, signum = 29, q = 22, out = 25
trans_offset 30, signum = 3, q = 6, out = 33
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 40, signum = 29, q = 8, out = 25
trans_offset 30, signum = 3, q = 6, out = 33
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 40, signum = 29, q = 8, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 46, signum = 10, q = 9, out = 5
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 12
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 30, signum = 3, q = 6, out = 33
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 44, signum = 54, q = 8, out = 44
trans_offset 40, signum = 29, q = 8, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 46, signum = 10, q = 9, out = 5
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 12
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 18, signum = 38, q = 4, out = 22
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 46, signum = 10, q = 9, out = 5
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 12
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 30, signum = 3, q = 6, out = 33
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 41, signum = 38, q = 8, out = 45
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 40, signum = 29, q = 8, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 46, signum = 10, q = 9, out = 5
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 12
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 46, signum = 10, q = 9, out = 5
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 12
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 30, signum = 3, q = 6, out = 33
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 39, signum = 2, q = 8, out = 42
trans_offset 40, signum = 29, q = 8, out = 25
trans_offset 31, signum = 8, q = 6, out = 34
trans_offset 46, signum = 10, q = 9, out = 5
trans_offset 7, signum = 2, q = 1, out = 10
trans_offset 8, signum = 7, q = 1, out = 12
trans_offset 14, signum = 29, q = 2, out = 17
trans_offset 15, signum = 3, q = 3, out = 18
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 16, signum = 2, q = 4, out = 19
trans_offset 17, signum = 29, q = 4, out = 25
trans_offset 31, signum = 8, q = 6, out = 34

Intermediate is(129): 
5 10 12 17 18 19 19 25 34 5 10 12 17 18 20 28 41 18 20 26 25 34 5 10 12 17 18 19 19 19 19 25 33 42 42 42 42 25 33 42 42 42 42 25 34 5 10 12 17 18 19 19 25 33 42 44 25 34 5 10 12 17 18 19 22 19 19 19 19 25 34 5 10 12 17 18 19 19 19 19 25 33 42 45 42 42 42 42 25 34 5 10 12 17 18 19 19 19 25 34 5 10 12 17 18 19 19 19 19 19 25 33 42 42 42 42 42 25 34 5 10 12 17 18 19 19 19 25 34 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 38, q = 3, out = 29
trans_offset 110, q = 6, out = 7
trans_offset 252, q = 11, out = 2
trans_offset 251, q = 11, out = 10
trans_offset 371, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 16, q = 2, out = 3
trans_offset 39, q = 3, out = 29
trans_offset 112, q = 6, out = 2
trans_offset 218, q = 10, out = 2
trans_offset 218, q = 10, out = 2
trans_offset 218, q = 10, out = 2
trans_offset 218, q = 10, out = 2
trans_offset 217, q = 10, out = 3
trans_offset 38, q = 3, out = 29
trans_offset 110, q = 6, out = 7
trans_offset 252, q = 11, out = 2
trans_offset 251, q = 11, out = 10
trans_offset 371, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 38, q = 3, out = 29
trans_offset 110, q = 6, out = 7
trans_offset 252, q = 11, out = 2
trans_offset 251, q = 11, out = 10
trans_offset 371, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 25, q = 2, out = 38
trans_offset 94, q = 5, out = 2
trans_offset 88, q = 5, out = 3
trans_offset 214, q = 9, out = 29
trans_offset 332, q = 15, out = 2
trans_offset 446, q = 20, out = 2
trans_offset 446, q = 20, out = 2
trans_offset 446, q = 20, out = 2
trans_offset 445, q = 20, out = 3
trans_offset 38, q = 3, out = 29
trans_offset 110, q = 6, out = 7
trans_offset 252, q = 11, out = 2
trans_offset 251, q = 11, out = 10
trans_offset 371, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 38
trans_offset 77, q = 5, out = 2
trans_offset 76, q = 5, out = 3
trans_offset 213, q = 9, out = 29
trans_offset 330, q = 15, out = 7
trans_offset 480, q = 21, out = 2
trans_offset 479, q = 21, out = 10
trans_offset 669, q = 28, out = 8
trans_offset 772, q = 32, out = 29
trans_offset 829, q = 34, out = 54
trans_offset 827, q = 34, out = 2
trans_offset 821, q = 34, out = 3
trans_offset 844, q = 35, out = 29
trans_offset 883, q = 37, out = 2
trans_offset 921, q = 39, out = 2
trans_offset 920, q = 39, out = 3
trans_offset 843, q = 35, out = 29
trans_offset 881, q = 37, out = 7
trans_offset 252, q = 11, out = 2
trans_offset 251, q = 11, out = 10
trans_offset 371, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 16, q = 2, out = 3
trans_offset 39, q = 3, out = 29
trans_offset 129, q = 6, out = 2
trans_offset 235, q = 10, out = 2
trans_offset 235, q = 10, out = 2
trans_offset 235, q = 10, out = 2
trans_offset 229, q = 10, out = 3
trans_offset 39, q = 3, out = 29
trans_offset 112, q = 6, out = 2
trans_offset 218, q = 10, out = 2
trans_offset 218, q = 10, out = 2
trans_offset 218, q = 10, out = 2
trans_offset 217, q = 10, out = 3
trans_offset 38, q = 3, out = 29
trans_offset 110, q = 6, out = 7
trans_offset 252, q = 11, out = 2
trans_offset 251, q = 11, out = 10
trans_offset 371, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 6, q = 2, out = 66
trans_offset 4, q = 2, out = 3
trans_offset 40, q = 3, out = 0
trans_offset 119, q = 6, out = 0
trans_offset 260, q = 12, out = 0
trans_offset 372, q = 17, out = 0
trans_offset 38, q = 3, out = 29
trans_offset 110, q = 6, out = 7
trans_offset 252, q = 11, out = 2
trans_offset 251, q = 11, out = 10
trans_offset 371, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 38, q = 3, out = 29
trans_offset 110, q = 6, out = 7
trans_offset 252, q = 11, out = 2
trans_offset 251, q = 11, out = 10

Output is(125): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Így>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(66, 0, 0, )
Symbol(2, 93, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 114, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 135, 7, "mari" )
Symbol(53, 142, 6, <adj> )
Symbol(87, 148, 5, <sg> )
Symbol(55, 153, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 165, 7, "mari" )
Symbol(15, 172, 4, <n> )
Symbol(87, 176, 5, <sg> )
Symbol(55, 181, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 193, 7, "Mari" )
Symbol(16, 200, 5, <np> )
Symbol(87, 205, 5, <sg> )
Symbol(55, 210, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 228, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 6, "nem" )
Symbol(91, 254, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 289, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 309, 6, "kap" )
Symbol(38, 0, 0, )
Symbol(37, 323, 7, <pres> )
Symbol(87, 330, 5, <sg> )
Symbol(2, 335, 6, <s3p> )
Symbol(2, 341, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 359, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 384, 10, "válasz" )
Symbol(15, 394, 4, <n> )
Symbol(87, 398, 5, <sg> )
Symbol(71, 403, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 415, 11, "választ" )
Symbol(38, 0, 0, )
Symbol(37, 434, 7, <pres> )
Symbol(87, 441, 5, <sg> )
Symbol(2, 446, 6, <s3p> )
Symbol(2, 452, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 488, 4, "a" )
Symbol(73, 492, 6, <det> )
Symbol(2, 498, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 516, 17, "<kérdésére>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 11, "kérdés" )
Symbol(15, 556, 4, <n> )
Symbol(87, 560, 5, <sg> )
Symbol(28, 565, 8, <px3ss> )
Symbol(2, 573, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 11, "kérdés" )
Symbol(15, 596, 4, <n> )
Symbol(87, 600, 5, <sg> )
Symbol(32, 605, 6, <pxs> )
Symbol(2, 611, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 629, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 647, 4, "." )
Symbol(64, 651, 7, <sent> )
Symbol(2, 658, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 66 2 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 3 2 15 87 32 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_67_T_1


LRS T1:
Name: R_1_67_T_1
arity: 2
arccount: 526
statecount: 70
linecount: 527
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 38 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 47 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 48 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 71 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 78 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 79 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 1
  in: 2 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 7 -- 
  out: 15 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 15 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 38 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 47 -- 
  out: 19 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 48 -- 
  out: 20 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 71 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 1
  in: 78 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 1
  in: 79 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 2
  in: 29 -- 
  out: 21 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 3 -- 
  out: 22 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 2 -- 
  out: 23 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 15 -- 
  out: 27 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 29 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 4
  in: 38 -- 
  out: 28 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 47 -- 
  out: 29 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 48 -- 
  out: 30 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 4
  in: 71 -- 
  out: 26 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 4
  in: 78 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 4
  in: 79 -- 
  out: 25 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 2 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 5
  in: 15 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 5
  in: 29 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 5
  in: 38 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 5
  in: 47 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 5
  in: 48 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 5
  in: 71 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 5
  in: 78 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 5
  in: 79 -- 
  out: 25 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 6
  in: 3 -- 
  out: 22 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 6
  in: 8 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 7
  in: 15 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 7
  in: 38 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 7
  in: 47 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 7
  in: 48 -- 
  out: 30 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 7
  in: 71 -- 
  out: 26 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 7
  in: 78 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 7
  in: 79 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 8
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(50):
  state_no: 9
  in: 3 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 9
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 10
  in: 10 -- 
  out: 6 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(53):
  state_no: 11
  in: 2 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 11
  in: 7 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 11
  in: 15 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 11
  in: 38 -- 
  out: 18 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 11
  in: 47 -- 
  out: 19 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 11
  in: 48 -- 
  out: 20 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 11
  in: 71 -- 
  out: 16 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 11
  in: 78 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 11
  in: 79 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 12
  in: 29 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 13
  in: 3 -- 
  out: 66 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 14
  in: 2 -- 
  out: 67 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 14
  in: 15 -- 
  out: 71 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 14
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 14
  in: 38 -- 
  out: 72 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 14
  in: 47 -- 
  out: 73 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 14
  in: 48 -- 
  out: 74 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 14
  in: 71 -- 
  out: 70 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 14
  in: 78 -- 
  out: 68 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 14
  in: 79 -- 
  out: 69 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 15
  in: 2 -- 
  out: 67 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 15
  in: 15 -- 
  out: 71 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 15
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 15
  in: 38 -- 
  out: 72 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 15
  in: 47 -- 
  out: 73 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 15
  in: 48 -- 
  out: 74 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 15
  in: 71 -- 
  out: 70 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 15
  in: 78 -- 
  out: 68 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 15
  in: 79 -- 
  out: 69 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 16
  in: 2 -- 
  out: 85 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 16
  in: 15 -- 
  out: 89 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 16
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 16
  in: 38 -- 
  out: 90 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 16
  in: 47 -- 
  out: 91 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 16
  in: 48 -- 
  out: 92 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 16
  in: 71 -- 
  out: 88 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 16
  in: 78 -- 
  out: 86 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 16
  in: 79 -- 
  out: 69 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 17
  in: 2 -- 
  out: 67 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 17
  in: 15 -- 
  out: 71 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 17
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 17
  in: 38 -- 
  out: 72 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 17
  in: 47 -- 
  out: 73 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 17
  in: 48 -- 
  out: 74 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 17
  in: 71 -- 
  out: 70 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 17
  in: 78 -- 
  out: 68 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 17
  in: 79 -- 
  out: 69 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 18
  in: 3 -- 
  out: 66 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 18
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 19
  in: 2 -- 
  out: 85 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 19
  in: 15 -- 
  out: 89 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 19
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 19
  in: 38 -- 
  out: 90 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 19
  in: 47 -- 
  out: 91 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 19
  in: 48 -- 
  out: 92 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 19
  in: 71 -- 
  out: 88 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 19
  in: 78 -- 
  out: 86 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 19
  in: 79 -- 
  out: 69 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 20
  in: 2 -- 
  out: 67 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 20
  in: 15 -- 
  out: 71 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 20
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 20
  in: 38 -- 
  out: 72 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 20
  in: 47 -- 
  out: 73 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 20
  in: 48 -- 
  out: 74 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 20
  in: 71 -- 
  out: 70 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 20
  in: 78 -- 
  out: 68 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 20
  in: 79 -- 
  out: 69 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 21
  in: 2 -- 
  out: 67 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 21
  in: 15 -- 
  out: 71 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 21
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 21
  in: 38 -- 
  out: 72 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 21
  in: 47 -- 
  out: 73 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 21
  in: 48 -- 
  out: 74 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 21
  in: 71 -- 
  out: 70 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 21
  in: 78 -- 
  out: 68 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 21
  in: 79 -- 
  out: 69 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 22
  in: 2 -- 
  out: 132 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 22
  in: 15 -- 
  out: 89 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 22
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 22
  in: 38 -- 
  out: 137 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 22
  in: 47 -- 
  out: 138 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 22
  in: 48 -- 
  out: 139 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 22
  in: 71 -- 
  out: 26 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 22
  in: 78 -- 
  out: 133 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 22
  in: 79 -- 
  out: 134 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 23
  in: 2 -- 
  out: 85 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 23
  in: 15 -- 
  out: 89 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 23
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 23
  in: 38 -- 
  out: 90 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 23
  in: 47 -- 
  out: 91 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 23
  in: 48 -- 
  out: 92 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 23
  in: 71 -- 
  out: 88 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 23
  in: 78 -- 
  out: 86 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 23
  in: 79 -- 
  out: 69 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 24
  in: 3 -- 
  out: 66 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 24
  in: 8 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 25
  in: 2 -- 
  out: 67 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 25
  in: 15 -- 
  out: 71 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 25
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 25
  in: 38 -- 
  out: 72 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 25
  in: 47 -- 
  out: 73 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 25
  in: 48 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 25
  in: 71 -- 
  out: 70 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 25
  in: 78 -- 
  out: 68 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 25
  in: 79 -- 
  out: 69 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 26
  in: 2 -- 
  out: 132 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 26
  in: 15 -- 
  out: 89 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 26
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 26
  in: 38 -- 
  out: 137 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 26
  in: 47 -- 
  out: 138 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 26
  in: 48 -- 
  out: 139 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 26
  in: 71 -- 
  out: 26 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 26
  in: 78 -- 
  out: 133 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 26
  in: 79 -- 
  out: 134 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 27
  in: 2 -- 
  out: 85 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 27
  in: 15 -- 
  out: 89 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 27
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 27
  in: 38 -- 
  out: 90 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 27
  in: 47 -- 
  out: 91 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 27
  in: 48 -- 
  out: 92 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 27
  in: 71 -- 
  out: 88 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 27
  in: 78 -- 
  out: 86 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 27
  in: 79 -- 
  out: 69 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 28
  in: 2 -- 
  out: 85 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 28
  in: 15 -- 
  out: 89 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 28
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 28
  in: 38 -- 
  out: 90 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 28
  in: 47 -- 
  out: 91 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 28
  in: 48 -- 
  out: 92 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 28
  in: 71 -- 
  out: 88 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 28
  in: 78 -- 
  out: 86 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 28
  in: 79 -- 
  out: 69 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 29
  in: 3 -- 
  out: 66 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 29
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 30
  in: 2 -- 
  out: 23 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 30
  in: 15 -- 
  out: 27 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 30
  in: 29 -- 
  out: 31 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 30
  in: 38 -- 
  out: 28 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 30
  in: 47 -- 
  out: 29 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 30
  in: 48 -- 
  out: 30 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 30
  in: 71 -- 
  out: 26 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 30
  in: 78 -- 
  out: 24 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 30
  in: 79 -- 
  out: 25 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 31
  in: 2 -- 
  out: 132 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 31
  in: 15 -- 
  out: 89 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 31
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 31
  in: 38 -- 
  out: 137 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 31
  in: 47 -- 
  out: 138 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 31
  in: 48 -- 
  out: 139 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 31
  in: 71 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 31
  in: 78 -- 
  out: 133 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 31
  in: 79 -- 
  out: 134 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 32
  in: 2 -- 
  out: 67 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 32
  in: 15 -- 
  out: 71 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 32
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 32
  in: 38 -- 
  out: 72 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 32
  in: 47 -- 
  out: 73 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 32
  in: 48 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 32
  in: 71 -- 
  out: 70 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 32
  in: 78 -- 
  out: 68 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 32
  in: 79 -- 
  out: 69 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 33
  in: 2 -- 
  out: 67 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 33
  in: 15 -- 
  out: 71 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 33
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 33
  in: 38 -- 
  out: 72 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 33
  in: 47 -- 
  out: 73 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 33
  in: 48 -- 
  out: 74 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 33
  in: 71 -- 
  out: 70 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 33
  in: 78 -- 
  out: 68 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 33
  in: 79 -- 
  out: 69 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 34
  in: 2 -- 
  out: 85 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 34
  in: 15 -- 
  out: 89 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 34
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 34
  in: 38 -- 
  out: 90 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 34
  in: 47 -- 
  out: 91 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 34
  in: 48 -- 
  out: 92 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 34
  in: 71 -- 
  out: 88 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 34
  in: 78 -- 
  out: 86 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 34
  in: 79 -- 
  out: 69 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 35
  in: 2 -- 
  out: 23 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 35
  in: 15 -- 
  out: 27 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 35
  in: 29 -- 
  out: 31 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 35
  in: 38 -- 
  out: 28 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 35
  in: 47 -- 
  out: 29 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 35
  in: 48 -- 
  out: 30 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 35
  in: 71 -- 
  out: 26 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 35
  in: 78 -- 
  out: 24 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 35
  in: 79 -- 
  out: 25 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 36
  in: 2 -- 
  out: 132 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 36
  in: 15 -- 
  out: 89 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 36
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 36
  in: 38 -- 
  out: 137 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 36
  in: 47 -- 
  out: 138 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 36
  in: 48 -- 
  out: 139 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 36
  in: 71 -- 
  out: 26 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 36
  in: 78 -- 
  out: 133 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 36
  in: 79 -- 
  out: 134 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 37
  in: 2 -- 
  out: 132 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 37
  in: 15 -- 
  out: 89 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 37
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 37
  in: 38 -- 
  out: 137 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 37
  in: 47 -- 
  out: 138 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 37
  in: 48 -- 
  out: 139 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 37
  in: 71 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 37
  in: 78 -- 
  out: 133 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 37
  in: 79 -- 
  out: 134 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 38
  in: 2 -- 
  out: 67 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 38
  in: 15 -- 
  out: 71 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 38
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 38
  in: 38 -- 
  out: 72 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 38
  in: 47 -- 
  out: 73 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 38
  in: 48 -- 
  out: 74 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 38
  in: 71 -- 
  out: 70 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 38
  in: 78 -- 
  out: 68 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 38
  in: 79 -- 
  out: 69 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 39
  in: 2 -- 
  out: 23 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 39
  in: 15 -- 
  out: 27 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 39
  in: 29 -- 
  out: 31 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 39
  in: 38 -- 
  out: 28 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 39
  in: 47 -- 
  out: 29 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 39
  in: 48 -- 
  out: 30 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 39
  in: 71 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 39
  in: 78 -- 
  out: 24 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 39
  in: 79 -- 
  out: 25 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 40
  in: 3 -- 
  out: 280 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 40
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 41
  in: 2 -- 
  out: 67 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 41
  in: 15 -- 
  out: 71 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 41
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 41
  in: 38 -- 
  out: 72 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 41
  in: 47 -- 
  out: 73 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 41
  in: 48 -- 
  out: 74 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 41
  in: 71 -- 
  out: 70 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 41
  in: 78 -- 
  out: 68 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 41
  in: 79 -- 
  out: 69 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 42
  in: 2 -- 
  out: 85 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 42
  in: 15 -- 
  out: 89 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 42
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 42
  in: 38 -- 
  out: 90 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 42
  in: 47 -- 
  out: 91 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 42
  in: 48 -- 
  out: 92 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 42
  in: 71 -- 
  out: 88 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 42
  in: 78 -- 
  out: 86 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 42
  in: 79 -- 
  out: 69 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 43
  in: 2 -- 
  out: 85 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 43
  in: 15 -- 
  out: 89 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 43
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 43
  in: 38 -- 
  out: 90 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 43
  in: 47 -- 
  out: 91 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 43
  in: 48 -- 
  out: 92 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 43
  in: 71 -- 
  out: 88 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 43
  in: 78 -- 
  out: 86 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 43
  in: 79 -- 
  out: 69 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 44
  in: 2 -- 
  out: 132 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 44
  in: 15 -- 
  out: 89 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 44
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 44
  in: 38 -- 
  out: 137 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 44
  in: 47 -- 
  out: 138 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 44
  in: 48 -- 
  out: 139 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 44
  in: 71 -- 
  out: 26 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 44
  in: 78 -- 
  out: 133 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 44
  in: 79 -- 
  out: 134 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 45
  in: 2 -- 
  out: 23 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 45
  in: 15 -- 
  out: 27 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 45
  in: 29 -- 
  out: 31 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 45
  in: 38 -- 
  out: 28 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 45
  in: 47 -- 
  out: 29 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 45
  in: 48 -- 
  out: 30 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 45
  in: 71 -- 
  out: 26 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 45
  in: 78 -- 
  out: 24 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 45
  in: 79 -- 
  out: 25 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 46
  in: 2 -- 
  out: 23 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 46
  in: 15 -- 
  out: 27 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 46
  in: 29 -- 
  out: 31 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 46
  in: 38 -- 
  out: 28 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 46
  in: 47 -- 
  out: 29 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 46
  in: 48 -- 
  out: 30 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 46
  in: 71 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 46
  in: 78 -- 
  out: 24 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 46
  in: 79 -- 
  out: 25 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 47
  in: 2 -- 
  out: 85 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 47
  in: 15 -- 
  out: 89 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 47
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 47
  in: 38 -- 
  out: 90 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 47
  in: 47 -- 
  out: 91 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 47
  in: 48 -- 
  out: 92 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 47
  in: 71 -- 
  out: 88 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 47
  in: 78 -- 
  out: 86 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 47
  in: 79 -- 
  out: 69 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 48
  in: 3 -- 
  out: 280 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 48
  in: 8 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 49
  in: 2 -- 
  out: 347 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 49
  in: 15 -- 
  out: 351 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 49
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 49
  in: 38 -- 
  out: 352 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 49
  in: 47 -- 
  out: 353 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 49
  in: 48 -- 
  out: 354 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 49
  in: 71 -- 
  out: 350 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 49
  in: 78 -- 
  out: 348 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 49
  in: 79 -- 
  out: 349 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 50
  in: 2 -- 
  out: 85 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 50
  in: 15 -- 
  out: 89 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 50
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 50
  in: 38 -- 
  out: 90 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 50
  in: 47 -- 
  out: 91 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 50
  in: 48 -- 
  out: 92 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 50
  in: 71 -- 
  out: 88 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 50
  in: 78 -- 
  out: 86 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 50
  in: 79 -- 
  out: 69 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 51
  in: 2 -- 
  out: 132 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 51
  in: 15 -- 
  out: 89 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 51
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(365):
  state_no: 51
  in: 38 -- 
  out: 137 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(366):
  state_no: 51
  in: 47 -- 
  out: 138 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(367):
  state_no: 51
  in: 48 -- 
  out: 139 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(368):
  state_no: 51
  in: 71 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(369):
  state_no: 51
  in: 78 -- 
  out: 133 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(370):
  state_no: 51
  in: 79 -- 
  out: 134 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(371):
  state_no: 52
  in: 2 -- 
  out: 132 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(372):
  state_no: 52
  in: 15 -- 
  out: 89 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(373):
  state_no: 52
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(374):
  state_no: 52
  in: 38 -- 
  out: 137 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(375):
  state_no: 52
  in: 47 -- 
  out: 138 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(376):
  state_no: 52
  in: 48 -- 
  out: 139 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(377):
  state_no: 52
  in: 71 -- 
  out: 26 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(378):
  state_no: 52
  in: 78 -- 
  out: 133 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(379):
  state_no: 52
  in: 79 -- 
  out: 134 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(380):
  state_no: 53
  in: 3 -- 
  out: 280 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(381):
  state_no: 53
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(382):
  state_no: 54
  in: 2 -- 
  out: 132 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(383):
  state_no: 54
  in: 15 -- 
  out: 89 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(384):
  state_no: 54
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(385):
  state_no: 54
  in: 38 -- 
  out: 137 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(386):
  state_no: 54
  in: 47 -- 
  out: 138 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(387):
  state_no: 54
  in: 48 -- 
  out: 139 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(388):
  state_no: 54
  in: 71 -- 
  out: 26 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(389):
  state_no: 54
  in: 78 -- 
  out: 133 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(390):
  state_no: 54
  in: 79 -- 
  out: 134 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(391):
  state_no: 55
  in: 2 -- 
  out: 347 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(392):
  state_no: 55
  in: 15 -- 
  out: 351 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(393):
  state_no: 55
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(394):
  state_no: 55
  in: 38 -- 
  out: 352 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(395):
  state_no: 55
  in: 47 -- 
  out: 353 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(396):
  state_no: 55
  in: 48 -- 
  out: 354 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(397):
  state_no: 55
  in: 71 -- 
  out: 350 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(398):
  state_no: 55
  in: 78 -- 
  out: 348 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(399):
  state_no: 55
  in: 79 -- 
  out: 349 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(400):
  state_no: 56
  in: 2 -- 
  out: 347 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(401):
  state_no: 56
  in: 15 -- 
  out: 351 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(402):
  state_no: 56
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(403):
  state_no: 56
  in: 38 -- 
  out: 352 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(404):
  state_no: 56
  in: 47 -- 
  out: 353 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(405):
  state_no: 56
  in: 48 -- 
  out: 354 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(406):
  state_no: 56
  in: 71 -- 
  out: 350 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(407):
  state_no: 56
  in: 78 -- 
  out: 348 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(408):
  state_no: 56
  in: 79 -- 
  out: 349 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(409):
  state_no: 57
  in: 2 -- 
  out: 412 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(410):
  state_no: 57
  in: 15 -- 
  out: 416 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(411):
  state_no: 57
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(412):
  state_no: 57
  in: 38 -- 
  out: 417 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(413):
  state_no: 57
  in: 47 -- 
  out: 418 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(414):
  state_no: 57
  in: 48 -- 
  out: 419 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(415):
  state_no: 57
  in: 71 -- 
  out: 415 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(416):
  state_no: 57
  in: 78 -- 
  out: 413 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(417):
  state_no: 57
  in: 79 -- 
  out: 349 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(418):
  state_no: 58
  in: 2 -- 
  out: 132 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(419):
  state_no: 58
  in: 15 -- 
  out: 89 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(420):
  state_no: 58
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(421):
  state_no: 58
  in: 38 -- 
  out: 137 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(422):
  state_no: 58
  in: 47 -- 
  out: 138 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(423):
  state_no: 58
  in: 48 -- 
  out: 139 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(424):
  state_no: 58
  in: 71 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(425):
  state_no: 58
  in: 78 -- 
  out: 133 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(426):
  state_no: 58
  in: 79 -- 
  out: 134 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(427):
  state_no: 59
  in: 2 -- 
  out: 347 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(428):
  state_no: 59
  in: 15 -- 
  out: 351 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(429):
  state_no: 59
  in: 29 -- 
  out: 355 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(430):
  state_no: 59
  in: 38 -- 
  out: 352 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(431):
  state_no: 59
  in: 47 -- 
  out: 353 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(432):
  state_no: 59
  in: 48 -- 
  out: 354 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(433):
  state_no: 59
  in: 71 -- 
  out: 350 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(434):
  state_no: 59
  in: 78 -- 
  out: 348 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(435):
  state_no: 59
  in: 79 -- 
  out: 349 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(436):
  state_no: 60
  in: 2 -- 
  out: 347 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(437):
  state_no: 60
  in: 15 -- 
  out: 351 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(438):
  state_no: 60
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(439):
  state_no: 60
  in: 38 -- 
  out: 352 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(440):
  state_no: 60
  in: 47 -- 
  out: 353 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(441):
  state_no: 60
  in: 48 -- 
  out: 354 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(442):
  state_no: 60
  in: 71 -- 
  out: 350 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(443):
  state_no: 60
  in: 78 -- 
  out: 348 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(444):
  state_no: 60
  in: 79 -- 
  out: 349 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(445):
  state_no: 61
  in: 2 -- 
  out: 412 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(446):
  state_no: 61
  in: 15 -- 
  out: 416 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(447):
  state_no: 61
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(448):
  state_no: 61
  in: 38 -- 
  out: 417 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(449):
  state_no: 61
  in: 47 -- 
  out: 418 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(450):
  state_no: 61
  in: 48 -- 
  out: 419 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(451):
  state_no: 61
  in: 71 -- 
  out: 415 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(452):
  state_no: 61
  in: 78 -- 
  out: 413 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(453):
  state_no: 61
  in: 79 -- 
  out: 349 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(454):
  state_no: 62
  in: 2 -- 
  out: 412 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(455):
  state_no: 62
  in: 15 -- 
  out: 416 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(456):
  state_no: 62
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(457):
  state_no: 62
  in: 38 -- 
  out: 417 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(458):
  state_no: 62
  in: 47 -- 
  out: 418 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(459):
  state_no: 62
  in: 48 -- 
  out: 419 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(460):
  state_no: 62
  in: 71 -- 
  out: 415 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(461):
  state_no: 62
  in: 78 -- 
  out: 413 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(462):
  state_no: 62
  in: 79 -- 
  out: 349 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(463):
  state_no: 63
  in: 2 -- 
  out: 466 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(464):
  state_no: 63
  in: 15 -- 
  out: 416 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(465):
  state_no: 63
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(466):
  state_no: 63
  in: 38 -- 
  out: 471 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(467):
  state_no: 63
  in: 47 -- 
  out: 472 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(468):
  state_no: 63
  in: 48 -- 
  out: 473 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(469):
  state_no: 63
  in: 71 -- 
  out: 26 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(470):
  state_no: 63
  in: 78 -- 
  out: 467 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(471):
  state_no: 63
  in: 79 -- 
  out: 468 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(472):
  state_no: 64
  in: 2 -- 
  out: 412 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(473):
  state_no: 64
  in: 15 -- 
  out: 416 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(474):
  state_no: 64
  in: 29 -- 
  out: 355 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(475):
  state_no: 64
  in: 38 -- 
  out: 417 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(476):
  state_no: 64
  in: 47 -- 
  out: 418 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(477):
  state_no: 64
  in: 48 -- 
  out: 419 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(478):
  state_no: 64
  in: 71 -- 
  out: 415 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(479):
  state_no: 64
  in: 78 -- 
  out: 413 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(480):
  state_no: 64
  in: 79 -- 
  out: 349 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(481):
  state_no: 65
  in: 2 -- 
  out: 412 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(482):
  state_no: 65
  in: 15 -- 
  out: 416 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(483):
  state_no: 65
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(484):
  state_no: 65
  in: 38 -- 
  out: 417 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(485):
  state_no: 65
  in: 47 -- 
  out: 418 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(486):
  state_no: 65
  in: 48 -- 
  out: 419 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(487):
  state_no: 65
  in: 71 -- 
  out: 415 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(488):
  state_no: 65
  in: 78 -- 
  out: 413 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(489):
  state_no: 65
  in: 79 -- 
  out: 349 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(490):
  state_no: 66
  in: 2 -- 
  out: 466 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(491):
  state_no: 66
  in: 15 -- 
  out: 416 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(492):
  state_no: 66
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(493):
  state_no: 66
  in: 38 -- 
  out: 471 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(494):
  state_no: 66
  in: 47 -- 
  out: 472 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(495):
  state_no: 66
  in: 48 -- 
  out: 473 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(496):
  state_no: 66
  in: 71 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(497):
  state_no: 66
  in: 78 -- 
  out: 467 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(498):
  state_no: 66
  in: 79 -- 
  out: 468 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(499):
  state_no: 67
  in: 2 -- 
  out: 466 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(500):
  state_no: 67
  in: 15 -- 
  out: 416 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(501):
  state_no: 67
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(502):
  state_no: 67
  in: 38 -- 
  out: 471 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(503):
  state_no: 67
  in: 47 -- 
  out: 472 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(504):
  state_no: 67
  in: 48 -- 
  out: 473 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(505):
  state_no: 67
  in: 71 -- 
  out: 26 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(506):
  state_no: 67
  in: 78 -- 
  out: 467 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(507):
  state_no: 67
  in: 79 -- 
  out: 468 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(508):
  state_no: 68
  in: 2 -- 
  out: 466 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(509):
  state_no: 68
  in: 15 -- 
  out: 416 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(510):
  state_no: 68
  in: 29 -- 
  out: 355 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(511):
  state_no: 68
  in: 38 -- 
  out: 471 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(512):
  state_no: 68
  in: 47 -- 
  out: 472 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(513):
  state_no: 68
  in: 48 -- 
  out: 473 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(514):
  state_no: 68
  in: 71 -- 
  out: 26 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(515):
  state_no: 68
  in: 78 -- 
  out: 467 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(516):
  state_no: 68
  in: 79 -- 
  out: 468 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(517):
  state_no: 69
  in: 2 -- 
  out: 466 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(518):
  state_no: 69
  in: 15 -- 
  out: 416 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(519):
  state_no: 69
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(520):
  state_no: 69
  in: 38 -- 
  out: 471 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(521):
  state_no: 69
  in: 47 -- 
  out: 472 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(522):
  state_no: 69
  in: 48 -- 
  out: 473 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(523):
  state_no: 69
  in: 71 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(524):
  state_no: 69
  in: 78 -- 
  out: 467 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(525):
  state_no: 69
  in: 79 -- 
  out: 468 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(526):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(125): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Így>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(66, 0, 0, )
Symbol(2, 93, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 114, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 135, 7, "mari" )
Symbol(53, 142, 6, <adj> )
Symbol(87, 148, 5, <sg> )
Symbol(55, 153, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 165, 7, "mari" )
Symbol(15, 172, 4, <n> )
Symbol(87, 176, 5, <sg> )
Symbol(55, 181, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 193, 7, "Mari" )
Symbol(16, 200, 5, <np> )
Symbol(87, 205, 5, <sg> )
Symbol(55, 210, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 228, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 6, "nem" )
Symbol(91, 254, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 289, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 309, 6, "kap" )
Symbol(38, 0, 0, )
Symbol(37, 323, 7, <pres> )
Symbol(87, 330, 5, <sg> )
Symbol(2, 335, 6, <s3p> )
Symbol(2, 341, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 359, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 384, 10, "válasz" )
Symbol(15, 394, 4, <n> )
Symbol(87, 398, 5, <sg> )
Symbol(71, 403, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 415, 11, "választ" )
Symbol(38, 0, 0, )
Symbol(37, 434, 7, <pres> )
Symbol(87, 441, 5, <sg> )
Symbol(2, 446, 6, <s3p> )
Symbol(2, 452, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 488, 4, "a" )
Symbol(73, 492, 6, <det> )
Symbol(2, 498, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 516, 17, "<kérdésére>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 11, "kérdés" )
Symbol(15, 556, 4, <n> )
Symbol(87, 560, 5, <sg> )
Symbol(28, 565, 8, <px3ss> )
Symbol(2, 573, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 11, "kérdés" )
Symbol(15, 596, 4, <n> )
Symbol(87, 600, 5, <sg> )
Symbol(32, 605, 6, <pxs> )
Symbol(2, 611, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 629, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 647, 4, "." )
Symbol(64, 651, 7, <sent> )
Symbol(2, 658, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 66 2 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 3 2 15 87 32 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 38, signum = 3, q = 6, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 21, signum = 15, q = 4, out = 27
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 38, signum = 3, q = 6, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 38, signum = 3, q = 6, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 27, signum = 78, q = 4, out = 24
trans_offset 32, signum = 38, q = 5, out = 28
trans_offset 40, signum = 2, q = 7, out = 23
trans_offset 40, signum = 2, q = 7, out = 23
trans_offset 40, signum = 2, q = 7, out = 23
trans_offset 40, signum = 2, q = 7, out = 23
trans_offset 42, signum = 29, q = 7, out = 31
trans_offset 51, signum = 8, q = 9, out = 42
trans_offset 52, signum = 10, q = 10, out = 6
trans_offset 53, signum = 2, q = 11, out = 12
trans_offset 54, signum = 7, q = 11, out = 15
trans_offset 62, signum = 29, q = 12, out = 21
trans_offset 63, signum = 3, q = 13, out = 66
trans_offset 72, signum = 79, q = 14, out = 69
trans_offset 83, signum = 15, q = 16, out = 89
trans_offset 129, signum = 2, q = 22, out = 132
trans_offset 135, signum = 71, q = 22, out = 26
trans_offset 189, signum = 29, q = 30, out = 31
trans_offset 277, signum = 3, q = 40, out = 280
trans_offset 344, signum = 2, q = 49, out = 347
trans_offset 347, signum = 38, q = 49, out = 352
trans_offset 391, signum = 2, q = 55, out = 347
trans_offset 391, signum = 2, q = 55, out = 347
trans_offset 391, signum = 2, q = 55, out = 347
trans_offset 391, signum = 2, q = 55, out = 347
trans_offset 393, signum = 29, q = 55, out = 355
trans_offset 343, signum = 8, q = 48, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 21, signum = 15, q = 4, out = 27
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 38, signum = 3, q = 6, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 21, signum = 15, q = 4, out = 27
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42

Intermediate is(125): 
6 12 15 21 22 23 23 31 42 6 12 15 21 22 23 23 31 42 6 12 15 21 22 23 23 23 23 31 22 23 27 23 23 31 22 23 23 23 23 31 42 6 12 15 21 22 23 23 31 22 23 23 31 42 6 12 15 21 22 24 28 23 23 23 23 31 42 6 12 15 21 66 69 89 132 26 31 280 347 352 347 347 347 347 355 42 6 12 15 21 22 23 23 23 31 42 6 12 15 21 22 23 27 23 23 23 31 22 23 27 23 23 23 31 42 6 12 15 21 22 23 23 23 31 42 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 58, q = 3, out = 29
trans_offset 116, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 41, q = 2, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 35, q = 2, out = 0
trans_offset 58, q = 3, out = 29
trans_offset 119, q = 5, out = 71
trans_offset 86, q = 4, out = 2
trans_offset 82, q = 4, out = 15
trans_offset 180, q = 6, out = 79
trans_offset 239, q = 8, out = 3
trans_offset 292, q = 10, out = 29
trans_offset 304, q = 12, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 10, q = 2, out = 38
trans_offset 6, q = 2, out = 78
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 58, q = 3, out = 29
trans_offset 116, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 58, q = 3, out = 29
trans_offset 116, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 58, q = 3, out = 29
trans_offset 116, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10

Output is(117): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Így>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(66, 0, 0, )
Symbol(2, 93, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 114, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 135, 7, "mari" )
Symbol(53, 142, 6, <adj> )
Symbol(87, 148, 5, <sg> )
Symbol(55, 153, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 165, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 176, 5, <sg> )
Symbol(55, 181, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 193, 7, "Mari" )
Symbol(16, 200, 5, <np> )
Symbol(87, 205, 5, <sg> )
Symbol(55, 210, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 228, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 6, "nem" )
Symbol(91, 254, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 289, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 323, 7, <pres> )
Symbol(87, 330, 5, <sg> )
Symbol(2, 335, 6, <s3p> )
Symbol(2, 341, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 359, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 398, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 488, 4, "a" )
Symbol(73, 492, 6, <det> )
Symbol(2, 498, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 516, 17, "<kérdésére>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 560, 5, <sg> )
Symbol(28, 565, 8, <px3ss> )
Symbol(2, 573, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 600, 5, <sg> )
Symbol(32, 605, 6, <pxs> )
Symbol(2, 611, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 629, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 647, 4, "." )
Symbol(64, 651, 7, <sent> )
Symbol(2, 658, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 66 2 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 3 2 15 87 32 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_87_T_1


LRS T1:
Name: R_1_87_T_1
arity: 2
arccount: 70
statecount: 25
linecount: 71
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 80 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 80 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 12 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 13 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 18
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 16
  in: 2 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 50 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 17
  in: 2 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 17
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 17
  in: 29 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 18
  in: 2 -- 
  out: 7 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 18
  in: 7 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 18
  in: 16 -- 
  out: 10 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 80 -- 
  out: 9 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 19
  in: 29 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 2 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 16 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 21
  in: 29 -- 
  out: 24 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 21
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 16 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 22
  in: 29 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 22
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 3 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(117): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Így>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(66, 0, 0, )
Symbol(2, 93, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 114, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 135, 7, "mari" )
Symbol(53, 142, 6, <adj> )
Symbol(87, 148, 5, <sg> )
Symbol(55, 153, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 165, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 176, 5, <sg> )
Symbol(55, 181, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 193, 7, "Mari" )
Symbol(16, 200, 5, <np> )
Symbol(87, 205, 5, <sg> )
Symbol(55, 210, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 228, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 6, "nem" )
Symbol(91, 254, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 289, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 323, 7, <pres> )
Symbol(87, 330, 5, <sg> )
Symbol(2, 335, 6, <s3p> )
Symbol(2, 341, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 359, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 398, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 488, 4, "a" )
Symbol(73, 492, 6, <det> )
Symbol(2, 498, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 516, 17, "<kérdésére>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 560, 5, <sg> )
Symbol(28, 565, 8, <px3ss> )
Symbol(2, 573, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 600, 5, <sg> )
Symbol(32, 605, 6, <pxs> )
Symbol(2, 611, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 629, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 647, 4, "." )
Symbol(64, 651, 7, <sent> )
Symbol(2, 658, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 66 2 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 3 2 15 87 32 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 80, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 43, signum = 10, q = 15, out = 4
trans_offset 52, signum = 2, q = 18, out = 7
trans_offset 53, signum = 7, q = 18, out = 8
trans_offset 56, signum = 29, q = 19, out = 11
trans_offset 57, signum = 3, q = 20, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 67, signum = 8, q = 23, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 33, signum = 16, q = 11, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(117): 
4 7 8 11 12 13 14 16 26 4 7 8 11 60 21 21 24 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 12 13 15 21 21 24 26 4 7 8 11 12 13 13 16 12 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 4 7 8 11 12 13 13 13 13 13 16 12 13 13 13 13 13 16 26 4 7 8 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 13, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10

Output is(105): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Így>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(66, 0, 0, )
Symbol(2, 93, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 114, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 193, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 205, 5, <sg> )
Symbol(55, 210, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 228, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 6, "nem" )
Symbol(91, 254, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 289, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 323, 7, <pres> )
Symbol(87, 330, 5, <sg> )
Symbol(2, 335, 6, <s3p> )
Symbol(2, 341, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 359, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 398, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 488, 4, "a" )
Symbol(73, 492, 6, <det> )
Symbol(2, 498, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 516, 17, "<kérdésére>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 560, 5, <sg> )
Symbol(28, 565, 8, <px3ss> )
Symbol(2, 573, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 600, 5, <sg> )
Symbol(32, 605, 6, <pxs> )
Symbol(2, 611, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 629, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 647, 4, "." )
Symbol(64, 651, 7, <sent> )
Symbol(2, 658, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 66 2 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 3 2 15 87 32 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_3_281_T_1


LRS T1:
Name: R_3_281_T_1
arity: 2
arccount: 271
statecount: 25
linecount: 272
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 17 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 18 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 19 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 20 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 21 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 22 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 23 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 24 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 25 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 0
  in: 26 -- 
  out: 14 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(12):
  state_no: 0
  in: 27 -- 
  out: 15 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(13):
  state_no: 0
  in: 28 -- 
  out: 16 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(14):
  state_no: 0
  in: 31 -- 
  out: 17 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(15):
  state_no: 0
  in: 32 -- 
  out: 18 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(16):
  state_no: 1
  in: 2 -- 
  out: 19 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 1
  in: 7 -- 
  out: 20 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 17 -- 
  out: 21 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 18 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 19 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 20 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 1
  in: 21 -- 
  out: 25 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 1
  in: 22 -- 
  out: 26 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 1
  in: 23 -- 
  out: 27 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 1
  in: 24 -- 
  out: 28 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 1
  in: 25 -- 
  out: 29 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 1
  in: 26 -- 
  out: 30 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 1
  in: 27 -- 
  out: 31 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 1
  in: 28 -- 
  out: 32 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 1
  in: 31 -- 
  out: 33 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 1
  in: 32 -- 
  out: 34 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 2
  in: 29 -- 
  out: 35 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 3
  in: 3 -- 
  out: 36 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 4
  in: 2 -- 
  out: 37 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 4
  in: 17 -- 
  out: 38 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 4
  in: 18 -- 
  out: 39 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 4
  in: 19 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 4
  in: 20 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 4
  in: 21 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 4
  in: 22 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 4
  in: 23 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 4
  in: 24 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 4
  in: 25 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 4
  in: 26 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 4
  in: 27 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 4
  in: 28 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 4
  in: 29 -- 
  out: 52 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 4
  in: 31 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 4
  in: 32 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 5
  in: 2 -- 
  out: 53 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 5
  in: 17 -- 
  out: 38 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 5
  in: 18 -- 
  out: 39 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 5
  in: 19 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 5
  in: 20 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 5
  in: 21 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 5
  in: 22 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 5
  in: 23 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 5
  in: 24 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 5
  in: 25 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 5
  in: 26 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 5
  in: 27 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 5
  in: 28 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 5
  in: 29 -- 
  out: 68 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 5
  in: 31 -- 
  out: 66 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 5
  in: 32 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 6
  in: 2 -- 
  out: 69 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 6
  in: 17 -- 
  out: 70 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 6
  in: 18 -- 
  out: 71 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 6
  in: 19 -- 
  out: 72 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 6
  in: 20 -- 
  out: 73 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 6
  in: 21 -- 
  out: 74 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 6
  in: 22 -- 
  out: 75 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 6
  in: 23 -- 
  out: 76 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 6
  in: 24 -- 
  out: 77 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 6
  in: 25 -- 
  out: 78 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 6
  in: 26 -- 
  out: 79 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 6
  in: 27 -- 
  out: 80 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 6
  in: 28 -- 
  out: 81 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 6
  in: 29 -- 
  out: 84 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 6
  in: 31 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 6
  in: 32 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 7
  in: 3 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 7
  in: 8 -- 
  out: 86 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 8
  in: 2 -- 
  out: 53 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 8
  in: 17 -- 
  out: 38 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 8
  in: 18 -- 
  out: 39 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 8
  in: 19 -- 
  out: 40 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 8
  in: 20 -- 
  out: 41 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 8
  in: 21 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 8
  in: 22 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 8
  in: 23 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 8
  in: 24 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 8
  in: 25 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 8
  in: 26 -- 
  out: 47 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 8
  in: 27 -- 
  out: 48 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 8
  in: 28 -- 
  out: 49 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 8
  in: 29 -- 
  out: 68 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 8
  in: 31 -- 
  out: 66 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 8
  in: 32 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 9
  in: 3 -- 
  out: 103 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 9
  in: 8 -- 
  out: 86 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 10
  in: 2 -- 
  out: 105 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 10
  in: 17 -- 
  out: 70 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 10
  in: 18 -- 
  out: 71 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 10
  in: 19 -- 
  out: 72 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 10
  in: 20 -- 
  out: 73 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 10
  in: 21 -- 
  out: 74 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 10
  in: 22 -- 
  out: 75 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 10
  in: 23 -- 
  out: 76 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 10
  in: 24 -- 
  out: 77 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 10
  in: 25 -- 
  out: 78 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 10
  in: 26 -- 
  out: 79 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 10
  in: 27 -- 
  out: 80 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 10
  in: 28 -- 
  out: 81 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 10
  in: 29 -- 
  out: 84 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 10
  in: 31 -- 
  out: 66 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 10
  in: 32 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 11
  in: 3 -- 
  out: 121 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 11
  in: 8 -- 
  out: 86 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 12
  in: 2 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 12
  in: 17 -- 
  out: 38 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 12
  in: 18 -- 
  out: 39 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 12
  in: 19 -- 
  out: 40 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 12
  in: 20 -- 
  out: 41 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 12
  in: 21 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 12
  in: 22 -- 
  out: 43 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 12
  in: 23 -- 
  out: 44 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 12
  in: 24 -- 
  out: 45 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 12
  in: 25 -- 
  out: 46 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 12
  in: 26 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 12
  in: 27 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 12
  in: 28 -- 
  out: 49 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 12
  in: 29 -- 
  out: 52 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 12
  in: 31 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 12
  in: 32 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 13
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(137):
  state_no: 14
  in: 3 -- 
  out: 140 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 14
  in: 8 -- 
  out: 86 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 15
  in: 2 -- 
  out: 142 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 15
  in: 17 -- 
  out: 38 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 15
  in: 18 -- 
  out: 39 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 15
  in: 19 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 15
  in: 20 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 15
  in: 21 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 15
  in: 22 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 15
  in: 23 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 15
  in: 24 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 15
  in: 25 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 15
  in: 26 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 15
  in: 27 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 15
  in: 28 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 15
  in: 29 -- 
  out: 157 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 15
  in: 31 -- 
  out: 155 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 15
  in: 32 -- 
  out: 156 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 16
  in: 2 -- 
  out: 158 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 16
  in: 17 -- 
  out: 38 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 16
  in: 18 -- 
  out: 39 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 16
  in: 19 -- 
  out: 40 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 16
  in: 20 -- 
  out: 41 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 16
  in: 21 -- 
  out: 42 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 16
  in: 22 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 16
  in: 23 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 16
  in: 24 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 16
  in: 25 -- 
  out: 46 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 16
  in: 26 -- 
  out: 47 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 16
  in: 27 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 16
  in: 28 -- 
  out: 49 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 16
  in: 29 -- 
  out: 84 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 16
  in: 31 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 16
  in: 32 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 17
  in: 2 -- 
  out: 53 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 17
  in: 17 -- 
  out: 38 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 17
  in: 18 -- 
  out: 39 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 17
  in: 19 -- 
  out: 40 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 17
  in: 20 -- 
  out: 41 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 17
  in: 21 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 17
  in: 22 -- 
  out: 43 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 17
  in: 23 -- 
  out: 44 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 17
  in: 24 -- 
  out: 45 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 17
  in: 25 -- 
  out: 46 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 17
  in: 26 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 17
  in: 27 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 17
  in: 28 -- 
  out: 49 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 17
  in: 29 -- 
  out: 68 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 17
  in: 31 -- 
  out: 66 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 17
  in: 32 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 18
  in: 2 -- 
  out: 190 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 18
  in: 17 -- 
  out: 191 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 18
  in: 18 -- 
  out: 192 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 18
  in: 19 -- 
  out: 193 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 18
  in: 20 -- 
  out: 194 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 18
  in: 21 -- 
  out: 195 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 18
  in: 22 -- 
  out: 196 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 18
  in: 23 -- 
  out: 197 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 18
  in: 24 -- 
  out: 198 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 18
  in: 25 -- 
  out: 199 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 18
  in: 26 -- 
  out: 200 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 18
  in: 27 -- 
  out: 201 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 18
  in: 28 -- 
  out: 202 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 18
  in: 29 -- 
  out: 205 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 18
  in: 31 -- 
  out: 155 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 18
  in: 32 -- 
  out: 156 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 19
  in: 3 -- 
  out: 103 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 19
  in: 8 -- 
  out: 86 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 20
  in: 2 -- 
  out: 53 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 20
  in: 17 -- 
  out: 38 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 20
  in: 18 -- 
  out: 39 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 20
  in: 19 -- 
  out: 40 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 20
  in: 20 -- 
  out: 41 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 20
  in: 21 -- 
  out: 42 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 20
  in: 22 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 20
  in: 23 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 20
  in: 24 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 20
  in: 25 -- 
  out: 46 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 20
  in: 26 -- 
  out: 47 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 20
  in: 27 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 20
  in: 28 -- 
  out: 49 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 20
  in: 29 -- 
  out: 68 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 20
  in: 31 -- 
  out: 66 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 20
  in: 32 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 21
  in: 2 -- 
  out: 224 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 21
  in: 17 -- 
  out: 191 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 21
  in: 18 -- 
  out: 192 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 21
  in: 19 -- 
  out: 193 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 21
  in: 20 -- 
  out: 194 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 21
  in: 21 -- 
  out: 195 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 21
  in: 22 -- 
  out: 196 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 21
  in: 23 -- 
  out: 197 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 21
  in: 24 -- 
  out: 198 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 21
  in: 25 -- 
  out: 199 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 21
  in: 26 -- 
  out: 200 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 21
  in: 27 -- 
  out: 201 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 21
  in: 28 -- 
  out: 202 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 21
  in: 29 -- 
  out: 205 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 21
  in: 31 -- 
  out: 66 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 21
  in: 32 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 22
  in: 3 -- 
  out: 240 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 22
  in: 8 -- 
  out: 86 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 23
  in: 2 -- 
  out: 142 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 23
  in: 17 -- 
  out: 38 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 23
  in: 18 -- 
  out: 39 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 23
  in: 19 -- 
  out: 40 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 23
  in: 20 -- 
  out: 41 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 23
  in: 21 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 23
  in: 22 -- 
  out: 43 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 23
  in: 23 -- 
  out: 44 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 23
  in: 24 -- 
  out: 45 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 23
  in: 25 -- 
  out: 46 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 23
  in: 26 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 23
  in: 27 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 23
  in: 28 -- 
  out: 49 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 23
  in: 29 -- 
  out: 157 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 23
  in: 31 -- 
  out: 155 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 23
  in: 32 -- 
  out: 156 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 24
  in: 2 -- 
  out: 258 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 24
  in: 17 -- 
  out: 38 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 24
  in: 18 -- 
  out: 39 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 24
  in: 19 -- 
  out: 40 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 24
  in: 20 -- 
  out: 41 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 24
  in: 21 -- 
  out: 42 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 24
  in: 22 -- 
  out: 43 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 24
  in: 23 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 24
  in: 24 -- 
  out: 45 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 24
  in: 25 -- 
  out: 46 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 24
  in: 26 -- 
  out: 47 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 24
  in: 27 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 24
  in: 28 -- 
  out: 49 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 24
  in: 29 -- 
  out: 205 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 24
  in: 31 -- 
  out: 155 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 24
  in: 32 -- 
  out: 156 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(271):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(105): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Így>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(66, 0, 0, )
Symbol(2, 93, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 114, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 193, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 205, 5, <sg> )
Symbol(55, 210, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 228, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 6, "nem" )
Symbol(91, 254, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 289, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 323, 7, <pres> )
Symbol(87, 330, 5, <sg> )
Symbol(2, 335, 6, <s3p> )
Symbol(2, 341, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 359, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 398, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 488, 4, "a" )
Symbol(73, 492, 6, <det> )
Symbol(2, 498, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 516, 17, "<kérdésére>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 560, 5, <sg> )
Symbol(28, 565, 8, <px3ss> )
Symbol(2, 573, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 585, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 600, 5, <sg> )
Symbol(32, 605, 6, <pxs> )
Symbol(2, 611, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 629, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 647, 4, "." )
Symbol(64, 651, 7, <sent> )
Symbol(2, 658, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 66 2 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 3 2 15 87 32 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 47, signum = 29, q = 4, out = 52
trans_offset 83, signum = 8, q = 7, out = 86
trans_offset 136, signum = 10, q = 13, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 47, signum = 29, q = 4, out = 52
trans_offset 83, signum = 8, q = 7, out = 86
trans_offset 136, signum = 10, q = 13, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 47, signum = 29, q = 4, out = 52
trans_offset 83, signum = 8, q = 7, out = 86
trans_offset 136, signum = 10, q = 13, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 47, signum = 29, q = 4, out = 52
trans_offset 82, signum = 3, q = 7, out = 36
trans_offset 120, signum = 2, q = 12, out = 37
trans_offset 120, signum = 2, q = 12, out = 37
trans_offset 133, signum = 29, q = 12, out = 52
trans_offset 83, signum = 8, q = 7, out = 86
trans_offset 136, signum = 10, q = 13, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 47, signum = 29, q = 4, out = 52
trans_offset 83, signum = 8, q = 7, out = 86
trans_offset 136, signum = 10, q = 13, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 47, signum = 29, q = 4, out = 52
trans_offset 83, signum = 8, q = 7, out = 86
trans_offset 136, signum = 10, q = 13, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 47, signum = 29, q = 4, out = 52
trans_offset 83, signum = 8, q = 7, out = 86
trans_offset 136, signum = 10, q = 13, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 46, signum = 28, q = 4, out = 49
trans_offset 50, signum = 2, q = 5, out = 53
trans_offset 63, signum = 29, q = 5, out = 68
trans_offset 100, signum = 3, q = 9, out = 103
trans_offset 139, signum = 2, q = 15, out = 142
trans_offset 139, signum = 2, q = 15, out = 142
trans_offset 139, signum = 2, q = 15, out = 142
trans_offset 154, signum = 32, q = 15, out = 156
trans_offset 187, signum = 2, q = 18, out = 190
trans_offset 200, signum = 29, q = 18, out = 205
trans_offset 238, signum = 8, q = 22, out = 86
trans_offset 136, signum = 10, q = 13, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 47, signum = 29, q = 4, out = 52
trans_offset 83, signum = 8, q = 7, out = 86

Intermediate is(105): 
4 19 20 35 36 37 37 52 86 4 19 20 35 36 37 37 52 86 4 19 20 35 36 37 37 37 37 52 86 4 19 20 35 36 37 37 52 36 37 37 52 86 4 19 20 35 36 37 37 37 37 37 37 52 86 4 19 20 35 36 37 37 37 37 52 86 4 19 20 35 36 37 37 37 52 86 4 19 20 35 36 37 37 37 49 53 68 103 142 142 142 156 190 205 86 4 19 20 35 36 37 37 37 52 86 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 62, q = 3, out = 29
trans_offset 180, q = 6, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10
trans_offset 456, q = 14, out = 8
trans_offset 5, q = 1, out = 0
trans_offset 46, q = 2, out = 0
trans_offset 44, q = 2, out = 0
trans_offset 160, q = 5, out = 0
trans_offset 160, q = 5, out = 0
trans_offset 160, q = 5, out = 0
trans_offset 156, q = 5, out = 0
trans_offset 245, q = 8, out = 29
trans_offset 395, q = 12, out = 2
trans_offset 638, q = 18, out = 28
trans_offset 682, q = 19, out = 2
trans_offset 682, q = 19, out = 2
trans_offset 682, q = 19, out = 2
trans_offset 681, q = 19, out = 3
trans_offset 809, q = 22, out = 29
trans_offset 815, q = 23, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10
trans_offset 456, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 62, q = 3, out = 29
trans_offset 180, q = 6, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10
trans_offset 456, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 62, q = 3, out = 29
trans_offset 180, q = 6, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10
trans_offset 456, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 62, q = 3, out = 29
trans_offset 180, q = 6, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10
trans_offset 456, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 63, q = 3, out = 29
trans_offset 182, q = 6, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 62, q = 3, out = 29
trans_offset 180, q = 6, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10
trans_offset 456, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 62, q = 3, out = 29
trans_offset 180, q = 6, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10
trans_offset 456, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 62, q = 3, out = 29
trans_offset 180, q = 6, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10
trans_offset 456, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 62, q = 3, out = 29
trans_offset 180, q = 6, out = 7
trans_offset 306, q = 10, out = 2
trans_offset 305, q = 10, out = 10

Output is(98): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Így>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(66, 0, 0, )
Symbol(2, 93, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 114, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 193, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 205, 5, <sg> )
Symbol(55, 210, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 228, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 6, "nem" )
Symbol(91, 254, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 289, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 323, 7, <pres> )
Symbol(87, 330, 5, <sg> )
Symbol(2, 335, 6, <s3p> )
Symbol(2, 341, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 359, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 398, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 488, 4, "a" )
Symbol(73, 492, 6, <det> )
Symbol(2, 498, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 516, 17, "<kérdésére>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 545, 11, "kérdés" )
Symbol(15, 0, 0, )
Symbol(87, 560, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(2, 573, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 629, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 647, 4, "." )
Symbol(64, 651, 7, <sent> )
Symbol(2, 658, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 66 2 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<ember>" #BOC# | #0# "ember" <n> <sg> <nom> | #EOC# $0$ "<soha>" #BOC# | #0# "soha" <adv> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<kap>" #BOC# | #0# "kap" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<választ>" #BOC# | #0# "válasz" <n> <sg> <acc> | #0# "választ" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<ha>" #BOC# | #0# "ha" <ij> | #0# "ha" <cnjcoo> | #EOC# $0$ "<egy>" #BOC# | #0# "egy" <det> <ind> | #0# "egy" <adv> | #EOC# $0$ "<kutyához>" #BOC# | #0# "kutya" <adj> <sg> <all> | #0# "kutya" <n> <sg> <all> | #EOC# $0$ "<beszél>" #BOC# | #0# "beszél" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Rule found: R_1_204_T_1


LRS T1:
Name: R_1_204_T_1
arity: 2
arccount: 133
statecount: 35
linecount: 134
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 45 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 64 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 67 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 45 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 64 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 67 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 45 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 64 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 67 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 45 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 64 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 67 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 3 -- 
  out: 14 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 7
  in: 2 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 7
  in: 45 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 64 -- 
  out: 30 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 67 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 45 -- 
  out: 17 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 64 -- 
  out: 18 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 67 -- 
  out: 16 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 10
  in: 3 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 11
  in: 2 -- 
  out: 20 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 45 -- 
  out: 22 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 64 -- 
  out: 23 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 67 -- 
  out: 16 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 12
  in: 2 -- 
  out: 45 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 29 -- 
  out: 49 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 45 -- 
  out: 47 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 12
  in: 64 -- 
  out: 48 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 12
  in: 67 -- 
  out: 46 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 13
  in: 2 -- 
  out: 27 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 13
  in: 29 -- 
  out: 31 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 13
  in: 45 -- 
  out: 22 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 64 -- 
  out: 30 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 67 -- 
  out: 28 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 2 -- 
  out: 55 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 29 -- 
  out: 49 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 45 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 64 -- 
  out: 58 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 67 -- 
  out: 46 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 3 -- 
  out: 38 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 45 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 29 -- 
  out: 49 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 45 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 64 -- 
  out: 48 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 67 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 10 -- 
  out: 5 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 2 -- 
  out: 55 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 29 -- 
  out: 49 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 45 -- 
  out: 22 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 64 -- 
  out: 58 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 67 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 2 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 7 -- 
  out: 10 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 45 -- 
  out: 11 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 64 -- 
  out: 12 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 67 -- 
  out: 9 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 29 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 21
  in: 3 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 22
  in: 2 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 22
  in: 45 -- 
  out: 17 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 22
  in: 64 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 22
  in: 67 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 2 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 23
  in: 45 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 23
  in: 64 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 23
  in: 67 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 3 -- 
  out: 14 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 25
  in: 2 -- 
  out: 27 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 25
  in: 29 -- 
  out: 31 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 25
  in: 45 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 64 -- 
  out: 30 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 67 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 26
  in: 2 -- 
  out: 15 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 26
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 26
  in: 45 -- 
  out: 17 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 64 -- 
  out: 18 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 26
  in: 67 -- 
  out: 16 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 27
  in: 3 -- 
  out: 38 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 27
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 28
  in: 2 -- 
  out: 20 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 45 -- 
  out: 22 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 64 -- 
  out: 23 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 67 -- 
  out: 16 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 29
  in: 2 -- 
  out: 45 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 29
  in: 29 -- 
  out: 49 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 45 -- 
  out: 47 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 64 -- 
  out: 48 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 67 -- 
  out: 46 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 30
  in: 2 -- 
  out: 27 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 30
  in: 29 -- 
  out: 31 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 30
  in: 45 -- 
  out: 22 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 64 -- 
  out: 30 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 67 -- 
  out: 28 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 55 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 29 -- 
  out: 49 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 45 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 64 -- 
  out: 58 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 67 -- 
  out: 46 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 32
  in: 3 -- 
  out: 38 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 33
  in: 2 -- 
  out: 45 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 29 -- 
  out: 49 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 45 -- 
  out: 47 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 33
  in: 64 -- 
  out: 48 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 33
  in: 67 -- 
  out: 46 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 2 -- 
  out: 55 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 29 -- 
  out: 49 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 45 -- 
  out: 22 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 64 -- 
  out: 58 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 34
  in: 67 -- 
  out: 46 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(133):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(172): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 90, 2, | )
Symbol(3, 92, 4, #0# )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 118, 2, | )
Symbol(3, 120, 4, #0# )
Symbol(2, 124, 4, "a" )
Symbol(73, 128, 6, <det> )
Symbol(2, 134, 6, <def> )
Symbol(29, 140, 2, | )
Symbol(8, 142, 6, #EOC# )
Symbol(10, 148, 4, $0$ )
Symbol(2, 152, 10, "<ember>" )
Symbol(7, 162, 6, #BOC# )
Symbol(29, 168, 2, | )
Symbol(3, 170, 4, #0# )
Symbol(2, 174, 8, "ember" )
Symbol(15, 182, 4, <n> )
Symbol(87, 186, 5, <sg> )
Symbol(55, 191, 6, <nom> )
Symbol(29, 197, 2, | )
Symbol(8, 199, 6, #EOC# )
Symbol(10, 205, 4, $0$ )
Symbol(2, 209, 9, "<soha>" )
Symbol(7, 218, 6, #BOC# )
Symbol(29, 224, 2, | )
Symbol(3, 226, 4, #0# )
Symbol(2, 230, 7, "soha" )
Symbol(54, 237, 6, <adv> )
Symbol(29, 243, 2, | )
Symbol(8, 245, 6, #EOC# )
Symbol(10, 251, 4, $0$ )
Symbol(2, 255, 8, "<nem>" )
Symbol(7, 263, 6, #BOC# )
Symbol(29, 269, 2, | )
Symbol(3, 271, 4, #0# )
Symbol(2, 275, 6, "nem" )
Symbol(91, 281, 5, <ij> )
Symbol(29, 286, 2, | )
Symbol(3, 288, 4, #0# )
Symbol(2, 292, 6, "nem" )
Symbol(54, 298, 6, <adv> )
Symbol(29, 304, 2, | )
Symbol(8, 306, 6, #EOC# )
Symbol(10, 312, 4, $0$ )
Symbol(2, 316, 8, "<kap>" )
Symbol(7, 324, 6, #BOC# )
Symbol(29, 330, 2, | )
Symbol(3, 332, 4, #0# )
Symbol(78, 336, 6, "kap" )
Symbol(38, 342, 8, <vblex> )
Symbol(37, 350, 7, <pres> )
Symbol(87, 357, 5, <sg> )
Symbol(2, 362, 6, <s3p> )
Symbol(2, 368, 6, <ind> )
Symbol(29, 374, 2, | )
Symbol(8, 376, 6, #EOC# )
Symbol(10, 382, 4, $0$ )
Symbol(2, 386, 13, "<választ>" )
Symbol(7, 399, 6, #BOC# )
Symbol(29, 405, 2, | )
Symbol(3, 407, 4, #0# )
Symbol(79, 411, 10, "válasz" )
Symbol(15, 421, 4, <n> )
Symbol(87, 425, 5, <sg> )
Symbol(71, 430, 6, <acc> )
Symbol(29, 436, 2, | )
Symbol(3, 438, 4, #0# )
Symbol(2, 442, 11, "választ" )
Symbol(38, 453, 8, <vblex> )
Symbol(37, 461, 7, <pres> )
Symbol(87, 468, 5, <sg> )
Symbol(2, 473, 6, <s3p> )
Symbol(2, 479, 6, <ind> )
Symbol(29, 485, 2, | )
Symbol(8, 487, 6, #EOC# )
Symbol(10, 493, 4, $0$ )
Symbol(2, 497, 6, "<,>" )
Symbol(7, 503, 6, #BOC# )
Symbol(29, 509, 2, | )
Symbol(3, 511, 4, #0# )
Symbol(2, 515, 4, "," )
Symbol(44, 519, 5, <cm> )
Symbol(29, 524, 2, | )
Symbol(8, 526, 6, #EOC# )
Symbol(10, 532, 4, $0$ )
Symbol(2, 536, 7, "<ha>" )
Symbol(7, 543, 6, #BOC# )
Symbol(29, 549, 2, | )
Symbol(3, 551, 4, #0# )
Symbol(67, 555, 5, "ha" )
Symbol(91, 560, 5, <ij> )
Symbol(29, 565, 2, | )
Symbol(3, 567, 4, #0# )
Symbol(67, 571, 5, "ha" )
Symbol(45, 576, 9, <cnjcoo> )
Symbol(29, 585, 2, | )
Symbol(8, 587, 6, #EOC# )
Symbol(10, 593, 4, $0$ )
Symbol(2, 597, 8, "<egy>" )
Symbol(7, 605, 6, #BOC# )
Symbol(29, 611, 2, | )
Symbol(3, 613, 4, #0# )
Symbol(2, 617, 6, "egy" )
Symbol(73, 623, 6, <det> )
Symbol(2, 629, 6, <ind> )
Symbol(29, 635, 2, | )
Symbol(3, 637, 4, #0# )
Symbol(2, 641, 6, "egy" )
Symbol(54, 647, 6, <adv> )
Symbol(29, 653, 2, | )
Symbol(8, 655, 6, #EOC# )
Symbol(10, 661, 4, $0$ )
Symbol(2, 665, 14, "<kutyához>" )
Symbol(7, 679, 6, #BOC# )
Symbol(29, 685, 2, | )
Symbol(3, 687, 4, #0# )
Symbol(83, 691, 8, "kutya" )
Symbol(53, 699, 6, <adj> )
Symbol(87, 705, 5, <sg> )
Symbol(2, 710, 6, <all> )
Symbol(29, 716, 2, | )
Symbol(3, 718, 4, #0# )
Symbol(83, 722, 8, "kutya" )
Symbol(15, 730, 4, <n> )
Symbol(87, 734, 5, <sg> )
Symbol(2, 739, 6, <all> )
Symbol(29, 745, 2, | )
Symbol(8, 747, 6, #EOC# )
Symbol(10, 753, 4, $0$ )
Symbol(2, 757, 12, "<beszél>" )
Symbol(7, 769, 6, #BOC# )
Symbol(29, 775, 2, | )
Symbol(3, 777, 4, #0# )
Symbol(2, 781, 10, "beszél" )
Symbol(38, 791, 8, <vblex> )
Symbol(37, 799, 7, <pres> )
Symbol(87, 806, 5, <sg> )
Symbol(2, 811, 6, <s3p> )
Symbol(2, 817, 6, <ind> )
Symbol(29, 823, 2, | )
Symbol(8, 825, 6, #EOC# )
Symbol(10, 831, 4, $0$ )
Symbol(2, 835, 6, "<!>" )
Symbol(7, 841, 6, #BOC# )
Symbol(29, 847, 2, | )
Symbol(3, 849, 4, #0# )
Symbol(39, 853, 4, "!" )
Symbol(64, 857, 7, <sent> )
Symbol(2, 864, 6, <<<<> )
Symbol(29, 870, 2, | )
Symbol(8, 872, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 67 91 29 3 67 45 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 83 53 87 2 29 3 83 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 14
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 22, signum = 3, q = 6, out = 14
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 14
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 14
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 16, signum = 67, q = 4, out = 16
trans_offset 17, signum = 2, q = 5, out = 20
trans_offset 18, signum = 29, q = 5, out = 19
trans_offset 22, signum = 3, q = 6, out = 14
trans_offset 33, signum = 67, q = 8, out = 16
trans_offset 39, signum = 45, q = 11, out = 22
trans_offset 48, signum = 29, q = 13, out = 31
trans_offset 58, signum = 8, q = 15, out = 26
trans_offset 64, signum = 10, q = 17, out = 5
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 10
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 87, signum = 3, q = 24, out = 14
trans_offset 94, signum = 2, q = 26, out = 15
trans_offset 94, signum = 2, q = 26, out = 15
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 14
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 29, signum = 2, q = 8, out = 15
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 15, signum = 64, q = 4, out = 18
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26

Intermediate is(172): 
5 8 10 13 14 15 15 19 26 5 8 10 13 14 15 15 15 15 19 14 15 15 15 15 19 14 15 15 15 19 26 5 8 10 13 14 15 15 15 15 19 26 5 8 10 13 14 15 15 19 26 5 8 10 13 14 15 15 19 14 15 15 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 15 15 19 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 19 26 5 8 10 13 14 16 20 19 14 16 22 31 26 5 8 10 13 14 15 15 15 19 14 15 15 19 26 5 8 10 13 14 15 15 15 15 19 14 15 15 15 15 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 18 15 19 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 64
trans_offset 45, q = 5, out = 2
trans_offset 44, q = 5, out = 3
trans_offset 117, q = 9, out = 29
trans_offset 148, q = 13, out = 7
trans_offset 196, q = 17, out = 2
trans_offset 195, q = 17, out = 10
trans_offset 281, q = 23, out = 8
trans_offset 300, q = 25, out = 29
trans_offset 304, q = 26, out = 2
trans_offset 304, q = 26, out = 2
trans_offset 304, q = 26, out = 2
trans_offset 304, q = 26, out = 2
trans_offset 304, q = 26, out = 2
trans_offset 304, q = 26, out = 2
trans_offset 303, q = 26, out = 3
trans_offset 321, q = 27, out = 29
trans_offset 343, q = 29, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 23, q = 3, out = 29
trans_offset 64, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 23, q = 3, out = 29
trans_offset 64, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 45
trans_offset 28, q = 4, out = 67
trans_offset 81, q = 7, out = 3
trans_offset 127, q = 11, out = 0
trans_offset 178, q = 15, out = 0
trans_offset 206, q = 19, out = 0
trans_offset 204, q = 19, out = 0
trans_offset 126, q = 11, out = 29
trans_offset 172, q = 15, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 23, q = 3, out = 29
trans_offset 64, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 23, q = 3, out = 29
trans_offset 64, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 23, q = 3, out = 29
trans_offset 64, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 23, q = 3, out = 29
trans_offset 64, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10
trans_offset 171, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 22, q = 3, out = 29
trans_offset 62, q = 6, out = 7
trans_offset 122, q = 10, out = 2
trans_offset 121, q = 10, out = 10

Output is(168): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 128, 6, <det> )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 10, "<ember>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 8, "ember" )
Symbol(15, 182, 4, <n> )
Symbol(87, 186, 5, <sg> )
Symbol(55, 191, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 209, 9, "<soha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 7, "soha" )
Symbol(54, 237, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 255, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 275, 6, "nem" )
Symbol(91, 281, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 292, 6, "nem" )
Symbol(54, 298, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 316, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 336, 6, "kap" )
Symbol(38, 342, 8, <vblex> )
Symbol(37, 350, 7, <pres> )
Symbol(87, 357, 5, <sg> )
Symbol(2, 362, 6, <s3p> )
Symbol(2, 368, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 411, 10, "válasz" )
Symbol(15, 421, 4, <n> )
Symbol(87, 425, 5, <sg> )
Symbol(71, 430, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 442, 11, "választ" )
Symbol(38, 453, 8, <vblex> )
Symbol(37, 461, 7, <pres> )
Symbol(87, 468, 5, <sg> )
Symbol(2, 473, 6, <s3p> )
Symbol(2, 479, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 497, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 515, 4, "," )
Symbol(44, 519, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 536, 7, "<ha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(67, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 597, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 617, 6, "egy" )
Symbol(73, 623, 6, <det> )
Symbol(2, 629, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 6, "egy" )
Symbol(54, 647, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 665, 14, "<kutyához>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 691, 8, "kutya" )
Symbol(53, 699, 6, <adj> )
Symbol(87, 705, 5, <sg> )
Symbol(2, 710, 6, <all> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 722, 8, "kutya" )
Symbol(15, 730, 4, <n> )
Symbol(87, 734, 5, <sg> )
Symbol(2, 739, 6, <all> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 757, 12, "<beszél>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 781, 10, "beszél" )
Symbol(38, 791, 8, <vblex> )
Symbol(37, 799, 7, <pres> )
Symbol(87, 806, 5, <sg> )
Symbol(2, 811, 6, <s3p> )
Symbol(2, 817, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 835, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 853, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 864, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 67 45 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 83 53 87 2 29 3 83 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_1_44_T_1


LRS T1:
Name: R_1_44_T_1
arity: 2
arccount: 152
statecount: 39
linecount: 153
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 73 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 74 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 74 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 2
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 2
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 2
  in: 74 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 3
  in: 2 -- 
  out: 9 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 7 -- 
  out: 11 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 3
  in: 15 -- 
  out: 14 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 3
  in: 53 -- 
  out: 12 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 3
  in: 73 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 74 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 29 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 29 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 3 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 8
  in: 2 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 36 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 73 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 74 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 2 -- 
  out: 37 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 9
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 9
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 9
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 9
  in: 74 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 2 -- 
  out: 31 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 74 -- 
  out: 32 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 12
  in: 3 -- 
  out: 30 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 14
  in: 3 -- 
  out: 54 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 74 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 62 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 74 -- 
  out: 63 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 2 -- 
  out: 31 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 29 -- 
  out: 36 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 17
  in: 74 -- 
  out: 32 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 3 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 18
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 2 -- 
  out: 62 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 19
  in: 74 -- 
  out: 63 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 10 -- 
  out: 5 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 21
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 21
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 74 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 22
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 22
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 22
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 22
  in: 74 -- 
  out: 10 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 2 -- 
  out: 9 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 7 -- 
  out: 11 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 23
  in: 15 -- 
  out: 14 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 23
  in: 53 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 23
  in: 73 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 23
  in: 74 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 29 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 25
  in: 29 -- 
  out: 27 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 27
  in: 3 -- 
  out: 30 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 2 -- 
  out: 31 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 29 -- 
  out: 36 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 73 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 74 -- 
  out: 32 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 2 -- 
  out: 37 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 74 -- 
  out: 38 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 31 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 29 -- 
  out: 36 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 31
  in: 74 -- 
  out: 32 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 3 -- 
  out: 30 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 3 -- 
  out: 54 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 34
  in: 2 -- 
  out: 37 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 34
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 74 -- 
  out: 38 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 35
  in: 2 -- 
  out: 62 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 35
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 35
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 35
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 74 -- 
  out: 63 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 36
  in: 2 -- 
  out: 31 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 36
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 36
  in: 29 -- 
  out: 36 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 74 -- 
  out: 32 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 37
  in: 3 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 37
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 38
  in: 2 -- 
  out: 62 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 38
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 38
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 38
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 38
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 74 -- 
  out: 63 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(152):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(168): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 128, 6, <det> )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 10, "<ember>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 8, "ember" )
Symbol(15, 182, 4, <n> )
Symbol(87, 186, 5, <sg> )
Symbol(55, 191, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 209, 9, "<soha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 7, "soha" )
Symbol(54, 237, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 255, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 275, 6, "nem" )
Symbol(91, 281, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 292, 6, "nem" )
Symbol(54, 298, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 316, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 336, 6, "kap" )
Symbol(38, 342, 8, <vblex> )
Symbol(37, 350, 7, <pres> )
Symbol(87, 357, 5, <sg> )
Symbol(2, 362, 6, <s3p> )
Symbol(2, 368, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 411, 10, "válasz" )
Symbol(15, 421, 4, <n> )
Symbol(87, 425, 5, <sg> )
Symbol(71, 430, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 442, 11, "választ" )
Symbol(38, 453, 8, <vblex> )
Symbol(37, 461, 7, <pres> )
Symbol(87, 468, 5, <sg> )
Symbol(2, 473, 6, <s3p> )
Symbol(2, 479, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 497, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 515, 4, "," )
Symbol(44, 519, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 536, 7, "<ha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(67, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 597, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 617, 6, "egy" )
Symbol(73, 623, 6, <det> )
Symbol(2, 629, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 6, "egy" )
Symbol(54, 647, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 665, 14, "<kutyához>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 691, 8, "kutya" )
Symbol(53, 699, 6, <adj> )
Symbol(87, 705, 5, <sg> )
Symbol(2, 710, 6, <all> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 722, 8, "kutya" )
Symbol(15, 730, 4, <n> )
Symbol(87, 734, 5, <sg> )
Symbol(2, 739, 6, <all> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 757, 12, "<beszél>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 781, 10, "beszél" )
Symbol(38, 791, 8, <vblex> )
Symbol(37, 799, 7, <pres> )
Symbol(87, 806, 5, <sg> )
Symbol(2, 811, 6, <s3p> )
Symbol(2, 817, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 835, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 853, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 864, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 67 45 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 83 53 87 2 29 3 83 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 11, signum = 74, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 57, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 32, signum = 73, q = 8, out = 34
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 31, signum = 53, q = 8, out = 33
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44

Intermediate is(168): 
5 9 11 27 29 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 29 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 35 31 31 36 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 34 31 36 29 31 31 36 44 5 9 11 27 29 31 33 31 31 36 29 31 35 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 31 31 36 44 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 58, q = 6, out = 29
trans_offset 70, q = 8, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 28, q = 4, out = 53
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 110, q = 14, out = 3
trans_offset 127, q = 15, out = 29
trans_offset 165, q = 18, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 148, q = 17, out = 2
trans_offset 146, q = 17, out = 3
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 110, q = 14, out = 3
trans_offset 126, q = 15, out = 29
trans_offset 162, q = 18, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 74
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(156): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 10, "<ember>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 8, "ember" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(55, 191, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 209, 9, "<soha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 7, "soha" )
Symbol(54, 237, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 255, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 275, 6, "nem" )
Symbol(91, 281, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 292, 6, "nem" )
Symbol(54, 298, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 316, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 336, 6, "kap" )
Symbol(38, 342, 8, <vblex> )
Symbol(37, 350, 7, <pres> )
Symbol(87, 357, 5, <sg> )
Symbol(2, 362, 6, <s3p> )
Symbol(2, 368, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 411, 10, "válasz" )
Symbol(15, 0, 0, )
Symbol(87, 425, 5, <sg> )
Symbol(71, 430, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 442, 11, "választ" )
Symbol(38, 453, 8, <vblex> )
Symbol(37, 461, 7, <pres> )
Symbol(87, 468, 5, <sg> )
Symbol(2, 473, 6, <s3p> )
Symbol(2, 479, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 497, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 515, 4, "," )
Symbol(44, 519, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 536, 7, "<ha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(67, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 597, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 617, 6, "egy" )
Symbol(73, 0, 0, )
Symbol(2, 629, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 6, "egy" )
Symbol(54, 647, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 665, 14, "<kutyához>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 691, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 705, 5, <sg> )
Symbol(2, 710, 6, <all> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 722, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 734, 5, <sg> )
Symbol(2, 739, 6, <all> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 757, 12, "<beszél>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 781, 10, "beszél" )
Symbol(38, 791, 8, <vblex> )
Symbol(37, 799, 7, <pres> )
Symbol(87, 806, 5, <sg> )
Symbol(2, 811, 6, <s3p> )
Symbol(2, 817, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 835, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 853, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 864, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 67 45 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 83 53 87 2 29 3 83 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_1_67_T_1


LRS T1:
Name: R_1_67_T_1
arity: 2
arccount: 526
statecount: 70
linecount: 527
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 38 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 47 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 48 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 71 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 78 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 79 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 1
  in: 2 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 7 -- 
  out: 15 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 15 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 38 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 47 -- 
  out: 19 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 48 -- 
  out: 20 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 71 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 1
  in: 78 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 1
  in: 79 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 2
  in: 29 -- 
  out: 21 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 3 -- 
  out: 22 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 2 -- 
  out: 23 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 15 -- 
  out: 27 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 29 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 4
  in: 38 -- 
  out: 28 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 47 -- 
  out: 29 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 48 -- 
  out: 30 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 4
  in: 71 -- 
  out: 26 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 4
  in: 78 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 4
  in: 79 -- 
  out: 25 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 2 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 5
  in: 15 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 5
  in: 29 -- 
  out: 31 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 5
  in: 38 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 5
  in: 47 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 5
  in: 48 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 5
  in: 71 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 5
  in: 78 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 5
  in: 79 -- 
  out: 25 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 6
  in: 3 -- 
  out: 22 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 6
  in: 8 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 7
  in: 15 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 7
  in: 38 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 7
  in: 47 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 7
  in: 48 -- 
  out: 30 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 7
  in: 71 -- 
  out: 26 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 7
  in: 78 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 7
  in: 79 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 8
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(50):
  state_no: 9
  in: 3 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 9
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 10
  in: 10 -- 
  out: 6 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(53):
  state_no: 11
  in: 2 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 11
  in: 7 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 11
  in: 15 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 11
  in: 38 -- 
  out: 18 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 11
  in: 47 -- 
  out: 19 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 11
  in: 48 -- 
  out: 20 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 11
  in: 71 -- 
  out: 16 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 11
  in: 78 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 11
  in: 79 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 12
  in: 29 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 13
  in: 3 -- 
  out: 66 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 14
  in: 2 -- 
  out: 67 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 14
  in: 15 -- 
  out: 71 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 14
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 14
  in: 38 -- 
  out: 72 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 14
  in: 47 -- 
  out: 73 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 14
  in: 48 -- 
  out: 74 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 14
  in: 71 -- 
  out: 70 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 14
  in: 78 -- 
  out: 68 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 14
  in: 79 -- 
  out: 69 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 15
  in: 2 -- 
  out: 67 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 15
  in: 15 -- 
  out: 71 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 15
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 15
  in: 38 -- 
  out: 72 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 15
  in: 47 -- 
  out: 73 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 15
  in: 48 -- 
  out: 74 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 15
  in: 71 -- 
  out: 70 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 15
  in: 78 -- 
  out: 68 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 15
  in: 79 -- 
  out: 69 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 16
  in: 2 -- 
  out: 85 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 16
  in: 15 -- 
  out: 89 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 16
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 16
  in: 38 -- 
  out: 90 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 16
  in: 47 -- 
  out: 91 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 16
  in: 48 -- 
  out: 92 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 16
  in: 71 -- 
  out: 88 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 16
  in: 78 -- 
  out: 86 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 16
  in: 79 -- 
  out: 69 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 17
  in: 2 -- 
  out: 67 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 17
  in: 15 -- 
  out: 71 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 17
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 17
  in: 38 -- 
  out: 72 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 17
  in: 47 -- 
  out: 73 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 17
  in: 48 -- 
  out: 74 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 17
  in: 71 -- 
  out: 70 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 17
  in: 78 -- 
  out: 68 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 17
  in: 79 -- 
  out: 69 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 18
  in: 3 -- 
  out: 66 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 18
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 19
  in: 2 -- 
  out: 85 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 19
  in: 15 -- 
  out: 89 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 19
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 19
  in: 38 -- 
  out: 90 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 19
  in: 47 -- 
  out: 91 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 19
  in: 48 -- 
  out: 92 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 19
  in: 71 -- 
  out: 88 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 19
  in: 78 -- 
  out: 86 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 19
  in: 79 -- 
  out: 69 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 20
  in: 2 -- 
  out: 67 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 20
  in: 15 -- 
  out: 71 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 20
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 20
  in: 38 -- 
  out: 72 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 20
  in: 47 -- 
  out: 73 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 20
  in: 48 -- 
  out: 74 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 20
  in: 71 -- 
  out: 70 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 20
  in: 78 -- 
  out: 68 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 20
  in: 79 -- 
  out: 69 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 21
  in: 2 -- 
  out: 67 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 21
  in: 15 -- 
  out: 71 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 21
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 21
  in: 38 -- 
  out: 72 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 21
  in: 47 -- 
  out: 73 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 21
  in: 48 -- 
  out: 74 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 21
  in: 71 -- 
  out: 70 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 21
  in: 78 -- 
  out: 68 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 21
  in: 79 -- 
  out: 69 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 22
  in: 2 -- 
  out: 132 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 22
  in: 15 -- 
  out: 89 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 22
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 22
  in: 38 -- 
  out: 137 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 22
  in: 47 -- 
  out: 138 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 22
  in: 48 -- 
  out: 139 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 22
  in: 71 -- 
  out: 26 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 22
  in: 78 -- 
  out: 133 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 22
  in: 79 -- 
  out: 134 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 23
  in: 2 -- 
  out: 85 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 23
  in: 15 -- 
  out: 89 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 23
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 23
  in: 38 -- 
  out: 90 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 23
  in: 47 -- 
  out: 91 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 23
  in: 48 -- 
  out: 92 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 23
  in: 71 -- 
  out: 88 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 23
  in: 78 -- 
  out: 86 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 23
  in: 79 -- 
  out: 69 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 24
  in: 3 -- 
  out: 66 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 24
  in: 8 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 25
  in: 2 -- 
  out: 67 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 25
  in: 15 -- 
  out: 71 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 25
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 25
  in: 38 -- 
  out: 72 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 25
  in: 47 -- 
  out: 73 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 25
  in: 48 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 25
  in: 71 -- 
  out: 70 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 25
  in: 78 -- 
  out: 68 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 25
  in: 79 -- 
  out: 69 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 26
  in: 2 -- 
  out: 132 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 26
  in: 15 -- 
  out: 89 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 26
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 26
  in: 38 -- 
  out: 137 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 26
  in: 47 -- 
  out: 138 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 26
  in: 48 -- 
  out: 139 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 26
  in: 71 -- 
  out: 26 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 26
  in: 78 -- 
  out: 133 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 26
  in: 79 -- 
  out: 134 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 27
  in: 2 -- 
  out: 85 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 27
  in: 15 -- 
  out: 89 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 27
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 27
  in: 38 -- 
  out: 90 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 27
  in: 47 -- 
  out: 91 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 27
  in: 48 -- 
  out: 92 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 27
  in: 71 -- 
  out: 88 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 27
  in: 78 -- 
  out: 86 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 27
  in: 79 -- 
  out: 69 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 28
  in: 2 -- 
  out: 85 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 28
  in: 15 -- 
  out: 89 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 28
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 28
  in: 38 -- 
  out: 90 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 28
  in: 47 -- 
  out: 91 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 28
  in: 48 -- 
  out: 92 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 28
  in: 71 -- 
  out: 88 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 28
  in: 78 -- 
  out: 86 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 28
  in: 79 -- 
  out: 69 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 29
  in: 3 -- 
  out: 66 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 29
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 30
  in: 2 -- 
  out: 23 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 30
  in: 15 -- 
  out: 27 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 30
  in: 29 -- 
  out: 31 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 30
  in: 38 -- 
  out: 28 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 30
  in: 47 -- 
  out: 29 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 30
  in: 48 -- 
  out: 30 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 30
  in: 71 -- 
  out: 26 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 30
  in: 78 -- 
  out: 24 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 30
  in: 79 -- 
  out: 25 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 31
  in: 2 -- 
  out: 132 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 31
  in: 15 -- 
  out: 89 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 31
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 31
  in: 38 -- 
  out: 137 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 31
  in: 47 -- 
  out: 138 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 31
  in: 48 -- 
  out: 139 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 31
  in: 71 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 31
  in: 78 -- 
  out: 133 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 31
  in: 79 -- 
  out: 134 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 32
  in: 2 -- 
  out: 67 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 32
  in: 15 -- 
  out: 71 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 32
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 32
  in: 38 -- 
  out: 72 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 32
  in: 47 -- 
  out: 73 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 32
  in: 48 -- 
  out: 74 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 32
  in: 71 -- 
  out: 70 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 32
  in: 78 -- 
  out: 68 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 32
  in: 79 -- 
  out: 69 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 33
  in: 2 -- 
  out: 67 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 33
  in: 15 -- 
  out: 71 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 33
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 33
  in: 38 -- 
  out: 72 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 33
  in: 47 -- 
  out: 73 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 33
  in: 48 -- 
  out: 74 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 33
  in: 71 -- 
  out: 70 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 33
  in: 78 -- 
  out: 68 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 33
  in: 79 -- 
  out: 69 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 34
  in: 2 -- 
  out: 85 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 34
  in: 15 -- 
  out: 89 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 34
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 34
  in: 38 -- 
  out: 90 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 34
  in: 47 -- 
  out: 91 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 34
  in: 48 -- 
  out: 92 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 34
  in: 71 -- 
  out: 88 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 34
  in: 78 -- 
  out: 86 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 34
  in: 79 -- 
  out: 69 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 35
  in: 2 -- 
  out: 23 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 35
  in: 15 -- 
  out: 27 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 35
  in: 29 -- 
  out: 31 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 35
  in: 38 -- 
  out: 28 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 35
  in: 47 -- 
  out: 29 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 35
  in: 48 -- 
  out: 30 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 35
  in: 71 -- 
  out: 26 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 35
  in: 78 -- 
  out: 24 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 35
  in: 79 -- 
  out: 25 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 36
  in: 2 -- 
  out: 132 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 36
  in: 15 -- 
  out: 89 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 36
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 36
  in: 38 -- 
  out: 137 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 36
  in: 47 -- 
  out: 138 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 36
  in: 48 -- 
  out: 139 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 36
  in: 71 -- 
  out: 26 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 36
  in: 78 -- 
  out: 133 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 36
  in: 79 -- 
  out: 134 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 37
  in: 2 -- 
  out: 132 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 37
  in: 15 -- 
  out: 89 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 37
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 37
  in: 38 -- 
  out: 137 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 37
  in: 47 -- 
  out: 138 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 37
  in: 48 -- 
  out: 139 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 37
  in: 71 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 37
  in: 78 -- 
  out: 133 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 37
  in: 79 -- 
  out: 134 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 38
  in: 2 -- 
  out: 67 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 38
  in: 15 -- 
  out: 71 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 38
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 38
  in: 38 -- 
  out: 72 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 38
  in: 47 -- 
  out: 73 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 38
  in: 48 -- 
  out: 74 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 38
  in: 71 -- 
  out: 70 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 38
  in: 78 -- 
  out: 68 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 38
  in: 79 -- 
  out: 69 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 39
  in: 2 -- 
  out: 23 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 39
  in: 15 -- 
  out: 27 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 39
  in: 29 -- 
  out: 31 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 39
  in: 38 -- 
  out: 28 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 39
  in: 47 -- 
  out: 29 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 39
  in: 48 -- 
  out: 30 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 39
  in: 71 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 39
  in: 78 -- 
  out: 24 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 39
  in: 79 -- 
  out: 25 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 40
  in: 3 -- 
  out: 280 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 40
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 41
  in: 2 -- 
  out: 67 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 41
  in: 15 -- 
  out: 71 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 41
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 41
  in: 38 -- 
  out: 72 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 41
  in: 47 -- 
  out: 73 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 41
  in: 48 -- 
  out: 74 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 41
  in: 71 -- 
  out: 70 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 41
  in: 78 -- 
  out: 68 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 41
  in: 79 -- 
  out: 69 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 42
  in: 2 -- 
  out: 85 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 42
  in: 15 -- 
  out: 89 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 42
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 42
  in: 38 -- 
  out: 90 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 42
  in: 47 -- 
  out: 91 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 42
  in: 48 -- 
  out: 92 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 42
  in: 71 -- 
  out: 88 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 42
  in: 78 -- 
  out: 86 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 42
  in: 79 -- 
  out: 69 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 43
  in: 2 -- 
  out: 85 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 43
  in: 15 -- 
  out: 89 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 43
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 43
  in: 38 -- 
  out: 90 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 43
  in: 47 -- 
  out: 91 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 43
  in: 48 -- 
  out: 92 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 43
  in: 71 -- 
  out: 88 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 43
  in: 78 -- 
  out: 86 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 43
  in: 79 -- 
  out: 69 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 44
  in: 2 -- 
  out: 132 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 44
  in: 15 -- 
  out: 89 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 44
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 44
  in: 38 -- 
  out: 137 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 44
  in: 47 -- 
  out: 138 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 44
  in: 48 -- 
  out: 139 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 44
  in: 71 -- 
  out: 26 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 44
  in: 78 -- 
  out: 133 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 44
  in: 79 -- 
  out: 134 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 45
  in: 2 -- 
  out: 23 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 45
  in: 15 -- 
  out: 27 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 45
  in: 29 -- 
  out: 31 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 45
  in: 38 -- 
  out: 28 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 45
  in: 47 -- 
  out: 29 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 45
  in: 48 -- 
  out: 30 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 45
  in: 71 -- 
  out: 26 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 45
  in: 78 -- 
  out: 24 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 45
  in: 79 -- 
  out: 25 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 46
  in: 2 -- 
  out: 23 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 46
  in: 15 -- 
  out: 27 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 46
  in: 29 -- 
  out: 31 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 46
  in: 38 -- 
  out: 28 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 46
  in: 47 -- 
  out: 29 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 46
  in: 48 -- 
  out: 30 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 46
  in: 71 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 46
  in: 78 -- 
  out: 24 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 46
  in: 79 -- 
  out: 25 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 47
  in: 2 -- 
  out: 85 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 47
  in: 15 -- 
  out: 89 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 47
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 47
  in: 38 -- 
  out: 90 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 47
  in: 47 -- 
  out: 91 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 47
  in: 48 -- 
  out: 92 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 47
  in: 71 -- 
  out: 88 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 47
  in: 78 -- 
  out: 86 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 47
  in: 79 -- 
  out: 69 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 48
  in: 3 -- 
  out: 280 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 48
  in: 8 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 49
  in: 2 -- 
  out: 347 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 49
  in: 15 -- 
  out: 351 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 49
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 49
  in: 38 -- 
  out: 352 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 49
  in: 47 -- 
  out: 353 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 49
  in: 48 -- 
  out: 354 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 49
  in: 71 -- 
  out: 350 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 49
  in: 78 -- 
  out: 348 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 49
  in: 79 -- 
  out: 349 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 50
  in: 2 -- 
  out: 85 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 50
  in: 15 -- 
  out: 89 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 50
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 50
  in: 38 -- 
  out: 90 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 50
  in: 47 -- 
  out: 91 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 50
  in: 48 -- 
  out: 92 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 50
  in: 71 -- 
  out: 88 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 50
  in: 78 -- 
  out: 86 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 50
  in: 79 -- 
  out: 69 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 51
  in: 2 -- 
  out: 132 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 51
  in: 15 -- 
  out: 89 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 51
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(365):
  state_no: 51
  in: 38 -- 
  out: 137 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(366):
  state_no: 51
  in: 47 -- 
  out: 138 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(367):
  state_no: 51
  in: 48 -- 
  out: 139 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(368):
  state_no: 51
  in: 71 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(369):
  state_no: 51
  in: 78 -- 
  out: 133 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(370):
  state_no: 51
  in: 79 -- 
  out: 134 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(371):
  state_no: 52
  in: 2 -- 
  out: 132 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(372):
  state_no: 52
  in: 15 -- 
  out: 89 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(373):
  state_no: 52
  in: 29 -- 
  out: 75 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(374):
  state_no: 52
  in: 38 -- 
  out: 137 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(375):
  state_no: 52
  in: 47 -- 
  out: 138 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(376):
  state_no: 52
  in: 48 -- 
  out: 139 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(377):
  state_no: 52
  in: 71 -- 
  out: 26 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(378):
  state_no: 52
  in: 78 -- 
  out: 133 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(379):
  state_no: 52
  in: 79 -- 
  out: 134 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(380):
  state_no: 53
  in: 3 -- 
  out: 280 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(381):
  state_no: 53
  in: 8 -- 
  out: 42 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(382):
  state_no: 54
  in: 2 -- 
  out: 132 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(383):
  state_no: 54
  in: 15 -- 
  out: 89 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(384):
  state_no: 54
  in: 29 -- 
  out: 75 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(385):
  state_no: 54
  in: 38 -- 
  out: 137 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(386):
  state_no: 54
  in: 47 -- 
  out: 138 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(387):
  state_no: 54
  in: 48 -- 
  out: 139 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(388):
  state_no: 54
  in: 71 -- 
  out: 26 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(389):
  state_no: 54
  in: 78 -- 
  out: 133 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(390):
  state_no: 54
  in: 79 -- 
  out: 134 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(391):
  state_no: 55
  in: 2 -- 
  out: 347 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(392):
  state_no: 55
  in: 15 -- 
  out: 351 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(393):
  state_no: 55
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(394):
  state_no: 55
  in: 38 -- 
  out: 352 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(395):
  state_no: 55
  in: 47 -- 
  out: 353 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(396):
  state_no: 55
  in: 48 -- 
  out: 354 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(397):
  state_no: 55
  in: 71 -- 
  out: 350 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(398):
  state_no: 55
  in: 78 -- 
  out: 348 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(399):
  state_no: 55
  in: 79 -- 
  out: 349 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(400):
  state_no: 56
  in: 2 -- 
  out: 347 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(401):
  state_no: 56
  in: 15 -- 
  out: 351 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(402):
  state_no: 56
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(403):
  state_no: 56
  in: 38 -- 
  out: 352 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(404):
  state_no: 56
  in: 47 -- 
  out: 353 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(405):
  state_no: 56
  in: 48 -- 
  out: 354 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(406):
  state_no: 56
  in: 71 -- 
  out: 350 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(407):
  state_no: 56
  in: 78 -- 
  out: 348 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(408):
  state_no: 56
  in: 79 -- 
  out: 349 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(409):
  state_no: 57
  in: 2 -- 
  out: 412 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(410):
  state_no: 57
  in: 15 -- 
  out: 416 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(411):
  state_no: 57
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(412):
  state_no: 57
  in: 38 -- 
  out: 417 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(413):
  state_no: 57
  in: 47 -- 
  out: 418 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(414):
  state_no: 57
  in: 48 -- 
  out: 419 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(415):
  state_no: 57
  in: 71 -- 
  out: 415 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(416):
  state_no: 57
  in: 78 -- 
  out: 413 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(417):
  state_no: 57
  in: 79 -- 
  out: 349 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(418):
  state_no: 58
  in: 2 -- 
  out: 132 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(419):
  state_no: 58
  in: 15 -- 
  out: 89 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(420):
  state_no: 58
  in: 29 -- 
  out: 75 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(421):
  state_no: 58
  in: 38 -- 
  out: 137 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(422):
  state_no: 58
  in: 47 -- 
  out: 138 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(423):
  state_no: 58
  in: 48 -- 
  out: 139 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(424):
  state_no: 58
  in: 71 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(425):
  state_no: 58
  in: 78 -- 
  out: 133 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(426):
  state_no: 58
  in: 79 -- 
  out: 134 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(427):
  state_no: 59
  in: 2 -- 
  out: 347 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(428):
  state_no: 59
  in: 15 -- 
  out: 351 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(429):
  state_no: 59
  in: 29 -- 
  out: 355 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(430):
  state_no: 59
  in: 38 -- 
  out: 352 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(431):
  state_no: 59
  in: 47 -- 
  out: 353 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(432):
  state_no: 59
  in: 48 -- 
  out: 354 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(433):
  state_no: 59
  in: 71 -- 
  out: 350 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(434):
  state_no: 59
  in: 78 -- 
  out: 348 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(435):
  state_no: 59
  in: 79 -- 
  out: 349 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(436):
  state_no: 60
  in: 2 -- 
  out: 347 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(437):
  state_no: 60
  in: 15 -- 
  out: 351 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(438):
  state_no: 60
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(439):
  state_no: 60
  in: 38 -- 
  out: 352 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(440):
  state_no: 60
  in: 47 -- 
  out: 353 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(441):
  state_no: 60
  in: 48 -- 
  out: 354 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(442):
  state_no: 60
  in: 71 -- 
  out: 350 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(443):
  state_no: 60
  in: 78 -- 
  out: 348 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(444):
  state_no: 60
  in: 79 -- 
  out: 349 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(445):
  state_no: 61
  in: 2 -- 
  out: 412 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(446):
  state_no: 61
  in: 15 -- 
  out: 416 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(447):
  state_no: 61
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(448):
  state_no: 61
  in: 38 -- 
  out: 417 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(449):
  state_no: 61
  in: 47 -- 
  out: 418 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(450):
  state_no: 61
  in: 48 -- 
  out: 419 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(451):
  state_no: 61
  in: 71 -- 
  out: 415 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(452):
  state_no: 61
  in: 78 -- 
  out: 413 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(453):
  state_no: 61
  in: 79 -- 
  out: 349 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(454):
  state_no: 62
  in: 2 -- 
  out: 412 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(455):
  state_no: 62
  in: 15 -- 
  out: 416 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(456):
  state_no: 62
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(457):
  state_no: 62
  in: 38 -- 
  out: 417 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(458):
  state_no: 62
  in: 47 -- 
  out: 418 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(459):
  state_no: 62
  in: 48 -- 
  out: 419 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(460):
  state_no: 62
  in: 71 -- 
  out: 415 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(461):
  state_no: 62
  in: 78 -- 
  out: 413 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(462):
  state_no: 62
  in: 79 -- 
  out: 349 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(463):
  state_no: 63
  in: 2 -- 
  out: 466 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(464):
  state_no: 63
  in: 15 -- 
  out: 416 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(465):
  state_no: 63
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(466):
  state_no: 63
  in: 38 -- 
  out: 471 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(467):
  state_no: 63
  in: 47 -- 
  out: 472 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(468):
  state_no: 63
  in: 48 -- 
  out: 473 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(469):
  state_no: 63
  in: 71 -- 
  out: 26 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(470):
  state_no: 63
  in: 78 -- 
  out: 467 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(471):
  state_no: 63
  in: 79 -- 
  out: 468 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(472):
  state_no: 64
  in: 2 -- 
  out: 412 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(473):
  state_no: 64
  in: 15 -- 
  out: 416 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(474):
  state_no: 64
  in: 29 -- 
  out: 355 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(475):
  state_no: 64
  in: 38 -- 
  out: 417 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(476):
  state_no: 64
  in: 47 -- 
  out: 418 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(477):
  state_no: 64
  in: 48 -- 
  out: 419 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(478):
  state_no: 64
  in: 71 -- 
  out: 415 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(479):
  state_no: 64
  in: 78 -- 
  out: 413 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(480):
  state_no: 64
  in: 79 -- 
  out: 349 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(481):
  state_no: 65
  in: 2 -- 
  out: 412 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(482):
  state_no: 65
  in: 15 -- 
  out: 416 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(483):
  state_no: 65
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(484):
  state_no: 65
  in: 38 -- 
  out: 417 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(485):
  state_no: 65
  in: 47 -- 
  out: 418 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(486):
  state_no: 65
  in: 48 -- 
  out: 419 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(487):
  state_no: 65
  in: 71 -- 
  out: 415 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(488):
  state_no: 65
  in: 78 -- 
  out: 413 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(489):
  state_no: 65
  in: 79 -- 
  out: 349 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(490):
  state_no: 66
  in: 2 -- 
  out: 466 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(491):
  state_no: 66
  in: 15 -- 
  out: 416 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(492):
  state_no: 66
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(493):
  state_no: 66
  in: 38 -- 
  out: 471 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(494):
  state_no: 66
  in: 47 -- 
  out: 472 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(495):
  state_no: 66
  in: 48 -- 
  out: 473 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(496):
  state_no: 66
  in: 71 -- 
  out: 26 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(497):
  state_no: 66
  in: 78 -- 
  out: 467 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(498):
  state_no: 66
  in: 79 -- 
  out: 468 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(499):
  state_no: 67
  in: 2 -- 
  out: 466 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(500):
  state_no: 67
  in: 15 -- 
  out: 416 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(501):
  state_no: 67
  in: 29 -- 
  out: 355 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(502):
  state_no: 67
  in: 38 -- 
  out: 471 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(503):
  state_no: 67
  in: 47 -- 
  out: 472 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(504):
  state_no: 67
  in: 48 -- 
  out: 473 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(505):
  state_no: 67
  in: 71 -- 
  out: 26 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(506):
  state_no: 67
  in: 78 -- 
  out: 467 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(507):
  state_no: 67
  in: 79 -- 
  out: 468 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(508):
  state_no: 68
  in: 2 -- 
  out: 466 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(509):
  state_no: 68
  in: 15 -- 
  out: 416 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(510):
  state_no: 68
  in: 29 -- 
  out: 355 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(511):
  state_no: 68
  in: 38 -- 
  out: 471 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(512):
  state_no: 68
  in: 47 -- 
  out: 472 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(513):
  state_no: 68
  in: 48 -- 
  out: 473 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(514):
  state_no: 68
  in: 71 -- 
  out: 26 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(515):
  state_no: 68
  in: 78 -- 
  out: 467 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(516):
  state_no: 68
  in: 79 -- 
  out: 468 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(517):
  state_no: 69
  in: 2 -- 
  out: 466 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(518):
  state_no: 69
  in: 15 -- 
  out: 416 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(519):
  state_no: 69
  in: 29 -- 
  out: 355 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(520):
  state_no: 69
  in: 38 -- 
  out: 471 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(521):
  state_no: 69
  in: 47 -- 
  out: 472 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(522):
  state_no: 69
  in: 48 -- 
  out: 473 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(523):
  state_no: 69
  in: 71 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(524):
  state_no: 69
  in: 78 -- 
  out: 467 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(525):
  state_no: 69
  in: 79 -- 
  out: 468 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(526):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(156): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 10, "<ember>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 8, "ember" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(55, 191, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 209, 9, "<soha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 7, "soha" )
Symbol(54, 237, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 255, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 275, 6, "nem" )
Symbol(91, 281, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 292, 6, "nem" )
Symbol(54, 298, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 316, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 336, 6, "kap" )
Symbol(38, 342, 8, <vblex> )
Symbol(37, 350, 7, <pres> )
Symbol(87, 357, 5, <sg> )
Symbol(2, 362, 6, <s3p> )
Symbol(2, 368, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 411, 10, "válasz" )
Symbol(15, 0, 0, )
Symbol(87, 425, 5, <sg> )
Symbol(71, 430, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 442, 11, "választ" )
Symbol(38, 453, 8, <vblex> )
Symbol(37, 461, 7, <pres> )
Symbol(87, 468, 5, <sg> )
Symbol(2, 473, 6, <s3p> )
Symbol(2, 479, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 497, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 515, 4, "," )
Symbol(44, 519, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 536, 7, "<ha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(67, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 597, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 617, 6, "egy" )
Symbol(73, 0, 0, )
Symbol(2, 629, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 6, "egy" )
Symbol(54, 647, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 665, 14, "<kutyához>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 691, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 705, 5, <sg> )
Symbol(2, 710, 6, <all> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 722, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 734, 5, <sg> )
Symbol(2, 739, 6, <all> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 757, 12, "<beszél>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 781, 10, "beszél" )
Symbol(38, 791, 8, <vblex> )
Symbol(37, 799, 7, <pres> )
Symbol(87, 806, 5, <sg> )
Symbol(2, 811, 6, <s3p> )
Symbol(2, 817, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 835, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 853, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 864, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 67 45 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 83 53 87 2 29 3 83 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 21, signum = 15, q = 4, out = 27
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 38, signum = 3, q = 6, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 27, signum = 78, q = 4, out = 24
trans_offset 32, signum = 38, q = 5, out = 28
trans_offset 40, signum = 2, q = 7, out = 23
trans_offset 40, signum = 2, q = 7, out = 23
trans_offset 40, signum = 2, q = 7, out = 23
trans_offset 40, signum = 2, q = 7, out = 23
trans_offset 42, signum = 29, q = 7, out = 31
trans_offset 51, signum = 8, q = 9, out = 42
trans_offset 52, signum = 10, q = 10, out = 6
trans_offset 53, signum = 2, q = 11, out = 12
trans_offset 54, signum = 7, q = 11, out = 15
trans_offset 62, signum = 29, q = 12, out = 21
trans_offset 63, signum = 3, q = 13, out = 66
trans_offset 72, signum = 79, q = 14, out = 69
trans_offset 83, signum = 15, q = 16, out = 89
trans_offset 129, signum = 2, q = 22, out = 132
trans_offset 135, signum = 71, q = 22, out = 26
trans_offset 189, signum = 29, q = 30, out = 31
trans_offset 277, signum = 3, q = 40, out = 280
trans_offset 344, signum = 2, q = 49, out = 347
trans_offset 347, signum = 38, q = 49, out = 352
trans_offset 391, signum = 2, q = 55, out = 347
trans_offset 391, signum = 2, q = 55, out = 347
trans_offset 391, signum = 2, q = 55, out = 347
trans_offset 391, signum = 2, q = 55, out = 347
trans_offset 393, signum = 29, q = 55, out = 355
trans_offset 343, signum = 8, q = 48, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 38, signum = 3, q = 6, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 38, signum = 3, q = 6, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 21, signum = 15, q = 4, out = 27
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 23, signum = 38, q = 4, out = 28
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42
trans_offset 49, signum = 10, q = 8, out = 6
trans_offset 9, signum = 2, q = 1, out = 12
trans_offset 10, signum = 7, q = 1, out = 15
trans_offset 18, signum = 29, q = 2, out = 21
trans_offset 19, signum = 3, q = 3, out = 22
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 20, signum = 2, q = 4, out = 23
trans_offset 22, signum = 29, q = 4, out = 31
trans_offset 39, signum = 8, q = 6, out = 42

Intermediate is(156): 
6 12 15 21 22 23 23 31 42 6 12 15 21 22 23 23 23 31 42 6 12 15 21 22 23 27 23 23 31 42 6 12 15 21 22 23 23 31 42 6 12 15 21 22 23 23 31 22 23 23 31 42 6 12 15 21 22 24 28 23 23 23 23 31 42 6 12 15 21 66 69 89 132 26 31 280 347 352 347 347 347 347 355 42 6 12 15 21 22 23 23 31 42 6 12 15 21 22 23 23 31 42 6 12 15 21 22 23 23 23 31 22 23 23 31 42 6 12 15 21 22 23 23 23 23 31 22 23 27 23 23 31 42 6 12 15 21 22 23 28 23 23 23 23 31 42 6 12 15 21 22 23 23 23 31 42 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 10, q = 2, out = 38
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 58, q = 3, out = 29
trans_offset 116, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 58, q = 3, out = 29
trans_offset 116, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 41, q = 2, out = 0
trans_offset 36, q = 2, out = 0
trans_offset 35, q = 2, out = 0
trans_offset 58, q = 3, out = 29
trans_offset 119, q = 5, out = 71
trans_offset 86, q = 4, out = 2
trans_offset 82, q = 4, out = 15
trans_offset 180, q = 6, out = 79
trans_offset 239, q = 8, out = 3
trans_offset 292, q = 10, out = 29
trans_offset 304, q = 12, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 10, q = 2, out = 38
trans_offset 6, q = 2, out = 78
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 58, q = 3, out = 29
trans_offset 116, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10
trans_offset 291, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 57, q = 3, out = 29
trans_offset 114, q = 5, out = 7
trans_offset 222, q = 7, out = 2
trans_offset 221, q = 7, out = 10

Output is(148): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 10, "<ember>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 8, "ember" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(55, 191, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 209, 9, "<soha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 7, "soha" )
Symbol(54, 237, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 255, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 275, 6, "nem" )
Symbol(91, 281, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 292, 6, "nem" )
Symbol(54, 298, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 316, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 350, 7, <pres> )
Symbol(87, 357, 5, <sg> )
Symbol(2, 362, 6, <s3p> )
Symbol(2, 368, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 425, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 497, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 515, 4, "," )
Symbol(44, 519, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 536, 7, "<ha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(67, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 597, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 617, 6, "egy" )
Symbol(73, 0, 0, )
Symbol(2, 629, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 6, "egy" )
Symbol(54, 647, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 665, 14, "<kutyához>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 691, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 705, 5, <sg> )
Symbol(2, 710, 6, <all> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 722, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 734, 5, <sg> )
Symbol(2, 739, 6, <all> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 757, 12, "<beszél>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 781, 10, "beszél" )
Symbol(38, 0, 0, )
Symbol(37, 799, 7, <pres> )
Symbol(87, 806, 5, <sg> )
Symbol(2, 811, 6, <s3p> )
Symbol(2, 817, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 835, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 853, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 864, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 67 45 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 83 53 87 2 29 3 83 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_3_284_T_1


LRS T1:
Name: R_3_284_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 83 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 83 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 83 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 15 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(148): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 10, "<ember>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 8, "ember" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(55, 191, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 209, 9, "<soha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 7, "soha" )
Symbol(54, 237, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 255, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 275, 6, "nem" )
Symbol(91, 281, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 292, 6, "nem" )
Symbol(54, 298, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 316, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 350, 7, <pres> )
Symbol(87, 357, 5, <sg> )
Symbol(2, 362, 6, <s3p> )
Symbol(2, 368, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 425, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 497, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 515, 4, "," )
Symbol(44, 519, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 536, 7, "<ha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(67, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 597, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 617, 6, "egy" )
Symbol(73, 0, 0, )
Symbol(2, 629, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 6, "egy" )
Symbol(54, 647, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 665, 14, "<kutyához>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 691, 8, "kutya" )
Symbol(53, 0, 0, )
Symbol(87, 705, 5, <sg> )
Symbol(2, 710, 6, <all> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 722, 8, "kutya" )
Symbol(15, 0, 0, )
Symbol(87, 734, 5, <sg> )
Symbol(2, 739, 6, <all> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 757, 12, "<beszél>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 781, 10, "beszél" )
Symbol(38, 0, 0, )
Symbol(37, 799, 7, <pres> )
Symbol(87, 806, 5, <sg> )
Symbol(2, 811, 6, <s3p> )
Symbol(2, 817, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 835, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 853, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 864, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 67 45 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 83 53 87 2 29 3 83 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 83, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 83, q = 8, out = 14
trans_offset 32, signum = 15, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(148): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 15 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 15 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 12 13 13 16 22 5 7 9 11 12 14 17 17 17 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 23, q = 4, out = 83
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 78, q = 10, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 92, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 22, q = 4, out = 2
trans_offset 21, q = 4, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 22, q = 4, out = 2
trans_offset 21, q = 4, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(142): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 10, "<ember>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 174, 8, "ember" )
Symbol(15, 0, 0, )
Symbol(87, 186, 5, <sg> )
Symbol(55, 191, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 209, 9, "<soha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 230, 7, "soha" )
Symbol(54, 237, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 255, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 275, 6, "nem" )
Symbol(91, 281, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 292, 6, "nem" )
Symbol(54, 298, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 316, 8, "<kap>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(78, 0, 0, )
Symbol(38, 0, 0, )
Symbol(37, 350, 7, <pres> )
Symbol(87, 357, 5, <sg> )
Symbol(2, 362, 6, <s3p> )
Symbol(2, 368, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 13, "<választ>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(79, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 425, 5, <sg> )
Symbol(71, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 497, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 515, 4, "," )
Symbol(44, 519, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 536, 7, "<ha>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(67, 0, 0, )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 597, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 617, 6, "egy" )
Symbol(73, 0, 0, )
Symbol(2, 629, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 6, "egy" )
Symbol(54, 647, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 665, 14, "<kutyához>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 734, 5, <sg> )
Symbol(2, 739, 6, <all> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 757, 12, "<beszél>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 781, 10, "beszél" )
Symbol(38, 0, 0, )
Symbol(37, 799, 7, <pres> )
Symbol(87, 806, 5, <sg> )
Symbol(2, 811, 6, <s3p> )
Symbol(2, 817, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 835, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 853, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 864, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 78 38 37 87 2 2 29 8 10 2 7 29 3 79 15 87 71 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 67 45 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 83 15 87 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<anyjára>" #BOC# | #0# "anya" <n> <sg> <px3ss> <sub> | #EOC# $0$ "<néz>" #BOC# | #0# "néz" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<ablak>" #BOC# | #0# "ablak" <n> <sg> <nom> | #EOC# $0$ "<mögött>" #BOC# | #0# "mögött" <post> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<anyja>" #BOC# | #0# "anya" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<nevet>" #BOC# | #0# "név" <n> <sg> <acc> | #0# "nevet" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_123_T_1


LRS T1:
Name: R_1_123_T_1
arity: 2
arccount: 324
statecount: 32
linecount: 325
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 17 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 18 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 19 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 20 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 21 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 22 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 23 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 0
  in: 24 -- 
  out: 14 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(12):
  state_no: 0
  in: 25 -- 
  out: 15 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(13):
  state_no: 0
  in: 26 -- 
  out: 16 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(14):
  state_no: 0
  in: 27 -- 
  out: 17 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(15):
  state_no: 0
  in: 28 -- 
  out: 18 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(16):
  state_no: 1
  in: 2 -- 
  out: 19 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 1
  in: 7 -- 
  out: 20 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 15 -- 
  out: 21 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 16 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 17 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 18 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 1
  in: 19 -- 
  out: 25 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 1
  in: 20 -- 
  out: 26 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 1
  in: 21 -- 
  out: 27 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 1
  in: 22 -- 
  out: 28 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 1
  in: 23 -- 
  out: 29 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 1
  in: 24 -- 
  out: 30 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 1
  in: 25 -- 
  out: 31 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 1
  in: 26 -- 
  out: 32 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 1
  in: 27 -- 
  out: 33 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 1
  in: 28 -- 
  out: 34 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 2
  in: 29 -- 
  out: 35 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 3
  in: 3 -- 
  out: 36 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 4
  in: 2 -- 
  out: 37 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 4
  in: 15 -- 
  out: 38 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 4
  in: 16 -- 
  out: 39 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 4
  in: 17 -- 
  out: 40 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 4
  in: 18 -- 
  out: 41 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 4
  in: 19 -- 
  out: 42 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 4
  in: 20 -- 
  out: 43 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 4
  in: 21 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 4
  in: 22 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 4
  in: 23 -- 
  out: 46 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 4
  in: 24 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 4
  in: 25 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 4
  in: 26 -- 
  out: 49 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 4
  in: 27 -- 
  out: 50 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 4
  in: 28 -- 
  out: 51 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 4
  in: 29 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 5
  in: 2 -- 
  out: 37 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 5
  in: 15 -- 
  out: 38 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 5
  in: 16 -- 
  out: 39 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 5
  in: 17 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 5
  in: 18 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 5
  in: 19 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 5
  in: 20 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 5
  in: 21 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 5
  in: 22 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 5
  in: 23 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 5
  in: 24 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 5
  in: 25 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 5
  in: 26 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 5
  in: 27 -- 
  out: 50 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 5
  in: 28 -- 
  out: 51 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 5
  in: 29 -- 
  out: 52 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 6
  in: 3 -- 
  out: 36 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 6
  in: 8 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 7
  in: 3 -- 
  out: 36 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 7
  in: 8 -- 
  out: 70 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 8
  in: 2 -- 
  out: 37 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 8
  in: 15 -- 
  out: 38 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 8
  in: 16 -- 
  out: 39 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 8
  in: 17 -- 
  out: 40 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 8
  in: 18 -- 
  out: 41 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 8
  in: 19 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 8
  in: 20 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 8
  in: 21 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 8
  in: 22 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 8
  in: 23 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 8
  in: 24 -- 
  out: 47 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 8
  in: 25 -- 
  out: 48 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 8
  in: 26 -- 
  out: 49 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 8
  in: 27 -- 
  out: 50 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 8
  in: 28 -- 
  out: 51 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 8
  in: 29 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(87):
  state_no: 10
  in: 10 -- 
  out: 4 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(88):
  state_no: 11
  in: 2 -- 
  out: 19 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 11
  in: 7 -- 
  out: 20 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 11
  in: 15 -- 
  out: 21 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 11
  in: 16 -- 
  out: 22 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 11
  in: 17 -- 
  out: 23 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 11
  in: 18 -- 
  out: 24 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 11
  in: 19 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 11
  in: 20 -- 
  out: 26 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 11
  in: 21 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 11
  in: 22 -- 
  out: 28 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 11
  in: 23 -- 
  out: 29 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 11
  in: 24 -- 
  out: 30 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 11
  in: 25 -- 
  out: 31 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 11
  in: 26 -- 
  out: 32 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 11
  in: 27 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 11
  in: 28 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 12
  in: 29 -- 
  out: 35 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 13
  in: 3 -- 
  out: 108 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 14
  in: 2 -- 
  out: 109 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 14
  in: 15 -- 
  out: 110 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 14
  in: 16 -- 
  out: 111 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 14
  in: 17 -- 
  out: 40 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 14
  in: 18 -- 
  out: 41 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 14
  in: 19 -- 
  out: 42 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 14
  in: 20 -- 
  out: 43 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 14
  in: 21 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 14
  in: 22 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 14
  in: 23 -- 
  out: 46 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 14
  in: 24 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 14
  in: 25 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 14
  in: 26 -- 
  out: 49 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 14
  in: 27 -- 
  out: 50 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 14
  in: 28 -- 
  out: 51 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 14
  in: 29 -- 
  out: 52 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 15
  in: 2 -- 
  out: 125 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 15
  in: 15 -- 
  out: 110 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 15
  in: 16 -- 
  out: 127 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 15
  in: 17 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 15
  in: 18 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 15
  in: 19 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 15
  in: 20 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 15
  in: 21 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 15
  in: 22 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 15
  in: 23 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 15
  in: 24 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 15
  in: 25 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 15
  in: 26 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 15
  in: 27 -- 
  out: 50 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 15
  in: 28 -- 
  out: 51 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 15
  in: 29 -- 
  out: 140 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 16
  in: 2 -- 
  out: 109 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 16
  in: 15 -- 
  out: 110 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 16
  in: 16 -- 
  out: 111 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 16
  in: 17 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 16
  in: 18 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 16
  in: 19 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 16
  in: 20 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 16
  in: 21 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 16
  in: 22 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 16
  in: 23 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 16
  in: 24 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 16
  in: 25 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 16
  in: 26 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 16
  in: 27 -- 
  out: 50 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 16
  in: 28 -- 
  out: 51 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 16
  in: 29 -- 
  out: 52 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 17
  in: 3 -- 
  out: 157 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 17
  in: 8 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 18
  in: 3 -- 
  out: 108 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 18
  in: 8 -- 
  out: 70 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 19
  in: 3 -- 
  out: 157 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 19
  in: 8 -- 
  out: 70 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 20
  in: 2 -- 
  out: 163 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 20
  in: 15 -- 
  out: 164 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 20
  in: 16 -- 
  out: 165 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 20
  in: 17 -- 
  out: 40 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 20
  in: 18 -- 
  out: 41 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 20
  in: 19 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 20
  in: 20 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 20
  in: 21 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 20
  in: 22 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 20
  in: 23 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 20
  in: 24 -- 
  out: 47 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 20
  in: 25 -- 
  out: 48 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 20
  in: 26 -- 
  out: 49 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 20
  in: 27 -- 
  out: 50 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 20
  in: 28 -- 
  out: 51 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 20
  in: 29 -- 
  out: 52 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 21
  in: 2 -- 
  out: 109 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 21
  in: 15 -- 
  out: 110 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 21
  in: 16 -- 
  out: 111 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 21
  in: 17 -- 
  out: 40 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 21
  in: 18 -- 
  out: 41 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 21
  in: 19 -- 
  out: 42 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 21
  in: 20 -- 
  out: 43 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 21
  in: 21 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 21
  in: 22 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 21
  in: 23 -- 
  out: 46 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 21
  in: 24 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 21
  in: 25 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 21
  in: 26 -- 
  out: 49 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 21
  in: 27 -- 
  out: 50 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 21
  in: 28 -- 
  out: 51 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 21
  in: 29 -- 
  out: 52 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 22
  in: 2 -- 
  out: 163 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 22
  in: 15 -- 
  out: 164 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 22
  in: 16 -- 
  out: 165 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 22
  in: 17 -- 
  out: 40 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 22
  in: 18 -- 
  out: 41 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 22
  in: 19 -- 
  out: 42 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 22
  in: 20 -- 
  out: 43 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 22
  in: 21 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 22
  in: 22 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 22
  in: 23 -- 
  out: 46 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 22
  in: 24 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 22
  in: 25 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 22
  in: 26 -- 
  out: 49 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 22
  in: 27 -- 
  out: 50 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 22
  in: 28 -- 
  out: 51 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 22
  in: 29 -- 
  out: 52 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 23
  in: 2 -- 
  out: 211 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 23
  in: 15 -- 
  out: 164 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 23
  in: 16 -- 
  out: 213 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 23
  in: 17 -- 
  out: 40 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 23
  in: 18 -- 
  out: 41 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 23
  in: 19 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 23
  in: 20 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 23
  in: 21 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 23
  in: 22 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 23
  in: 23 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 23
  in: 24 -- 
  out: 47 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 23
  in: 25 -- 
  out: 48 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 23
  in: 26 -- 
  out: 49 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 23
  in: 27 -- 
  out: 50 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 23
  in: 28 -- 
  out: 51 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 23
  in: 29 -- 
  out: 226 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 24
  in: 2 -- 
  out: 109 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 24
  in: 15 -- 
  out: 110 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 24
  in: 16 -- 
  out: 111 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 24
  in: 17 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 24
  in: 18 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 24
  in: 19 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 24
  in: 20 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 24
  in: 21 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 24
  in: 22 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 24
  in: 23 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 24
  in: 24 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 24
  in: 25 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 24
  in: 26 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 24
  in: 27 -- 
  out: 50 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 24
  in: 28 -- 
  out: 51 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 24
  in: 29 -- 
  out: 52 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 25
  in: 3 -- 
  out: 157 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 25
  in: 8 -- 
  out: 70 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 26
  in: 2 -- 
  out: 211 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 26
  in: 15 -- 
  out: 164 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 26
  in: 16 -- 
  out: 213 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 26
  in: 17 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 26
  in: 18 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 26
  in: 19 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 26
  in: 20 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 26
  in: 21 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 26
  in: 22 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 26
  in: 23 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 26
  in: 24 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 26
  in: 25 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 26
  in: 26 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 26
  in: 27 -- 
  out: 50 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 26
  in: 28 -- 
  out: 51 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 26
  in: 29 -- 
  out: 226 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 27
  in: 2 -- 
  out: 163 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 27
  in: 15 -- 
  out: 164 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 27
  in: 16 -- 
  out: 165 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 27
  in: 17 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 27
  in: 18 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 27
  in: 19 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 27
  in: 20 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 27
  in: 21 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 27
  in: 22 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 27
  in: 23 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 27
  in: 24 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 27
  in: 25 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 27
  in: 26 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 27
  in: 27 -- 
  out: 50 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 27
  in: 28 -- 
  out: 51 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 27
  in: 29 -- 
  out: 52 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 28
  in: 3 -- 
  out: 157 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 28
  in: 8 -- 
  out: 70 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 29
  in: 2 -- 
  out: 163 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 29
  in: 15 -- 
  out: 164 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 29
  in: 16 -- 
  out: 165 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 29
  in: 17 -- 
  out: 40 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 29
  in: 18 -- 
  out: 41 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 29
  in: 19 -- 
  out: 42 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 29
  in: 20 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 29
  in: 21 -- 
  out: 44 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 29
  in: 22 -- 
  out: 45 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 29
  in: 23 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 29
  in: 24 -- 
  out: 47 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 29
  in: 25 -- 
  out: 48 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 29
  in: 26 -- 
  out: 49 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 29
  in: 27 -- 
  out: 50 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 29
  in: 28 -- 
  out: 51 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 29
  in: 29 -- 
  out: 52 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 30
  in: 2 -- 
  out: 163 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 30
  in: 15 -- 
  out: 164 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 30
  in: 16 -- 
  out: 165 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 30
  in: 17 -- 
  out: 40 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 30
  in: 18 -- 
  out: 41 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 30
  in: 19 -- 
  out: 42 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 30
  in: 20 -- 
  out: 43 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 30
  in: 21 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 30
  in: 22 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 30
  in: 23 -- 
  out: 46 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 30
  in: 24 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 30
  in: 25 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 30
  in: 26 -- 
  out: 49 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 30
  in: 27 -- 
  out: 50 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 30
  in: 28 -- 
  out: 51 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 30
  in: 29 -- 
  out: 52 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 31
  in: 2 -- 
  out: 163 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 31
  in: 15 -- 
  out: 164 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 31
  in: 16 -- 
  out: 165 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 31
  in: 17 -- 
  out: 40 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 31
  in: 18 -- 
  out: 41 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 31
  in: 19 -- 
  out: 42 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 31
  in: 20 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 31
  in: 21 -- 
  out: 44 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 31
  in: 22 -- 
  out: 45 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 31
  in: 23 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 31
  in: 24 -- 
  out: 47 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 31
  in: 25 -- 
  out: 48 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 31
  in: 26 -- 
  out: 49 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 31
  in: 27 -- 
  out: 50 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 31
  in: 28 -- 
  out: 51 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 31
  in: 29 -- 
  out: 52 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(324):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(193): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 91, 2, | )
Symbol(3, 93, 4, #0# )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 119, 2, | )
Symbol(3, 121, 4, #0# )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 148, 2, | )
Symbol(8, 150, 6, #EOC# )
Symbol(10, 156, 4, $0$ )
Symbol(72, 160, 7, "<az>" )
Symbol(7, 167, 6, #BOC# )
Symbol(29, 173, 2, | )
Symbol(3, 175, 4, #0# )
Symbol(75, 179, 5, "az" )
Symbol(2, 184, 9, <predet> )
Symbol(87, 193, 5, <sg> )
Symbol(55, 198, 6, <nom> )
Symbol(29, 204, 2, | )
Symbol(3, 206, 4, #0# )
Symbol(75, 210, 5, "az" )
Symbol(57, 215, 6, <prn> )
Symbol(87, 221, 5, <sg> )
Symbol(55, 226, 6, <nom> )
Symbol(29, 232, 2, | )
Symbol(3, 234, 4, #0# )
Symbol(2, 238, 4, "a" )
Symbol(73, 242, 6, <det> )
Symbol(2, 248, 6, <def> )
Symbol(29, 254, 2, | )
Symbol(8, 256, 6, #EOC# )
Symbol(10, 262, 4, $0$ )
Symbol(2, 266, 13, "<anyjára>" )
Symbol(7, 279, 6, #BOC# )
Symbol(29, 285, 2, | )
Symbol(3, 287, 4, #0# )
Symbol(2, 291, 7, "anya" )
Symbol(15, 298, 4, <n> )
Symbol(87, 302, 5, <sg> )
Symbol(28, 307, 8, <px3ss> )
Symbol(2, 315, 6, <sub> )
Symbol(29, 321, 2, | )
Symbol(8, 323, 6, #EOC# )
Symbol(10, 329, 4, $0$ )
Symbol(2, 333, 9, "<néz>" )
Symbol(7, 342, 6, #BOC# )
Symbol(29, 348, 2, | )
Symbol(3, 350, 4, #0# )
Symbol(2, 354, 7, "néz" )
Symbol(38, 361, 8, <vblex> )
Symbol(37, 369, 7, <pres> )
Symbol(87, 376, 5, <sg> )
Symbol(2, 381, 6, <s3p> )
Symbol(2, 387, 6, <ind> )
Symbol(29, 393, 2, | )
Symbol(8, 395, 6, #EOC# )
Symbol(10, 401, 4, $0$ )
Symbol(72, 405, 7, "<az>" )
Symbol(7, 412, 6, #BOC# )
Symbol(29, 418, 2, | )
Symbol(3, 420, 4, #0# )
Symbol(75, 424, 5, "az" )
Symbol(2, 429, 9, <predet> )
Symbol(87, 438, 5, <sg> )
Symbol(55, 443, 6, <nom> )
Symbol(29, 449, 2, | )
Symbol(3, 451, 4, #0# )
Symbol(75, 455, 5, "az" )
Symbol(57, 460, 6, <prn> )
Symbol(87, 466, 5, <sg> )
Symbol(55, 471, 6, <nom> )
Symbol(29, 477, 2, | )
Symbol(3, 479, 4, #0# )
Symbol(2, 483, 4, "a" )
Symbol(73, 487, 6, <det> )
Symbol(2, 493, 6, <def> )
Symbol(29, 499, 2, | )
Symbol(8, 501, 6, #EOC# )
Symbol(10, 507, 4, $0$ )
Symbol(2, 511, 10, "<ablak>" )
Symbol(7, 521, 6, #BOC# )
Symbol(29, 527, 2, | )
Symbol(3, 529, 4, #0# )
Symbol(2, 533, 8, "ablak" )
Symbol(15, 541, 4, <n> )
Symbol(87, 545, 5, <sg> )
Symbol(55, 550, 6, <nom> )
Symbol(29, 556, 2, | )
Symbol(8, 558, 6, #EOC# )
Symbol(10, 564, 4, $0$ )
Symbol(2, 568, 13, "<mögött>" )
Symbol(7, 581, 6, #BOC# )
Symbol(29, 587, 2, | )
Symbol(3, 589, 4, #0# )
Symbol(2, 593, 11, "mögött" )
Symbol(61, 604, 7, <post> )
Symbol(29, 611, 2, | )
Symbol(8, 613, 6, #EOC# )
Symbol(10, 619, 4, $0$ )
Symbol(2, 623, 6, "<,>" )
Symbol(7, 629, 6, #BOC# )
Symbol(29, 635, 2, | )
Symbol(3, 637, 4, #0# )
Symbol(2, 641, 4, "," )
Symbol(44, 645, 5, <cm> )
Symbol(29, 650, 2, | )
Symbol(8, 652, 6, #EOC# )
Symbol(10, 658, 4, $0$ )
Symbol(72, 662, 7, "<az>" )
Symbol(7, 669, 6, #BOC# )
Symbol(29, 675, 2, | )
Symbol(3, 677, 4, #0# )
Symbol(75, 681, 5, "az" )
Symbol(2, 686, 9, <predet> )
Symbol(87, 695, 5, <sg> )
Symbol(55, 700, 6, <nom> )
Symbol(29, 706, 2, | )
Symbol(3, 708, 4, #0# )
Symbol(75, 712, 5, "az" )
Symbol(57, 717, 6, <prn> )
Symbol(87, 723, 5, <sg> )
Symbol(55, 728, 6, <nom> )
Symbol(29, 734, 2, | )
Symbol(3, 736, 4, #0# )
Symbol(2, 740, 4, "a" )
Symbol(73, 744, 6, <det> )
Symbol(2, 750, 6, <def> )
Symbol(29, 756, 2, | )
Symbol(8, 758, 6, #EOC# )
Symbol(10, 764, 4, $0$ )
Symbol(2, 768, 10, "<anyja>" )
Symbol(7, 778, 6, #BOC# )
Symbol(29, 784, 2, | )
Symbol(3, 786, 4, #0# )
Symbol(2, 790, 7, "anya" )
Symbol(15, 797, 4, <n> )
Symbol(87, 801, 5, <sg> )
Symbol(28, 806, 8, <px3ss> )
Symbol(55, 814, 6, <nom> )
Symbol(29, 820, 2, | )
Symbol(8, 822, 6, #EOC# )
Symbol(10, 828, 4, $0$ )
Symbol(2, 832, 10, "<nevet>" )
Symbol(7, 842, 6, #BOC# )
Symbol(29, 848, 2, | )
Symbol(3, 850, 4, #0# )
Symbol(2, 854, 7, "név" )
Symbol(15, 861, 4, <n> )
Symbol(87, 865, 5, <sg> )
Symbol(71, 870, 6, <acc> )
Symbol(29, 876, 2, | )
Symbol(3, 878, 4, #0# )
Symbol(2, 882, 8, "nevet" )
Symbol(38, 890, 8, <vblex> )
Symbol(37, 898, 7, <pres> )
Symbol(87, 905, 5, <sg> )
Symbol(2, 910, 6, <s3p> )
Symbol(2, 916, 6, <ind> )
Symbol(29, 922, 2, | )
Symbol(8, 924, 6, #EOC# )
Symbol(10, 930, 4, $0$ )
Symbol(2, 934, 6, "<.>" )
Symbol(7, 940, 6, #BOC# )
Symbol(29, 946, 2, | )
Symbol(3, 948, 4, #0# )
Symbol(2, 952, 4, "." )
Symbol(64, 956, 7, <sent> )
Symbol(2, 963, 6, <<<<> )
Symbol(29, 969, 2, | )
Symbol(8, 971, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 44 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 49, signum = 29, q = 4, out = 52
trans_offset 67, signum = 8, q = 6, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 49, signum = 29, q = 4, out = 52
trans_offset 66, signum = 3, q = 6, out = 36
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 71, signum = 15, q = 8, out = 38
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 85, signum = 29, q = 8, out = 52
trans_offset 66, signum = 3, q = 6, out = 36
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 72, signum = 16, q = 8, out = 39
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 85, signum = 29, q = 8, out = 52
trans_offset 67, signum = 8, q = 6, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 49, signum = 29, q = 4, out = 52
trans_offset 66, signum = 3, q = 6, out = 36
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 85, signum = 29, q = 8, out = 52
trans_offset 66, signum = 3, q = 6, out = 36
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 85, signum = 29, q = 8, out = 52
trans_offset 67, signum = 8, q = 6, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 35, signum = 15, q = 4, out = 38
trans_offset 50, signum = 2, q = 5, out = 37
trans_offset 64, signum = 28, q = 5, out = 51
trans_offset 50, signum = 2, q = 5, out = 37
trans_offset 65, signum = 29, q = 5, out = 52
trans_offset 69, signum = 8, q = 7, out = 70
trans_offset 87, signum = 10, q = 10, out = 4
trans_offset 88, signum = 2, q = 11, out = 19
trans_offset 89, signum = 7, q = 11, out = 20
trans_offset 104, signum = 29, q = 12, out = 35
trans_offset 105, signum = 3, q = 13, out = 108
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 121, signum = 29, q = 14, out = 52
trans_offset 155, signum = 8, q = 17, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 49, signum = 29, q = 4, out = 52
trans_offset 66, signum = 3, q = 6, out = 36
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 85, signum = 29, q = 8, out = 52
trans_offset 66, signum = 3, q = 6, out = 36
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 85, signum = 29, q = 8, out = 52
trans_offset 67, signum = 8, q = 6, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 35, signum = 15, q = 4, out = 38
trans_offset 50, signum = 2, q = 5, out = 37
trans_offset 50, signum = 2, q = 5, out = 37
trans_offset 65, signum = 29, q = 5, out = 52
trans_offset 69, signum = 8, q = 7, out = 70
trans_offset 87, signum = 10, q = 10, out = 4
trans_offset 88, signum = 2, q = 11, out = 19
trans_offset 89, signum = 7, q = 11, out = 20
trans_offset 104, signum = 29, q = 12, out = 35
trans_offset 105, signum = 3, q = 13, out = 108
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 121, signum = 29, q = 14, out = 52
trans_offset 155, signum = 8, q = 17, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 49, signum = 29, q = 4, out = 52
trans_offset 67, signum = 8, q = 6, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 49, signum = 29, q = 4, out = 52
trans_offset 66, signum = 3, q = 6, out = 36
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 85, signum = 29, q = 8, out = 52
trans_offset 66, signum = 3, q = 6, out = 36
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 70, signum = 2, q = 8, out = 37
trans_offset 85, signum = 29, q = 8, out = 52
trans_offset 67, signum = 8, q = 6, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 35, signum = 15, q = 4, out = 38
trans_offset 50, signum = 2, q = 5, out = 37
trans_offset 64, signum = 28, q = 5, out = 51
trans_offset 50, signum = 2, q = 5, out = 37
trans_offset 65, signum = 29, q = 5, out = 52
trans_offset 69, signum = 8, q = 7, out = 70
trans_offset 87, signum = 10, q = 10, out = 4
trans_offset 88, signum = 2, q = 11, out = 19
trans_offset 89, signum = 7, q = 11, out = 20
trans_offset 104, signum = 29, q = 12, out = 35
trans_offset 105, signum = 3, q = 13, out = 108
trans_offset 106, signum = 2, q = 14, out = 109
trans_offset 107, signum = 15, q = 14, out = 110
trans_offset 122, signum = 2, q = 15, out = 125
trans_offset 122, signum = 2, q = 15, out = 125
trans_offset 137, signum = 29, q = 15, out = 140
trans_offset 156, signum = 3, q = 18, out = 108
trans_offset 176, signum = 2, q = 21, out = 109
trans_offset 176, signum = 2, q = 21, out = 109
trans_offset 176, signum = 2, q = 21, out = 109
trans_offset 176, signum = 2, q = 21, out = 109
trans_offset 176, signum = 2, q = 21, out = 109
trans_offset 176, signum = 2, q = 21, out = 109
trans_offset 191, signum = 29, q = 21, out = 52
trans_offset 241, signum = 8, q = 25, out = 70
trans_offset 86, signum = 10, q = 9, out = 4
trans_offset 16, signum = 2, q = 1, out = 19
trans_offset 17, signum = 7, q = 1, out = 20
trans_offset 32, signum = 29, q = 2, out = 35
trans_offset 33, signum = 3, q = 3, out = 36
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 34, signum = 2, q = 4, out = 37
trans_offset 49, signum = 29, q = 4, out = 52
trans_offset 67, signum = 8, q = 6, out = 70

Intermediate is(193): 
4 19 20 35 36 37 37 52 70 4 19 20 35 36 37 37 37 37 52 36 37 38 37 37 52 36 37 39 37 37 52 70 4 19 20 35 36 37 37 37 37 52 36 37 37 37 37 52 36 37 37 37 52 70 4 19 20 35 36 37 38 37 51 37 52 70 4 19 20 35 108 109 109 109 109 109 109 52 70 4 19 20 35 36 37 37 37 37 52 36 37 37 37 37 52 36 37 37 37 52 70 4 19 20 35 36 37 38 37 37 52 70 4 19 20 35 108 109 109 52 70 4 19 20 35 36 37 37 52 70 4 19 20 35 36 37 37 37 37 52 36 37 37 37 37 52 36 37 37 37 52 70 4 19 20 35 36 37 38 37 51 37 52 70 4 19 20 35 108 109 110 125 125 140 108 109 109 109 109 109 109 52 70 4 19 20 35 36 37 37 37 52 70 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 20, q = 2, out = 3
trans_offset 34, q = 3, out = 0
trans_offset 113, q = 6, out = 0
trans_offset 149, q = 9, out = 0
trans_offset 147, q = 9, out = 0
trans_offset 190, q = 11, out = 0
trans_offset 189, q = 11, out = 0
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 19, q = 2, out = 28
trans_offset 65, q = 5, out = 2
trans_offset 66, q = 5, out = 15
trans_offset 65, q = 5, out = 2
trans_offset 64, q = 5, out = 3
trans_offset 125, q = 8, out = 29
trans_offset 230, q = 13, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 33, q = 3, out = 29
trans_offset 94, q = 6, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 129, q = 9, out = 3
trans_offset 33, q = 3, out = 29
trans_offset 94, q = 6, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 129, q = 9, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 20, q = 2, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 6, q = 2, out = 15
trans_offset 37, q = 4, out = 2
trans_offset 36, q = 4, out = 3
trans_offset 121, q = 7, out = 29
trans_offset 201, q = 12, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 33, q = 3, out = 29
trans_offset 94, q = 6, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 129, q = 9, out = 3
trans_offset 33, q = 3, out = 29
trans_offset 94, q = 6, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 129, q = 9, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 21, q = 2, out = 2
trans_offset 20, q = 2, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 19, q = 2, out = 28
trans_offset 65, q = 5, out = 2
trans_offset 66, q = 5, out = 15
trans_offset 65, q = 5, out = 2
trans_offset 64, q = 5, out = 3
trans_offset 125, q = 8, out = 29
trans_offset 230, q = 13, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 33, q = 3, out = 29
trans_offset 94, q = 6, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 129, q = 9, out = 3
trans_offset 33, q = 3, out = 29
trans_offset 94, q = 6, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 129, q = 9, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 33, q = 3, out = 29
trans_offset 94, q = 6, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 131, q = 9, out = 15
trans_offset 174, q = 11, out = 2
trans_offset 173, q = 11, out = 3
trans_offset 33, q = 3, out = 29
trans_offset 94, q = 6, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 130, q = 9, out = 2
trans_offset 129, q = 9, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10
trans_offset 274, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 32, q = 3, out = 29
trans_offset 92, q = 6, out = 7
trans_offset 158, q = 10, out = 2
trans_offset 157, q = 10, out = 10

Output is(187): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 97, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 160, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 179, 5, "az" )
Symbol(2, 184, 9, <predet> )
Symbol(87, 193, 5, <sg> )
Symbol(55, 198, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 210, 5, "az" )
Symbol(57, 215, 6, <prn> )
Symbol(87, 221, 5, <sg> )
Symbol(55, 226, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 238, 4, "a" )
Symbol(73, 242, 6, <det> )
Symbol(2, 248, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 13, "<anyjára>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 291, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 302, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(2, 315, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 333, 9, "<néz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 7, "néz" )
Symbol(38, 361, 8, <vblex> )
Symbol(37, 369, 7, <pres> )
Symbol(87, 376, 5, <sg> )
Symbol(2, 381, 6, <s3p> )
Symbol(2, 387, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 405, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 424, 5, "az" )
Symbol(2, 429, 9, <predet> )
Symbol(87, 438, 5, <sg> )
Symbol(55, 443, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 455, 5, "az" )
Symbol(57, 460, 6, <prn> )
Symbol(87, 466, 5, <sg> )
Symbol(55, 471, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 483, 4, "a" )
Symbol(73, 487, 6, <det> )
Symbol(2, 493, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 511, 10, "<ablak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 533, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 545, 5, <sg> )
Symbol(55, 550, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 568, 13, "<mögött>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 593, 11, "mögött" )
Symbol(61, 604, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 623, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 4, "," )
Symbol(44, 645, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 662, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 681, 5, "az" )
Symbol(2, 686, 9, <predet> )
Symbol(87, 695, 5, <sg> )
Symbol(55, 700, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 712, 5, "az" )
Symbol(57, 717, 6, <prn> )
Symbol(87, 723, 5, <sg> )
Symbol(55, 728, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 740, 4, "a" )
Symbol(73, 744, 6, <det> )
Symbol(2, 750, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 768, 10, "<anyja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 790, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 801, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 814, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 832, 10, "<nevet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 882, 8, "nevet" )
Symbol(38, 890, 8, <vblex> )
Symbol(37, 898, 7, <pres> )
Symbol(87, 905, 5, <sg> )
Symbol(2, 910, 6, <s3p> )
Symbol(2, 916, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 934, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 952, 4, "." )
Symbol(64, 956, 7, <sent> )
Symbol(2, 963, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 44 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_43_T_1


LRS T1:
Name: R_1_43_T_1
arity: 2
arccount: 152
statecount: 39
linecount: 153
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 72 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 73 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 2
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 2
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 72 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 2
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 3
  in: 2 -- 
  out: 9 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 7 -- 
  out: 11 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 3
  in: 15 -- 
  out: 14 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 3
  in: 53 -- 
  out: 12 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 3
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 73 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 29 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 29 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 3 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 8
  in: 2 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 36 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 72 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 73 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 2 -- 
  out: 37 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 9
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 9
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 9
  in: 72 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 9
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 2 -- 
  out: 31 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 72 -- 
  out: 32 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 12
  in: 3 -- 
  out: 30 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 14
  in: 3 -- 
  out: 54 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 72 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 62 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 72 -- 
  out: 63 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 2 -- 
  out: 31 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 29 -- 
  out: 36 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 72 -- 
  out: 32 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 17
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 3 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 18
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 2 -- 
  out: 62 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 72 -- 
  out: 63 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 19
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 10 -- 
  out: 5 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 21
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 21
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 22
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 22
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 22
  in: 72 -- 
  out: 10 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 22
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 2 -- 
  out: 9 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 7 -- 
  out: 11 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 23
  in: 15 -- 
  out: 14 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 23
  in: 53 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 23
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 23
  in: 73 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 29 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 25
  in: 29 -- 
  out: 27 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 27
  in: 3 -- 
  out: 30 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 2 -- 
  out: 31 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 29 -- 
  out: 36 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 72 -- 
  out: 32 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 73 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 2 -- 
  out: 37 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 72 -- 
  out: 38 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 31 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 29 -- 
  out: 36 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 72 -- 
  out: 32 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 31
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 3 -- 
  out: 30 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 3 -- 
  out: 54 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 34
  in: 2 -- 
  out: 37 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 34
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 72 -- 
  out: 38 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 35
  in: 2 -- 
  out: 62 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 35
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 35
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 35
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 72 -- 
  out: 63 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 36
  in: 2 -- 
  out: 31 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 36
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 36
  in: 29 -- 
  out: 36 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 72 -- 
  out: 32 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 37
  in: 3 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 37
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 38
  in: 2 -- 
  out: 62 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 38
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 38
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 38
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 38
  in: 72 -- 
  out: 63 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(152):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(187): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 97, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 160, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 179, 5, "az" )
Symbol(2, 184, 9, <predet> )
Symbol(87, 193, 5, <sg> )
Symbol(55, 198, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 210, 5, "az" )
Symbol(57, 215, 6, <prn> )
Symbol(87, 221, 5, <sg> )
Symbol(55, 226, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 238, 4, "a" )
Symbol(73, 242, 6, <det> )
Symbol(2, 248, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 13, "<anyjára>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 291, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 302, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(2, 315, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 333, 9, "<néz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 7, "néz" )
Symbol(38, 361, 8, <vblex> )
Symbol(37, 369, 7, <pres> )
Symbol(87, 376, 5, <sg> )
Symbol(2, 381, 6, <s3p> )
Symbol(2, 387, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 405, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 424, 5, "az" )
Symbol(2, 429, 9, <predet> )
Symbol(87, 438, 5, <sg> )
Symbol(55, 443, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 455, 5, "az" )
Symbol(57, 460, 6, <prn> )
Symbol(87, 466, 5, <sg> )
Symbol(55, 471, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 483, 4, "a" )
Symbol(73, 487, 6, <det> )
Symbol(2, 493, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 511, 10, "<ablak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 533, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 545, 5, <sg> )
Symbol(55, 550, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 568, 13, "<mögött>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 593, 11, "mögött" )
Symbol(61, 604, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 623, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 4, "," )
Symbol(44, 645, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 662, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 681, 5, "az" )
Symbol(2, 686, 9, <predet> )
Symbol(87, 695, 5, <sg> )
Symbol(55, 700, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 712, 5, "az" )
Symbol(57, 717, 6, <prn> )
Symbol(87, 723, 5, <sg> )
Symbol(55, 728, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 740, 4, "a" )
Symbol(73, 744, 6, <det> )
Symbol(2, 750, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 768, 10, "<anyja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 790, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 801, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 814, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 832, 10, "<nevet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 882, 8, "nevet" )
Symbol(38, 890, 8, <vblex> )
Symbol(37, 898, 7, <pres> )
Symbol(87, 905, 5, <sg> )
Symbol(2, 910, 6, <s3p> )
Symbol(2, 916, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 934, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 952, 4, "." )
Symbol(64, 956, 7, <sent> )
Symbol(2, 963, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 44 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 31, signum = 53, q = 8, out = 33
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 10, signum = 72, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 58, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 10, signum = 72, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 58, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 10, signum = 72, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 58, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44

Intermediate is(187): 
5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 33 31 31 36 29 31 35 31 31 36 29 31 31 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 31 31 36 44 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 72
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 72
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 72
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 58, q = 6, out = 29
trans_offset 70, q = 8, out = 2
trans_offset 26, q = 4, out = 2
trans_offset 28, q = 4, out = 53
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 112, q = 14, out = 2
trans_offset 110, q = 14, out = 3
trans_offset 126, q = 15, out = 29
trans_offset 162, q = 18, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(151): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "mari" )
Symbol(53, 0, 0, )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 97, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 238, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 248, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 13, "<anyjára>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 291, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 302, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(2, 315, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 333, 9, "<néz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 7, "néz" )
Symbol(38, 361, 8, <vblex> )
Symbol(37, 369, 7, <pres> )
Symbol(87, 376, 5, <sg> )
Symbol(2, 381, 6, <s3p> )
Symbol(2, 387, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 483, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 493, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 511, 10, "<ablak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 533, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 545, 5, <sg> )
Symbol(55, 550, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 568, 13, "<mögött>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 593, 11, "mögött" )
Symbol(61, 604, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 623, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 4, "," )
Symbol(44, 645, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 740, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 750, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 768, 10, "<anyja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 790, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 801, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 814, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 832, 10, "<nevet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 882, 8, "nevet" )
Symbol(38, 890, 8, <vblex> )
Symbol(37, 898, 7, <pres> )
Symbol(87, 905, 5, <sg> )
Symbol(2, 910, 6, <s3p> )
Symbol(2, 916, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 934, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 952, 4, "." )
Symbol(64, 956, 7, <sent> )
Symbol(2, 963, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 44 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_3_283_T_1


LRS T1:
Name: R_3_283_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 82 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 82 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 82 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 16 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(151): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "mari" )
Symbol(53, 0, 0, )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 97, 7, "mari" )
Symbol(15, 0, 0, )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 238, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 248, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 13, "<anyjára>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 291, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 302, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(2, 315, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 333, 9, "<néz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 7, "néz" )
Symbol(38, 361, 8, <vblex> )
Symbol(37, 369, 7, <pres> )
Symbol(87, 376, 5, <sg> )
Symbol(2, 381, 6, <s3p> )
Symbol(2, 387, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 483, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 493, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 511, 10, "<ablak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 533, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 545, 5, <sg> )
Symbol(55, 550, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 568, 13, "<mögött>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 593, 11, "mögött" )
Symbol(61, 604, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 623, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 4, "," )
Symbol(44, 645, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 740, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 750, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 768, 10, "<anyja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 790, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 801, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 814, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 832, 10, "<nevet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 882, 8, "nevet" )
Symbol(38, 890, 8, <vblex> )
Symbol(37, 898, 7, <pres> )
Symbol(87, 905, 5, <sg> )
Symbol(2, 910, 6, <s3p> )
Symbol(2, 916, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 934, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 952, 4, "." )
Symbol(64, 956, 7, <sent> )
Symbol(2, 963, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 44 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 82, q = 8, out = 14
trans_offset 32, signum = 16, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(151): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 16
trans_offset 23, q = 4, out = 82
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(139): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 0, 0, )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 238, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 248, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 13, "<anyjára>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 291, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 302, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(2, 315, 6, <sub> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 333, 9, "<néz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 354, 7, "néz" )
Symbol(38, 361, 8, <vblex> )
Symbol(37, 369, 7, <pres> )
Symbol(87, 376, 5, <sg> )
Symbol(2, 381, 6, <s3p> )
Symbol(2, 387, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 483, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 493, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 511, 10, "<ablak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 533, 8, "ablak" )
Symbol(15, 0, 0, )
Symbol(87, 545, 5, <sg> )
Symbol(55, 550, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 568, 13, "<mögött>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 593, 11, "mögött" )
Symbol(61, 604, 7, <post> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 623, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 641, 4, "," )
Symbol(44, 645, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 740, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 750, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 768, 10, "<anyja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 790, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 801, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 814, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 832, 10, "<nevet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 882, 8, "nevet" )
Symbol(38, 890, 8, <vblex> )
Symbol(37, 898, 7, <pres> )
Symbol(87, 905, 5, <sg> )
Symbol(2, 910, 6, <s3p> )
Symbol(2, 916, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 934, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 952, 4, "." )
Symbol(64, 956, 7, <sent> )
Symbol(2, 963, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 82 16 87 55 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 61 29 8 10 2 7 29 3 2 44 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<azt>" #BOC# | #0# "az" <prn> <sg> <acc> | #0# "az" <predet> <sg> <acc> | #0# "azt" <cnjcoo> | #EOC# $0$ "<hiszi>" #BOC# | #0# "Hisz" <adj> <sg> <nom> | #0# "hisz" <vblex> <pres> <sg> <s3p> <def> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<ő>" #BOC# | #0# "ő" <prn> <pers> <p3> <mf> <sg> <nom> | #EOC# $0$ "<látta>" #BOC# | #0# "lát" <vblex> <past> <sg> <s3p> <def> | #0# "látta" <n> <sg> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<merre>" #BOC# | #0# "merre" <adv> | #EOC# $0$ "<ment>" #BOC# | #0# "megy" <vblex> <past> <sg> <s3p> <ind> | #0# "ment" <vblex> <pres> <sg> <s3p> <ind> | #0# "ment" <adj> <sg> <nom> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<:>" #BOC# | #0# ":" <sent> <<<<> | #EOC# 
Rule found: R_2_242_T_1


LRS T1:
Name: R_2_242_T_1
arity: 2
arccount: 158
statecount: 31
linecount: 159
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 44 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 45 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 63 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 64 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 80 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 81 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 1
  in: 2 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 7 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 44 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 45 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 63 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 64 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 80 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 81 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 29 -- 
  out: 19 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 3
  in: 3 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 2 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 29 -- 
  out: 28 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 44 -- 
  out: 24 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 63 -- 
  out: 26 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 4
  in: 64 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 80 -- 
  out: 23 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 5
  in: 2 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 5
  in: 29 -- 
  out: 28 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 5
  in: 44 -- 
  out: 32 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 45 -- 
  out: 33 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 5
  in: 63 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 5
  in: 64 -- 
  out: 35 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 5
  in: 80 -- 
  out: 31 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 5
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 6
  in: 29 -- 
  out: 28 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 6
  in: 44 -- 
  out: 24 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 6
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 6
  in: 63 -- 
  out: 26 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 6
  in: 64 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 6
  in: 80 -- 
  out: 23 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 6
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 7
  in: 2 -- 
  out: 45 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 7
  in: 29 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 7
  in: 44 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 7
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 7
  in: 63 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 7
  in: 64 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 7
  in: 80 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 7
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 8
  in: 3 -- 
  out: 53 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 8
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 9
  in: 2 -- 
  out: 29 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 9
  in: 29 -- 
  out: 28 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 9
  in: 44 -- 
  out: 32 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 9
  in: 45 -- 
  out: 33 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 9
  in: 63 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 9
  in: 64 -- 
  out: 35 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 9
  in: 80 -- 
  out: 31 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 9
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 10
  in: 3 -- 
  out: 63 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 10
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 11
  in: 2 -- 
  out: 45 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 11
  in: 29 -- 
  out: 52 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 11
  in: 44 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 11
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 11
  in: 63 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 11
  in: 64 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 11
  in: 80 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 11
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 12
  in: 3 -- 
  out: 53 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 12
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 13
  in: 3 -- 
  out: 20 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 13
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 14
  in: 2 -- 
  out: 77 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 14
  in: 29 -- 
  out: 28 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 14
  in: 44 -- 
  out: 80 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 14
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 14
  in: 63 -- 
  out: 82 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 14
  in: 64 -- 
  out: 83 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 14
  in: 80 -- 
  out: 79 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 14
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 15
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(83):
  state_no: 16
  in: 3 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 16
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 17
  in: 3 -- 
  out: 20 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 17
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 18
  in: 2 -- 
  out: 77 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 18
  in: 29 -- 
  out: 28 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 18
  in: 44 -- 
  out: 80 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 18
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 18
  in: 63 -- 
  out: 82 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 18
  in: 64 -- 
  out: 83 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 18
  in: 80 -- 
  out: 79 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 18
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 19
  in: 10 -- 
  out: 5 -- 
  target: 24
  final_state: 1
  start_state: 0
Elem(96):
  state_no: 20
  in: 2 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 20
  in: 29 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 20
  in: 44 -- 
  out: 24 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 20
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 20
  in: 63 -- 
  out: 26 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 20
  in: 64 -- 
  out: 27 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 20
  in: 80 -- 
  out: 23 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 20
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 21
  in: 2 -- 
  out: 107 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 21
  in: 29 -- 
  out: 114 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 21
  in: 44 -- 
  out: 110 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 21
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 21
  in: 63 -- 
  out: 112 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 21
  in: 64 -- 
  out: 113 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 21
  in: 80 -- 
  out: 109 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 21
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 22
  in: 29 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 22
  in: 44 -- 
  out: 24 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 22
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 22
  in: 63 -- 
  out: 26 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 22
  in: 64 -- 
  out: 27 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 22
  in: 80 -- 
  out: 23 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 22
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 23
  in: 2 -- 
  out: 107 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 23
  in: 29 -- 
  out: 114 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 23
  in: 44 -- 
  out: 110 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 23
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 23
  in: 63 -- 
  out: 112 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 23
  in: 64 -- 
  out: 113 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 23
  in: 80 -- 
  out: 109 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 23
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 24
  in: 2 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 24
  in: 7 -- 
  out: 13 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 24
  in: 44 -- 
  out: 15 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 24
  in: 45 -- 
  out: 16 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 24
  in: 63 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 24
  in: 64 -- 
  out: 18 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 24
  in: 80 -- 
  out: 14 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 24
  in: 81 -- 
  out: 12 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 25
  in: 3 -- 
  out: 53 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 25
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 26
  in: 3 -- 
  out: 53 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 26
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 27
  in: 29 -- 
  out: 19 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 28
  in: 2 -- 
  out: 77 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 28
  in: 29 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 28
  in: 44 -- 
  out: 80 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 28
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 28
  in: 63 -- 
  out: 82 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 28
  in: 64 -- 
  out: 83 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 28
  in: 80 -- 
  out: 79 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 28
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 29
  in: 2 -- 
  out: 77 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 29
  in: 29 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 29
  in: 44 -- 
  out: 80 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 29
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 29
  in: 63 -- 
  out: 82 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 29
  in: 64 -- 
  out: 83 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 29
  in: 80 -- 
  out: 79 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 29
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 30
  in: 3 -- 
  out: 63 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(158):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(180): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 91, 2, | )
Symbol(3, 93, 4, #0# )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 119, 2, | )
Symbol(3, 121, 4, #0# )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 148, 2, | )
Symbol(8, 150, 6, #EOC# )
Symbol(10, 156, 4, $0$ )
Symbol(2, 160, 8, "<azt>" )
Symbol(7, 168, 6, #BOC# )
Symbol(29, 174, 2, | )
Symbol(3, 176, 4, #0# )
Symbol(75, 180, 5, "az" )
Symbol(57, 185, 6, <prn> )
Symbol(87, 191, 5, <sg> )
Symbol(71, 196, 6, <acc> )
Symbol(29, 202, 2, | )
Symbol(3, 204, 4, #0# )
Symbol(75, 208, 5, "az" )
Symbol(2, 213, 9, <predet> )
Symbol(87, 222, 5, <sg> )
Symbol(71, 227, 6, <acc> )
Symbol(29, 233, 2, | )
Symbol(3, 235, 4, #0# )
Symbol(2, 239, 6, "azt" )
Symbol(45, 245, 9, <cnjcoo> )
Symbol(29, 254, 2, | )
Symbol(8, 256, 6, #EOC# )
Symbol(10, 262, 4, $0$ )
Symbol(2, 266, 10, "<hiszi>" )
Symbol(7, 276, 6, #BOC# )
Symbol(29, 282, 2, | )
Symbol(3, 284, 4, #0# )
Symbol(2, 288, 7, "Hisz" )
Symbol(53, 295, 6, <adj> )
Symbol(87, 301, 5, <sg> )
Symbol(55, 306, 6, <nom> )
Symbol(29, 312, 2, | )
Symbol(3, 314, 4, #0# )
Symbol(2, 318, 7, "hisz" )
Symbol(38, 325, 8, <vblex> )
Symbol(37, 333, 7, <pres> )
Symbol(87, 340, 5, <sg> )
Symbol(2, 345, 6, <s3p> )
Symbol(2, 351, 6, <def> )
Symbol(29, 357, 2, | )
Symbol(8, 359, 6, #EOC# )
Symbol(10, 365, 4, $0$ )
Symbol(2, 369, 6, "<,>" )
Symbol(7, 375, 6, #BOC# )
Symbol(29, 381, 2, | )
Symbol(3, 383, 4, #0# )
Symbol(2, 387, 4, "," )
Symbol(44, 391, 5, <cm> )
Symbol(29, 396, 2, | )
Symbol(8, 398, 6, #EOC# )
Symbol(10, 404, 4, $0$ )
Symbol(2, 408, 7, "<ő>" )
Symbol(7, 415, 6, #BOC# )
Symbol(29, 421, 2, | )
Symbol(3, 423, 4, #0# )
Symbol(2, 427, 5, "ő" )
Symbol(57, 432, 6, <prn> )
Symbol(56, 438, 7, <pers> )
Symbol(2, 445, 5, <p3> )
Symbol(2, 450, 5, <mf> )
Symbol(87, 455, 5, <sg> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 466, 2, | )
Symbol(8, 468, 6, #EOC# )
Symbol(10, 474, 4, $0$ )
Symbol(2, 478, 11, "<látta>" )
Symbol(7, 489, 6, #BOC# )
Symbol(29, 495, 2, | )
Symbol(3, 497, 4, #0# )
Symbol(2, 501, 7, "lát" )
Symbol(38, 508, 8, <vblex> )
Symbol(46, 516, 7, <past> )
Symbol(87, 523, 5, <sg> )
Symbol(2, 528, 6, <s3p> )
Symbol(2, 534, 6, <def> )
Symbol(29, 540, 2, | )
Symbol(3, 542, 4, #0# )
Symbol(86, 546, 9, "látta" )
Symbol(15, 555, 4, <n> )
Symbol(87, 559, 5, <sg> )
Symbol(55, 564, 6, <nom> )
Symbol(29, 570, 2, | )
Symbol(8, 572, 6, #EOC# )
Symbol(10, 578, 4, $0$ )
Symbol(2, 582, 6, "<,>" )
Symbol(7, 588, 6, #BOC# )
Symbol(29, 594, 2, | )
Symbol(3, 596, 4, #0# )
Symbol(2, 600, 4, "," )
Symbol(44, 604, 5, <cm> )
Symbol(29, 609, 2, | )
Symbol(8, 611, 6, #EOC# )
Symbol(10, 617, 4, $0$ )
Symbol(2, 621, 10, "<merre>" )
Symbol(7, 631, 6, #BOC# )
Symbol(29, 637, 2, | )
Symbol(3, 639, 4, #0# )
Symbol(2, 643, 8, "merre" )
Symbol(54, 651, 6, <adv> )
Symbol(29, 657, 2, | )
Symbol(8, 659, 6, #EOC# )
Symbol(10, 665, 4, $0$ )
Symbol(2, 669, 9, "<ment>" )
Symbol(7, 678, 6, #BOC# )
Symbol(29, 684, 2, | )
Symbol(3, 686, 4, #0# )
Symbol(2, 690, 7, "megy" )
Symbol(38, 697, 8, <vblex> )
Symbol(46, 705, 7, <past> )
Symbol(87, 712, 5, <sg> )
Symbol(2, 717, 6, <s3p> )
Symbol(2, 723, 6, <ind> )
Symbol(29, 729, 2, | )
Symbol(3, 731, 4, #0# )
Symbol(2, 735, 7, "ment" )
Symbol(38, 742, 8, <vblex> )
Symbol(37, 750, 7, <pres> )
Symbol(87, 757, 5, <sg> )
Symbol(2, 762, 6, <s3p> )
Symbol(2, 768, 6, <ind> )
Symbol(29, 774, 2, | )
Symbol(3, 776, 4, #0# )
Symbol(2, 780, 7, "ment" )
Symbol(53, 787, 6, <adj> )
Symbol(87, 793, 5, <sg> )
Symbol(55, 798, 6, <nom> )
Symbol(29, 804, 2, | )
Symbol(8, 806, 6, #EOC# )
Symbol(10, 812, 4, $0$ )
Symbol(2, 816, 11, "<Jancsi>" )
Symbol(7, 827, 6, #BOC# )
Symbol(29, 833, 2, | )
Symbol(3, 835, 4, #0# )
Symbol(2, 839, 9, "Jancsi" )
Symbol(16, 848, 5, <np> )
Symbol(87, 853, 5, <sg> )
Symbol(55, 858, 6, <nom> )
Symbol(29, 864, 2, | )
Symbol(8, 866, 6, #EOC# )
Symbol(10, 872, 4, $0$ )
Symbol(2, 876, 6, "<:>" )
Symbol(7, 882, 6, #BOC# )
Symbol(29, 888, 2, | )
Symbol(3, 890, 4, #0# )
Symbol(2, 894, 4, ":" )
Symbol(64, 898, 7, <sent> )
Symbol(2, 905, 6, <<<<> )
Symbol(29, 911, 2, | )
Symbol(8, 913, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 3 2 45 29 8 10 2 7 29 3 2 53 87 55 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 86 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 38 37 87 2 2 29 3 2 53 87 55 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 24, signum = 80, q = 4, out = 23
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54
trans_offset 95, signum = 10, q = 19, out = 5
trans_offset 128, signum = 2, q = 24, out = 11
trans_offset 129, signum = 7, q = 24, out = 13
trans_offset 140, signum = 29, q = 27, out = 19
trans_offset 157, signum = 3, q = 30, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 60, signum = 3, q = 10, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 60, signum = 3, q = 10, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 61, signum = 8, q = 10, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 75, signum = 29, q = 14, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 77, signum = 45, q = 14, out = 81
trans_offset 105, signum = 29, q = 21, out = 114
trans_offset 137, signum = 8, q = 25, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 75, signum = 29, q = 14, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 20, signum = 44, q = 4, out = 24
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54
trans_offset 95, signum = 10, q = 19, out = 5
trans_offset 128, signum = 2, q = 24, out = 11
trans_offset 129, signum = 7, q = 24, out = 13
trans_offset 140, signum = 29, q = 27, out = 19
trans_offset 157, signum = 3, q = 30, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 61, signum = 8, q = 10, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 75, signum = 29, q = 14, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 20, signum = 44, q = 4, out = 24
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54
trans_offset 95, signum = 10, q = 19, out = 5
trans_offset 128, signum = 2, q = 24, out = 11
trans_offset 129, signum = 7, q = 24, out = 13
trans_offset 140, signum = 29, q = 27, out = 19
trans_offset 157, signum = 3, q = 30, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 61, signum = 8, q = 10, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 75, signum = 29, q = 14, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 75, signum = 29, q = 14, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 23, signum = 64, q = 4, out = 27
trans_offset 34, signum = 2, q = 6, out = 21
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54

Intermediate is(180): 
5 11 13 19 20 21 23 28 54 5 11 13 19 63 29 29 29 29 28 63 29 29 29 29 28 63 29 29 29 29 28 54 5 11 13 19 20 21 21 21 21 28 53 77 77 77 77 28 53 77 81 114 54 5 11 13 19 20 21 21 21 21 28 53 77 77 77 77 77 77 28 54 5 11 13 19 20 21 24 28 54 5 11 13 19 63 29 29 29 29 29 29 29 28 54 5 11 13 19 20 21 21 21 21 21 21 28 53 77 77 77 77 28 54 5 11 13 19 20 21 24 28 54 5 11 13 19 63 29 29 28 54 5 11 13 19 20 21 21 21 21 21 21 28 53 77 77 77 77 77 77 28 53 77 77 77 77 28 54 5 11 13 19 20 21 21 21 21 28 54 5 11 13 19 20 21 27 21 28 54 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 11, q = 2, out = 64
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 23, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 130, q = 7, out = 2
trans_offset 199, q = 10, out = 2
trans_offset 199, q = 10, out = 2
trans_offset 199, q = 10, out = 2
trans_offset 199, q = 10, out = 2
trans_offset 199, q = 10, out = 2
trans_offset 197, q = 10, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 110, q = 7, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 178, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 24, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 44
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 23, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 110, q = 7, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 178, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 24, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 44
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 23, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 110, q = 7, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 178, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 28, q = 2, out = 0
trans_offset 93, q = 5, out = 0
trans_offset 91, q = 5, out = 0
trans_offset 142, q = 8, out = 29
trans_offset 272, q = 13, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 23, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 110, q = 7, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 178, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 24, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 117, q = 7, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 198, q = 10, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 117, q = 7, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 198, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10

Output is(176): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<azt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 180, 5, "az" )
Symbol(57, 185, 6, <prn> )
Symbol(87, 191, 5, <sg> )
Symbol(71, 196, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 208, 5, "az" )
Symbol(2, 213, 9, <predet> )
Symbol(87, 222, 5, <sg> )
Symbol(71, 227, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 10, "<hiszi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 288, 7, "Hisz" )
Symbol(53, 295, 6, <adj> )
Symbol(87, 301, 5, <sg> )
Symbol(55, 306, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 318, 7, "hisz" )
Symbol(38, 325, 8, <vblex> )
Symbol(37, 333, 7, <pres> )
Symbol(87, 340, 5, <sg> )
Symbol(2, 345, 6, <s3p> )
Symbol(2, 351, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 369, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 387, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 408, 7, "<ő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 427, 5, "ő" )
Symbol(57, 432, 6, <prn> )
Symbol(56, 438, 7, <pers> )
Symbol(2, 445, 5, <p3> )
Symbol(2, 450, 5, <mf> )
Symbol(87, 455, 5, <sg> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 478, 11, "<látta>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 501, 7, "lát" )
Symbol(38, 508, 8, <vblex> )
Symbol(46, 516, 7, <past> )
Symbol(87, 523, 5, <sg> )
Symbol(2, 528, 6, <s3p> )
Symbol(2, 534, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(86, 546, 9, "látta" )
Symbol(15, 555, 4, <n> )
Symbol(87, 559, 5, <sg> )
Symbol(55, 564, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 582, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 600, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 621, 10, "<merre>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 643, 8, "merre" )
Symbol(54, 651, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 669, 9, "<ment>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 690, 7, "megy" )
Symbol(38, 697, 8, <vblex> )
Symbol(46, 705, 7, <past> )
Symbol(87, 712, 5, <sg> )
Symbol(2, 717, 6, <s3p> )
Symbol(2, 723, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 735, 7, "ment" )
Symbol(38, 742, 8, <vblex> )
Symbol(37, 750, 7, <pres> )
Symbol(87, 757, 5, <sg> )
Symbol(2, 762, 6, <s3p> )
Symbol(2, 768, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 780, 7, "ment" )
Symbol(53, 787, 6, <adj> )
Symbol(87, 793, 5, <sg> )
Symbol(55, 798, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 816, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 839, 9, "Jancsi" )
Symbol(16, 848, 5, <np> )
Symbol(87, 853, 5, <sg> )
Symbol(55, 858, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 876, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 894, 4, ":" )
Symbol(64, 0, 0, )
Symbol(2, 905, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 8 10 2 7 29 3 2 53 87 55 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 86 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 38 37 87 2 2 29 3 2 53 87 55 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_3_283_T_1


LRS T1:
Name: R_3_283_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 82 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 82 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 82 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 16 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(176): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<azt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 180, 5, "az" )
Symbol(57, 185, 6, <prn> )
Symbol(87, 191, 5, <sg> )
Symbol(71, 196, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 208, 5, "az" )
Symbol(2, 213, 9, <predet> )
Symbol(87, 222, 5, <sg> )
Symbol(71, 227, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 10, "<hiszi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 288, 7, "Hisz" )
Symbol(53, 295, 6, <adj> )
Symbol(87, 301, 5, <sg> )
Symbol(55, 306, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 318, 7, "hisz" )
Symbol(38, 325, 8, <vblex> )
Symbol(37, 333, 7, <pres> )
Symbol(87, 340, 5, <sg> )
Symbol(2, 345, 6, <s3p> )
Symbol(2, 351, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 369, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 387, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 408, 7, "<ő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 427, 5, "ő" )
Symbol(57, 432, 6, <prn> )
Symbol(56, 438, 7, <pers> )
Symbol(2, 445, 5, <p3> )
Symbol(2, 450, 5, <mf> )
Symbol(87, 455, 5, <sg> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 478, 11, "<látta>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 501, 7, "lát" )
Symbol(38, 508, 8, <vblex> )
Symbol(46, 516, 7, <past> )
Symbol(87, 523, 5, <sg> )
Symbol(2, 528, 6, <s3p> )
Symbol(2, 534, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(86, 546, 9, "látta" )
Symbol(15, 555, 4, <n> )
Symbol(87, 559, 5, <sg> )
Symbol(55, 564, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 582, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 600, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 621, 10, "<merre>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 643, 8, "merre" )
Symbol(54, 651, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 669, 9, "<ment>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 690, 7, "megy" )
Symbol(38, 697, 8, <vblex> )
Symbol(46, 705, 7, <past> )
Symbol(87, 712, 5, <sg> )
Symbol(2, 717, 6, <s3p> )
Symbol(2, 723, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 735, 7, "ment" )
Symbol(38, 742, 8, <vblex> )
Symbol(37, 750, 7, <pres> )
Symbol(87, 757, 5, <sg> )
Symbol(2, 762, 6, <s3p> )
Symbol(2, 768, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 780, 7, "ment" )
Symbol(53, 787, 6, <adj> )
Symbol(87, 793, 5, <sg> )
Symbol(55, 798, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 816, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 839, 9, "Jancsi" )
Symbol(16, 848, 5, <np> )
Symbol(87, 853, 5, <sg> )
Symbol(55, 858, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 876, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 894, 4, ":" )
Symbol(64, 0, 0, )
Symbol(2, 905, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 8 10 2 7 29 3 2 53 87 55 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 86 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 38 37 87 2 2 29 3 2 53 87 55 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 82, q = 8, out = 14
trans_offset 32, signum = 16, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 16, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(176): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 12 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 12 13 13 13 13 13 13 16 12 13 13 13 13 16 22 5 7 9 11 12 13 15 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 22, q = 4, out = 2
trans_offset 21, q = 4, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 16
trans_offset 23, q = 4, out = 82
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(164): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 0, 0, )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<azt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 180, 5, "az" )
Symbol(57, 185, 6, <prn> )
Symbol(87, 191, 5, <sg> )
Symbol(71, 196, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 208, 5, "az" )
Symbol(2, 213, 9, <predet> )
Symbol(87, 222, 5, <sg> )
Symbol(71, 227, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 10, "<hiszi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 288, 7, "Hisz" )
Symbol(53, 295, 6, <adj> )
Symbol(87, 301, 5, <sg> )
Symbol(55, 306, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 318, 7, "hisz" )
Symbol(38, 325, 8, <vblex> )
Symbol(37, 333, 7, <pres> )
Symbol(87, 340, 5, <sg> )
Symbol(2, 345, 6, <s3p> )
Symbol(2, 351, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 369, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 387, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 408, 7, "<ő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 427, 5, "ő" )
Symbol(57, 432, 6, <prn> )
Symbol(56, 438, 7, <pers> )
Symbol(2, 445, 5, <p3> )
Symbol(2, 450, 5, <mf> )
Symbol(87, 455, 5, <sg> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 478, 11, "<látta>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 501, 7, "lát" )
Symbol(38, 508, 8, <vblex> )
Symbol(46, 516, 7, <past> )
Symbol(87, 523, 5, <sg> )
Symbol(2, 528, 6, <s3p> )
Symbol(2, 534, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(86, 546, 9, "látta" )
Symbol(15, 555, 4, <n> )
Symbol(87, 559, 5, <sg> )
Symbol(55, 564, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 582, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 600, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 621, 10, "<merre>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 643, 8, "merre" )
Symbol(54, 651, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 669, 9, "<ment>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 690, 7, "megy" )
Symbol(38, 697, 8, <vblex> )
Symbol(46, 705, 7, <past> )
Symbol(87, 712, 5, <sg> )
Symbol(2, 717, 6, <s3p> )
Symbol(2, 723, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 735, 7, "ment" )
Symbol(38, 742, 8, <vblex> )
Symbol(37, 750, 7, <pres> )
Symbol(87, 757, 5, <sg> )
Symbol(2, 762, 6, <s3p> )
Symbol(2, 768, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 780, 7, "ment" )
Symbol(53, 787, 6, <adj> )
Symbol(87, 793, 5, <sg> )
Symbol(55, 798, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 816, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 839, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 853, 5, <sg> )
Symbol(55, 858, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 876, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 894, 4, ":" )
Symbol(64, 0, 0, )
Symbol(2, 905, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 8 10 2 7 29 3 2 53 87 55 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 86 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 38 37 87 2 2 29 3 2 53 87 55 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_3_295_T_1


LRS T1:
Name: R_3_295_T_1
arity: 2
arccount: 347
statecount: 22
linecount: 348
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 17 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 18 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 19 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 20 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 21 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 22 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 23 -- 
  out: 14 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 24 -- 
  out: 15 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 0
  in: 25 -- 
  out: 16 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(12):
  state_no: 0
  in: 26 -- 
  out: 17 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(13):
  state_no: 0
  in: 27 -- 
  out: 18 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(14):
  state_no: 0
  in: 28 -- 
  out: 19 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(15):
  state_no: 0
  in: 31 -- 
  out: 20 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(16):
  state_no: 0
  in: 32 -- 
  out: 21 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(17):
  state_no: 0
  in: 55 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(18):
  state_no: 0
  in: 86 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(19):
  state_no: 0
  in: 87 -- 
  out: 22 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(20):
  state_no: 1
  in: 2 -- 
  out: 23 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 7 -- 
  out: 25 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 1
  in: 15 -- 
  out: 26 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 1
  in: 17 -- 
  out: 28 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 1
  in: 18 -- 
  out: 29 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 1
  in: 19 -- 
  out: 30 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 1
  in: 20 -- 
  out: 31 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 1
  in: 21 -- 
  out: 32 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 1
  in: 22 -- 
  out: 33 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 1
  in: 23 -- 
  out: 34 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 1
  in: 24 -- 
  out: 35 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 1
  in: 25 -- 
  out: 36 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 1
  in: 26 -- 
  out: 37 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 1
  in: 27 -- 
  out: 38 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 1
  in: 28 -- 
  out: 39 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 1
  in: 31 -- 
  out: 40 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 1
  in: 32 -- 
  out: 41 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 1
  in: 55 -- 
  out: 27 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 1
  in: 86 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 1
  in: 87 -- 
  out: 42 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 2
  in: 29 -- 
  out: 43 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 3
  in: 3 -- 
  out: 44 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 4
  in: 2 -- 
  out: 45 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 4
  in: 15 -- 
  out: 47 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 4
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 4
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 4
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 4
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 4
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 4
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 4
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 4
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 4
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 4
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 4
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 4
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 4
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 4
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 4
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 4
  in: 55 -- 
  out: 48 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 4
  in: 86 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 4
  in: 87 -- 
  out: 63 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 5
  in: 2 -- 
  out: 65 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 5
  in: 15 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 5
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 5
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 5
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 5
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 5
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 5
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 5
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 5
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 5
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 5
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 5
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 5
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 5
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 5
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 5
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 5
  in: 55 -- 
  out: 68 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 5
  in: 86 -- 
  out: 46 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 5
  in: 87 -- 
  out: 83 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 6
  in: 2 -- 
  out: 85 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 6
  in: 15 -- 
  out: 87 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 6
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 6
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 6
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 6
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 6
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 6
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 6
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 6
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 6
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 6
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 6
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 6
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 6
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 6
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 6
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 6
  in: 55 -- 
  out: 88 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 6
  in: 86 -- 
  out: 86 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 6
  in: 87 -- 
  out: 103 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 7
  in: 3 -- 
  out: 105 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 7
  in: 8 -- 
  out: 106 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 8
  in: 2 -- 
  out: 107 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 8
  in: 15 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 8
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 8
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 8
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 8
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 8
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 8
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 8
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 8
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 8
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 8
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 8
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 8
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 8
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 8
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 8
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 8
  in: 55 -- 
  out: 110 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 8
  in: 86 -- 
  out: 108 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 8
  in: 87 -- 
  out: 125 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 9
  in: 2 -- 
  out: 127 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 9
  in: 15 -- 
  out: 129 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 9
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 9
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 9
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 9
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 9
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 9
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 9
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 9
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 9
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 9
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 9
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 9
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 9
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 9
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 9
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 9
  in: 55 -- 
  out: 130 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 9
  in: 86 -- 
  out: 128 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 9
  in: 87 -- 
  out: 145 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 10
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(145):
  state_no: 11
  in: 2 -- 
  out: 148 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 11
  in: 15 -- 
  out: 150 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 11
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 11
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 11
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 11
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 11
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 11
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 11
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 11
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 11
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 11
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 11
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 11
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 11
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 11
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 11
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 11
  in: 55 -- 
  out: 151 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 11
  in: 86 -- 
  out: 149 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 11
  in: 87 -- 
  out: 125 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 12
  in: 2 -- 
  out: 168 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 12
  in: 15 -- 
  out: 170 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 12
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 12
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 12
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 12
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 12
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 12
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 12
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 12
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 12
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 12
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 12
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 12
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 12
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 12
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 12
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 12
  in: 55 -- 
  out: 171 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 12
  in: 86 -- 
  out: 128 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 12
  in: 87 -- 
  out: 186 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 13
  in: 2 -- 
  out: 188 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 13
  in: 15 -- 
  out: 190 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 13
  in: 17 -- 
  out: 192 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 13
  in: 18 -- 
  out: 193 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 13
  in: 19 -- 
  out: 194 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 13
  in: 20 -- 
  out: 195 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 13
  in: 21 -- 
  out: 196 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 13
  in: 22 -- 
  out: 197 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 13
  in: 23 -- 
  out: 198 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 13
  in: 24 -- 
  out: 199 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 13
  in: 25 -- 
  out: 200 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 13
  in: 26 -- 
  out: 201 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 13
  in: 27 -- 
  out: 202 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 13
  in: 28 -- 
  out: 203 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 13
  in: 29 -- 
  out: 207 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 13
  in: 31 -- 
  out: 204 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 13
  in: 32 -- 
  out: 205 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 13
  in: 55 -- 
  out: 151 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 13
  in: 86 -- 
  out: 189 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 13
  in: 87 -- 
  out: 206 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 14
  in: 2 -- 
  out: 208 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 14
  in: 15 -- 
  out: 170 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 14
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 14
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 14
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 14
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 14
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 14
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 14
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 14
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 14
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 14
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 14
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 14
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 14
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 14
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 14
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 14
  in: 55 -- 
  out: 211 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 14
  in: 86 -- 
  out: 209 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 14
  in: 87 -- 
  out: 226 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 15
  in: 3 -- 
  out: 44 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 15
  in: 8 -- 
  out: 106 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 16
  in: 2 -- 
  out: 230 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 16
  in: 15 -- 
  out: 232 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 16
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 16
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 16
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 16
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 16
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 16
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 16
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 16
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 16
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 16
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 16
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 16
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 16
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 16
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 16
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 16
  in: 55 -- 
  out: 233 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 16
  in: 86 -- 
  out: 231 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 16
  in: 87 -- 
  out: 226 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 17
  in: 2 -- 
  out: 45 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 17
  in: 15 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 17
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 17
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 17
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 17
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 17
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 17
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 17
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 17
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 17
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 17
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 17
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 17
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 17
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 17
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 17
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 17
  in: 55 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 17
  in: 86 -- 
  out: 46 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 17
  in: 87 -- 
  out: 63 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 18
  in: 2 -- 
  out: 270 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 18
  in: 15 -- 
  out: 272 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 18
  in: 17 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 18
  in: 18 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 18
  in: 19 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 18
  in: 20 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 18
  in: 21 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 18
  in: 22 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 18
  in: 23 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 18
  in: 24 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 18
  in: 25 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 18
  in: 26 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 18
  in: 27 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 18
  in: 28 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 18
  in: 29 -- 
  out: 289 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 18
  in: 31 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 18
  in: 32 -- 
  out: 274 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 18
  in: 55 -- 
  out: 233 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 18
  in: 86 -- 
  out: 271 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 18
  in: 87 -- 
  out: 288 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 19
  in: 2 -- 
  out: 65 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 19
  in: 15 -- 
  out: 67 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 19
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 19
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 19
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 19
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 19
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 19
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 19
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 19
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 19
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 19
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 19
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 19
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 19
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 19
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 19
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 19
  in: 55 -- 
  out: 68 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 19
  in: 86 -- 
  out: 46 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 19
  in: 87 -- 
  out: 83 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 20
  in: 2 -- 
  out: 107 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 20
  in: 15 -- 
  out: 67 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 20
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 20
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 20
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 20
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 20
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 20
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 20
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 20
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 20
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 20
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 20
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 20
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 20
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 20
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 20
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 20
  in: 55 -- 
  out: 110 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 20
  in: 86 -- 
  out: 108 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 20
  in: 87 -- 
  out: 125 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 21
  in: 2 -- 
  out: 148 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 21
  in: 15 -- 
  out: 150 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 21
  in: 17 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 21
  in: 18 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 21
  in: 19 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 21
  in: 20 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 21
  in: 21 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 21
  in: 22 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 21
  in: 23 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 21
  in: 24 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 21
  in: 25 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 21
  in: 26 -- 
  out: 58 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 21
  in: 27 -- 
  out: 59 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 21
  in: 28 -- 
  out: 60 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 21
  in: 29 -- 
  out: 64 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 21
  in: 31 -- 
  out: 61 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 21
  in: 32 -- 
  out: 62 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 21
  in: 55 -- 
  out: 151 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 21
  in: 86 -- 
  out: 149 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 21
  in: 87 -- 
  out: 125 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(347):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(164): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 0, 0, )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<azt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 180, 5, "az" )
Symbol(57, 185, 6, <prn> )
Symbol(87, 191, 5, <sg> )
Symbol(71, 196, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 208, 5, "az" )
Symbol(2, 213, 9, <predet> )
Symbol(87, 222, 5, <sg> )
Symbol(71, 227, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 10, "<hiszi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 288, 7, "Hisz" )
Symbol(53, 295, 6, <adj> )
Symbol(87, 301, 5, <sg> )
Symbol(55, 306, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 318, 7, "hisz" )
Symbol(38, 325, 8, <vblex> )
Symbol(37, 333, 7, <pres> )
Symbol(87, 340, 5, <sg> )
Symbol(2, 345, 6, <s3p> )
Symbol(2, 351, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 369, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 387, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 408, 7, "<ő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 427, 5, "ő" )
Symbol(57, 432, 6, <prn> )
Symbol(56, 438, 7, <pers> )
Symbol(2, 445, 5, <p3> )
Symbol(2, 450, 5, <mf> )
Symbol(87, 455, 5, <sg> )
Symbol(55, 460, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 478, 11, "<látta>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 501, 7, "lát" )
Symbol(38, 508, 8, <vblex> )
Symbol(46, 516, 7, <past> )
Symbol(87, 523, 5, <sg> )
Symbol(2, 528, 6, <s3p> )
Symbol(2, 534, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(86, 546, 9, "látta" )
Symbol(15, 555, 4, <n> )
Symbol(87, 559, 5, <sg> )
Symbol(55, 564, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 582, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 600, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 621, 10, "<merre>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 643, 8, "merre" )
Symbol(54, 651, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 669, 9, "<ment>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 690, 7, "megy" )
Symbol(38, 697, 8, <vblex> )
Symbol(46, 705, 7, <past> )
Symbol(87, 712, 5, <sg> )
Symbol(2, 717, 6, <s3p> )
Symbol(2, 723, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 735, 7, "ment" )
Symbol(38, 742, 8, <vblex> )
Symbol(37, 750, 7, <pres> )
Symbol(87, 757, 5, <sg> )
Symbol(2, 762, 6, <s3p> )
Symbol(2, 768, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 780, 7, "ment" )
Symbol(53, 787, 6, <adj> )
Symbol(87, 793, 5, <sg> )
Symbol(55, 798, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 816, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 839, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 853, 5, <sg> )
Symbol(55, 858, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 876, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 894, 4, ":" )
Symbol(64, 0, 0, )
Symbol(2, 905, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 8 10 2 7 29 3 2 53 87 55 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 86 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 38 37 87 2 2 29 3 2 53 87 55 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 61, signum = 87, q = 4, out = 63
trans_offset 59, signum = 55, q = 4, out = 48
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 61, signum = 87, q = 4, out = 63
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 102, signum = 3, q = 7, out = 105
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 143, signum = 87, q = 9, out = 145
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 138, signum = 29, q = 9, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 61, signum = 87, q = 4, out = 63
trans_offset 59, signum = 55, q = 4, out = 48
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 102, signum = 3, q = 7, out = 105
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 143, signum = 87, q = 9, out = 145
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 138, signum = 29, q = 9, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 61, signum = 87, q = 4, out = 63
trans_offset 59, signum = 55, q = 4, out = 48
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 61, signum = 87, q = 4, out = 63
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 102, signum = 3, q = 7, out = 105
trans_offset 142, signum = 86, q = 9, out = 128
trans_offset 166, signum = 15, q = 12, out = 170
trans_offset 224, signum = 87, q = 14, out = 226
trans_offset 244, signum = 55, q = 16, out = 233
trans_offset 281, signum = 29, q = 18, out = 289
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 61, signum = 87, q = 4, out = 63
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 102, signum = 3, q = 7, out = 105
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 143, signum = 87, q = 9, out = 145
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 138, signum = 29, q = 9, out = 64
trans_offset 102, signum = 3, q = 7, out = 105
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 124, signum = 2, q = 9, out = 127
trans_offset 143, signum = 87, q = 9, out = 145
trans_offset 141, signum = 55, q = 9, out = 130
trans_offset 138, signum = 29, q = 9, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 61, signum = 87, q = 4, out = 63
trans_offset 59, signum = 55, q = 4, out = 48
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 103, signum = 8, q = 7, out = 106
trans_offset 144, signum = 10, q = 10, out = 5
trans_offset 20, signum = 2, q = 1, out = 23
trans_offset 21, signum = 7, q = 1, out = 25
trans_offset 40, signum = 29, q = 2, out = 43
trans_offset 41, signum = 3, q = 3, out = 44
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 42, signum = 2, q = 4, out = 45
trans_offset 56, signum = 29, q = 4, out = 64
trans_offset 103, signum = 8, q = 7, out = 106

Intermediate is(164): 
5 23 25 43 44 45 45 64 106 5 23 25 43 44 45 45 63 48 64 106 5 23 25 43 44 45 45 63 45 64 105 127 127 145 127 64 106 5 23 25 43 44 45 45 63 48 64 105 127 127 127 145 127 127 64 106 5 23 25 43 44 45 45 64 106 5 23 25 43 44 45 45 45 45 45 63 48 64 106 5 23 25 43 44 45 45 45 63 45 45 64 105 128 170 226 233 289 106 5 23 25 43 44 45 45 64 106 5 23 25 43 44 45 45 64 106 5 23 25 43 44 45 45 45 63 45 45 64 105 127 127 127 145 127 127 64 105 127 127 145 130 64 106 5 23 25 43 44 45 45 63 48 64 106 5 23 25 43 44 45 45 45 64 106 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 55
trans_offset 105, q = 4, out = 87
trans_offset 244, q = 6, out = 2
trans_offset 244, q = 6, out = 2
trans_offset 243, q = 6, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 41, q = 2, out = 55
trans_offset 124, q = 4, out = 87
trans_offset 277, q = 6, out = 2
trans_offset 277, q = 6, out = 2
trans_offset 272, q = 6, out = 3
trans_offset 83, q = 3, out = 29
trans_offset 199, q = 5, out = 2
trans_offset 355, q = 7, out = 2
trans_offset 359, q = 7, out = 87
trans_offset 355, q = 7, out = 2
trans_offset 355, q = 7, out = 2
trans_offset 355, q = 7, out = 2
trans_offset 350, q = 7, out = 3
trans_offset 83, q = 3, out = 29
trans_offset 166, q = 5, out = 2
trans_offset 322, q = 7, out = 2
trans_offset 340, q = 7, out = 87
trans_offset 322, q = 7, out = 2
trans_offset 322, q = 7, out = 2
trans_offset 322, q = 7, out = 2
trans_offset 321, q = 7, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 76, q = 2, out = 0
trans_offset 154, q = 4, out = 0
trans_offset 287, q = 6, out = 0
trans_offset 532, q = 10, out = 0
trans_offset 702, q = 13, out = 0
trans_offset 849, q = 16, out = 29
trans_offset 932, q = 18, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 23, q = 2, out = 87
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 55
trans_offset 105, q = 4, out = 87
trans_offset 244, q = 6, out = 2
trans_offset 244, q = 6, out = 2
trans_offset 244, q = 6, out = 2
trans_offset 244, q = 6, out = 2
trans_offset 244, q = 6, out = 2
trans_offset 243, q = 6, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 38, q = 2, out = 2
trans_offset 42, q = 2, out = 87
trans_offset 38, q = 2, out = 2
trans_offset 38, q = 2, out = 2
trans_offset 38, q = 2, out = 2
trans_offset 33, q = 2, out = 3
trans_offset 83, q = 3, out = 29
trans_offset 169, q = 5, out = 55
trans_offset 438, q = 9, out = 87
trans_offset 596, q = 12, out = 2
trans_offset 596, q = 12, out = 2
trans_offset 595, q = 12, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 38, q = 2, out = 2
trans_offset 42, q = 2, out = 87
trans_offset 38, q = 2, out = 2
trans_offset 38, q = 2, out = 2
trans_offset 33, q = 2, out = 3
trans_offset 83, q = 3, out = 29
trans_offset 166, q = 5, out = 2
trans_offset 340, q = 7, out = 87
trans_offset 322, q = 7, out = 2
trans_offset 322, q = 7, out = 2
trans_offset 321, q = 7, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 55
trans_offset 105, q = 4, out = 87
trans_offset 244, q = 6, out = 2
trans_offset 244, q = 6, out = 2
trans_offset 243, q = 6, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10
trans_offset 594, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 82, q = 3, out = 29
trans_offset 164, q = 5, out = 7
trans_offset 400, q = 8, out = 2
trans_offset 399, q = 8, out = 10

Output is(158): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 0, 0, )
Symbol(16, 0, 0, )
Symbol(87, 0, 0, )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 8, "<azt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 180, 5, "az" )
Symbol(57, 185, 6, <prn> )
Symbol(87, 0, 0, )
Symbol(71, 196, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 208, 5, "az" )
Symbol(2, 213, 9, <predet> )
Symbol(87, 0, 0, )
Symbol(71, 227, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 266, 10, "<hiszi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 288, 7, "Hisz" )
Symbol(53, 295, 6, <adj> )
Symbol(87, 0, 0, )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 318, 7, "hisz" )
Symbol(38, 325, 8, <vblex> )
Symbol(37, 333, 7, <pres> )
Symbol(87, 0, 0, )
Symbol(2, 345, 6, <s3p> )
Symbol(2, 351, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 369, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 387, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 408, 7, "<ő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 427, 5, "ő" )
Symbol(57, 432, 6, <prn> )
Symbol(56, 438, 7, <pers> )
Symbol(2, 445, 5, <p3> )
Symbol(2, 450, 5, <mf> )
Symbol(87, 0, 0, )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 478, 11, "<látta>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 501, 7, "lát" )
Symbol(38, 508, 8, <vblex> )
Symbol(46, 516, 7, <past> )
Symbol(87, 0, 0, )
Symbol(2, 528, 6, <s3p> )
Symbol(2, 534, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 582, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 600, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 621, 10, "<merre>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 643, 8, "merre" )
Symbol(54, 651, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 669, 9, "<ment>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 690, 7, "megy" )
Symbol(38, 697, 8, <vblex> )
Symbol(46, 705, 7, <past> )
Symbol(87, 0, 0, )
Symbol(2, 717, 6, <s3p> )
Symbol(2, 723, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 735, 7, "ment" )
Symbol(38, 742, 8, <vblex> )
Symbol(37, 750, 7, <pres> )
Symbol(87, 0, 0, )
Symbol(2, 762, 6, <s3p> )
Symbol(2, 768, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 780, 7, "ment" )
Symbol(53, 787, 6, <adj> )
Symbol(87, 0, 0, )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 816, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 839, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 0, 0, )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 876, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 894, 4, ":" )
Symbol(64, 0, 0, )
Symbol(2, 905, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 8 10 2 7 29 3 2 53 87 55 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 2 38 46 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 46 87 2 2 29 3 2 38 37 87 2 2 29 3 2 53 87 55 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<„>" #BOC# | #0# "„" <quot> | #EOC# $0$ "<Mondd>" #BOC# | #0# "mond" <vblex> <pis> <sg> <s2p> <def> | #EOC# $0$ "<meg>" #BOC# | #0# "meg" <cnjcoo> | #0# "meg" <prevb> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<hol>" #BOC# | #0# "hol" <adv> <itg> | #EOC# $0$ "<van>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Rule found: R_1_195_T_1


LRS T1:
Name: R_1_195_T_1
arity: 2
arccount: 108
statecount: 27
linecount: 109
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 44 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 45 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 63 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 64 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 44 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 45 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 63 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 64 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 29 -- 
  out: 15 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 3
  in: 3 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 2 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 29 -- 
  out: 22 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 44 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 4
  in: 45 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 63 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 64 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 2 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 29 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 5
  in: 44 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 5
  in: 45 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 5
  in: 63 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 64 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 6
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 3 -- 
  out: 16 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 7
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 2 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 29 -- 
  out: 22 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 44 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 45 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 8
  in: 63 -- 
  out: 36 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 8
  in: 64 -- 
  out: 37 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 10
  in: 2 -- 
  out: 17 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 10
  in: 29 -- 
  out: 22 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 10
  in: 44 -- 
  out: 18 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 45 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 63 -- 
  out: 20 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 10
  in: 64 -- 
  out: 21 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 2 -- 
  out: 46 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 51 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 44 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 45 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 63 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 11
  in: 64 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 3 -- 
  out: 29 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 12
  in: 8 -- 
  out: 30 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 2 -- 
  out: 33 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 13
  in: 29 -- 
  out: 22 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 13
  in: 44 -- 
  out: 34 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 13
  in: 45 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 13
  in: 63 -- 
  out: 36 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 13
  in: 64 -- 
  out: 37 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 14
  in: 10 -- 
  out: 4 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 2 -- 
  out: 9 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 15
  in: 7 -- 
  out: 10 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 15
  in: 44 -- 
  out: 11 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 15
  in: 45 -- 
  out: 12 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 15
  in: 63 -- 
  out: 13 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 15
  in: 64 -- 
  out: 14 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 29 -- 
  out: 15 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 3 -- 
  out: 16 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 2 -- 
  out: 17 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 29 -- 
  out: 22 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 44 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 45 -- 
  out: 19 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 18
  in: 63 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 64 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 2 -- 
  out: 23 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 29 -- 
  out: 28 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 44 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 45 -- 
  out: 19 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 63 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 64 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 20
  in: 3 -- 
  out: 29 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 3 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 22
  in: 2 -- 
  out: 33 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 22
  in: 29 -- 
  out: 22 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 22
  in: 44 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 22
  in: 45 -- 
  out: 35 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 63 -- 
  out: 36 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 64 -- 
  out: 37 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 23
  in: 2 -- 
  out: 17 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 23
  in: 29 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 23
  in: 44 -- 
  out: 18 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 23
  in: 45 -- 
  out: 19 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 63 -- 
  out: 20 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 64 -- 
  out: 21 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 24
  in: 2 -- 
  out: 46 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 24
  in: 29 -- 
  out: 51 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 24
  in: 44 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 24
  in: 45 -- 
  out: 35 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 63 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 24
  in: 64 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 25
  in: 3 -- 
  out: 29 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 25
  in: 8 -- 
  out: 30 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 26
  in: 2 -- 
  out: 33 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 26
  in: 29 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 26
  in: 44 -- 
  out: 34 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 26
  in: 45 -- 
  out: 35 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 26
  in: 63 -- 
  out: 36 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 26
  in: 64 -- 
  out: 37 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(108):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(86): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 8, "<„>" )
Symbol(7, 54, 6, #BOC# )
Symbol(29, 60, 2, | )
Symbol(3, 62, 4, #0# )
Symbol(2, 66, 6, "„" )
Symbol(63, 72, 7, <quot> )
Symbol(29, 79, 2, | )
Symbol(8, 81, 6, #EOC# )
Symbol(10, 87, 4, $0$ )
Symbol(2, 91, 10, "<Mondd>" )
Symbol(7, 101, 6, #BOC# )
Symbol(29, 107, 2, | )
Symbol(3, 109, 4, #0# )
Symbol(2, 113, 7, "mond" )
Symbol(38, 120, 8, <vblex> )
Symbol(40, 128, 6, <pis> )
Symbol(87, 134, 5, <sg> )
Symbol(59, 139, 6, <s2p> )
Symbol(2, 145, 6, <def> )
Symbol(29, 151, 2, | )
Symbol(8, 153, 6, #EOC# )
Symbol(10, 159, 4, $0$ )
Symbol(2, 163, 8, "<meg>" )
Symbol(7, 171, 6, #BOC# )
Symbol(29, 177, 2, | )
Symbol(3, 179, 4, #0# )
Symbol(2, 183, 6, "meg" )
Symbol(45, 189, 9, <cnjcoo> )
Symbol(29, 198, 2, | )
Symbol(3, 200, 4, #0# )
Symbol(2, 204, 6, "meg" )
Symbol(60, 210, 8, <prevb> )
Symbol(29, 218, 2, | )
Symbol(8, 220, 6, #EOC# )
Symbol(10, 226, 4, $0$ )
Symbol(2, 230, 6, "<,>" )
Symbol(7, 236, 6, #BOC# )
Symbol(29, 242, 2, | )
Symbol(3, 244, 4, #0# )
Symbol(2, 248, 4, "," )
Symbol(44, 252, 5, <cm> )
Symbol(29, 257, 2, | )
Symbol(8, 259, 6, #EOC# )
Symbol(10, 265, 4, $0$ )
Symbol(2, 269, 8, "<hol>" )
Symbol(7, 277, 6, #BOC# )
Symbol(29, 283, 2, | )
Symbol(3, 285, 4, #0# )
Symbol(2, 289, 6, "hol" )
Symbol(54, 295, 6, <adv> )
Symbol(70, 301, 6, <itg> )
Symbol(29, 307, 2, | )
Symbol(8, 309, 6, #EOC# )
Symbol(10, 315, 4, $0$ )
Symbol(2, 319, 8, "<van>" )
Symbol(7, 327, 6, #BOC# )
Symbol(29, 333, 2, | )
Symbol(3, 335, 4, #0# )
Symbol(35, 339, 6, "van" )
Symbol(48, 345, 8, <vbser> )
Symbol(37, 353, 7, <pres> )
Symbol(87, 360, 5, <sg> )
Symbol(2, 365, 6, <s3p> )
Symbol(2, 371, 6, <ind> )
Symbol(29, 377, 2, | )
Symbol(8, 379, 6, #EOC# )
Symbol(10, 385, 4, $0$ )
Symbol(2, 389, 6, "<!>" )
Symbol(7, 395, 6, #BOC# )
Symbol(29, 401, 2, | )
Symbol(3, 403, 4, #0# )
Symbol(39, 407, 4, "!" )
Symbol(64, 411, 7, <sent> )
Symbol(2, 418, 6, <<<<> )
Symbol(29, 424, 2, | )
Symbol(8, 426, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 38 40 87 59 2 29 8 10 2 7 29 3 2 45 29 3 2 60 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 70 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 18, signum = 63, q = 4, out = 20
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 45, q = 4, out = 19
trans_offset 21, signum = 29, q = 5, out = 28
trans_offset 28, signum = 3, q = 7, out = 16
trans_offset 37, signum = 2, q = 10, out = 17
trans_offset 37, signum = 2, q = 10, out = 17
trans_offset 38, signum = 29, q = 10, out = 22
trans_offset 50, signum = 8, q = 12, out = 30
trans_offset 57, signum = 10, q = 14, out = 4
trans_offset 58, signum = 2, q = 15, out = 9
trans_offset 59, signum = 7, q = 15, out = 10
trans_offset 64, signum = 29, q = 16, out = 15
trans_offset 65, signum = 3, q = 17, out = 16
trans_offset 66, signum = 2, q = 18, out = 17
trans_offset 68, signum = 44, q = 18, out = 18
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 19, signum = 64, q = 4, out = 21
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30

Intermediate is(86): 
4 9 10 15 16 17 17 22 30 4 9 10 15 16 17 20 22 30 4 9 10 15 16 17 17 17 17 17 17 22 30 4 9 10 15 16 17 19 28 16 17 17 22 30 4 9 10 15 16 17 18 22 30 4 9 10 15 16 17 17 17 22 30 4 9 10 15 16 17 17 17 17 17 17 22 30 4 9 10 15 16 17 21 17 22 30 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 9, q = 2, out = 64
trans_offset 29, q = 4, out = 2
trans_offset 28, q = 4, out = 3
trans_offset 69, q = 6, out = 29
trans_offset 79, q = 8, out = 7
trans_offset 107, q = 10, out = 2
trans_offset 106, q = 10, out = 10
trans_offset 122, q = 12, out = 8
trans_offset 123, q = 13, out = 29
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 126, q = 14, out = 3
trans_offset 146, q = 15, out = 29
trans_offset 190, q = 18, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 24, q = 3, out = 29
trans_offset 48, q = 5, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 44
trans_offset 29, q = 4, out = 2
trans_offset 28, q = 4, out = 3
trans_offset 69, q = 6, out = 29
trans_offset 79, q = 8, out = 7
trans_offset 107, q = 10, out = 2
trans_offset 106, q = 10, out = 10
trans_offset 122, q = 12, out = 8
trans_offset 123, q = 13, out = 29
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 126, q = 14, out = 3
trans_offset 148, q = 15, out = 0
trans_offset 194, q = 18, out = 0
trans_offset 280, q = 24, out = 0
trans_offset 279, q = 24, out = 0
trans_offset 146, q = 15, out = 29
trans_offset 190, q = 18, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 24, q = 3, out = 29
trans_offset 48, q = 5, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 63
trans_offset 29, q = 4, out = 2
trans_offset 28, q = 4, out = 3
trans_offset 69, q = 6, out = 29
trans_offset 79, q = 8, out = 7
trans_offset 107, q = 10, out = 2
trans_offset 106, q = 10, out = 10
trans_offset 122, q = 12, out = 8
trans_offset 123, q = 13, out = 29
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 126, q = 14, out = 3
trans_offset 146, q = 15, out = 29
trans_offset 190, q = 18, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10

Output is(82): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<„>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "„" )
Symbol(63, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 91, 10, "<Mondd>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 113, 7, "mond" )
Symbol(38, 120, 8, <vblex> )
Symbol(40, 128, 6, <pis> )
Symbol(87, 134, 5, <sg> )
Symbol(59, 139, 6, <s2p> )
Symbol(2, 145, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 163, 8, "<meg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 204, 6, "meg" )
Symbol(60, 210, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 230, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 248, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 269, 8, "<hol>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 289, 6, "hol" )
Symbol(54, 295, 6, <adv> )
Symbol(70, 301, 6, <itg> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 319, 8, "<van>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 339, 6, "van" )
Symbol(48, 345, 8, <vbser> )
Symbol(37, 353, 7, <pres> )
Symbol(87, 360, 5, <sg> )
Symbol(2, 365, 6, <s3p> )
Symbol(2, 371, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 389, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 407, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 418, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 38 40 87 59 2 29 8 10 2 7 29 3 2 60 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 70 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<”>" #BOC# | #0# "”" <quot> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<mondja>" #BOC# | #0# "mond" <vblex> <pres> <sg> <s3p> <def> | #0# "mond" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<anyjának>" #BOC# | #0# "anya" <n> <sg> <px3ss> <dat> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(92): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 8, "<”>" )
Symbol(7, 54, 6, #BOC# )
Symbol(29, 60, 2, | )
Symbol(3, 62, 4, #0# )
Symbol(2, 66, 6, "”" )
Symbol(63, 72, 7, <quot> )
Symbol(29, 79, 2, | )
Symbol(8, 81, 6, #EOC# )
Symbol(10, 87, 4, $0$ )
Symbol(2, 91, 6, "<,>" )
Symbol(7, 97, 6, #BOC# )
Symbol(29, 103, 2, | )
Symbol(3, 105, 4, #0# )
Symbol(2, 109, 4, "," )
Symbol(44, 113, 5, <cm> )
Symbol(29, 118, 2, | )
Symbol(8, 120, 6, #EOC# )
Symbol(10, 126, 4, $0$ )
Symbol(2, 130, 11, "<mondja>" )
Symbol(7, 141, 6, #BOC# )
Symbol(29, 147, 2, | )
Symbol(3, 149, 4, #0# )
Symbol(2, 153, 7, "mond" )
Symbol(38, 160, 8, <vblex> )
Symbol(37, 168, 7, <pres> )
Symbol(87, 175, 5, <sg> )
Symbol(2, 180, 6, <s3p> )
Symbol(2, 186, 6, <def> )
Symbol(29, 192, 2, | )
Symbol(3, 194, 4, #0# )
Symbol(2, 198, 7, "mond" )
Symbol(38, 205, 8, <vblex> )
Symbol(40, 213, 6, <pis> )
Symbol(87, 219, 5, <sg> )
Symbol(2, 224, 6, <s3p> )
Symbol(2, 230, 6, <def> )
Symbol(29, 236, 2, | )
Symbol(8, 238, 6, #EOC# )
Symbol(10, 244, 4, $0$ )
Symbol(72, 248, 7, "<az>" )
Symbol(7, 255, 6, #BOC# )
Symbol(29, 261, 2, | )
Symbol(3, 263, 4, #0# )
Symbol(75, 267, 5, "az" )
Symbol(2, 272, 9, <predet> )
Symbol(87, 281, 5, <sg> )
Symbol(55, 286, 6, <nom> )
Symbol(29, 292, 2, | )
Symbol(3, 294, 4, #0# )
Symbol(75, 298, 5, "az" )
Symbol(57, 303, 6, <prn> )
Symbol(87, 309, 5, <sg> )
Symbol(55, 314, 6, <nom> )
Symbol(29, 320, 2, | )
Symbol(3, 322, 4, #0# )
Symbol(2, 326, 4, "a" )
Symbol(73, 330, 6, <det> )
Symbol(2, 336, 6, <def> )
Symbol(29, 342, 2, | )
Symbol(8, 344, 6, #EOC# )
Symbol(10, 350, 4, $0$ )
Symbol(2, 354, 14, "<anyjának>" )
Symbol(7, 368, 6, #BOC# )
Symbol(29, 374, 2, | )
Symbol(3, 376, 4, #0# )
Symbol(2, 380, 7, "anya" )
Symbol(15, 387, 4, <n> )
Symbol(87, 391, 5, <sg> )
Symbol(28, 396, 8, <px3ss> )
Symbol(2, 404, 6, <dat> )
Symbol(29, 410, 2, | )
Symbol(8, 412, 6, #EOC# )
Symbol(10, 418, 4, $0$ )
Symbol(2, 422, 6, "<.>" )
Symbol(7, 428, 6, #BOC# )
Symbol(29, 434, 2, | )
Symbol(3, 436, 4, #0# )
Symbol(2, 440, 4, "." )
Symbol(64, 444, 7, <sent> )
Symbol(2, 451, 6, <<<<> )
Symbol(29, 457, 2, | )
Symbol(8, 459, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 56, signum = 3, q = 20, out = 21
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 61, signum = 29, q = 22, out = 16
trans_offset 56, signum = 3, q = 20, out = 21
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 61, signum = 29, q = 22, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(92): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 13 13 16 21 25 25 25 25 16 21 25 25 25 16 22 5 7 9 11 12 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 68, q = 8, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 100, q = 12, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(84): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<”>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "”" )
Symbol(63, 72, 7, <quot> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 91, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 109, 4, "," )
Symbol(44, 113, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 130, 11, "<mondja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 153, 7, "mond" )
Symbol(38, 160, 8, <vblex> )
Symbol(37, 168, 7, <pres> )
Symbol(87, 175, 5, <sg> )
Symbol(2, 180, 6, <s3p> )
Symbol(2, 186, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 248, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 267, 5, "az" )
Symbol(2, 272, 9, <predet> )
Symbol(87, 281, 5, <sg> )
Symbol(55, 286, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 298, 5, "az" )
Symbol(57, 303, 6, <prn> )
Symbol(87, 309, 5, <sg> )
Symbol(55, 314, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 326, 4, "a" )
Symbol(73, 330, 6, <det> )
Symbol(2, 336, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 354, 14, "<anyjának>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 380, 7, "anya" )
Symbol(15, 387, 4, <n> )
Symbol(87, 391, 5, <sg> )
Symbol(28, 396, 8, <px3ss> )
Symbol(2, 404, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 422, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 440, 4, "." )
Symbol(64, 444, 7, <sent> )
Symbol(2, 451, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_43_T_1


LRS T1:
Name: R_1_43_T_1
arity: 2
arccount: 152
statecount: 39
linecount: 153
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 72 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 73 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 2
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 2
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 72 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 2
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 3
  in: 2 -- 
  out: 9 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 7 -- 
  out: 11 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 3
  in: 15 -- 
  out: 14 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 3
  in: 53 -- 
  out: 12 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 3
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 73 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 29 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 29 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 3 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 8
  in: 2 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 36 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 72 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 73 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 2 -- 
  out: 37 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 9
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 9
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 9
  in: 72 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 9
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 2 -- 
  out: 31 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 72 -- 
  out: 32 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 12
  in: 3 -- 
  out: 30 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 14
  in: 3 -- 
  out: 54 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 72 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 62 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 72 -- 
  out: 63 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 2 -- 
  out: 31 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 29 -- 
  out: 36 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 72 -- 
  out: 32 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 17
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 3 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 18
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 2 -- 
  out: 62 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 72 -- 
  out: 63 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 19
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 10 -- 
  out: 5 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 21
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 21
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 22
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 22
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 22
  in: 72 -- 
  out: 10 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 22
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 2 -- 
  out: 9 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 7 -- 
  out: 11 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 23
  in: 15 -- 
  out: 14 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 23
  in: 53 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 23
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 23
  in: 73 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 29 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 25
  in: 29 -- 
  out: 27 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 27
  in: 3 -- 
  out: 30 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 2 -- 
  out: 31 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 29 -- 
  out: 36 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 72 -- 
  out: 32 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 73 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 2 -- 
  out: 37 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 72 -- 
  out: 38 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 31 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 29 -- 
  out: 36 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 72 -- 
  out: 32 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 31
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 3 -- 
  out: 30 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 3 -- 
  out: 54 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 34
  in: 2 -- 
  out: 37 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 34
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 72 -- 
  out: 38 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 35
  in: 2 -- 
  out: 62 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 35
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 35
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 35
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 72 -- 
  out: 63 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 36
  in: 2 -- 
  out: 31 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 36
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 36
  in: 29 -- 
  out: 36 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 72 -- 
  out: 32 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 37
  in: 3 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 37
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 38
  in: 2 -- 
  out: 62 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 38
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 38
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 38
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 38
  in: 72 -- 
  out: 63 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(152):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(84): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<”>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "”" )
Symbol(63, 72, 7, <quot> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 91, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 109, 4, "," )
Symbol(44, 113, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 130, 11, "<mondja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 153, 7, "mond" )
Symbol(38, 160, 8, <vblex> )
Symbol(37, 168, 7, <pres> )
Symbol(87, 175, 5, <sg> )
Symbol(2, 180, 6, <s3p> )
Symbol(2, 186, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 248, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 267, 5, "az" )
Symbol(2, 272, 9, <predet> )
Symbol(87, 281, 5, <sg> )
Symbol(55, 286, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 298, 5, "az" )
Symbol(57, 303, 6, <prn> )
Symbol(87, 309, 5, <sg> )
Symbol(55, 314, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 326, 4, "a" )
Symbol(73, 330, 6, <det> )
Symbol(2, 336, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 354, 14, "<anyjának>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 380, 7, "anya" )
Symbol(15, 387, 4, <n> )
Symbol(87, 391, 5, <sg> )
Symbol(28, 396, 8, <px3ss> )
Symbol(2, 404, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 422, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 440, 4, "." )
Symbol(64, 444, 7, <sent> )
Symbol(2, 451, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 10, signum = 72, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 58, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44

Intermediate is(84): 
5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 31 36 44 5 9 11 27 29 31 31 31 36 44 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 72
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(72): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<”>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "”" )
Symbol(63, 72, 7, <quot> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 91, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 109, 4, "," )
Symbol(44, 113, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 130, 11, "<mondja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 153, 7, "mond" )
Symbol(38, 160, 8, <vblex> )
Symbol(37, 168, 7, <pres> )
Symbol(87, 175, 5, <sg> )
Symbol(2, 180, 6, <s3p> )
Symbol(2, 186, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 326, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 336, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 354, 14, "<anyjának>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 380, 7, "anya" )
Symbol(15, 0, 0, )
Symbol(87, 391, 5, <sg> )
Symbol(28, 396, 8, <px3ss> )
Symbol(2, 404, 6, <dat> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 422, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 440, 4, "." )
Symbol(64, 444, 7, <sent> )
Symbol(2, 451, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 28 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<„>" #BOC# | #0# "„" <quot> | #EOC# $0$ "<Nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<mondhatom>" #BOC# | #0# "mond" <vbmod> <pres> <sg> <s1p> <def> | #EOC# $0$ "<meg>" #BOC# | #0# "meg" <cnjcoo> | #0# "meg" <prevb> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Rule found: R_1_195_T_1


LRS T1:
Name: R_1_195_T_1
arity: 2
arccount: 108
statecount: 27
linecount: 109
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 44 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 45 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 63 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 64 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 44 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 45 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 63 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 64 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 29 -- 
  out: 15 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 3
  in: 3 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 2 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 29 -- 
  out: 22 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 44 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 4
  in: 45 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 63 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 64 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 2 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 29 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 5
  in: 44 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 5
  in: 45 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 5
  in: 63 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 64 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 6
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 3 -- 
  out: 16 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 7
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 2 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 29 -- 
  out: 22 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 44 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 45 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 8
  in: 63 -- 
  out: 36 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 8
  in: 64 -- 
  out: 37 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 10
  in: 2 -- 
  out: 17 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 10
  in: 29 -- 
  out: 22 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 10
  in: 44 -- 
  out: 18 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 45 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 63 -- 
  out: 20 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 10
  in: 64 -- 
  out: 21 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 2 -- 
  out: 46 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 51 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 44 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 45 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 63 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 11
  in: 64 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 3 -- 
  out: 29 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 12
  in: 8 -- 
  out: 30 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 2 -- 
  out: 33 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 13
  in: 29 -- 
  out: 22 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 13
  in: 44 -- 
  out: 34 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 13
  in: 45 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 13
  in: 63 -- 
  out: 36 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 13
  in: 64 -- 
  out: 37 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 14
  in: 10 -- 
  out: 4 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 2 -- 
  out: 9 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 15
  in: 7 -- 
  out: 10 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 15
  in: 44 -- 
  out: 11 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 15
  in: 45 -- 
  out: 12 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 15
  in: 63 -- 
  out: 13 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 15
  in: 64 -- 
  out: 14 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 29 -- 
  out: 15 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 3 -- 
  out: 16 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 2 -- 
  out: 17 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 29 -- 
  out: 22 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 44 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 45 -- 
  out: 19 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 18
  in: 63 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 64 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 2 -- 
  out: 23 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 29 -- 
  out: 28 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 44 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 45 -- 
  out: 19 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 63 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 64 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 20
  in: 3 -- 
  out: 29 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 3 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 22
  in: 2 -- 
  out: 33 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 22
  in: 29 -- 
  out: 22 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 22
  in: 44 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 22
  in: 45 -- 
  out: 35 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 63 -- 
  out: 36 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 64 -- 
  out: 37 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 23
  in: 2 -- 
  out: 17 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 23
  in: 29 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 23
  in: 44 -- 
  out: 18 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 23
  in: 45 -- 
  out: 19 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 63 -- 
  out: 20 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 64 -- 
  out: 21 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 24
  in: 2 -- 
  out: 46 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 24
  in: 29 -- 
  out: 51 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 24
  in: 44 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 24
  in: 45 -- 
  out: 35 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 63 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 24
  in: 64 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 25
  in: 3 -- 
  out: 29 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 25
  in: 8 -- 
  out: 30 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 26
  in: 2 -- 
  out: 33 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 26
  in: 29 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 26
  in: 44 -- 
  out: 34 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 26
  in: 45 -- 
  out: 35 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 26
  in: 63 -- 
  out: 36 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 26
  in: 64 -- 
  out: 37 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(108):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(121): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 8, "<„>" )
Symbol(7, 54, 6, #BOC# )
Symbol(29, 60, 2, | )
Symbol(3, 62, 4, #0# )
Symbol(2, 66, 6, "„" )
Symbol(63, 72, 7, <quot> )
Symbol(29, 79, 2, | )
Symbol(8, 81, 6, #EOC# )
Symbol(10, 87, 4, $0$ )
Symbol(2, 91, 8, "<Nem>" )
Symbol(7, 99, 6, #BOC# )
Symbol(29, 105, 2, | )
Symbol(3, 107, 4, #0# )
Symbol(2, 111, 6, "nem" )
Symbol(91, 117, 5, <ij> )
Symbol(29, 122, 2, | )
Symbol(3, 124, 4, #0# )
Symbol(2, 128, 6, "nem" )
Symbol(54, 134, 6, <adv> )
Symbol(29, 140, 2, | )
Symbol(8, 142, 6, #EOC# )
Symbol(10, 148, 4, $0$ )
Symbol(2, 152, 6, "<,>" )
Symbol(7, 158, 6, #BOC# )
Symbol(29, 164, 2, | )
Symbol(3, 166, 4, #0# )
Symbol(2, 170, 4, "," )
Symbol(44, 174, 5, <cm> )
Symbol(29, 179, 2, | )
Symbol(8, 181, 6, #EOC# )
Symbol(10, 187, 4, $0$ )
Symbol(2, 191, 9, "<Mari>" )
Symbol(7, 200, 6, #BOC# )
Symbol(29, 206, 2, | )
Symbol(3, 208, 4, #0# )
Symbol(2, 212, 7, "mari" )
Symbol(53, 219, 6, <adj> )
Symbol(87, 225, 5, <sg> )
Symbol(55, 230, 6, <nom> )
Symbol(29, 236, 2, | )
Symbol(3, 238, 4, #0# )
Symbol(2, 242, 7, "mari" )
Symbol(15, 249, 4, <n> )
Symbol(87, 253, 5, <sg> )
Symbol(55, 258, 6, <nom> )
Symbol(29, 264, 2, | )
Symbol(3, 266, 4, #0# )
Symbol(82, 270, 7, "Mari" )
Symbol(16, 277, 5, <np> )
Symbol(87, 282, 5, <sg> )
Symbol(55, 287, 6, <nom> )
Symbol(29, 293, 2, | )
Symbol(8, 295, 6, #EOC# )
Symbol(10, 301, 4, $0$ )
Symbol(2, 305, 6, "<,>" )
Symbol(7, 311, 6, #BOC# )
Symbol(29, 317, 2, | )
Symbol(3, 319, 4, #0# )
Symbol(2, 323, 4, "," )
Symbol(44, 327, 5, <cm> )
Symbol(29, 332, 2, | )
Symbol(8, 334, 6, #EOC# )
Symbol(10, 340, 4, $0$ )
Symbol(2, 344, 8, "<nem>" )
Symbol(7, 352, 6, #BOC# )
Symbol(29, 358, 2, | )
Symbol(3, 360, 4, #0# )
Symbol(2, 364, 6, "nem" )
Symbol(91, 370, 5, <ij> )
Symbol(29, 375, 2, | )
Symbol(3, 377, 4, #0# )
Symbol(2, 381, 6, "nem" )
Symbol(54, 387, 6, <adv> )
Symbol(29, 393, 2, | )
Symbol(8, 395, 6, #EOC# )
Symbol(10, 401, 4, $0$ )
Symbol(2, 405, 14, "<mondhatom>" )
Symbol(7, 419, 6, #BOC# )
Symbol(29, 425, 2, | )
Symbol(3, 427, 4, #0# )
Symbol(2, 431, 7, "mond" )
Symbol(47, 438, 8, <vbmod> )
Symbol(37, 446, 7, <pres> )
Symbol(87, 453, 5, <sg> )
Symbol(58, 458, 6, <s1p> )
Symbol(2, 464, 6, <def> )
Symbol(29, 470, 2, | )
Symbol(8, 472, 6, #EOC# )
Symbol(10, 478, 4, $0$ )
Symbol(2, 482, 8, "<meg>" )
Symbol(7, 490, 6, #BOC# )
Symbol(29, 496, 2, | )
Symbol(3, 498, 4, #0# )
Symbol(2, 502, 6, "meg" )
Symbol(45, 508, 9, <cnjcoo> )
Symbol(29, 517, 2, | )
Symbol(3, 519, 4, #0# )
Symbol(2, 523, 6, "meg" )
Symbol(60, 529, 8, <prevb> )
Symbol(29, 537, 2, | )
Symbol(8, 539, 6, #EOC# )
Symbol(10, 545, 4, $0$ )
Symbol(2, 549, 6, "<!>" )
Symbol(7, 555, 6, #BOC# )
Symbol(29, 561, 2, | )
Symbol(3, 563, 4, #0# )
Symbol(39, 567, 4, "!" )
Symbol(64, 571, 7, <sent> )
Symbol(2, 578, 6, <<<<> )
Symbol(29, 584, 2, | )
Symbol(8, 586, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 47 37 87 58 2 29 8 10 2 7 29 3 2 45 29 3 2 60 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 18, signum = 63, q = 4, out = 20
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 31, signum = 29, q = 8, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 16, signum = 44, q = 4, out = 18
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 31, signum = 29, q = 8, out = 22
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 31, signum = 29, q = 8, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 16, signum = 44, q = 4, out = 18
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 30, signum = 2, q = 8, out = 33
trans_offset 31, signum = 29, q = 8, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 45, q = 4, out = 19
trans_offset 21, signum = 29, q = 5, out = 28
trans_offset 28, signum = 3, q = 7, out = 16
trans_offset 37, signum = 2, q = 10, out = 17
trans_offset 37, signum = 2, q = 10, out = 17
trans_offset 38, signum = 29, q = 10, out = 22
trans_offset 50, signum = 8, q = 12, out = 30
trans_offset 57, signum = 10, q = 14, out = 4
trans_offset 58, signum = 2, q = 15, out = 9
trans_offset 59, signum = 7, q = 15, out = 10
trans_offset 64, signum = 29, q = 16, out = 15
trans_offset 65, signum = 3, q = 17, out = 16
trans_offset 66, signum = 2, q = 18, out = 17
trans_offset 71, signum = 64, q = 18, out = 21
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30

Intermediate is(121): 
4 9 10 15 16 17 17 22 30 4 9 10 15 16 17 20 22 30 4 9 10 15 16 17 17 22 29 33 33 22 30 4 9 10 15 16 17 18 22 30 4 9 10 15 16 17 17 17 17 22 29 33 33 33 33 22 29 33 33 33 33 22 30 4 9 10 15 16 17 18 22 30 4 9 10 15 16 17 17 22 29 33 33 22 30 4 9 10 15 16 17 17 17 17 17 17 22 30 4 9 10 15 16 17 19 28 16 17 17 22 30 4 9 10 15 16 17 21 17 22 30 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 9, q = 2, out = 64
trans_offset 29, q = 4, out = 2
trans_offset 28, q = 4, out = 3
trans_offset 69, q = 6, out = 29
trans_offset 79, q = 8, out = 7
trans_offset 107, q = 10, out = 2
trans_offset 106, q = 10, out = 10
trans_offset 122, q = 12, out = 8
trans_offset 123, q = 13, out = 29
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 126, q = 14, out = 3
trans_offset 148, q = 15, out = 0
trans_offset 194, q = 18, out = 0
trans_offset 280, q = 24, out = 0
trans_offset 279, q = 24, out = 0
trans_offset 146, q = 15, out = 29
trans_offset 190, q = 18, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 24, q = 3, out = 29
trans_offset 48, q = 5, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 15, q = 2, out = 2
trans_offset 15, q = 2, out = 2
trans_offset 14, q = 2, out = 3
trans_offset 25, q = 3, out = 29
trans_offset 50, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 24, q = 3, out = 29
trans_offset 48, q = 5, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 44
trans_offset 29, q = 4, out = 2
trans_offset 28, q = 4, out = 3
trans_offset 69, q = 6, out = 29
trans_offset 79, q = 8, out = 7
trans_offset 107, q = 10, out = 2
trans_offset 106, q = 10, out = 10
trans_offset 122, q = 12, out = 8
trans_offset 123, q = 13, out = 29
trans_offset 137, q = 14, out = 2
trans_offset 137, q = 14, out = 2
trans_offset 137, q = 14, out = 2
trans_offset 137, q = 14, out = 2
trans_offset 136, q = 14, out = 3
trans_offset 147, q = 15, out = 29
trans_offset 202, q = 18, out = 2
trans_offset 250, q = 22, out = 2
trans_offset 250, q = 22, out = 2
trans_offset 250, q = 22, out = 2
trans_offset 249, q = 22, out = 3
trans_offset 147, q = 15, out = 29
trans_offset 192, q = 18, out = 2
trans_offset 240, q = 22, out = 2
trans_offset 240, q = 22, out = 2
trans_offset 240, q = 22, out = 2
trans_offset 239, q = 22, out = 3
trans_offset 146, q = 15, out = 29
trans_offset 190, q = 18, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 44
trans_offset 29, q = 4, out = 2
trans_offset 28, q = 4, out = 3
trans_offset 69, q = 6, out = 29
trans_offset 79, q = 8, out = 7
trans_offset 107, q = 10, out = 2
trans_offset 106, q = 10, out = 10
trans_offset 122, q = 12, out = 8
trans_offset 123, q = 13, out = 29
trans_offset 137, q = 14, out = 2
trans_offset 137, q = 14, out = 2
trans_offset 136, q = 14, out = 3
trans_offset 147, q = 15, out = 29
trans_offset 192, q = 18, out = 2
trans_offset 240, q = 22, out = 2
trans_offset 239, q = 22, out = 3
trans_offset 146, q = 15, out = 29
trans_offset 190, q = 18, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10
trans_offset 105, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 63
trans_offset 29, q = 4, out = 2
trans_offset 28, q = 4, out = 3
trans_offset 69, q = 6, out = 29
trans_offset 79, q = 8, out = 7
trans_offset 107, q = 10, out = 2
trans_offset 106, q = 10, out = 10
trans_offset 122, q = 12, out = 8
trans_offset 123, q = 13, out = 29
trans_offset 127, q = 14, out = 2
trans_offset 127, q = 14, out = 2
trans_offset 126, q = 14, out = 3
trans_offset 146, q = 15, out = 29
trans_offset 190, q = 18, out = 7
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 10

Output is(117): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<„>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "„" )
Symbol(63, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 91, 8, "<Nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 111, 6, "nem" )
Symbol(91, 117, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 128, 6, "nem" )
Symbol(54, 134, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 170, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 191, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 212, 7, "mari" )
Symbol(53, 219, 6, <adj> )
Symbol(87, 225, 5, <sg> )
Symbol(55, 230, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 242, 7, "mari" )
Symbol(15, 249, 4, <n> )
Symbol(87, 253, 5, <sg> )
Symbol(55, 258, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 270, 7, "Mari" )
Symbol(16, 277, 5, <np> )
Symbol(87, 282, 5, <sg> )
Symbol(55, 287, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 305, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 323, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 344, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 364, 6, "nem" )
Symbol(91, 370, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 381, 6, "nem" )
Symbol(54, 387, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 405, 14, "<mondhatom>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 431, 7, "mond" )
Symbol(47, 438, 8, <vbmod> )
Symbol(37, 446, 7, <pres> )
Symbol(87, 453, 5, <sg> )
Symbol(58, 458, 6, <s1p> )
Symbol(2, 464, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 482, 8, "<meg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 523, 6, "meg" )
Symbol(60, 529, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 549, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 567, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 578, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 47 37 87 58 2 29 8 10 2 7 29 3 2 60 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_1_87_T_1


LRS T1:
Name: R_1_87_T_1
arity: 2
arccount: 70
statecount: 25
linecount: 71
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 80 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 80 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 80 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 24 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 80 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 12 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 13 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 80 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 10 -- 
  out: 4 -- 
  target: 18
  final_state: 1
  start_state: 0
Elem(44):
  state_no: 16
  in: 2 -- 
  out: 47 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 16 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 50 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 17
  in: 2 -- 
  out: 47 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 17
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 17
  in: 29 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 80 -- 
  out: 48 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 18
  in: 2 -- 
  out: 7 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 18
  in: 7 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 18
  in: 16 -- 
  out: 10 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 80 -- 
  out: 9 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 19
  in: 29 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 2 -- 
  out: 21 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 16 -- 
  out: 15 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 21
  in: 29 -- 
  out: 24 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 21
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 16 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 22
  in: 29 -- 
  out: 24 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 22
  in: 80 -- 
  out: 22 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 3 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 3 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(70):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(117): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<„>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "„" )
Symbol(63, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 91, 8, "<Nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 111, 6, "nem" )
Symbol(91, 117, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 128, 6, "nem" )
Symbol(54, 134, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 170, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 191, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 212, 7, "mari" )
Symbol(53, 219, 6, <adj> )
Symbol(87, 225, 5, <sg> )
Symbol(55, 230, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 242, 7, "mari" )
Symbol(15, 249, 4, <n> )
Symbol(87, 253, 5, <sg> )
Symbol(55, 258, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 270, 7, "Mari" )
Symbol(16, 277, 5, <np> )
Symbol(87, 282, 5, <sg> )
Symbol(55, 287, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 305, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 323, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 344, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 364, 6, "nem" )
Symbol(91, 370, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 381, 6, "nem" )
Symbol(54, 387, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 405, 14, "<mondhatom>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 431, 7, "mond" )
Symbol(47, 438, 8, <vbmod> )
Symbol(37, 446, 7, <pres> )
Symbol(87, 453, 5, <sg> )
Symbol(58, 458, 6, <s1p> )
Symbol(2, 464, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 482, 8, "<meg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 523, 6, "meg" )
Symbol(60, 529, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 549, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 567, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 578, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 47 37 87 58 2 29 8 10 2 7 29 3 2 60 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 80, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 43, signum = 10, q = 15, out = 4
trans_offset 52, signum = 2, q = 18, out = 7
trans_offset 53, signum = 7, q = 18, out = 8
trans_offset 56, signum = 29, q = 19, out = 11
trans_offset 57, signum = 3, q = 20, out = 60
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 58, signum = 2, q = 21, out = 21
trans_offset 60, signum = 29, q = 21, out = 24
trans_offset 67, signum = 8, q = 23, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 33, signum = 16, q = 11, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 20, signum = 29, q = 6, out = 24
trans_offset 31, signum = 8, q = 10, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 12
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 32, signum = 2, q = 11, out = 13
trans_offset 34, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(117): 
4 7 8 11 12 13 14 16 26 4 7 8 11 60 21 21 24 26 4 7 8 11 12 13 13 16 12 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 13 16 12 13 13 13 13 16 12 13 15 21 21 24 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 16 12 13 13 16 26 4 7 8 11 12 13 13 13 13 13 13 16 26 4 7 8 11 12 13 13 16 26 4 7 8 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 7, q = 2, out = 16
trans_offset 19, q = 4, out = 2
trans_offset 18, q = 4, out = 3
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 40, q = 6, out = 0
trans_offset 49, q = 8, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 63, q = 10, out = 0
trans_offset 62, q = 10, out = 0
trans_offset 39, q = 6, out = 29
trans_offset 47, q = 8, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 15, q = 3, out = 29
trans_offset 30, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 8, q = 2, out = 2
trans_offset 8, q = 2, out = 2
trans_offset 13, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10
trans_offset 61, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 14, q = 3, out = 29
trans_offset 28, q = 5, out = 7
trans_offset 44, q = 7, out = 2
trans_offset 43, q = 7, out = 10

Output is(105): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<„>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "„" )
Symbol(63, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 91, 8, "<Nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 111, 6, "nem" )
Symbol(91, 117, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 128, 6, "nem" )
Symbol(54, 134, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 170, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 191, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 270, 7, "Mari" )
Symbol(16, 0, 0, )
Symbol(87, 282, 5, <sg> )
Symbol(55, 287, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 305, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 323, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 344, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 364, 6, "nem" )
Symbol(91, 370, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 381, 6, "nem" )
Symbol(54, 387, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 405, 14, "<mondhatom>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 431, 7, "mond" )
Symbol(47, 438, 8, <vbmod> )
Symbol(37, 446, 7, <pres> )
Symbol(87, 453, 5, <sg> )
Symbol(58, 458, 6, <s1p> )
Symbol(2, 464, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 482, 8, "<meg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 523, 6, "meg" )
Symbol(60, 529, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 549, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 567, 4, "!" )
Symbol(64, 0, 0, )
Symbol(2, 578, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 47 37 87 58 2 29 8 10 2 7 29 3 2 60 29 8 10 2 7 29 3 39 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<”>" #BOC# | #0# "”" <quot> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<válaszolja>" #BOC# | #0# "válaszol" <vblex> <pres> <sg> <s3p> <def> | #0# "válaszol" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<ő>" #BOC# | #0# "ő" <prn> <pers> <p3> <mf> <sg> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(72): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 8, "<”>" )
Symbol(7, 54, 6, #BOC# )
Symbol(29, 60, 2, | )
Symbol(3, 62, 4, #0# )
Symbol(2, 66, 6, "”" )
Symbol(63, 72, 7, <quot> )
Symbol(29, 79, 2, | )
Symbol(8, 81, 6, #EOC# )
Symbol(10, 87, 4, $0$ )
Symbol(2, 91, 6, "<,>" )
Symbol(7, 97, 6, #BOC# )
Symbol(29, 103, 2, | )
Symbol(3, 105, 4, #0# )
Symbol(2, 109, 4, "," )
Symbol(44, 113, 5, <cm> )
Symbol(29, 118, 2, | )
Symbol(8, 120, 6, #EOC# )
Symbol(10, 126, 4, $0$ )
Symbol(2, 130, 16, "<válaszolja>" )
Symbol(7, 146, 6, #BOC# )
Symbol(29, 152, 2, | )
Symbol(3, 154, 4, #0# )
Symbol(2, 158, 12, "válaszol" )
Symbol(38, 170, 8, <vblex> )
Symbol(37, 178, 7, <pres> )
Symbol(87, 185, 5, <sg> )
Symbol(2, 190, 6, <s3p> )
Symbol(2, 196, 6, <def> )
Symbol(29, 202, 2, | )
Symbol(3, 204, 4, #0# )
Symbol(2, 208, 12, "válaszol" )
Symbol(38, 220, 8, <vblex> )
Symbol(40, 228, 6, <pis> )
Symbol(87, 234, 5, <sg> )
Symbol(2, 239, 6, <s3p> )
Symbol(2, 245, 6, <def> )
Symbol(29, 251, 2, | )
Symbol(8, 253, 6, #EOC# )
Symbol(10, 259, 4, $0$ )
Symbol(2, 263, 7, "<ő>" )
Symbol(7, 270, 6, #BOC# )
Symbol(29, 276, 2, | )
Symbol(3, 278, 4, #0# )
Symbol(2, 282, 5, "ő" )
Symbol(57, 287, 6, <prn> )
Symbol(56, 293, 7, <pers> )
Symbol(2, 300, 5, <p3> )
Symbol(2, 305, 5, <mf> )
Symbol(87, 310, 5, <sg> )
Symbol(55, 315, 6, <nom> )
Symbol(29, 321, 2, | )
Symbol(8, 323, 6, #EOC# )
Symbol(10, 329, 4, $0$ )
Symbol(2, 333, 6, "<.>" )
Symbol(7, 339, 6, #BOC# )
Symbol(29, 345, 2, | )
Symbol(3, 347, 4, #0# )
Symbol(2, 351, 4, "." )
Symbol(64, 355, 7, <sent> )
Symbol(2, 362, 6, <<<<> )
Symbol(29, 368, 2, | )
Symbol(8, 370, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(72): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(64): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 8, "<”>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 66, 6, "”" )
Symbol(63, 72, 7, <quot> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 91, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 109, 4, "," )
Symbol(44, 113, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 130, 16, "<válaszolja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 158, 12, "válaszol" )
Symbol(38, 170, 8, <vblex> )
Symbol(37, 178, 7, <pres> )
Symbol(87, 185, 5, <sg> )
Symbol(2, 190, 6, <s3p> )
Symbol(2, 196, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 263, 7, "<ő>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 282, 5, "ő" )
Symbol(57, 287, 6, <prn> )
Symbol(56, 293, 7, <pers> )
Symbol(2, 300, 5, <p3> )
Symbol(2, 305, 5, <mf> )
Symbol(87, 310, 5, <sg> )
Symbol(55, 315, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 333, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 351, 4, "." )
Symbol(64, 355, 7, <sent> )
Symbol(2, 362, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 63 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 57 56 2 2 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Bár>" #BOC# | #0# "bár" <cnjcoo> | #EOC# $0$ "<valószínűleg>" #BOC# | #0# "valószínűleg" <adv> | #EOC# $0$ "<tudja>" #BOC# | #0# "tud" <vblex> <pres> <sg> <s3p> <def> | #0# "tud" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<hol>" #BOC# | #0# "hol" <adv> <itg> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<fiú>" #BOC# | #0# "fiú" <n> <sg> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<akarja>" #BOC# | #0# "akar" <vblex> <pres> <sg> <s3p> <def> | #0# "akar" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<megmondani>" #BOC# | #0# "megmond" <vblex> <inf> <sg> <s3p> <ind> | #0# "meg" <prevb> + "mond" <vblex> <inf> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(165): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Bár>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(2, 67, 7, "bár" )
Symbol(45, 74, 9, <cnjcoo> )
Symbol(29, 83, 2, | )
Symbol(8, 85, 6, #EOC# )
Symbol(10, 91, 4, $0$ )
Symbol(2, 95, 20, "<valószínűleg>" )
Symbol(7, 115, 6, #BOC# )
Symbol(29, 121, 2, | )
Symbol(3, 123, 4, #0# )
Symbol(2, 127, 18, "valószínűleg" )
Symbol(54, 145, 6, <adv> )
Symbol(29, 151, 2, | )
Symbol(8, 153, 6, #EOC# )
Symbol(10, 159, 4, $0$ )
Symbol(2, 163, 10, "<tudja>" )
Symbol(7, 173, 6, #BOC# )
Symbol(29, 179, 2, | )
Symbol(3, 181, 4, #0# )
Symbol(2, 185, 6, "tud" )
Symbol(38, 191, 8, <vblex> )
Symbol(37, 199, 7, <pres> )
Symbol(87, 206, 5, <sg> )
Symbol(2, 211, 6, <s3p> )
Symbol(2, 217, 6, <def> )
Symbol(29, 223, 2, | )
Symbol(3, 225, 4, #0# )
Symbol(2, 229, 6, "tud" )
Symbol(38, 235, 8, <vblex> )
Symbol(40, 243, 6, <pis> )
Symbol(87, 249, 5, <sg> )
Symbol(2, 254, 6, <s3p> )
Symbol(2, 260, 6, <def> )
Symbol(29, 266, 2, | )
Symbol(8, 268, 6, #EOC# )
Symbol(10, 274, 4, $0$ )
Symbol(2, 278, 6, "<,>" )
Symbol(7, 284, 6, #BOC# )
Symbol(29, 290, 2, | )
Symbol(3, 292, 4, #0# )
Symbol(2, 296, 4, "," )
Symbol(44, 300, 5, <cm> )
Symbol(29, 305, 2, | )
Symbol(8, 307, 6, #EOC# )
Symbol(10, 313, 4, $0$ )
Symbol(2, 317, 8, "<hol>" )
Symbol(7, 325, 6, #BOC# )
Symbol(29, 331, 2, | )
Symbol(3, 333, 4, #0# )
Symbol(2, 337, 6, "hol" )
Symbol(54, 343, 6, <adv> )
Symbol(70, 349, 6, <itg> )
Symbol(29, 355, 2, | )
Symbol(8, 357, 6, #EOC# )
Symbol(10, 363, 4, $0$ )
Symbol(2, 367, 6, "<a>" )
Symbol(7, 373, 6, #BOC# )
Symbol(29, 379, 2, | )
Symbol(3, 381, 4, #0# )
Symbol(2, 385, 4, "a" )
Symbol(73, 389, 6, <det> )
Symbol(2, 395, 6, <def> )
Symbol(29, 401, 2, | )
Symbol(8, 403, 6, #EOC# )
Symbol(10, 409, 4, $0$ )
Symbol(2, 413, 9, "<fiú>" )
Symbol(7, 422, 6, #BOC# )
Symbol(29, 428, 2, | )
Symbol(3, 430, 4, #0# )
Symbol(2, 434, 7, "fiú" )
Symbol(15, 441, 4, <n> )
Symbol(87, 445, 5, <sg> )
Symbol(55, 450, 6, <nom> )
Symbol(29, 456, 2, | )
Symbol(8, 458, 6, #EOC# )
Symbol(10, 464, 4, $0$ )
Symbol(2, 468, 6, "<,>" )
Symbol(7, 474, 6, #BOC# )
Symbol(29, 480, 2, | )
Symbol(3, 482, 4, #0# )
Symbol(2, 486, 4, "," )
Symbol(44, 490, 5, <cm> )
Symbol(29, 495, 2, | )
Symbol(8, 497, 6, #EOC# )
Symbol(10, 503, 4, $0$ )
Symbol(2, 507, 8, "<nem>" )
Symbol(7, 515, 6, #BOC# )
Symbol(29, 521, 2, | )
Symbol(3, 523, 4, #0# )
Symbol(2, 527, 6, "nem" )
Symbol(91, 533, 5, <ij> )
Symbol(29, 538, 2, | )
Symbol(3, 540, 4, #0# )
Symbol(2, 544, 6, "nem" )
Symbol(54, 550, 6, <adv> )
Symbol(29, 556, 2, | )
Symbol(8, 558, 6, #EOC# )
Symbol(10, 564, 4, $0$ )
Symbol(2, 568, 11, "<akarja>" )
Symbol(7, 579, 6, #BOC# )
Symbol(29, 585, 2, | )
Symbol(3, 587, 4, #0# )
Symbol(49, 591, 7, "akar" )
Symbol(38, 598, 8, <vblex> )
Symbol(37, 606, 7, <pres> )
Symbol(87, 613, 5, <sg> )
Symbol(2, 618, 6, <s3p> )
Symbol(2, 624, 6, <def> )
Symbol(29, 630, 2, | )
Symbol(3, 632, 4, #0# )
Symbol(49, 636, 7, "akar" )
Symbol(38, 643, 8, <vblex> )
Symbol(40, 651, 6, <pis> )
Symbol(87, 657, 5, <sg> )
Symbol(2, 662, 6, <s3p> )
Symbol(2, 668, 6, <def> )
Symbol(29, 674, 2, | )
Symbol(8, 676, 6, #EOC# )
Symbol(10, 682, 4, $0$ )
Symbol(2, 686, 15, "<megmondani>" )
Symbol(7, 701, 6, #BOC# )
Symbol(29, 707, 2, | )
Symbol(3, 709, 4, #0# )
Symbol(2, 713, 10, "megmond" )
Symbol(38, 723, 8, <vblex> )
Symbol(52, 731, 6, <inf> )
Symbol(87, 737, 5, <sg> )
Symbol(2, 742, 6, <s3p> )
Symbol(2, 748, 6, <ind> )
Symbol(29, 754, 2, | )
Symbol(3, 756, 4, #0# )
Symbol(2, 760, 6, "meg" )
Symbol(60, 766, 8, <prevb> )
Symbol(2, 774, 2, + )
Symbol(2, 776, 7, "mond" )
Symbol(38, 783, 8, <vblex> )
Symbol(52, 791, 6, <inf> )
Symbol(87, 797, 5, <sg> )
Symbol(2, 802, 6, <s3p> )
Symbol(2, 808, 6, <ind> )
Symbol(29, 814, 2, | )
Symbol(8, 816, 6, #EOC# )
Symbol(10, 822, 4, $0$ )
Symbol(2, 826, 6, "<.>" )
Symbol(7, 832, 6, #BOC# )
Symbol(29, 838, 2, | )
Symbol(3, 840, 4, #0# )
Symbol(2, 844, 4, "." )
Symbol(64, 848, 7, <sent> )
Symbol(2, 855, 6, <<<<> )
Symbol(29, 861, 2, | )
Symbol(8, 863, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 70 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 49 38 37 87 2 2 29 3 49 38 40 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 3 2 60 2 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 56, signum = 3, q = 20, out = 21
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 61, signum = 29, q = 22, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 56, signum = 3, q = 20, out = 21
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 63, signum = 40, q = 22, out = 27
trans_offset 68, signum = 2, q = 24, out = 34
trans_offset 68, signum = 2, q = 24, out = 34
trans_offset 68, signum = 2, q = 24, out = 34
trans_offset 69, signum = 29, q = 24, out = 37
trans_offset 73, signum = 8, q = 25, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 56, signum = 3, q = 20, out = 21
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 61, signum = 29, q = 22, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(165): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 21 25 25 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 25 25 25 25 25 25 25 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(149): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Bár>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "bár" )
Symbol(45, 74, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 95, 20, "<valószínűleg>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 127, 18, "valószínűleg" )
Symbol(54, 145, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 163, 10, "<tudja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 185, 6, "tud" )
Symbol(38, 191, 8, <vblex> )
Symbol(37, 199, 7, <pres> )
Symbol(87, 206, 5, <sg> )
Symbol(2, 211, 6, <s3p> )
Symbol(2, 217, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 278, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 296, 4, "," )
Symbol(44, 300, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 317, 8, "<hol>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 337, 6, "hol" )
Symbol(54, 343, 6, <adv> )
Symbol(70, 349, 6, <itg> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 367, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 385, 4, "a" )
Symbol(73, 389, 6, <det> )
Symbol(2, 395, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 413, 9, "<fiú>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 434, 7, "fiú" )
Symbol(15, 441, 4, <n> )
Symbol(87, 445, 5, <sg> )
Symbol(55, 450, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 468, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 486, 4, "," )
Symbol(44, 490, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 507, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 527, 6, "nem" )
Symbol(91, 533, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 544, 6, "nem" )
Symbol(54, 550, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 568, 11, "<akarja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(49, 591, 7, "akar" )
Symbol(38, 598, 8, <vblex> )
Symbol(37, 606, 7, <pres> )
Symbol(87, 613, 5, <sg> )
Symbol(2, 618, 6, <s3p> )
Symbol(2, 624, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 15, "<megmondani>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 713, 10, "megmond" )
Symbol(38, 723, 8, <vblex> )
Symbol(52, 731, 6, <inf> )
Symbol(87, 737, 5, <sg> )
Symbol(2, 742, 6, <s3p> )
Symbol(2, 748, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 760, 6, "meg" )
Symbol(60, 766, 8, <prevb> )
Symbol(2, 774, 2, + )
Symbol(2, 776, 7, "mond" )
Symbol(38, 783, 8, <vblex> )
Symbol(52, 791, 6, <inf> )
Symbol(87, 797, 5, <sg> )
Symbol(2, 802, 6, <s3p> )
Symbol(2, 808, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 826, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 844, 4, "." )
Symbol(64, 848, 7, <sent> )
Symbol(2, 855, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 54 70 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 49 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 3 2 60 2 2 38 52 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Mari>" #BOC# | #0# "mari" <adj> <sg> <nom> | #0# "mari" <n> <sg> <nom> | #0# "Mari" <np> <sg> <nom> | #EOC# $0$ "<lassan>" #BOC# | #0# "lassú" <adv> | #EOC# $0$ "<végigsétál>" #BOC# | #0# "végigsétál" <vblex> <pres> <sg> <s3p> <ind> | #0# "végig" <prevb> + "sétál" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kerten>" #BOC# | #0# "kert" <n> <sg> <ses> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_3_283_T_1


LRS T1:
Name: R_3_283_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 16 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 82 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 16 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 82 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 16 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 82 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 82 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 16 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 82 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 16 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 16 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 82 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(96): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(2, 67, 7, "mari" )
Symbol(53, 74, 6, <adj> )
Symbol(87, 80, 5, <sg> )
Symbol(55, 85, 6, <nom> )
Symbol(29, 91, 2, | )
Symbol(3, 93, 4, #0# )
Symbol(2, 97, 7, "mari" )
Symbol(15, 104, 4, <n> )
Symbol(87, 108, 5, <sg> )
Symbol(55, 113, 6, <nom> )
Symbol(29, 119, 2, | )
Symbol(3, 121, 4, #0# )
Symbol(82, 125, 7, "Mari" )
Symbol(16, 132, 5, <np> )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 148, 2, | )
Symbol(8, 150, 6, #EOC# )
Symbol(10, 156, 4, $0$ )
Symbol(2, 160, 11, "<lassan>" )
Symbol(7, 171, 6, #BOC# )
Symbol(29, 177, 2, | )
Symbol(3, 179, 4, #0# )
Symbol(2, 183, 9, "lassú" )
Symbol(54, 192, 6, <adv> )
Symbol(29, 198, 2, | )
Symbol(8, 200, 6, #EOC# )
Symbol(10, 206, 4, $0$ )
Symbol(2, 210, 18, "<végigsétál>" )
Symbol(7, 228, 6, #BOC# )
Symbol(29, 234, 2, | )
Symbol(3, 236, 4, #0# )
Symbol(2, 240, 16, "végigsétál" )
Symbol(38, 256, 8, <vblex> )
Symbol(37, 264, 7, <pres> )
Symbol(87, 271, 5, <sg> )
Symbol(2, 276, 6, <s3p> )
Symbol(2, 282, 6, <ind> )
Symbol(29, 288, 2, | )
Symbol(3, 290, 4, #0# )
Symbol(2, 294, 9, "végig" )
Symbol(60, 303, 8, <prevb> )
Symbol(2, 311, 2, + )
Symbol(2, 313, 10, "sétál" )
Symbol(38, 323, 8, <vblex> )
Symbol(37, 331, 7, <pres> )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 355, 2, | )
Symbol(8, 357, 6, #EOC# )
Symbol(10, 363, 4, $0$ )
Symbol(2, 367, 6, "<a>" )
Symbol(7, 373, 6, #BOC# )
Symbol(29, 379, 2, | )
Symbol(3, 381, 4, #0# )
Symbol(2, 385, 4, "a" )
Symbol(73, 389, 6, <det> )
Symbol(2, 395, 6, <def> )
Symbol(29, 401, 2, | )
Symbol(8, 403, 6, #EOC# )
Symbol(10, 409, 4, $0$ )
Symbol(2, 413, 11, "<kerten>" )
Symbol(7, 424, 6, #BOC# )
Symbol(29, 430, 2, | )
Symbol(3, 432, 4, #0# )
Symbol(2, 436, 7, "kert" )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(2, 452, 6, <ses> )
Symbol(29, 458, 2, | )
Symbol(8, 460, 6, #EOC# )
Symbol(10, 466, 4, $0$ )
Symbol(2, 470, 6, "<.>" )
Symbol(7, 476, 6, #BOC# )
Symbol(29, 482, 2, | )
Symbol(3, 484, 4, #0# )
Symbol(2, 488, 4, "." )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 505, 2, | )
Symbol(8, 507, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 55 29 3 2 15 87 55 29 3 82 16 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 82, q = 8, out = 14
trans_offset 32, signum = 16, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(96): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 12 13 13 13 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 16
trans_offset 23, q = 4, out = 82
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 66, q = 8, out = 0
trans_offset 75, q = 10, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 91, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(84): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Mari>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(82, 0, 0, )
Symbol(16, 0, 0, )
Symbol(87, 137, 5, <sg> )
Symbol(55, 142, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 160, 11, "<lassan>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 183, 9, "lassú" )
Symbol(54, 192, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 210, 18, "<végigsétál>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 240, 16, "végigsétál" )
Symbol(38, 256, 8, <vblex> )
Symbol(37, 264, 7, <pres> )
Symbol(87, 271, 5, <sg> )
Symbol(2, 276, 6, <s3p> )
Symbol(2, 282, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 294, 9, "végig" )
Symbol(60, 303, 8, <prevb> )
Symbol(2, 311, 2, + )
Symbol(2, 313, 10, "sétál" )
Symbol(38, 323, 8, <vblex> )
Symbol(37, 331, 7, <pres> )
Symbol(87, 338, 5, <sg> )
Symbol(2, 343, 6, <s3p> )
Symbol(2, 349, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 367, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 385, 4, "a" )
Symbol(73, 389, 6, <det> )
Symbol(2, 395, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 413, 11, "<kerten>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 436, 7, "kert" )
Symbol(15, 443, 4, <n> )
Symbol(87, 447, 5, <sg> )
Symbol(2, 452, 6, <ses> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 470, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 488, 4, "." )
Symbol(64, 492, 7, <sent> )
Symbol(2, 499, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 82 16 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Még>" #BOC# | #0# "még" <adv> | #EOC# $0$ "<mindig>" #BOC# | #0# "mindig" <adv> | #EOC# $0$ "<próbálja>" #BOC# | #0# "próbál" <vblex> <pres> <sg> <s3p> <def> | #0# "próbál" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<megtalálni>" #BOC# | #0# "megtalál" <vblex> <inf> <sg> <s3p> <ind> | #0# "meg" <prevb> + "talál" <vblex> <inf> <sg> <s3p> <ind> | #EOC# $0$ "<Jancsit>" #BOC# | #0# "Jancsi" <np> <sg> <acc> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(93): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Még>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(2, 67, 7, "még" )
Symbol(54, 74, 6, <adv> )
Symbol(29, 80, 2, | )
Symbol(8, 82, 6, #EOC# )
Symbol(10, 88, 4, $0$ )
Symbol(2, 92, 11, "<mindig>" )
Symbol(7, 103, 6, #BOC# )
Symbol(29, 109, 2, | )
Symbol(3, 111, 4, #0# )
Symbol(2, 115, 9, "mindig" )
Symbol(54, 124, 6, <adv> )
Symbol(29, 130, 2, | )
Symbol(8, 132, 6, #EOC# )
Symbol(10, 138, 4, $0$ )
Symbol(2, 142, 15, "<próbálja>" )
Symbol(7, 157, 6, #BOC# )
Symbol(29, 163, 2, | )
Symbol(3, 165, 4, #0# )
Symbol(2, 169, 11, "próbál" )
Symbol(38, 180, 8, <vblex> )
Symbol(37, 188, 7, <pres> )
Symbol(87, 195, 5, <sg> )
Symbol(2, 200, 6, <s3p> )
Symbol(2, 206, 6, <def> )
Symbol(29, 212, 2, | )
Symbol(3, 214, 4, #0# )
Symbol(2, 218, 11, "próbál" )
Symbol(38, 229, 8, <vblex> )
Symbol(40, 237, 6, <pis> )
Symbol(87, 243, 5, <sg> )
Symbol(2, 248, 6, <s3p> )
Symbol(2, 254, 6, <def> )
Symbol(29, 260, 2, | )
Symbol(8, 262, 6, #EOC# )
Symbol(10, 268, 4, $0$ )
Symbol(2, 272, 16, "<megtalálni>" )
Symbol(7, 288, 6, #BOC# )
Symbol(29, 294, 2, | )
Symbol(3, 296, 4, #0# )
Symbol(2, 300, 12, "megtalál" )
Symbol(38, 312, 8, <vblex> )
Symbol(52, 320, 6, <inf> )
Symbol(87, 326, 5, <sg> )
Symbol(2, 331, 6, <s3p> )
Symbol(2, 337, 6, <ind> )
Symbol(29, 343, 2, | )
Symbol(3, 345, 4, #0# )
Symbol(2, 349, 6, "meg" )
Symbol(60, 355, 8, <prevb> )
Symbol(2, 363, 2, + )
Symbol(2, 365, 9, "talál" )
Symbol(38, 374, 8, <vblex> )
Symbol(52, 382, 6, <inf> )
Symbol(87, 388, 5, <sg> )
Symbol(2, 393, 6, <s3p> )
Symbol(2, 399, 6, <ind> )
Symbol(29, 405, 2, | )
Symbol(8, 407, 6, #EOC# )
Symbol(10, 413, 4, $0$ )
Symbol(2, 417, 12, "<Jancsit>" )
Symbol(7, 429, 6, #BOC# )
Symbol(29, 435, 2, | )
Symbol(3, 437, 4, #0# )
Symbol(2, 441, 9, "Jancsi" )
Symbol(16, 450, 5, <np> )
Symbol(87, 455, 5, <sg> )
Symbol(71, 460, 6, <acc> )
Symbol(29, 466, 2, | )
Symbol(8, 468, 6, #EOC# )
Symbol(10, 474, 4, $0$ )
Symbol(2, 478, 6, "<.>" )
Symbol(7, 484, 6, #BOC# )
Symbol(29, 490, 2, | )
Symbol(3, 492, 4, #0# )
Symbol(2, 496, 4, "." )
Symbol(64, 500, 7, <sent> )
Symbol(2, 507, 6, <<<<> )
Symbol(29, 513, 2, | )
Symbol(8, 515, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 3 2 60 2 2 38 52 87 2 2 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 56, signum = 3, q = 20, out = 21
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 60, signum = 2, q = 22, out = 25
trans_offset 61, signum = 29, q = 22, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(93): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 25 25 25 25 25 25 25 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(85): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Még>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "még" )
Symbol(54, 74, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 92, 11, "<mindig>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 115, 9, "mindig" )
Symbol(54, 124, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 142, 15, "<próbálja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 169, 11, "próbál" )
Symbol(38, 180, 8, <vblex> )
Symbol(37, 188, 7, <pres> )
Symbol(87, 195, 5, <sg> )
Symbol(2, 200, 6, <s3p> )
Symbol(2, 206, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 272, 16, "<megtalálni>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 300, 12, "megtalál" )
Symbol(38, 312, 8, <vblex> )
Symbol(52, 320, 6, <inf> )
Symbol(87, 326, 5, <sg> )
Symbol(2, 331, 6, <s3p> )
Symbol(2, 337, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 349, 6, "meg" )
Symbol(60, 355, 8, <prevb> )
Symbol(2, 363, 2, + )
Symbol(2, 365, 9, "talál" )
Symbol(38, 374, 8, <vblex> )
Symbol(52, 382, 6, <inf> )
Symbol(87, 388, 5, <sg> )
Symbol(2, 393, 6, <s3p> )
Symbol(2, 399, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 417, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 441, 9, "Jancsi" )
Symbol(16, 450, 5, <np> )
Symbol(87, 455, 5, <sg> )
Symbol(71, 460, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 478, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 496, 4, "." )
Symbol(64, 500, 7, <sent> )
Symbol(2, 507, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 38 52 87 2 2 29 3 2 60 2 2 38 52 87 2 2 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Benéz>" #BOC# | #0# "benéz" <vblex> <pres> <sg> <s3p> <ind> | #0# "be" <prevb> + "néz" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<asztal>" #BOC# | #0# "asztal" <n> <sg> <nom> | #EOC# $0$ "<alá>" #BOC# | #0# "alá" <post> | #0# "alá" <prevb> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<székek>" #BOC# | #0# "szék" <n> <pl> <nom> | #EOC# $0$ "<alám>" #BOC# | #0# "én" <prn> <pers> <post> <p1> <mf> <sg> <nom> | #EOC# $0$ "<de>" #BOC# | #0# "de" <adv> | #0# "de" <cnjcoo> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<nincs>" #BOC# | #0# "nincs" <vbser> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<ott>" #BOC# | #0# "ott" <prevb> | #0# "ott" <adv> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_187_T_1


LRS T1:
Name: R_1_187_T_1
arity: 2
arccount: 234
statecount: 52
linecount: 235
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 16 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 61 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 62 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 16 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 61 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 62 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 29 -- 
  out: 15 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 3
  in: 3 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 2 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 15 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 16 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 4
  in: 29 -- 
  out: 22 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 61 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 62 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 5
  in: 16 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 5
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 5
  in: 61 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 62 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 16 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 6
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 3 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 7
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 2 -- 
  out: 17 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 15 -- 
  out: 19 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 16 -- 
  out: 20 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 29 -- 
  out: 22 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 8
  in: 61 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 8
  in: 62 -- 
  out: 18 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 10
  in: 10 -- 
  out: 5 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(38):
  state_no: 11
  in: 2 -- 
  out: 9 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 7 -- 
  out: 11 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 15 -- 
  out: 12 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 16 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 61 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 62 -- 
  out: 10 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 29 -- 
  out: 15 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 13
  in: 3 -- 
  out: 48 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 14
  in: 2 -- 
  out: 49 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 14
  in: 15 -- 
  out: 51 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 14
  in: 16 -- 
  out: 52 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 14
  in: 29 -- 
  out: 54 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 14
  in: 61 -- 
  out: 21 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 14
  in: 62 -- 
  out: 50 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 15
  in: 2 -- 
  out: 55 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 15 -- 
  out: 57 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 16 -- 
  out: 58 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 61 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 62 -- 
  out: 50 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 16
  in: 2 -- 
  out: 49 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 15 -- 
  out: 51 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 16 -- 
  out: 52 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 54 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 61 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 62 -- 
  out: 50 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 2 -- 
  out: 17 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 15 -- 
  out: 19 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 16 -- 
  out: 20 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 29 -- 
  out: 22 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 61 -- 
  out: 21 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 62 -- 
  out: 18 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 18
  in: 3 -- 
  out: 48 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 2 -- 
  out: 55 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 15 -- 
  out: 57 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 16 -- 
  out: 58 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 29 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 61 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 62 -- 
  out: 50 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 20
  in: 2 -- 
  out: 17 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 15 -- 
  out: 19 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 20
  in: 16 -- 
  out: 20 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 20
  in: 29 -- 
  out: 22 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 20
  in: 61 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 20
  in: 62 -- 
  out: 18 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 3 -- 
  out: 87 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 2 -- 
  out: 17 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 15 -- 
  out: 19 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 22
  in: 16 -- 
  out: 20 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 22
  in: 29 -- 
  out: 22 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 22
  in: 61 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 22
  in: 62 -- 
  out: 18 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 3 -- 
  out: 48 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 24
  in: 3 -- 
  out: 97 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 24
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 25
  in: 2 -- 
  out: 49 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 25
  in: 15 -- 
  out: 51 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 25
  in: 16 -- 
  out: 52 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 25
  in: 29 -- 
  out: 54 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 25
  in: 61 -- 
  out: 21 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 25
  in: 62 -- 
  out: 50 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 26
  in: 2 -- 
  out: 17 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 26
  in: 15 -- 
  out: 19 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 26
  in: 16 -- 
  out: 20 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 26
  in: 29 -- 
  out: 22 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 26
  in: 61 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 26
  in: 62 -- 
  out: 18 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 27
  in: 3 -- 
  out: 87 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 27
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 28
  in: 3 -- 
  out: 113 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 28
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 2 -- 
  out: 55 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 15 -- 
  out: 57 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 29
  in: 16 -- 
  out: 58 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 29
  in: 29 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 29
  in: 61 -- 
  out: 21 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 29
  in: 62 -- 
  out: 50 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 30
  in: 3 -- 
  out: 97 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 30
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 2 -- 
  out: 49 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 31
  in: 15 -- 
  out: 51 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 31
  in: 16 -- 
  out: 52 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 31
  in: 29 -- 
  out: 54 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 31
  in: 61 -- 
  out: 21 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 31
  in: 62 -- 
  out: 50 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 32
  in: 2 -- 
  out: 129 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 32
  in: 15 -- 
  out: 131 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 32
  in: 16 -- 
  out: 132 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 32
  in: 29 -- 
  out: 134 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 32
  in: 61 -- 
  out: 21 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 32
  in: 62 -- 
  out: 130 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 33
  in: 2 -- 
  out: 17 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 33
  in: 15 -- 
  out: 19 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 33
  in: 16 -- 
  out: 20 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 33
  in: 29 -- 
  out: 22 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 33
  in: 61 -- 
  out: 21 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 33
  in: 62 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 34
  in: 3 -- 
  out: 113 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 34
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 35
  in: 2 -- 
  out: 55 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 35
  in: 15 -- 
  out: 57 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 35
  in: 16 -- 
  out: 58 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 35
  in: 29 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 35
  in: 61 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 35
  in: 62 -- 
  out: 50 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 36
  in: 2 -- 
  out: 149 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 36
  in: 15 -- 
  out: 151 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 36
  in: 16 -- 
  out: 152 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 36
  in: 29 -- 
  out: 154 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 36
  in: 61 -- 
  out: 21 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 36
  in: 62 -- 
  out: 130 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 37
  in: 2 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 37
  in: 15 -- 
  out: 19 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 37
  in: 16 -- 
  out: 20 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 37
  in: 29 -- 
  out: 22 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 37
  in: 61 -- 
  out: 21 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 37
  in: 62 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 38
  in: 2 -- 
  out: 129 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 38
  in: 15 -- 
  out: 131 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 38
  in: 16 -- 
  out: 132 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 38
  in: 29 -- 
  out: 134 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 38
  in: 61 -- 
  out: 21 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 38
  in: 62 -- 
  out: 130 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 39
  in: 2 -- 
  out: 49 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 39
  in: 15 -- 
  out: 51 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 39
  in: 16 -- 
  out: 52 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 39
  in: 29 -- 
  out: 54 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 39
  in: 61 -- 
  out: 21 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 39
  in: 62 -- 
  out: 50 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 40
  in: 2 -- 
  out: 17 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 40
  in: 15 -- 
  out: 19 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 40
  in: 16 -- 
  out: 20 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 40
  in: 29 -- 
  out: 22 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 40
  in: 61 -- 
  out: 21 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 40
  in: 62 -- 
  out: 18 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 41
  in: 2 -- 
  out: 17 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 41
  in: 15 -- 
  out: 19 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 41
  in: 16 -- 
  out: 20 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 41
  in: 29 -- 
  out: 22 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 41
  in: 61 -- 
  out: 21 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 41
  in: 62 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 42
  in: 3 -- 
  out: 97 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 42
  in: 8 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 43
  in: 2 -- 
  out: 149 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 43
  in: 15 -- 
  out: 151 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 43
  in: 16 -- 
  out: 152 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 43
  in: 29 -- 
  out: 154 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 43
  in: 61 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 43
  in: 62 -- 
  out: 130 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 44
  in: 2 -- 
  out: 55 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 44
  in: 15 -- 
  out: 57 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 44
  in: 16 -- 
  out: 58 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 44
  in: 29 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 44
  in: 61 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 44
  in: 62 -- 
  out: 50 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 45
  in: 2 -- 
  out: 129 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 45
  in: 15 -- 
  out: 131 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 45
  in: 16 -- 
  out: 132 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 45
  in: 29 -- 
  out: 134 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 45
  in: 61 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 45
  in: 62 -- 
  out: 130 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 46
  in: 2 -- 
  out: 17 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 46
  in: 15 -- 
  out: 19 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 46
  in: 16 -- 
  out: 20 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 46
  in: 29 -- 
  out: 22 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 46
  in: 61 -- 
  out: 21 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 46
  in: 62 -- 
  out: 18 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 47
  in: 2 -- 
  out: 129 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 47
  in: 15 -- 
  out: 131 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 47
  in: 16 -- 
  out: 132 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 47
  in: 29 -- 
  out: 134 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 47
  in: 61 -- 
  out: 21 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 47
  in: 62 -- 
  out: 130 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 48
  in: 2 -- 
  out: 149 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 48
  in: 15 -- 
  out: 151 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 48
  in: 16 -- 
  out: 152 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 48
  in: 29 -- 
  out: 154 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 48
  in: 61 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 48
  in: 62 -- 
  out: 130 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 49
  in: 3 -- 
  out: 97 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 49
  in: 8 -- 
  out: 30 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 50
  in: 2 -- 
  out: 129 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 50
  in: 15 -- 
  out: 131 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 50
  in: 16 -- 
  out: 132 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 50
  in: 29 -- 
  out: 134 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 50
  in: 61 -- 
  out: 21 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 50
  in: 62 -- 
  out: 130 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 51
  in: 2 -- 
  out: 129 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 51
  in: 15 -- 
  out: 131 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 51
  in: 16 -- 
  out: 132 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 51
  in: 29 -- 
  out: 134 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 51
  in: 61 -- 
  out: 21 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 51
  in: 62 -- 
  out: 130 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(234):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(184): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 11, "<Benéz>" )
Symbol(7, 57, 6, #BOC# )
Symbol(29, 63, 2, | )
Symbol(3, 65, 4, #0# )
Symbol(2, 69, 9, "benéz" )
Symbol(38, 78, 8, <vblex> )
Symbol(37, 86, 7, <pres> )
Symbol(87, 93, 5, <sg> )
Symbol(2, 98, 6, <s3p> )
Symbol(2, 104, 6, <ind> )
Symbol(29, 110, 2, | )
Symbol(3, 112, 4, #0# )
Symbol(2, 116, 5, "be" )
Symbol(60, 121, 8, <prevb> )
Symbol(2, 129, 2, + )
Symbol(2, 131, 7, "néz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 170, 2, | )
Symbol(8, 172, 6, #EOC# )
Symbol(10, 178, 4, $0$ )
Symbol(72, 182, 7, "<az>" )
Symbol(7, 189, 6, #BOC# )
Symbol(29, 195, 2, | )
Symbol(3, 197, 4, #0# )
Symbol(75, 201, 5, "az" )
Symbol(2, 206, 9, <predet> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 226, 2, | )
Symbol(3, 228, 4, #0# )
Symbol(75, 232, 5, "az" )
Symbol(57, 237, 6, <prn> )
Symbol(87, 243, 5, <sg> )
Symbol(55, 248, 6, <nom> )
Symbol(29, 254, 2, | )
Symbol(3, 256, 4, #0# )
Symbol(2, 260, 4, "a" )
Symbol(73, 264, 6, <det> )
Symbol(2, 270, 6, <def> )
Symbol(29, 276, 2, | )
Symbol(8, 278, 6, #EOC# )
Symbol(10, 284, 4, $0$ )
Symbol(2, 288, 11, "<asztal>" )
Symbol(7, 299, 6, #BOC# )
Symbol(29, 305, 2, | )
Symbol(3, 307, 4, #0# )
Symbol(2, 311, 9, "asztal" )
Symbol(15, 320, 4, <n> )
Symbol(87, 324, 5, <sg> )
Symbol(55, 329, 6, <nom> )
Symbol(29, 335, 2, | )
Symbol(8, 337, 6, #EOC# )
Symbol(10, 343, 4, $0$ )
Symbol(2, 347, 9, "<alá>" )
Symbol(7, 356, 6, #BOC# )
Symbol(29, 362, 2, | )
Symbol(3, 364, 4, #0# )
Symbol(62, 368, 7, "alá" )
Symbol(61, 375, 7, <post> )
Symbol(29, 382, 2, | )
Symbol(3, 384, 4, #0# )
Symbol(62, 388, 7, "alá" )
Symbol(60, 395, 8, <prevb> )
Symbol(29, 403, 2, | )
Symbol(8, 405, 6, #EOC# )
Symbol(10, 411, 4, $0$ )
Symbol(2, 415, 8, "<és>" )
Symbol(7, 423, 6, #BOC# )
Symbol(29, 429, 2, | )
Symbol(3, 431, 4, #0# )
Symbol(2, 435, 6, "és" )
Symbol(45, 441, 9, <cnjcoo> )
Symbol(29, 450, 2, | )
Symbol(8, 452, 6, #EOC# )
Symbol(10, 458, 4, $0$ )
Symbol(2, 462, 6, "<a>" )
Symbol(7, 468, 6, #BOC# )
Symbol(29, 474, 2, | )
Symbol(3, 476, 4, #0# )
Symbol(2, 480, 4, "a" )
Symbol(73, 484, 6, <det> )
Symbol(2, 490, 6, <def> )
Symbol(29, 496, 2, | )
Symbol(8, 498, 6, #EOC# )
Symbol(10, 504, 4, $0$ )
Symbol(2, 508, 12, "<székek>" )
Symbol(7, 520, 6, #BOC# )
Symbol(29, 526, 2, | )
Symbol(3, 528, 4, #0# )
Symbol(2, 532, 8, "szék" )
Symbol(15, 540, 4, <n> )
Symbol(2, 544, 5, <pl> )
Symbol(55, 549, 6, <nom> )
Symbol(29, 555, 2, | )
Symbol(8, 557, 6, #EOC# )
Symbol(10, 563, 4, $0$ )
Symbol(2, 567, 10, "<alám>" )
Symbol(7, 577, 6, #BOC# )
Symbol(29, 583, 2, | )
Symbol(3, 585, 4, #0# )
Symbol(2, 589, 6, "én" )
Symbol(57, 595, 6, <prn> )
Symbol(56, 601, 7, <pers> )
Symbol(61, 608, 7, <post> )
Symbol(2, 615, 5, <p1> )
Symbol(2, 620, 5, <mf> )
Symbol(87, 625, 5, <sg> )
Symbol(55, 630, 6, <nom> )
Symbol(29, 636, 2, | )
Symbol(8, 638, 6, #EOC# )
Symbol(10, 644, 4, $0$ )
Symbol(2, 648, 7, "<de>" )
Symbol(7, 655, 6, #BOC# )
Symbol(29, 661, 2, | )
Symbol(3, 663, 4, #0# )
Symbol(65, 667, 5, "de" )
Symbol(54, 672, 6, <adv> )
Symbol(29, 678, 2, | )
Symbol(3, 680, 4, #0# )
Symbol(65, 684, 5, "de" )
Symbol(45, 689, 9, <cnjcoo> )
Symbol(29, 698, 2, | )
Symbol(8, 700, 6, #EOC# )
Symbol(10, 706, 4, $0$ )
Symbol(2, 710, 11, "<Jancsi>" )
Symbol(7, 721, 6, #BOC# )
Symbol(29, 727, 2, | )
Symbol(3, 729, 4, #0# )
Symbol(2, 733, 9, "Jancsi" )
Symbol(16, 742, 5, <np> )
Symbol(87, 747, 5, <sg> )
Symbol(55, 752, 6, <nom> )
Symbol(29, 758, 2, | )
Symbol(8, 760, 6, #EOC# )
Symbol(10, 766, 4, $0$ )
Symbol(2, 770, 10, "<nincs>" )
Symbol(7, 780, 6, #BOC# )
Symbol(29, 786, 2, | )
Symbol(3, 788, 4, #0# )
Symbol(34, 792, 8, "nincs" )
Symbol(48, 800, 8, <vbser> )
Symbol(37, 808, 7, <pres> )
Symbol(87, 815, 5, <sg> )
Symbol(2, 820, 6, <s3p> )
Symbol(2, 826, 6, <ind> )
Symbol(29, 832, 2, | )
Symbol(8, 834, 6, #EOC# )
Symbol(10, 840, 4, $0$ )
Symbol(2, 844, 8, "<ott>" )
Symbol(7, 852, 6, #BOC# )
Symbol(29, 858, 2, | )
Symbol(3, 860, 4, #0# )
Symbol(2, 864, 6, "ott" )
Symbol(60, 870, 8, <prevb> )
Symbol(29, 878, 2, | )
Symbol(3, 880, 4, #0# )
Symbol(2, 884, 6, "ott" )
Symbol(54, 890, 6, <adv> )
Symbol(29, 896, 2, | )
Symbol(8, 898, 6, #EOC# )
Symbol(10, 904, 4, $0$ )
Symbol(2, 908, 6, "<.>" )
Symbol(7, 914, 6, #BOC# )
Symbol(29, 920, 2, | )
Symbol(3, 922, 4, #0# )
Symbol(2, 926, 4, "." )
Symbol(64, 930, 7, <sent> )
Symbol(2, 937, 6, <<<<> )
Symbol(29, 943, 2, | )
Symbol(8, 945, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 62 61 29 3 62 60 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 2 55 29 8 10 2 7 29 3 2 57 56 61 2 2 87 55 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 2 60 29 3 2 54 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 33, signum = 29, q = 8, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 33, signum = 29, q = 8, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 33, signum = 29, q = 8, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 19
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 29, signum = 8, q = 7, out = 30
trans_offset 37, signum = 10, q = 10, out = 5
trans_offset 38, signum = 2, q = 11, out = 9
trans_offset 39, signum = 7, q = 11, out = 11
trans_offset 44, signum = 29, q = 12, out = 15
trans_offset 45, signum = 3, q = 13, out = 48
trans_offset 51, signum = 62, q = 14, out = 50
trans_offset 56, signum = 61, q = 15, out = 21
trans_offset 81, signum = 29, q = 20, out = 22
trans_offset 110, signum = 3, q = 28, out = 113
trans_offset 151, signum = 62, q = 36, out = 130
trans_offset 146, signum = 2, q = 36, out = 149
trans_offset 149, signum = 29, q = 36, out = 154
trans_offset 111, signum = 8, q = 28, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 15, q = 4, out = 19
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 29, signum = 8, q = 7, out = 30
trans_offset 37, signum = 10, q = 10, out = 5
trans_offset 38, signum = 2, q = 11, out = 9
trans_offset 39, signum = 7, q = 11, out = 11
trans_offset 44, signum = 29, q = 12, out = 15
trans_offset 45, signum = 3, q = 13, out = 48
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 50, signum = 61, q = 14, out = 21
trans_offset 64, signum = 2, q = 17, out = 17
trans_offset 64, signum = 2, q = 17, out = 17
trans_offset 64, signum = 2, q = 17, out = 17
trans_offset 64, signum = 2, q = 17, out = 17
trans_offset 67, signum = 29, q = 17, out = 22
trans_offset 95, signum = 8, q = 24, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 33, signum = 29, q = 8, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 16, signum = 16, q = 4, out = 20
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 20, signum = 2, q = 5, out = 17
trans_offset 23, signum = 29, q = 5, out = 22
trans_offset 29, signum = 8, q = 7, out = 30
trans_offset 37, signum = 10, q = 10, out = 5
trans_offset 38, signum = 2, q = 11, out = 9
trans_offset 39, signum = 7, q = 11, out = 11
trans_offset 44, signum = 29, q = 12, out = 15
trans_offset 45, signum = 3, q = 13, out = 48
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 46, signum = 2, q = 14, out = 49
trans_offset 49, signum = 29, q = 14, out = 54
trans_offset 71, signum = 8, q = 18, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 26, signum = 3, q = 6, out = 16
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 30, signum = 2, q = 8, out = 17
trans_offset 33, signum = 29, q = 8, out = 22
trans_offset 27, signum = 8, q = 6, out = 30
trans_offset 36, signum = 10, q = 9, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 11
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 17, signum = 29, q = 4, out = 22
trans_offset 27, signum = 8, q = 6, out = 30

Intermediate is(184): 
5 9 11 15 16 17 17 22 30 5 9 11 15 16 17 17 17 17 17 17 22 16 17 17 17 17 17 17 17 17 17 22 30 5 9 11 15 16 17 17 17 17 22 16 17 17 17 17 22 16 17 17 17 22 30 5 9 11 15 16 17 19 17 17 22 30 5 9 11 15 48 50 21 22 113 130 149 154 30 5 9 11 15 16 17 17 22 30 5 9 11 15 16 17 17 17 22 30 5 9 11 15 16 17 19 17 17 22 30 5 9 11 15 48 49 49 49 21 17 17 17 17 22 30 5 9 11 15 16 17 17 22 16 17 17 22 30 5 9 11 15 16 17 20 17 17 22 30 5 9 11 15 48 49 49 49 49 49 49 54 30 5 9 11 15 16 17 17 22 16 17 17 22 30 5 9 11 15 16 17 17 17 22 30 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 55, q = 4, out = 29
trans_offset 116, q = 8, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 10, q = 2, out = 16
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 55, q = 4, out = 29
trans_offset 116, q = 8, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 11, q = 2, out = 61
trans_offset 67, q = 5, out = 2
trans_offset 67, q = 5, out = 2
trans_offset 67, q = 5, out = 2
trans_offset 66, q = 5, out = 3
trans_offset 139, q = 9, out = 29
trans_offset 182, q = 13, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 5, q = 1, out = 0
trans_offset 27, q = 2, out = 0
trans_offset 24, q = 2, out = 0
trans_offset 46, q = 3, out = 0
trans_offset 85, q = 6, out = 29
trans_offset 151, q = 10, out = 61
trans_offset 98, q = 7, out = 62
trans_offset 96, q = 7, out = 3
trans_offset 170, q = 11, out = 29
trans_offset 207, q = 14, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 55, q = 4, out = 29
trans_offset 116, q = 8, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 55, q = 4, out = 29
trans_offset 116, q = 8, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 55, q = 4, out = 29
trans_offset 116, q = 8, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10
trans_offset 237, q = 15, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 54, q = 4, out = 29
trans_offset 114, q = 8, out = 7
trans_offset 177, q = 12, out = 2
trans_offset 176, q = 12, out = 10

Output is(180): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Benéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "benéz" )
Symbol(38, 78, 8, <vblex> )
Symbol(37, 86, 7, <pres> )
Symbol(87, 93, 5, <sg> )
Symbol(2, 98, 6, <s3p> )
Symbol(2, 104, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 116, 5, "be" )
Symbol(60, 121, 8, <prevb> )
Symbol(2, 129, 2, + )
Symbol(2, 131, 7, "néz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 182, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 201, 5, "az" )
Symbol(2, 206, 9, <predet> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 232, 5, "az" )
Symbol(57, 237, 6, <prn> )
Symbol(87, 243, 5, <sg> )
Symbol(55, 248, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 260, 4, "a" )
Symbol(73, 264, 6, <det> )
Symbol(2, 270, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 288, 11, "<asztal>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 9, "asztal" )
Symbol(15, 0, 0, )
Symbol(87, 324, 5, <sg> )
Symbol(55, 329, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 347, 9, "<alá>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(62, 0, 0, )
Symbol(61, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 415, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 435, 6, "és" )
Symbol(45, 441, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 462, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 480, 4, "a" )
Symbol(73, 484, 6, <det> )
Symbol(2, 490, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 508, 12, "<székek>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 532, 8, "szék" )
Symbol(15, 0, 0, )
Symbol(2, 544, 5, <pl> )
Symbol(55, 549, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 567, 10, "<alám>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 589, 6, "én" )
Symbol(57, 595, 6, <prn> )
Symbol(56, 601, 7, <pers> )
Symbol(61, 0, 0, )
Symbol(2, 615, 5, <p1> )
Symbol(2, 620, 5, <mf> )
Symbol(87, 625, 5, <sg> )
Symbol(55, 630, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 648, 7, "<de>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 667, 5, "de" )
Symbol(54, 672, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 684, 5, "de" )
Symbol(45, 689, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 710, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 733, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 747, 5, <sg> )
Symbol(55, 752, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 770, 10, "<nincs>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(34, 792, 8, "nincs" )
Symbol(48, 800, 8, <vbser> )
Symbol(37, 808, 7, <pres> )
Symbol(87, 815, 5, <sg> )
Symbol(2, 820, 6, <s3p> )
Symbol(2, 826, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 844, 8, "<ott>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 864, 6, "ott" )
Symbol(60, 870, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 884, 6, "ott" )
Symbol(54, 890, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 908, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 926, 4, "." )
Symbol(64, 930, 7, <sent> )
Symbol(2, 937, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 62 61 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 2 55 29 8 10 2 7 29 3 2 57 56 61 2 2 87 55 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 2 60 29 3 2 54 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_198_T_1


LRS T1:
Name: R_1_198_T_1
arity: 2
arccount: 183
statecount: 45
linecount: 184
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 65 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 53 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 54 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 65 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 53 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 54 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 53 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 3 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 7
  in: 2 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 7
  in: 53 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 65 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 54 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 10
  in: 3 -- 
  out: 14 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 11
  in: 2 -- 
  out: 40 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 53 -- 
  out: 42 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 12
  in: 2 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 53 -- 
  out: 17 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 12
  in: 54 -- 
  out: 18 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 12
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 13
  in: 2 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 13
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 13
  in: 53 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 65 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 2 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 53 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 3 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 32 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 53 -- 
  out: 34 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 54 -- 
  out: 35 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 10 -- 
  out: 5 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 2 -- 
  out: 40 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 53 -- 
  out: 42 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 2 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 7 -- 
  out: 10 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 53 -- 
  out: 11 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 54 -- 
  out: 12 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 65 -- 
  out: 9 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 29 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 21
  in: 3 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 22
  in: 2 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 22
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 22
  in: 54 -- 
  out: 18 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 22
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 2 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 23
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 23
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 23
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 2 -- 
  out: 15 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 24
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 24
  in: 54 -- 
  out: 18 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 24
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 2 -- 
  out: 20 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 25
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 25
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 25
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 2 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 26
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 26
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 26
  in: 65 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 27
  in: 3 -- 
  out: 25 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 27
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 2 -- 
  out: 27 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 29 -- 
  out: 31 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 28
  in: 65 -- 
  out: 28 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 2 -- 
  out: 32 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 54 -- 
  out: 35 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 14 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 40 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 32
  in: 2 -- 
  out: 32 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 32
  in: 54 -- 
  out: 35 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 32
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 33
  in: 2 -- 
  out: 15 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 33
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 33
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 33
  in: 54 -- 
  out: 18 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 33
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 2 -- 
  out: 40 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 34
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 34
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 34
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 34
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 2 -- 
  out: 50 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 35
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 35
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 35
  in: 65 -- 
  out: 51 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 2 -- 
  out: 20 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 36
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 36
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 37
  in: 2 -- 
  out: 15 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 37
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 37
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 37
  in: 54 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 37
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 2 -- 
  out: 50 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 38
  in: 29 -- 
  out: 54 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 38
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 38
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 38
  in: 65 -- 
  out: 51 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 39
  in: 2 -- 
  out: 20 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 39
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 39
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 39
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 39
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 40
  in: 3 -- 
  out: 25 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 40
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 41
  in: 2 -- 
  out: 32 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 41
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 41
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 41
  in: 54 -- 
  out: 35 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 41
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 42
  in: 2 -- 
  out: 40 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 42
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 42
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 42
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 42
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 43
  in: 2 -- 
  out: 32 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 43
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 43
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 43
  in: 54 -- 
  out: 35 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 43
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 44
  in: 2 -- 
  out: 40 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 44
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 44
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 44
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 44
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(183):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(180): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Benéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "benéz" )
Symbol(38, 78, 8, <vblex> )
Symbol(37, 86, 7, <pres> )
Symbol(87, 93, 5, <sg> )
Symbol(2, 98, 6, <s3p> )
Symbol(2, 104, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 116, 5, "be" )
Symbol(60, 121, 8, <prevb> )
Symbol(2, 129, 2, + )
Symbol(2, 131, 7, "néz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 182, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 201, 5, "az" )
Symbol(2, 206, 9, <predet> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 232, 5, "az" )
Symbol(57, 237, 6, <prn> )
Symbol(87, 243, 5, <sg> )
Symbol(55, 248, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 260, 4, "a" )
Symbol(73, 264, 6, <det> )
Symbol(2, 270, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 288, 11, "<asztal>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 9, "asztal" )
Symbol(15, 0, 0, )
Symbol(87, 324, 5, <sg> )
Symbol(55, 329, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 347, 9, "<alá>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(62, 0, 0, )
Symbol(61, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 415, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 435, 6, "és" )
Symbol(45, 441, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 462, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 480, 4, "a" )
Symbol(73, 484, 6, <det> )
Symbol(2, 490, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 508, 12, "<székek>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 532, 8, "szék" )
Symbol(15, 0, 0, )
Symbol(2, 544, 5, <pl> )
Symbol(55, 549, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 567, 10, "<alám>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 589, 6, "én" )
Symbol(57, 595, 6, <prn> )
Symbol(56, 601, 7, <pers> )
Symbol(61, 0, 0, )
Symbol(2, 615, 5, <p1> )
Symbol(2, 620, 5, <mf> )
Symbol(87, 625, 5, <sg> )
Symbol(55, 630, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 648, 7, "<de>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 667, 5, "de" )
Symbol(54, 672, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 684, 5, "de" )
Symbol(45, 689, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 710, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 733, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 747, 5, <sg> )
Symbol(55, 752, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 770, 10, "<nincs>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(34, 792, 8, "nincs" )
Symbol(48, 800, 8, <vbser> )
Symbol(37, 808, 7, <pres> )
Symbol(87, 815, 5, <sg> )
Symbol(2, 820, 6, <s3p> )
Symbol(2, 826, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 844, 8, "<ott>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 864, 6, "ott" )
Symbol(60, 870, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 884, 6, "ott" )
Symbol(54, 890, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 908, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 926, 4, "." )
Symbol(64, 930, 7, <sent> )
Symbol(2, 937, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 62 61 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 2 55 29 8 10 2 7 29 3 2 57 56 61 2 2 87 55 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 2 60 29 3 2 54 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 16, signum = 65, q = 4, out = 16
trans_offset 20, signum = 54, q = 5, out = 23
trans_offset 25, signum = 29, q = 7, out = 31
trans_offset 35, signum = 3, q = 10, out = 14
trans_offset 46, signum = 65, q = 12, out = 16
trans_offset 52, signum = 2, q = 14, out = 20
trans_offset 53, signum = 29, q = 14, out = 19
trans_offset 58, signum = 8, q = 15, out = 26
trans_offset 64, signum = 10, q = 17, out = 5
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 10
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 32, signum = 54, q = 8, out = 35
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26

Intermediate is(180): 
5 8 10 13 14 15 15 19 26 5 8 10 13 14 15 15 15 15 15 15 19 25 32 32 32 32 32 32 32 32 32 19 26 5 8 10 13 14 15 15 15 15 19 25 32 32 32 32 19 25 32 32 32 19 26 5 8 10 13 14 15 15 15 15 19 26 5 8 10 13 14 15 15 19 26 5 8 10 13 14 15 15 19 26 5 8 10 13 14 15 15 15 19 26 5 8 10 13 14 15 15 15 15 19 26 5 8 10 13 14 15 15 15 15 15 15 15 15 19 26 5 8 10 13 14 16 23 31 14 16 20 19 26 5 8 10 13 14 15 15 15 15 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 19 25 32 35 19 26 5 8 10 13 14 15 15 15 19 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 19, q = 2, out = 54
trans_offset 64, q = 5, out = 2
trans_offset 60, q = 5, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 76, q = 6, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 145, q = 10, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 6, q = 2, out = 65
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 0
trans_offset 82, q = 6, out = 0
trans_offset 174, q = 12, out = 0
trans_offset 248, q = 17, out = 0
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 87, q = 6, out = 2
trans_offset 157, q = 10, out = 2
trans_offset 157, q = 10, out = 2
trans_offset 157, q = 10, out = 2
trans_offset 153, q = 10, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 76, q = 6, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 145, q = 10, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 76, q = 6, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 145, q = 10, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10

Output is(176): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Benéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "benéz" )
Symbol(38, 78, 8, <vblex> )
Symbol(37, 86, 7, <pres> )
Symbol(87, 93, 5, <sg> )
Symbol(2, 98, 6, <s3p> )
Symbol(2, 104, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 116, 5, "be" )
Symbol(60, 121, 8, <prevb> )
Symbol(2, 129, 2, + )
Symbol(2, 131, 7, "néz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 182, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 201, 5, "az" )
Symbol(2, 206, 9, <predet> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 232, 5, "az" )
Symbol(57, 237, 6, <prn> )
Symbol(87, 243, 5, <sg> )
Symbol(55, 248, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 260, 4, "a" )
Symbol(73, 264, 6, <det> )
Symbol(2, 270, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 288, 11, "<asztal>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 9, "asztal" )
Symbol(15, 0, 0, )
Symbol(87, 324, 5, <sg> )
Symbol(55, 329, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 347, 9, "<alá>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(62, 0, 0, )
Symbol(61, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 415, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 435, 6, "és" )
Symbol(45, 441, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 462, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 480, 4, "a" )
Symbol(73, 484, 6, <det> )
Symbol(2, 490, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 508, 12, "<székek>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 532, 8, "szék" )
Symbol(15, 0, 0, )
Symbol(2, 544, 5, <pl> )
Symbol(55, 549, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 567, 10, "<alám>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 589, 6, "én" )
Symbol(57, 595, 6, <prn> )
Symbol(56, 601, 7, <pers> )
Symbol(61, 0, 0, )
Symbol(2, 615, 5, <p1> )
Symbol(2, 620, 5, <mf> )
Symbol(87, 625, 5, <sg> )
Symbol(55, 630, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 648, 7, "<de>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 689, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 710, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 733, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 747, 5, <sg> )
Symbol(55, 752, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 770, 10, "<nincs>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(34, 792, 8, "nincs" )
Symbol(48, 800, 8, <vbser> )
Symbol(37, 808, 7, <pres> )
Symbol(87, 815, 5, <sg> )
Symbol(2, 820, 6, <s3p> )
Symbol(2, 826, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 844, 8, "<ott>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 864, 6, "ott" )
Symbol(60, 870, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 884, 6, "ott" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 908, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 926, 4, "." )
Symbol(64, 930, 7, <sent> )
Symbol(2, 937, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 62 61 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 2 55 29 8 10 2 7 29 3 2 57 56 61 2 2 87 55 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 2 60 29 3 2 54 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_43_T_1


LRS T1:
Name: R_1_43_T_1
arity: 2
arccount: 152
statecount: 39
linecount: 153
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 72 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 73 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 2 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 2
  in: 7 -- 
  out: 11 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 2
  in: 15 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 2
  in: 53 -- 
  out: 12 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 72 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 2
  in: 73 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 3
  in: 2 -- 
  out: 9 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 3
  in: 7 -- 
  out: 11 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 3
  in: 15 -- 
  out: 14 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 3
  in: 53 -- 
  out: 12 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 3
  in: 72 -- 
  out: 10 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 3
  in: 73 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 29 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 29 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 3 -- 
  out: 30 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 8
  in: 2 -- 
  out: 31 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 36 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 72 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 73 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 2 -- 
  out: 37 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 9
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 9
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 9
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 9
  in: 72 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 9
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 10
  in: 3 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 10
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 11
  in: 2 -- 
  out: 31 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 11
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 29 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 72 -- 
  out: 32 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 12
  in: 3 -- 
  out: 30 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 12
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 14
  in: 3 -- 
  out: 54 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 15
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 15
  in: 29 -- 
  out: 42 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 15
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 72 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 62 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 72 -- 
  out: 63 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 16
  in: 73 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 17
  in: 2 -- 
  out: 31 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 17
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 17
  in: 29 -- 
  out: 36 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 17
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 17
  in: 72 -- 
  out: 32 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 17
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 18
  in: 3 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 18
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 2 -- 
  out: 62 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 19
  in: 29 -- 
  out: 67 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 19
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 19
  in: 72 -- 
  out: 63 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 19
  in: 73 -- 
  out: 34 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 20
  in: 10 -- 
  out: 5 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 21
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 21
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 21
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 21
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 21
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 21
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 22
  in: 2 -- 
  out: 9 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 22
  in: 7 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 22
  in: 15 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 22
  in: 53 -- 
  out: 12 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 22
  in: 72 -- 
  out: 10 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 22
  in: 73 -- 
  out: 13 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 23
  in: 2 -- 
  out: 9 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 23
  in: 7 -- 
  out: 11 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 23
  in: 15 -- 
  out: 14 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 23
  in: 53 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 23
  in: 72 -- 
  out: 10 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 23
  in: 73 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 24
  in: 29 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 25
  in: 29 -- 
  out: 27 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 27
  in: 3 -- 
  out: 30 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 2 -- 
  out: 31 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 15 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 29 -- 
  out: 36 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 53 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 72 -- 
  out: 32 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 73 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 2 -- 
  out: 37 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 15 -- 
  out: 41 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 39 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 72 -- 
  out: 38 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 31 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 15 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 29 -- 
  out: 36 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 53 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 72 -- 
  out: 32 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 31
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 3 -- 
  out: 30 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 3 -- 
  out: 54 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 8 -- 
  out: 44 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 34
  in: 2 -- 
  out: 37 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 34
  in: 15 -- 
  out: 41 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 29 -- 
  out: 42 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 53 -- 
  out: 39 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 72 -- 
  out: 38 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 35
  in: 2 -- 
  out: 62 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 35
  in: 15 -- 
  out: 66 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 35
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 35
  in: 53 -- 
  out: 64 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 72 -- 
  out: 63 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 73 -- 
  out: 34 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 36
  in: 2 -- 
  out: 31 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 36
  in: 15 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 36
  in: 29 -- 
  out: 36 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 53 -- 
  out: 33 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 72 -- 
  out: 32 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 37
  in: 3 -- 
  out: 54 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 37
  in: 8 -- 
  out: 44 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 38
  in: 2 -- 
  out: 62 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 38
  in: 15 -- 
  out: 66 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 38
  in: 29 -- 
  out: 67 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 38
  in: 53 -- 
  out: 64 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 38
  in: 72 -- 
  out: 63 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 73 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(152):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(176): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Benéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "benéz" )
Symbol(38, 78, 8, <vblex> )
Symbol(37, 86, 7, <pres> )
Symbol(87, 93, 5, <sg> )
Symbol(2, 98, 6, <s3p> )
Symbol(2, 104, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 116, 5, "be" )
Symbol(60, 121, 8, <prevb> )
Symbol(2, 129, 2, + )
Symbol(2, 131, 7, "néz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 182, 7, "<az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 201, 5, "az" )
Symbol(2, 206, 9, <predet> )
Symbol(87, 215, 5, <sg> )
Symbol(55, 220, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 232, 5, "az" )
Symbol(57, 237, 6, <prn> )
Symbol(87, 243, 5, <sg> )
Symbol(55, 248, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 260, 4, "a" )
Symbol(73, 264, 6, <det> )
Symbol(2, 270, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 288, 11, "<asztal>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 9, "asztal" )
Symbol(15, 0, 0, )
Symbol(87, 324, 5, <sg> )
Symbol(55, 329, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 347, 9, "<alá>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(62, 0, 0, )
Symbol(61, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 415, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 435, 6, "és" )
Symbol(45, 441, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 462, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 480, 4, "a" )
Symbol(73, 484, 6, <det> )
Symbol(2, 490, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 508, 12, "<székek>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 532, 8, "szék" )
Symbol(15, 0, 0, )
Symbol(2, 544, 5, <pl> )
Symbol(55, 549, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 567, 10, "<alám>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 589, 6, "én" )
Symbol(57, 595, 6, <prn> )
Symbol(56, 601, 7, <pers> )
Symbol(61, 0, 0, )
Symbol(2, 615, 5, <p1> )
Symbol(2, 620, 5, <mf> )
Symbol(87, 625, 5, <sg> )
Symbol(55, 630, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 648, 7, "<de>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 689, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 710, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 733, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 747, 5, <sg> )
Symbol(55, 752, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 770, 10, "<nincs>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(34, 792, 8, "nincs" )
Symbol(48, 800, 8, <vbser> )
Symbol(37, 808, 7, <pres> )
Symbol(87, 815, 5, <sg> )
Symbol(2, 820, 6, <s3p> )
Symbol(2, 826, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 844, 8, "<ott>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 864, 6, "ott" )
Symbol(60, 870, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 884, 6, "ott" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 908, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 926, 4, "." )
Symbol(64, 930, 7, <sent> )
Symbol(2, 937, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 62 61 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 2 55 29 8 10 2 7 29 3 2 57 56 61 2 2 87 55 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 2 60 29 3 2 54 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 10, signum = 72, q = 1, out = 10
trans_offset 19, signum = 7, q = 3, out = 11
trans_offset 25, signum = 29, q = 5, out = 27
trans_offset 27, signum = 3, q = 7, out = 30
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 34, signum = 2, q = 9, out = 37
trans_offset 36, signum = 29, q = 9, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 55, signum = 29, q = 15, out = 42
trans_offset 48, signum = 3, q = 12, out = 30
trans_offset 53, signum = 2, q = 15, out = 37
trans_offset 58, signum = 73, q = 15, out = 34
trans_offset 65, signum = 2, q = 17, out = 31
trans_offset 67, signum = 29, q = 17, out = 36
trans_offset 72, signum = 8, q = 18, out = 44
trans_offset 79, signum = 10, q = 20, out = 5
trans_offset 80, signum = 2, q = 21, out = 9
trans_offset 87, signum = 7, q = 22, out = 11
trans_offset 98, signum = 29, q = 24, out = 27
trans_offset 100, signum = 3, q = 26, out = 29
trans_offset 102, signum = 2, q = 28, out = 31
trans_offset 103, signum = 15, q = 28, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 33, signum = 73, q = 8, out = 34
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 29, signum = 15, q = 8, out = 35
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 40, signum = 3, q = 10, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44
trans_offset 50, signum = 10, q = 13, out = 5
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 13, signum = 7, q = 2, out = 11
trans_offset 24, signum = 29, q = 4, out = 27
trans_offset 26, signum = 3, q = 6, out = 29
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 28, signum = 2, q = 8, out = 31
trans_offset 30, signum = 29, q = 8, out = 36
trans_offset 41, signum = 8, q = 10, out = 44

Intermediate is(176): 
5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 29 31 31 31 31 31 31 31 31 31 36 44 5 10 11 27 30 37 37 37 37 42 30 37 37 37 37 42 30 37 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 34 31 36 44 5 9 11 27 29 31 35 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 31 31 36 44 5 9 11 27 29 31 31 36 44 5 9 11 27 29 31 31 31 31 36 44 5 9 11 27 29 31 31 31 31 31 31 36 44 5 9 11 27 29 31 31 36 29 31 31 36 44 5 9 11 27 29 31 31 31 36 44 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 148, q = 17, out = 2
trans_offset 146, q = 17, out = 3
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 10, q = 2, out = 15
trans_offset 26, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 57, q = 6, out = 29
trans_offset 67, q = 8, out = 7
trans_offset 91, q = 10, out = 2
trans_offset 90, q = 10, out = 10
trans_offset 106, q = 12, out = 8
trans_offset 107, q = 13, out = 29
trans_offset 112, q = 14, out = 2
trans_offset 115, q = 14, out = 73
trans_offset 153, q = 17, out = 2
trans_offset 147, q = 17, out = 3
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 201, q = 21, out = 0
trans_offset 232, q = 24, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 265, q = 26, out = 0
trans_offset 259, q = 26, out = 0
trans_offset 199, q = 21, out = 29
trans_offset 224, q = 24, out = 7
trans_offset 63, q = 7, out = 72
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 43, q = 5, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 89, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 2
trans_offset 6, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(164): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Benéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 69, 9, "benéz" )
Symbol(38, 78, 8, <vblex> )
Symbol(37, 86, 7, <pres> )
Symbol(87, 93, 5, <sg> )
Symbol(2, 98, 6, <s3p> )
Symbol(2, 104, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 116, 5, "be" )
Symbol(60, 121, 8, <prevb> )
Symbol(2, 129, 2, + )
Symbol(2, 131, 7, "néz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(72, 0, 0, )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 260, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 270, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 288, 11, "<asztal>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 9, "asztal" )
Symbol(15, 0, 0, )
Symbol(87, 324, 5, <sg> )
Symbol(55, 329, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 347, 9, "<alá>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(62, 0, 0, )
Symbol(61, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 415, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 435, 6, "és" )
Symbol(45, 441, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 462, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 480, 4, "a" )
Symbol(73, 0, 0, )
Symbol(2, 490, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 508, 12, "<székek>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 532, 8, "szék" )
Symbol(15, 0, 0, )
Symbol(2, 544, 5, <pl> )
Symbol(55, 549, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 567, 10, "<alám>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 589, 6, "én" )
Symbol(57, 595, 6, <prn> )
Symbol(56, 601, 7, <pers> )
Symbol(61, 0, 0, )
Symbol(2, 615, 5, <p1> )
Symbol(2, 620, 5, <mf> )
Symbol(87, 625, 5, <sg> )
Symbol(55, 630, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 648, 7, "<de>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 689, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 710, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 733, 9, "Jancsi" )
Symbol(16, 0, 0, )
Symbol(87, 747, 5, <sg> )
Symbol(55, 752, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 770, 10, "<nincs>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(34, 792, 8, "nincs" )
Symbol(48, 800, 8, <vbser> )
Symbol(37, 808, 7, <pres> )
Symbol(87, 815, 5, <sg> )
Symbol(2, 820, 6, <s3p> )
Symbol(2, 826, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 844, 8, "<ott>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 864, 6, "ott" )
Symbol(60, 870, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 884, 6, "ott" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 908, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 926, 4, "." )
Symbol(64, 930, 7, <sent> )
Symbol(2, 937, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 72 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 62 61 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 2 55 29 8 10 2 7 29 3 2 57 56 61 2 2 87 55 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 34 48 37 87 2 2 29 8 10 2 7 29 3 2 60 29 3 2 54 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Mindenhová>" #BOC# | #0# "mindenhová" <adv> | #EOC# $0$ "<benéz>" #BOC# | #0# "benéz" <vblex> <pres> <sg> <s3p> <ind> | #0# "be" <prevb> + "néz" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<de>" #BOC# | #0# "de" <adv> | #0# "de" <cnjcoo> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<találja>" #BOC# | #0# "talál" <vblex> <pres> <sg> <s3p> <def> | #0# "talál" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<Jancsit>" #BOC# | #0# "Jancsi" <np> <sg> <acc> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(119): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 16, "<Mindenhová>" )
Symbol(7, 62, 6, #BOC# )
Symbol(29, 68, 2, | )
Symbol(3, 70, 4, #0# )
Symbol(2, 74, 14, "mindenhová" )
Symbol(54, 88, 6, <adv> )
Symbol(29, 94, 2, | )
Symbol(8, 96, 6, #EOC# )
Symbol(10, 102, 4, $0$ )
Symbol(2, 106, 11, "<benéz>" )
Symbol(7, 117, 6, #BOC# )
Symbol(29, 123, 2, | )
Symbol(3, 125, 4, #0# )
Symbol(2, 129, 9, "benéz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 170, 2, | )
Symbol(3, 172, 4, #0# )
Symbol(2, 176, 5, "be" )
Symbol(60, 181, 8, <prevb> )
Symbol(2, 189, 2, + )
Symbol(2, 191, 7, "néz" )
Symbol(38, 198, 8, <vblex> )
Symbol(37, 206, 7, <pres> )
Symbol(87, 213, 5, <sg> )
Symbol(2, 218, 6, <s3p> )
Symbol(2, 224, 6, <ind> )
Symbol(29, 230, 2, | )
Symbol(8, 232, 6, #EOC# )
Symbol(10, 238, 4, $0$ )
Symbol(2, 242, 6, "<,>" )
Symbol(7, 248, 6, #BOC# )
Symbol(29, 254, 2, | )
Symbol(3, 256, 4, #0# )
Symbol(2, 260, 4, "," )
Symbol(44, 264, 5, <cm> )
Symbol(29, 269, 2, | )
Symbol(8, 271, 6, #EOC# )
Symbol(10, 277, 4, $0$ )
Symbol(2, 281, 7, "<de>" )
Symbol(7, 288, 6, #BOC# )
Symbol(29, 294, 2, | )
Symbol(3, 296, 4, #0# )
Symbol(65, 300, 5, "de" )
Symbol(54, 305, 6, <adv> )
Symbol(29, 311, 2, | )
Symbol(3, 313, 4, #0# )
Symbol(65, 317, 5, "de" )
Symbol(45, 322, 9, <cnjcoo> )
Symbol(29, 331, 2, | )
Symbol(8, 333, 6, #EOC# )
Symbol(10, 339, 4, $0$ )
Symbol(2, 343, 8, "<nem>" )
Symbol(7, 351, 6, #BOC# )
Symbol(29, 357, 2, | )
Symbol(3, 359, 4, #0# )
Symbol(2, 363, 6, "nem" )
Symbol(91, 369, 5, <ij> )
Symbol(29, 374, 2, | )
Symbol(3, 376, 4, #0# )
Symbol(2, 380, 6, "nem" )
Symbol(54, 386, 6, <adv> )
Symbol(29, 392, 2, | )
Symbol(8, 394, 6, #EOC# )
Symbol(10, 400, 4, $0$ )
Symbol(2, 404, 13, "<találja>" )
Symbol(7, 417, 6, #BOC# )
Symbol(29, 423, 2, | )
Symbol(3, 425, 4, #0# )
Symbol(2, 429, 9, "talál" )
Symbol(38, 438, 8, <vblex> )
Symbol(37, 446, 7, <pres> )
Symbol(87, 453, 5, <sg> )
Symbol(2, 458, 6, <s3p> )
Symbol(2, 464, 6, <def> )
Symbol(29, 470, 2, | )
Symbol(3, 472, 4, #0# )
Symbol(2, 476, 9, "talál" )
Symbol(38, 485, 8, <vblex> )
Symbol(40, 493, 6, <pis> )
Symbol(87, 499, 5, <sg> )
Symbol(2, 504, 6, <s3p> )
Symbol(2, 510, 6, <def> )
Symbol(29, 516, 2, | )
Symbol(8, 518, 6, #EOC# )
Symbol(10, 524, 4, $0$ )
Symbol(2, 528, 12, "<Jancsit>" )
Symbol(7, 540, 6, #BOC# )
Symbol(29, 546, 2, | )
Symbol(3, 548, 4, #0# )
Symbol(2, 552, 9, "Jancsi" )
Symbol(16, 561, 5, <np> )
Symbol(87, 566, 5, <sg> )
Symbol(71, 571, 6, <acc> )
Symbol(29, 577, 2, | )
Symbol(8, 579, 6, #EOC# )
Symbol(10, 585, 4, $0$ )
Symbol(2, 589, 6, "<.>" )
Symbol(7, 595, 6, #BOC# )
Symbol(29, 601, 2, | )
Symbol(3, 603, 4, #0# )
Symbol(2, 607, 4, "." )
Symbol(64, 611, 7, <sent> )
Symbol(2, 618, 6, <<<<> )
Symbol(29, 624, 2, | )
Symbol(8, 626, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(119): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 25 25 25 25 25 25 25 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 21 25 25 16 22 5 7 9 11 12 13 13 16 21 25 25 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(111): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 16, "<Mindenhová>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 74, 14, "mindenhová" )
Symbol(54, 88, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 11, "<benéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 129, 9, "benéz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 176, 5, "be" )
Symbol(60, 181, 8, <prevb> )
Symbol(2, 189, 2, + )
Symbol(2, 191, 7, "néz" )
Symbol(38, 198, 8, <vblex> )
Symbol(37, 206, 7, <pres> )
Symbol(87, 213, 5, <sg> )
Symbol(2, 218, 6, <s3p> )
Symbol(2, 224, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 242, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 260, 4, "," )
Symbol(44, 264, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 281, 7, "<de>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 300, 5, "de" )
Symbol(54, 305, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 317, 5, "de" )
Symbol(45, 322, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 343, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 363, 6, "nem" )
Symbol(91, 369, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 380, 6, "nem" )
Symbol(54, 386, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 404, 13, "<találja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 429, 9, "talál" )
Symbol(38, 438, 8, <vblex> )
Symbol(37, 446, 7, <pres> )
Symbol(87, 453, 5, <sg> )
Symbol(2, 458, 6, <s3p> )
Symbol(2, 464, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 528, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 552, 9, "Jancsi" )
Symbol(16, 561, 5, <np> )
Symbol(87, 566, 5, <sg> )
Symbol(71, 571, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 589, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 607, 4, "." )
Symbol(64, 611, 7, <sent> )
Symbol(2, 618, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_1_198_T_1


LRS T1:
Name: R_1_198_T_1
arity: 2
arccount: 183
statecount: 45
linecount: 184
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 53 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 65 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 53 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 54 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 65 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 53 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 54 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 53 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 65 -- 
  out: 16 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 3 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 7
  in: 2 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 7
  in: 53 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 65 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 53 -- 
  out: 34 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 54 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 10
  in: 3 -- 
  out: 14 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 11
  in: 2 -- 
  out: 40 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 53 -- 
  out: 42 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 65 -- 
  out: 33 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 12
  in: 2 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 53 -- 
  out: 17 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 12
  in: 54 -- 
  out: 18 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 12
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 13
  in: 2 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 13
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 13
  in: 53 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 65 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 2 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 53 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 54 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 65 -- 
  out: 16 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 3 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 32 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 53 -- 
  out: 34 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 54 -- 
  out: 35 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 10 -- 
  out: 5 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 2 -- 
  out: 40 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 53 -- 
  out: 42 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 54 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 65 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 2 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 7 -- 
  out: 10 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 53 -- 
  out: 11 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 54 -- 
  out: 12 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 65 -- 
  out: 9 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 29 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 21
  in: 3 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 22
  in: 2 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 22
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 22
  in: 54 -- 
  out: 18 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 22
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 2 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 23
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 23
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 23
  in: 65 -- 
  out: 16 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 2 -- 
  out: 15 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 24
  in: 53 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 24
  in: 54 -- 
  out: 18 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 24
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 2 -- 
  out: 20 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 25
  in: 53 -- 
  out: 22 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 25
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 25
  in: 65 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 2 -- 
  out: 27 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 26
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 26
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 26
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 26
  in: 65 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 27
  in: 3 -- 
  out: 25 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 27
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 2 -- 
  out: 27 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 29 -- 
  out: 31 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 28
  in: 53 -- 
  out: 29 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 28
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 28
  in: 65 -- 
  out: 28 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 2 -- 
  out: 32 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 29
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 29
  in: 54 -- 
  out: 35 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 29
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 3 -- 
  out: 14 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 40 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 65 -- 
  out: 33 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 32
  in: 2 -- 
  out: 32 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 32
  in: 53 -- 
  out: 34 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 32
  in: 54 -- 
  out: 35 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 32
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 33
  in: 2 -- 
  out: 15 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 33
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 33
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 33
  in: 54 -- 
  out: 18 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 33
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 2 -- 
  out: 40 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 34
  in: 29 -- 
  out: 19 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 34
  in: 53 -- 
  out: 42 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 34
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 34
  in: 65 -- 
  out: 33 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 35
  in: 2 -- 
  out: 50 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 35
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 35
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 35
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 35
  in: 65 -- 
  out: 51 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 36
  in: 2 -- 
  out: 20 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 36
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 36
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 36
  in: 54 -- 
  out: 23 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 36
  in: 65 -- 
  out: 16 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 37
  in: 2 -- 
  out: 15 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 37
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 37
  in: 53 -- 
  out: 17 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 37
  in: 54 -- 
  out: 18 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 37
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 38
  in: 2 -- 
  out: 50 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 38
  in: 29 -- 
  out: 54 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 38
  in: 53 -- 
  out: 52 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 38
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 38
  in: 65 -- 
  out: 51 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 39
  in: 2 -- 
  out: 20 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 39
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 39
  in: 53 -- 
  out: 22 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 39
  in: 54 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 39
  in: 65 -- 
  out: 16 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 40
  in: 3 -- 
  out: 25 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 40
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 41
  in: 2 -- 
  out: 32 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 41
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 41
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 41
  in: 54 -- 
  out: 35 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 41
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 42
  in: 2 -- 
  out: 40 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 42
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 42
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 42
  in: 54 -- 
  out: 43 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 42
  in: 65 -- 
  out: 33 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 43
  in: 2 -- 
  out: 32 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 43
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 43
  in: 53 -- 
  out: 34 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 43
  in: 54 -- 
  out: 35 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 43
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 44
  in: 2 -- 
  out: 40 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 44
  in: 29 -- 
  out: 19 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 44
  in: 53 -- 
  out: 42 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 44
  in: 54 -- 
  out: 43 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 44
  in: 65 -- 
  out: 33 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(183):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(111): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 16, "<Mindenhová>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 74, 14, "mindenhová" )
Symbol(54, 88, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 11, "<benéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 129, 9, "benéz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 176, 5, "be" )
Symbol(60, 181, 8, <prevb> )
Symbol(2, 189, 2, + )
Symbol(2, 191, 7, "néz" )
Symbol(38, 198, 8, <vblex> )
Symbol(37, 206, 7, <pres> )
Symbol(87, 213, 5, <sg> )
Symbol(2, 218, 6, <s3p> )
Symbol(2, 224, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 242, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 260, 4, "," )
Symbol(44, 264, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 281, 7, "<de>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 300, 5, "de" )
Symbol(54, 305, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 317, 5, "de" )
Symbol(45, 322, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 343, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 363, 6, "nem" )
Symbol(91, 369, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 380, 6, "nem" )
Symbol(54, 386, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 404, 13, "<találja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 429, 9, "talál" )
Symbol(38, 438, 8, <vblex> )
Symbol(37, 446, 7, <pres> )
Symbol(87, 453, 5, <sg> )
Symbol(2, 458, 6, <s3p> )
Symbol(2, 464, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 528, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 552, 9, "Jancsi" )
Symbol(16, 561, 5, <np> )
Symbol(87, 566, 5, <sg> )
Symbol(71, 571, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 589, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 607, 4, "." )
Symbol(64, 611, 7, <sent> )
Symbol(2, 618, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 65 54 29 3 65 45 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 15, signum = 54, q = 4, out = 18
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 16, signum = 65, q = 4, out = 16
trans_offset 20, signum = 54, q = 5, out = 23
trans_offset 25, signum = 29, q = 7, out = 31
trans_offset 35, signum = 3, q = 10, out = 14
trans_offset 46, signum = 65, q = 12, out = 16
trans_offset 52, signum = 2, q = 14, out = 20
trans_offset 53, signum = 29, q = 14, out = 19
trans_offset 58, signum = 8, q = 15, out = 26
trans_offset 64, signum = 10, q = 17, out = 5
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 10
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 32, signum = 54, q = 8, out = 35
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 5
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 10
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26

Intermediate is(111): 
5 8 10 13 14 15 15 19 26 5 8 10 13 14 15 18 19 26 5 8 10 13 14 15 15 15 15 15 15 19 25 32 32 32 32 32 32 32 32 32 19 26 5 8 10 13 14 15 15 19 26 5 8 10 13 14 16 23 31 14 16 20 19 26 5 8 10 13 14 15 15 19 25 32 35 19 26 5 8 10 13 14 15 15 15 15 15 15 19 26 5 8 10 13 14 15 15 15 15 19 26 5 8 10 13 14 15 15 15 19 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 19, q = 2, out = 54
trans_offset 64, q = 5, out = 2
trans_offset 60, q = 5, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 76, q = 6, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 145, q = 10, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 6, q = 2, out = 65
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 3, out = 0
trans_offset 82, q = 6, out = 0
trans_offset 174, q = 12, out = 0
trans_offset 248, q = 17, out = 0
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 27, q = 3, out = 29
trans_offset 76, q = 6, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 146, q = 10, out = 2
trans_offset 145, q = 10, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 54
trans_offset 53, q = 5, out = 2
trans_offset 52, q = 5, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10
trans_offset 247, q = 16, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 26, q = 3, out = 29
trans_offset 74, q = 6, out = 7
trans_offset 168, q = 11, out = 2
trans_offset 167, q = 11, out = 10

Output is(107): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 16, "<Mindenhová>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 74, 14, "mindenhová" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 106, 11, "<benéz>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 129, 9, "benéz" )
Symbol(38, 138, 8, <vblex> )
Symbol(37, 146, 7, <pres> )
Symbol(87, 153, 5, <sg> )
Symbol(2, 158, 6, <s3p> )
Symbol(2, 164, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 176, 5, "be" )
Symbol(60, 181, 8, <prevb> )
Symbol(2, 189, 2, + )
Symbol(2, 191, 7, "néz" )
Symbol(38, 198, 8, <vblex> )
Symbol(37, 206, 7, <pres> )
Symbol(87, 213, 5, <sg> )
Symbol(2, 218, 6, <s3p> )
Symbol(2, 224, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 242, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 260, 4, "," )
Symbol(44, 264, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 281, 7, "<de>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(65, 0, 0, )
Symbol(45, 322, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 343, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 363, 6, "nem" )
Symbol(91, 369, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 380, 6, "nem" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 404, 13, "<találja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 429, 9, "talál" )
Symbol(38, 438, 8, <vblex> )
Symbol(37, 446, 7, <pres> )
Symbol(87, 453, 5, <sg> )
Symbol(2, 458, 6, <s3p> )
Symbol(2, 464, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 528, 12, "<Jancsit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 552, 9, "Jancsi" )
Symbol(16, 561, 5, <np> )
Symbol(87, 566, 5, <sg> )
Symbol(71, 571, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 589, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 607, 4, "." )
Symbol(64, 611, 7, <sent> )
Symbol(2, 618, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 60 2 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 65 45 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 16 87 71 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Ekkor>" #BOC# | #0# "ekkor" <cnjadv> | #0# "ez" <prn> <sg> <tem> | #0# "ez" <predet> <sg> <tem> | #EOC# $0$ "<hall>" #BOC# | #0# "hall" <vblex> <pres> <sg> <s3p> <ind> | #0# "hall" <n> <sg> <nom> | #EOC# $0$ "<egy>" #BOC# | #0# "egy" <det> <ind> | #0# "egy" <adv> | #EOC# $0$ "<hangot>" #BOC# | #0# "hang" <n> <sg> <acc> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<nagy>" #BOC# | #0# "nagy" <n> <sg> <nom> | #0# "nagy" <adj> <sg> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<vén>" #BOC# | #0# "vén" <adj> <sg> <nom> | #0# "vén" <n> <sg> <nom> | #EOC# $0$ "<fa>" #BOC# | #0# "fa" <n> <sg> <nom> | #EOC# $0$ "<mögül>" #BOC# | #0# "mögül" <post> | #EOC# $0$ "<jön>" #BOC# | #0# "jön" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Lehet-e>" #BOC# | #0# "lehet" <n> <sg> <px3ss> <nom> | #0# "lehet-e" <n> <sg> <nom> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<?>" #BOC# | #0# "?" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Megint>" #BOC# | #0# "megint" <adv> | #EOC# $0$ "<hallani>" #BOC# | #0# "hallik" <vblex> <inf> <sg> <s3p> <ind> | #0# "hall" <vblex> <inf> <sg> <s3p> <ind> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<hangot>" #BOC# | #0# "hang" <n> <sg> <acc> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Figyelmesen>" #BOC# | #0# "figyelmes" <adj> <sg> <ses> | #0# "figyelmes" <adv> | #EOC# $0$ "<hallgatózik>" #BOC# | #0# "hallgatózik" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_154_T_1


LRS T1:
Name: R_1_154_T_1
arity: 2
arccount: 264
statecount: 57
linecount: 265
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 38 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 47 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 53 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 54 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 1
  in: 2 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 38 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 47 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 53 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 54 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 2
  in: 29 -- 
  out: 15 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 3
  in: 3 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 2 -- 
  out: 17 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 38 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 4
  in: 47 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 53 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 54 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 2 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 29 -- 
  out: 28 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 5
  in: 38 -- 
  out: 26 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 5
  in: 47 -- 
  out: 27 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 5
  in: 53 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 5
  in: 54 -- 
  out: 19 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 6
  in: 2 -- 
  out: 29 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 6
  in: 29 -- 
  out: 34 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 6
  in: 38 -- 
  out: 32 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 6
  in: 47 -- 
  out: 33 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 6
  in: 53 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 6
  in: 54 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 7
  in: 3 -- 
  out: 16 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 7
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 8
  in: 2 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 8
  in: 29 -- 
  out: 34 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 8
  in: 38 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 8
  in: 47 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 8
  in: 53 -- 
  out: 30 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 8
  in: 54 -- 
  out: 19 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 9
  in: 3 -- 
  out: 43 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 9
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 10
  in: 3 -- 
  out: 45 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 10
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 11
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 11
  in: 38 -- 
  out: 20 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 11
  in: 47 -- 
  out: 21 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 11
  in: 53 -- 
  out: 18 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 11
  in: 54 -- 
  out: 19 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 12
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(51):
  state_no: 13
  in: 3 -- 
  out: 54 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 13
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 2 -- 
  out: 23 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 29 -- 
  out: 28 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 38 -- 
  out: 26 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 47 -- 
  out: 27 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 14
  in: 53 -- 
  out: 18 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 14
  in: 54 -- 
  out: 19 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 15
  in: 2 -- 
  out: 62 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 15
  in: 29 -- 
  out: 67 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 15
  in: 38 -- 
  out: 65 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 15
  in: 47 -- 
  out: 66 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 15
  in: 53 -- 
  out: 63 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 15
  in: 54 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 16
  in: 2 -- 
  out: 29 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 16
  in: 29 -- 
  out: 34 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 16
  in: 38 -- 
  out: 32 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 16
  in: 47 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 16
  in: 53 -- 
  out: 30 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 16
  in: 54 -- 
  out: 19 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 17
  in: 2 -- 
  out: 74 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 17
  in: 29 -- 
  out: 79 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 17
  in: 38 -- 
  out: 77 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 17
  in: 47 -- 
  out: 78 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 17
  in: 53 -- 
  out: 63 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 17
  in: 54 -- 
  out: 19 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 18
  in: 2 -- 
  out: 29 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 18
  in: 29 -- 
  out: 34 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 18
  in: 38 -- 
  out: 32 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 18
  in: 47 -- 
  out: 33 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 18
  in: 53 -- 
  out: 30 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 18
  in: 54 -- 
  out: 19 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 19
  in: 3 -- 
  out: 45 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 19
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 20
  in: 3 -- 
  out: 54 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 20
  in: 8 -- 
  out: 36 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 21
  in: 2 -- 
  out: 62 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 21
  in: 29 -- 
  out: 67 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 21
  in: 38 -- 
  out: 65 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 21
  in: 47 -- 
  out: 66 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 21
  in: 53 -- 
  out: 63 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 21
  in: 54 -- 
  out: 19 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 22
  in: 2 -- 
  out: 74 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 22
  in: 29 -- 
  out: 79 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 22
  in: 38 -- 
  out: 77 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 22
  in: 47 -- 
  out: 78 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 22
  in: 53 -- 
  out: 63 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 22
  in: 54 -- 
  out: 19 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 23
  in: 10 -- 
  out: 4 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 24
  in: 2 -- 
  out: 9 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 24
  in: 7 -- 
  out: 10 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 24
  in: 38 -- 
  out: 13 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 24
  in: 47 -- 
  out: 14 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 24
  in: 53 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 24
  in: 54 -- 
  out: 12 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 25
  in: 29 -- 
  out: 15 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 26
  in: 3 -- 
  out: 16 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 27
  in: 2 -- 
  out: 17 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 27
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 27
  in: 38 -- 
  out: 20 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 27
  in: 47 -- 
  out: 21 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 27
  in: 53 -- 
  out: 18 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 27
  in: 54 -- 
  out: 19 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 28
  in: 2 -- 
  out: 23 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 28
  in: 29 -- 
  out: 28 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 28
  in: 38 -- 
  out: 26 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 28
  in: 47 -- 
  out: 27 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 28
  in: 53 -- 
  out: 18 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 28
  in: 54 -- 
  out: 19 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 29
  in: 2 -- 
  out: 29 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 29
  in: 29 -- 
  out: 34 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 29
  in: 38 -- 
  out: 32 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 29
  in: 47 -- 
  out: 33 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 29
  in: 53 -- 
  out: 30 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 29
  in: 54 -- 
  out: 19 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 30
  in: 2 -- 
  out: 17 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 30
  in: 29 -- 
  out: 22 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 30
  in: 38 -- 
  out: 20 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 30
  in: 47 -- 
  out: 21 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 30
  in: 53 -- 
  out: 18 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 30
  in: 54 -- 
  out: 19 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 31
  in: 2 -- 
  out: 29 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 31
  in: 29 -- 
  out: 34 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 31
  in: 38 -- 
  out: 32 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 31
  in: 47 -- 
  out: 33 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 31
  in: 53 -- 
  out: 30 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 31
  in: 54 -- 
  out: 19 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 32
  in: 2 -- 
  out: 23 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 32
  in: 29 -- 
  out: 28 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 32
  in: 38 -- 
  out: 26 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 32
  in: 47 -- 
  out: 27 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 32
  in: 53 -- 
  out: 18 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 32
  in: 54 -- 
  out: 19 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 33
  in: 2 -- 
  out: 29 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 33
  in: 29 -- 
  out: 34 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 33
  in: 38 -- 
  out: 32 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 33
  in: 47 -- 
  out: 33 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 33
  in: 53 -- 
  out: 30 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 33
  in: 54 -- 
  out: 19 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 34
  in: 3 -- 
  out: 16 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 34
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 35
  in: 2 -- 
  out: 29 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 35
  in: 29 -- 
  out: 34 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 35
  in: 38 -- 
  out: 32 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 35
  in: 47 -- 
  out: 33 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 35
  in: 53 -- 
  out: 30 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 35
  in: 54 -- 
  out: 19 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 36
  in: 3 -- 
  out: 43 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 36
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 37
  in: 3 -- 
  out: 45 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 37
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 38
  in: 2 -- 
  out: 17 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 38
  in: 29 -- 
  out: 22 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 38
  in: 38 -- 
  out: 20 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 38
  in: 47 -- 
  out: 21 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 38
  in: 53 -- 
  out: 18 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 38
  in: 54 -- 
  out: 19 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 39
  in: 3 -- 
  out: 54 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 39
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 40
  in: 2 -- 
  out: 23 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 40
  in: 29 -- 
  out: 28 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 40
  in: 38 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 40
  in: 47 -- 
  out: 27 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 40
  in: 53 -- 
  out: 18 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 40
  in: 54 -- 
  out: 19 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 41
  in: 2 -- 
  out: 62 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 41
  in: 29 -- 
  out: 67 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 41
  in: 38 -- 
  out: 65 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 41
  in: 47 -- 
  out: 66 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 41
  in: 53 -- 
  out: 63 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 41
  in: 54 -- 
  out: 19 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 42
  in: 2 -- 
  out: 29 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 42
  in: 29 -- 
  out: 34 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 42
  in: 38 -- 
  out: 32 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 42
  in: 47 -- 
  out: 33 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 42
  in: 53 -- 
  out: 30 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 42
  in: 54 -- 
  out: 19 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 43
  in: 2 -- 
  out: 17 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 43
  in: 29 -- 
  out: 22 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 43
  in: 38 -- 
  out: 20 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 43
  in: 47 -- 
  out: 21 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 43
  in: 53 -- 
  out: 18 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 43
  in: 54 -- 
  out: 19 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 44
  in: 2 -- 
  out: 74 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 44
  in: 29 -- 
  out: 79 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 44
  in: 38 -- 
  out: 77 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 44
  in: 47 -- 
  out: 78 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 44
  in: 53 -- 
  out: 63 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 44
  in: 54 -- 
  out: 19 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 45
  in: 2 -- 
  out: 29 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 45
  in: 29 -- 
  out: 34 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 45
  in: 38 -- 
  out: 32 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 45
  in: 47 -- 
  out: 33 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 45
  in: 53 -- 
  out: 30 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 45
  in: 54 -- 
  out: 19 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 46
  in: 2 -- 
  out: 23 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 46
  in: 29 -- 
  out: 28 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 46
  in: 38 -- 
  out: 26 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 46
  in: 47 -- 
  out: 27 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 46
  in: 53 -- 
  out: 18 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 46
  in: 54 -- 
  out: 19 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 47
  in: 2 -- 
  out: 62 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 47
  in: 29 -- 
  out: 67 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 47
  in: 38 -- 
  out: 65 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 47
  in: 47 -- 
  out: 66 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 47
  in: 53 -- 
  out: 63 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 47
  in: 54 -- 
  out: 19 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 48
  in: 2 -- 
  out: 29 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 48
  in: 29 -- 
  out: 34 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 48
  in: 38 -- 
  out: 32 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 48
  in: 47 -- 
  out: 33 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 48
  in: 53 -- 
  out: 30 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 48
  in: 54 -- 
  out: 19 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 49
  in: 2 -- 
  out: 74 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 49
  in: 29 -- 
  out: 79 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 49
  in: 38 -- 
  out: 77 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 49
  in: 47 -- 
  out: 78 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 49
  in: 53 -- 
  out: 63 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 49
  in: 54 -- 
  out: 19 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 50
  in: 2 -- 
  out: 29 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 50
  in: 29 -- 
  out: 34 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 50
  in: 38 -- 
  out: 32 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 50
  in: 47 -- 
  out: 33 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 50
  in: 53 -- 
  out: 30 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 50
  in: 54 -- 
  out: 19 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 51
  in: 3 -- 
  out: 45 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 51
  in: 8 -- 
  out: 36 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 52
  in: 3 -- 
  out: 54 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 52
  in: 8 -- 
  out: 36 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 53
  in: 2 -- 
  out: 62 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 53
  in: 29 -- 
  out: 67 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 53
  in: 38 -- 
  out: 65 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 53
  in: 47 -- 
  out: 66 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 53
  in: 53 -- 
  out: 63 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 53
  in: 54 -- 
  out: 19 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 54
  in: 2 -- 
  out: 74 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 54
  in: 29 -- 
  out: 79 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 54
  in: 38 -- 
  out: 77 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 54
  in: 47 -- 
  out: 78 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 54
  in: 53 -- 
  out: 63 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 54
  in: 54 -- 
  out: 19 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 55
  in: 2 -- 
  out: 62 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 55
  in: 29 -- 
  out: 67 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 55
  in: 38 -- 
  out: 65 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 55
  in: 47 -- 
  out: 66 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 55
  in: 53 -- 
  out: 63 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 55
  in: 54 -- 
  out: 19 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 56
  in: 2 -- 
  out: 74 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 56
  in: 29 -- 
  out: 79 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 56
  in: 38 -- 
  out: 77 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 56
  in: 47 -- 
  out: 78 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 56
  in: 53 -- 
  out: 63 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 56
  in: 54 -- 
  out: 19 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(264):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(47): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 16, "<Figyelmesen>" )
Symbol(7, 62, 6, #BOC# )
Symbol(29, 68, 2, | )
Symbol(3, 70, 4, #0# )
Symbol(2, 74, 12, "figyelmes" )
Symbol(53, 86, 6, <adj> )
Symbol(87, 92, 5, <sg> )
Symbol(2, 97, 6, <ses> )
Symbol(29, 103, 2, | )
Symbol(3, 105, 4, #0# )
Symbol(2, 109, 12, "figyelmes" )
Symbol(54, 121, 6, <adv> )
Symbol(29, 127, 2, | )
Symbol(8, 129, 6, #EOC# )
Symbol(10, 135, 4, $0$ )
Symbol(2, 139, 17, "<hallgatózik>" )
Symbol(7, 156, 6, #BOC# )
Symbol(29, 162, 2, | )
Symbol(3, 164, 4, #0# )
Symbol(2, 168, 15, "hallgatózik" )
Symbol(38, 183, 8, <vblex> )
Symbol(37, 191, 7, <pres> )
Symbol(87, 198, 5, <sg> )
Symbol(2, 203, 6, <s3p> )
Symbol(2, 209, 6, <ind> )
Symbol(29, 215, 2, | )
Symbol(8, 217, 6, #EOC# )
Symbol(10, 223, 4, $0$ )
Symbol(2, 227, 6, "<.>" )
Symbol(7, 233, 6, #BOC# )
Symbol(29, 239, 2, | )
Symbol(3, 241, 4, #0# )
Symbol(2, 245, 4, "." )
Symbol(64, 249, 7, <sent> )
Symbol(2, 256, 6, <<<<> )
Symbol(29, 262, 2, | )
Symbol(8, 264, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 53 87 2 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 18, signum = 53, q = 4, out = 18
trans_offset 20, signum = 2, q = 5, out = 23
trans_offset 20, signum = 2, q = 5, out = 23
trans_offset 21, signum = 29, q = 5, out = 28
trans_offset 40, signum = 3, q = 9, out = 43
trans_offset 53, signum = 2, q = 14, out = 23
trans_offset 58, signum = 54, q = 14, out = 19
trans_offset 78, signum = 29, q = 18, out = 34
trans_offset 86, signum = 8, q = 20, out = 36
trans_offset 99, signum = 10, q = 23, out = 4
trans_offset 100, signum = 2, q = 24, out = 9
trans_offset 101, signum = 7, q = 24, out = 10
trans_offset 106, signum = 29, q = 25, out = 15
trans_offset 107, signum = 3, q = 26, out = 16
trans_offset 108, signum = 2, q = 27, out = 17
trans_offset 110, signum = 38, q = 27, out = 20
trans_offset 126, signum = 2, q = 30, out = 17
trans_offset 126, signum = 2, q = 30, out = 17
trans_offset 126, signum = 2, q = 30, out = 17
trans_offset 126, signum = 2, q = 30, out = 17
trans_offset 127, signum = 29, q = 30, out = 22
trans_offset 151, signum = 8, q = 34, out = 36
trans_offset 50, signum = 10, q = 12, out = 4
trans_offset 6, signum = 2, q = 1, out = 9
trans_offset 7, signum = 7, q = 1, out = 10
trans_offset 12, signum = 29, q = 2, out = 15
trans_offset 13, signum = 3, q = 3, out = 16
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 14, signum = 2, q = 4, out = 17
trans_offset 15, signum = 29, q = 4, out = 22
trans_offset 33, signum = 8, q = 7, out = 36

Intermediate is(47): 
4 9 10 15 16 17 17 22 36 4 9 10 15 16 17 18 23 23 28 43 23 19 34 36 4 9 10 15 16 17 20 17 17 17 17 22 36 4 9 10 15 16 17 17 17 22 36 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 29, q = 3, out = 29
trans_offset 58, q = 5, out = 7
trans_offset 112, q = 8, out = 2
trans_offset 111, q = 8, out = 10
trans_offset 146, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 10, q = 2, out = 38
trans_offset 36, q = 4, out = 2
trans_offset 35, q = 4, out = 3
trans_offset 82, q = 6, out = 29
trans_offset 117, q = 9, out = 7
trans_offset 148, q = 11, out = 2
trans_offset 147, q = 11, out = 10
trans_offset 163, q = 13, out = 8
trans_offset 166, q = 14, out = 29
trans_offset 172, q = 15, out = 54
trans_offset 227, q = 18, out = 2
trans_offset 234, q = 18, out = 3
trans_offset 345, q = 24, out = 0
trans_offset 513, q = 34, out = 0
trans_offset 643, q = 41, out = 0
trans_offset 639, q = 41, out = 0
trans_offset 661, q = 42, out = 0
trans_offset 660, q = 42, out = 0
trans_offset 471, q = 31, out = 29
trans_offset 583, q = 38, out = 7
trans_offset 112, q = 8, out = 2
trans_offset 111, q = 8, out = 10
trans_offset 146, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 29, q = 3, out = 29
trans_offset 58, q = 5, out = 7
trans_offset 112, q = 8, out = 2
trans_offset 111, q = 8, out = 10

Output is(41): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 16, "<Figyelmesen>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 109, 12, "figyelmes" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 139, 17, "<hallgatózik>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 168, 15, "hallgatózik" )
Symbol(38, 0, 0, )
Symbol(37, 191, 7, <pres> )
Symbol(87, 198, 5, <sg> )
Symbol(2, 203, 6, <s3p> )
Symbol(2, 209, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 227, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 245, 4, "." )
Symbol(64, 249, 7, <sent> )
Symbol(2, 256, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Ez>" #BOC# | #0# "ez" <predet> <sg> <nom> | #0# "ez" <prn> <sg> <nom> | #EOC# $0$ "<nem>" #BOC# | #0# "nem" <ij> | #0# "nem" <adv> | #EOC# $0$ "<madár>" #BOC# | #0# "madár" <n> <sg> <nom> | #EOC# $0$ "<vagy>" #BOC# | #0# "vagy" <cnjcoo> | #0# "van" <vbser> <pres> <sg> <s2p> <ind> | #EOC# $0$ "<más>" #BOC# | #0# "más" <n> <sg> <nom> | #0# "más" <adj> <sg> <nom> | #EOC# $0$ "<állat>" #BOC# | #0# "áll" <n> <sg> <acc> | #0# "állat" <vblex> <pres> <sg> <s3p> <ind> | #0# "állat" <n> <sg> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_157_T_1


LRS T1:
Name: R_1_157_T_1
arity: 2
arccount: 402
statecount: 52
linecount: 403
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 38 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 47 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 48 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 55 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 56 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 57 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 58 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 59 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 1
  in: 2 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 7 -- 
  out: 14 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 38 -- 
  out: 20 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 47 -- 
  out: 21 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 48 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 55 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 1
  in: 56 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 1
  in: 57 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 1
  in: 58 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 59 -- 
  out: 19 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 2
  in: 29 -- 
  out: 23 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 3
  in: 3 -- 
  out: 24 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 2 -- 
  out: 25 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 4
  in: 29 -- 
  out: 34 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 38 -- 
  out: 31 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 47 -- 
  out: 32 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 4
  in: 48 -- 
  out: 33 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 4
  in: 55 -- 
  out: 26 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 4
  in: 56 -- 
  out: 27 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 4
  in: 57 -- 
  out: 28 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 4
  in: 58 -- 
  out: 29 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 4
  in: 59 -- 
  out: 30 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 5
  in: 2 -- 
  out: 25 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 5
  in: 29 -- 
  out: 34 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 5
  in: 38 -- 
  out: 31 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 5
  in: 47 -- 
  out: 32 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 5
  in: 48 -- 
  out: 33 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 5
  in: 55 -- 
  out: 26 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 5
  in: 56 -- 
  out: 27 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 5
  in: 57 -- 
  out: 28 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 5
  in: 58 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 5
  in: 59 -- 
  out: 30 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 6
  in: 3 -- 
  out: 24 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 6
  in: 8 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 7
  in: 2 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 7
  in: 29 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 7
  in: 38 -- 
  out: 31 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 7
  in: 47 -- 
  out: 32 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 7
  in: 48 -- 
  out: 33 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 7
  in: 55 -- 
  out: 26 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 7
  in: 56 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 7
  in: 57 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 7
  in: 58 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 7
  in: 59 -- 
  out: 30 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 8
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(55):
  state_no: 9
  in: 3 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 9
  in: 8 -- 
  out: 46 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 10
  in: 10 -- 
  out: 4 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(58):
  state_no: 11
  in: 2 -- 
  out: 13 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 11
  in: 7 -- 
  out: 14 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 11
  in: 38 -- 
  out: 20 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 11
  in: 47 -- 
  out: 21 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 11
  in: 48 -- 
  out: 22 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 11
  in: 55 -- 
  out: 15 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 11
  in: 56 -- 
  out: 16 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 11
  in: 57 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 11
  in: 58 -- 
  out: 18 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 11
  in: 59 -- 
  out: 19 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 12
  in: 29 -- 
  out: 23 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 13
  in: 3 -- 
  out: 72 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 14
  in: 2 -- 
  out: 73 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 14
  in: 29 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 14
  in: 38 -- 
  out: 79 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 14
  in: 47 -- 
  out: 80 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 14
  in: 48 -- 
  out: 81 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 14
  in: 55 -- 
  out: 74 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 14
  in: 56 -- 
  out: 75 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 14
  in: 57 -- 
  out: 76 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 14
  in: 58 -- 
  out: 77 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 14
  in: 59 -- 
  out: 78 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 15
  in: 2 -- 
  out: 73 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 15
  in: 29 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 15
  in: 38 -- 
  out: 79 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 15
  in: 47 -- 
  out: 80 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 15
  in: 48 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 15
  in: 55 -- 
  out: 74 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 15
  in: 56 -- 
  out: 75 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 15
  in: 57 -- 
  out: 76 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 15
  in: 58 -- 
  out: 77 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 15
  in: 59 -- 
  out: 78 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 16
  in: 2 -- 
  out: 93 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 16
  in: 29 -- 
  out: 102 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 16
  in: 38 -- 
  out: 99 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 16
  in: 47 -- 
  out: 100 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 16
  in: 48 -- 
  out: 101 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 16
  in: 55 -- 
  out: 94 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 16
  in: 56 -- 
  out: 95 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 16
  in: 57 -- 
  out: 96 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 16
  in: 58 -- 
  out: 97 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 16
  in: 59 -- 
  out: 78 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 17
  in: 2 -- 
  out: 103 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 17
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 17
  in: 38 -- 
  out: 79 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 17
  in: 47 -- 
  out: 80 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 17
  in: 48 -- 
  out: 81 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 17
  in: 55 -- 
  out: 104 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 17
  in: 56 -- 
  out: 105 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 17
  in: 57 -- 
  out: 106 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 17
  in: 58 -- 
  out: 97 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 17
  in: 59 -- 
  out: 78 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 18
  in: 3 -- 
  out: 113 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 18
  in: 8 -- 
  out: 46 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 19
  in: 2 -- 
  out: 73 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 19
  in: 29 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 19
  in: 38 -- 
  out: 79 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 19
  in: 47 -- 
  out: 80 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 19
  in: 48 -- 
  out: 81 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 19
  in: 55 -- 
  out: 74 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 19
  in: 56 -- 
  out: 75 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 19
  in: 57 -- 
  out: 76 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 19
  in: 58 -- 
  out: 77 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 19
  in: 59 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 20
  in: 2 -- 
  out: 93 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 20
  in: 29 -- 
  out: 102 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 20
  in: 38 -- 
  out: 99 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 20
  in: 47 -- 
  out: 100 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 20
  in: 48 -- 
  out: 101 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 20
  in: 55 -- 
  out: 94 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 20
  in: 56 -- 
  out: 95 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 20
  in: 57 -- 
  out: 96 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 20
  in: 58 -- 
  out: 97 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 20
  in: 59 -- 
  out: 78 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 21
  in: 2 -- 
  out: 103 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 21
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 21
  in: 38 -- 
  out: 79 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 21
  in: 47 -- 
  out: 80 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 21
  in: 48 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 21
  in: 55 -- 
  out: 104 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 21
  in: 56 -- 
  out: 105 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 21
  in: 57 -- 
  out: 106 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 21
  in: 58 -- 
  out: 97 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 21
  in: 59 -- 
  out: 78 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 22
  in: 2 -- 
  out: 93 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 22
  in: 29 -- 
  out: 102 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 22
  in: 38 -- 
  out: 99 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 22
  in: 47 -- 
  out: 100 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 22
  in: 48 -- 
  out: 101 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 22
  in: 55 -- 
  out: 94 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 22
  in: 56 -- 
  out: 95 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 22
  in: 57 -- 
  out: 96 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 22
  in: 58 -- 
  out: 97 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 22
  in: 59 -- 
  out: 78 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 23
  in: 3 -- 
  out: 72 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 23
  in: 8 -- 
  out: 46 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 24
  in: 3 -- 
  out: 113 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 24
  in: 8 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 25
  in: 2 -- 
  out: 159 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 25
  in: 29 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 25
  in: 38 -- 
  out: 165 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 25
  in: 47 -- 
  out: 166 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 25
  in: 48 -- 
  out: 167 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 25
  in: 55 -- 
  out: 160 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 25
  in: 56 -- 
  out: 161 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 25
  in: 57 -- 
  out: 162 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 25
  in: 58 -- 
  out: 163 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 25
  in: 59 -- 
  out: 164 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 26
  in: 2 -- 
  out: 93 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 26
  in: 29 -- 
  out: 102 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 26
  in: 38 -- 
  out: 99 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 26
  in: 47 -- 
  out: 100 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 26
  in: 48 -- 
  out: 101 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 26
  in: 55 -- 
  out: 94 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(172):
  state_no: 26
  in: 56 -- 
  out: 95 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 26
  in: 57 -- 
  out: 96 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 26
  in: 58 -- 
  out: 97 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 26
  in: 59 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 27
  in: 2 -- 
  out: 103 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 27
  in: 29 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 27
  in: 38 -- 
  out: 79 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 27
  in: 47 -- 
  out: 80 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 27
  in: 48 -- 
  out: 81 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 27
  in: 55 -- 
  out: 104 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 27
  in: 56 -- 
  out: 105 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 27
  in: 57 -- 
  out: 106 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 27
  in: 58 -- 
  out: 97 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 27
  in: 59 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 28
  in: 3 -- 
  out: 113 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 28
  in: 8 -- 
  out: 46 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 29
  in: 2 -- 
  out: 93 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 29
  in: 29 -- 
  out: 102 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 29
  in: 38 -- 
  out: 99 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 29
  in: 47 -- 
  out: 100 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 29
  in: 48 -- 
  out: 101 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 29
  in: 55 -- 
  out: 94 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 29
  in: 56 -- 
  out: 95 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 29
  in: 57 -- 
  out: 96 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 29
  in: 58 -- 
  out: 97 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 29
  in: 59 -- 
  out: 78 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 30
  in: 3 -- 
  out: 72 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 30
  in: 8 -- 
  out: 46 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 31
  in: 2 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 31
  in: 29 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 31
  in: 38 -- 
  out: 79 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 31
  in: 47 -- 
  out: 80 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 31
  in: 48 -- 
  out: 81 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 31
  in: 55 -- 
  out: 74 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 31
  in: 56 -- 
  out: 75 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 31
  in: 57 -- 
  out: 76 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 31
  in: 58 -- 
  out: 77 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 31
  in: 59 -- 
  out: 78 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 32
  in: 2 -- 
  out: 159 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 32
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 32
  in: 38 -- 
  out: 165 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 32
  in: 47 -- 
  out: 166 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 32
  in: 48 -- 
  out: 167 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 32
  in: 55 -- 
  out: 160 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 32
  in: 56 -- 
  out: 161 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 32
  in: 57 -- 
  out: 162 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 32
  in: 58 -- 
  out: 163 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 32
  in: 59 -- 
  out: 164 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 33
  in: 2 -- 
  out: 159 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 33
  in: 29 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 33
  in: 38 -- 
  out: 165 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 33
  in: 47 -- 
  out: 166 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 33
  in: 48 -- 
  out: 167 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 33
  in: 55 -- 
  out: 160 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 33
  in: 56 -- 
  out: 161 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 33
  in: 57 -- 
  out: 162 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 33
  in: 58 -- 
  out: 163 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 33
  in: 59 -- 
  out: 164 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 34
  in: 2 -- 
  out: 233 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 34
  in: 29 -- 
  out: 242 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 34
  in: 38 -- 
  out: 239 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 34
  in: 47 -- 
  out: 239 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 34
  in: 48 -- 
  out: 239 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 34
  in: 55 -- 
  out: 233 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 34
  in: 56 -- 
  out: 233 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 34
  in: 57 -- 
  out: 233 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 34
  in: 58 -- 
  out: 237 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 34
  in: 59 -- 
  out: 164 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 35
  in: 2 -- 
  out: 243 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 35
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 35
  in: 38 -- 
  out: 165 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 35
  in: 47 -- 
  out: 166 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 35
  in: 48 -- 
  out: 167 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 35
  in: 55 -- 
  out: 244 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 35
  in: 56 -- 
  out: 245 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 35
  in: 57 -- 
  out: 246 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 35
  in: 58 -- 
  out: 237 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 35
  in: 59 -- 
  out: 164 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 36
  in: 3 -- 
  out: 72 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 36
  in: 8 -- 
  out: 46 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 37
  in: 2 -- 
  out: 159 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 37
  in: 29 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 37
  in: 38 -- 
  out: 165 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 37
  in: 47 -- 
  out: 166 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 37
  in: 48 -- 
  out: 167 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 37
  in: 55 -- 
  out: 160 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 37
  in: 56 -- 
  out: 161 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 37
  in: 57 -- 
  out: 162 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 37
  in: 58 -- 
  out: 163 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 37
  in: 59 -- 
  out: 164 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 38
  in: 2 -- 
  out: 73 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 38
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 38
  in: 38 -- 
  out: 79 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 38
  in: 47 -- 
  out: 80 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 38
  in: 48 -- 
  out: 81 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 38
  in: 55 -- 
  out: 74 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 38
  in: 56 -- 
  out: 75 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 38
  in: 57 -- 
  out: 76 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 38
  in: 58 -- 
  out: 77 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 38
  in: 59 -- 
  out: 78 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 39
  in: 2 -- 
  out: 73 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 39
  in: 29 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 39
  in: 38 -- 
  out: 79 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 39
  in: 47 -- 
  out: 80 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 39
  in: 48 -- 
  out: 81 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 39
  in: 55 -- 
  out: 74 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 39
  in: 56 -- 
  out: 75 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 39
  in: 57 -- 
  out: 76 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 39
  in: 58 -- 
  out: 77 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 39
  in: 59 -- 
  out: 78 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 40
  in: 2 -- 
  out: 103 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 40
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 40
  in: 38 -- 
  out: 79 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 40
  in: 47 -- 
  out: 80 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 40
  in: 48 -- 
  out: 81 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 40
  in: 55 -- 
  out: 104 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 40
  in: 56 -- 
  out: 105 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 40
  in: 57 -- 
  out: 106 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 40
  in: 58 -- 
  out: 97 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 40
  in: 59 -- 
  out: 78 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 41
  in: 2 -- 
  out: 159 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 41
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 41
  in: 38 -- 
  out: 165 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 41
  in: 47 -- 
  out: 166 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 41
  in: 48 -- 
  out: 167 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 41
  in: 55 -- 
  out: 160 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 41
  in: 56 -- 
  out: 161 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 41
  in: 57 -- 
  out: 162 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 41
  in: 58 -- 
  out: 163 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 41
  in: 59 -- 
  out: 164 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 42
  in: 2 -- 
  out: 233 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 42
  in: 29 -- 
  out: 242 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 42
  in: 38 -- 
  out: 239 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 42
  in: 47 -- 
  out: 239 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 42
  in: 48 -- 
  out: 239 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 42
  in: 55 -- 
  out: 233 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 42
  in: 56 -- 
  out: 233 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 42
  in: 57 -- 
  out: 233 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 42
  in: 58 -- 
  out: 237 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 42
  in: 59 -- 
  out: 164 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 43
  in: 2 -- 
  out: 233 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 43
  in: 29 -- 
  out: 242 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 43
  in: 38 -- 
  out: 239 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 43
  in: 47 -- 
  out: 239 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 43
  in: 48 -- 
  out: 239 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 43
  in: 55 -- 
  out: 233 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 43
  in: 56 -- 
  out: 233 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 43
  in: 57 -- 
  out: 233 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 43
  in: 58 -- 
  out: 237 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 43
  in: 59 -- 
  out: 164 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 44
  in: 2 -- 
  out: 243 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 44
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 44
  in: 38 -- 
  out: 165 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 44
  in: 47 -- 
  out: 166 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 44
  in: 48 -- 
  out: 167 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 44
  in: 55 -- 
  out: 244 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 44
  in: 56 -- 
  out: 245 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 44
  in: 57 -- 
  out: 246 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 44
  in: 58 -- 
  out: 237 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 44
  in: 59 -- 
  out: 164 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 45
  in: 2 -- 
  out: 73 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 45
  in: 29 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 45
  in: 38 -- 
  out: 79 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 45
  in: 47 -- 
  out: 80 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 45
  in: 48 -- 
  out: 81 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 45
  in: 55 -- 
  out: 74 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 45
  in: 56 -- 
  out: 75 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 45
  in: 57 -- 
  out: 76 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 45
  in: 58 -- 
  out: 77 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 45
  in: 59 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 46
  in: 2 -- 
  out: 233 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 46
  in: 29 -- 
  out: 242 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 46
  in: 38 -- 
  out: 239 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 46
  in: 47 -- 
  out: 239 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 46
  in: 48 -- 
  out: 239 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 46
  in: 55 -- 
  out: 233 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 46
  in: 56 -- 
  out: 233 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 46
  in: 57 -- 
  out: 233 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 46
  in: 58 -- 
  out: 237 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 46
  in: 59 -- 
  out: 164 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 47
  in: 2 -- 
  out: 243 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 47
  in: 29 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 47
  in: 38 -- 
  out: 165 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 47
  in: 47 -- 
  out: 166 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 47
  in: 48 -- 
  out: 167 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 47
  in: 55 -- 
  out: 244 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 47
  in: 56 -- 
  out: 245 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 47
  in: 57 -- 
  out: 246 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 47
  in: 58 -- 
  out: 237 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 47
  in: 59 -- 
  out: 164 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 48
  in: 2 -- 
  out: 73 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 48
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 48
  in: 38 -- 
  out: 79 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(365):
  state_no: 48
  in: 47 -- 
  out: 80 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(366):
  state_no: 48
  in: 48 -- 
  out: 81 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(367):
  state_no: 48
  in: 55 -- 
  out: 74 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(368):
  state_no: 48
  in: 56 -- 
  out: 75 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(369):
  state_no: 48
  in: 57 -- 
  out: 76 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(370):
  state_no: 48
  in: 58 -- 
  out: 77 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(371):
  state_no: 48
  in: 59 -- 
  out: 78 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(372):
  state_no: 49
  in: 2 -- 
  out: 103 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(373):
  state_no: 49
  in: 29 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(374):
  state_no: 49
  in: 38 -- 
  out: 79 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(375):
  state_no: 49
  in: 47 -- 
  out: 80 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(376):
  state_no: 49
  in: 48 -- 
  out: 81 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(377):
  state_no: 49
  in: 55 -- 
  out: 104 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(378):
  state_no: 49
  in: 56 -- 
  out: 105 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(379):
  state_no: 49
  in: 57 -- 
  out: 106 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(380):
  state_no: 49
  in: 58 -- 
  out: 97 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(381):
  state_no: 49
  in: 59 -- 
  out: 78 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(382):
  state_no: 50
  in: 2 -- 
  out: 233 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(383):
  state_no: 50
  in: 29 -- 
  out: 242 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(384):
  state_no: 50
  in: 38 -- 
  out: 239 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(385):
  state_no: 50
  in: 47 -- 
  out: 239 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(386):
  state_no: 50
  in: 48 -- 
  out: 239 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(387):
  state_no: 50
  in: 55 -- 
  out: 233 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(388):
  state_no: 50
  in: 56 -- 
  out: 233 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(389):
  state_no: 50
  in: 57 -- 
  out: 233 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(390):
  state_no: 50
  in: 58 -- 
  out: 237 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(391):
  state_no: 50
  in: 59 -- 
  out: 164 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(392):
  state_no: 51
  in: 2 -- 
  out: 103 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(393):
  state_no: 51
  in: 29 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(394):
  state_no: 51
  in: 38 -- 
  out: 79 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(395):
  state_no: 51
  in: 47 -- 
  out: 80 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(396):
  state_no: 51
  in: 48 -- 
  out: 81 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(397):
  state_no: 51
  in: 55 -- 
  out: 104 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(398):
  state_no: 51
  in: 56 -- 
  out: 105 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(399):
  state_no: 51
  in: 57 -- 
  out: 106 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(400):
  state_no: 51
  in: 58 -- 
  out: 97 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(401):
  state_no: 51
  in: 59 -- 
  out: 78 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(402):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(119): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 7, "<Ez>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(77, 65, 5, "ez" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 90, 2, | )
Symbol(3, 92, 4, #0# )
Symbol(77, 96, 5, "ez" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 118, 2, | )
Symbol(8, 120, 6, #EOC# )
Symbol(10, 126, 4, $0$ )
Symbol(2, 130, 8, "<nem>" )
Symbol(7, 138, 6, #BOC# )
Symbol(29, 144, 2, | )
Symbol(3, 146, 4, #0# )
Symbol(2, 150, 6, "nem" )
Symbol(91, 156, 5, <ij> )
Symbol(29, 161, 2, | )
Symbol(3, 163, 4, #0# )
Symbol(2, 167, 6, "nem" )
Symbol(54, 173, 6, <adv> )
Symbol(29, 179, 2, | )
Symbol(8, 181, 6, #EOC# )
Symbol(10, 187, 4, $0$ )
Symbol(2, 191, 11, "<madár>" )
Symbol(7, 202, 6, #BOC# )
Symbol(29, 208, 2, | )
Symbol(3, 210, 4, #0# )
Symbol(2, 214, 9, "madár" )
Symbol(15, 223, 4, <n> )
Symbol(87, 227, 5, <sg> )
Symbol(55, 232, 6, <nom> )
Symbol(29, 238, 2, | )
Symbol(8, 240, 6, #EOC# )
Symbol(10, 246, 4, $0$ )
Symbol(2, 250, 9, "<vagy>" )
Symbol(7, 259, 6, #BOC# )
Symbol(29, 265, 2, | )
Symbol(3, 267, 4, #0# )
Symbol(81, 271, 7, "vagy" )
Symbol(45, 278, 9, <cnjcoo> )
Symbol(29, 287, 2, | )
Symbol(3, 289, 4, #0# )
Symbol(35, 293, 6, "van" )
Symbol(48, 299, 8, <vbser> )
Symbol(37, 307, 7, <pres> )
Symbol(87, 314, 5, <sg> )
Symbol(59, 319, 6, <s2p> )
Symbol(2, 325, 6, <ind> )
Symbol(29, 331, 2, | )
Symbol(8, 333, 6, #EOC# )
Symbol(10, 339, 4, $0$ )
Symbol(2, 343, 9, "<más>" )
Symbol(7, 352, 6, #BOC# )
Symbol(29, 358, 2, | )
Symbol(3, 360, 4, #0# )
Symbol(2, 364, 7, "más" )
Symbol(15, 371, 4, <n> )
Symbol(87, 375, 5, <sg> )
Symbol(55, 380, 6, <nom> )
Symbol(29, 386, 2, | )
Symbol(3, 388, 4, #0# )
Symbol(2, 392, 7, "más" )
Symbol(53, 399, 6, <adj> )
Symbol(87, 405, 5, <sg> )
Symbol(55, 410, 6, <nom> )
Symbol(29, 416, 2, | )
Symbol(8, 418, 6, #EOC# )
Symbol(10, 424, 4, $0$ )
Symbol(2, 428, 11, "<állat>" )
Symbol(7, 439, 6, #BOC# )
Symbol(29, 445, 2, | )
Symbol(3, 447, 4, #0# )
Symbol(2, 451, 7, "áll" )
Symbol(15, 458, 4, <n> )
Symbol(87, 462, 5, <sg> )
Symbol(71, 467, 6, <acc> )
Symbol(29, 473, 2, | )
Symbol(3, 475, 4, #0# )
Symbol(2, 479, 9, "állat" )
Symbol(38, 488, 8, <vblex> )
Symbol(37, 496, 7, <pres> )
Symbol(87, 503, 5, <sg> )
Symbol(2, 508, 6, <s3p> )
Symbol(2, 514, 6, <ind> )
Symbol(29, 520, 2, | )
Symbol(3, 522, 4, #0# )
Symbol(2, 526, 9, "állat" )
Symbol(15, 535, 4, <n> )
Symbol(87, 539, 5, <sg> )
Symbol(55, 544, 6, <nom> )
Symbol(29, 550, 2, | )
Symbol(8, 552, 6, #EOC# )
Symbol(10, 558, 4, $0$ )
Symbol(2, 562, 6, "<.>" )
Symbol(7, 568, 6, #BOC# )
Symbol(29, 574, 2, | )
Symbol(3, 576, 4, #0# )
Symbol(2, 580, 4, "." )
Symbol(64, 584, 7, <sent> )
Symbol(2, 591, 6, <<<<> )
Symbol(29, 597, 2, | )
Symbol(8, 599, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 77 2 87 55 29 3 77 57 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 81 45 29 3 35 48 37 87 59 2 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 3 2 15 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 10, signum = 2, q = 1, out = 13
trans_offset 11, signum = 7, q = 1, out = 14
trans_offset 20, signum = 29, q = 2, out = 23
trans_offset 21, signum = 3, q = 3, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 23, signum = 29, q = 4, out = 34
trans_offset 43, signum = 8, q = 6, out = 46
trans_offset 54, signum = 10, q = 8, out = 4
trans_offset 10, signum = 2, q = 1, out = 13
trans_offset 11, signum = 7, q = 1, out = 14
trans_offset 20, signum = 29, q = 2, out = 23
trans_offset 21, signum = 3, q = 3, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 27, signum = 55, q = 4, out = 26
trans_offset 23, signum = 29, q = 4, out = 34
trans_offset 42, signum = 3, q = 6, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 29, signum = 57, q = 4, out = 28
trans_offset 32, signum = 2, q = 5, out = 25
trans_offset 37, signum = 55, q = 5, out = 26
trans_offset 45, signum = 29, q = 7, out = 34
trans_offset 56, signum = 8, q = 9, out = 46
trans_offset 57, signum = 10, q = 10, out = 4
trans_offset 58, signum = 2, q = 11, out = 13
trans_offset 59, signum = 7, q = 11, out = 14
trans_offset 68, signum = 29, q = 12, out = 23
trans_offset 69, signum = 3, q = 13, out = 72
trans_offset 70, signum = 2, q = 14, out = 73
trans_offset 70, signum = 2, q = 14, out = 73
trans_offset 71, signum = 29, q = 14, out = 34
trans_offset 110, signum = 3, q = 18, out = 113
trans_offset 156, signum = 2, q = 25, out = 159
trans_offset 156, signum = 2, q = 25, out = 159
trans_offset 157, signum = 29, q = 25, out = 34
trans_offset 111, signum = 8, q = 18, out = 46
trans_offset 57, signum = 10, q = 10, out = 4
trans_offset 58, signum = 2, q = 11, out = 13
trans_offset 59, signum = 7, q = 11, out = 14
trans_offset 68, signum = 29, q = 12, out = 23
trans_offset 69, signum = 3, q = 13, out = 72
trans_offset 70, signum = 2, q = 14, out = 73
trans_offset 70, signum = 2, q = 14, out = 73
trans_offset 70, signum = 2, q = 14, out = 73
trans_offset 75, signum = 55, q = 14, out = 74
trans_offset 71, signum = 29, q = 14, out = 34
trans_offset 111, signum = 8, q = 18, out = 46
trans_offset 57, signum = 10, q = 10, out = 4
trans_offset 58, signum = 2, q = 11, out = 13
trans_offset 59, signum = 7, q = 11, out = 14
trans_offset 68, signum = 29, q = 12, out = 23
trans_offset 69, signum = 3, q = 13, out = 72
trans_offset 70, signum = 2, q = 14, out = 73
trans_offset 70, signum = 2, q = 14, out = 73
trans_offset 71, signum = 29, q = 14, out = 34
trans_offset 110, signum = 3, q = 18, out = 113
trans_offset 156, signum = 2, q = 25, out = 159
trans_offset 160, signum = 48, q = 25, out = 167
trans_offset 240, signum = 2, q = 35, out = 243
trans_offset 240, signum = 2, q = 35, out = 243
trans_offset 249, signum = 59, q = 35, out = 164
trans_offset 302, signum = 2, q = 42, out = 233
trans_offset 303, signum = 29, q = 42, out = 242
trans_offset 155, signum = 8, q = 24, out = 46
trans_offset 54, signum = 10, q = 8, out = 4
trans_offset 10, signum = 2, q = 1, out = 13
trans_offset 11, signum = 7, q = 1, out = 14
trans_offset 20, signum = 29, q = 2, out = 23
trans_offset 21, signum = 3, q = 3, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 27, signum = 55, q = 4, out = 26
trans_offset 23, signum = 29, q = 4, out = 34
trans_offset 42, signum = 3, q = 6, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 27, signum = 55, q = 4, out = 26
trans_offset 23, signum = 29, q = 4, out = 34
trans_offset 43, signum = 8, q = 6, out = 46
trans_offset 54, signum = 10, q = 8, out = 4
trans_offset 10, signum = 2, q = 1, out = 13
trans_offset 11, signum = 7, q = 1, out = 14
trans_offset 20, signum = 29, q = 2, out = 23
trans_offset 21, signum = 3, q = 3, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 23, signum = 29, q = 4, out = 34
trans_offset 42, signum = 3, q = 6, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 24, signum = 38, q = 4, out = 31
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 23, signum = 29, q = 4, out = 34
trans_offset 42, signum = 3, q = 6, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 27, signum = 55, q = 4, out = 26
trans_offset 23, signum = 29, q = 4, out = 34
trans_offset 43, signum = 8, q = 6, out = 46
trans_offset 54, signum = 10, q = 8, out = 4
trans_offset 10, signum = 2, q = 1, out = 13
trans_offset 11, signum = 7, q = 1, out = 14
trans_offset 20, signum = 29, q = 2, out = 23
trans_offset 21, signum = 3, q = 3, out = 24
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 22, signum = 2, q = 4, out = 25
trans_offset 23, signum = 29, q = 4, out = 34
trans_offset 43, signum = 8, q = 6, out = 46

Intermediate is(119): 
4 13 14 23 24 25 25 34 46 4 13 14 23 24 25 25 25 26 34 24 25 28 25 26 34 46 4 13 14 23 72 73 73 34 113 159 159 34 46 4 13 14 23 72 73 73 73 74 34 46 4 13 14 23 72 73 73 34 113 159 167 243 243 164 233 242 46 4 13 14 23 24 25 25 25 26 34 24 25 25 25 26 34 46 4 13 14 23 24 25 25 25 25 34 24 25 31 25 25 25 25 34 24 25 25 25 26 34 46 4 13 14 23 24 25 25 25 34 46 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 53, q = 3, out = 29
trans_offset 155, q = 6, out = 7
trans_offset 259, q = 9, out = 2
trans_offset 258, q = 9, out = 10
trans_offset 425, q = 13, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 55
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 54, q = 3, out = 29
trans_offset 157, q = 6, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 216, q = 8, out = 38
trans_offset 210, q = 8, out = 2
trans_offset 209, q = 8, out = 3
trans_offset 54, q = 3, out = 29
trans_offset 157, q = 6, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 209, q = 8, out = 3
trans_offset 53, q = 3, out = 29
trans_offset 155, q = 6, out = 7
trans_offset 259, q = 9, out = 2
trans_offset 258, q = 9, out = 10
trans_offset 425, q = 13, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 55
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 54, q = 3, out = 29
trans_offset 158, q = 6, out = 55
trans_offset 210, q = 8, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 209, q = 8, out = 3
trans_offset 53, q = 3, out = 29
trans_offset 155, q = 6, out = 7
trans_offset 259, q = 9, out = 2
trans_offset 258, q = 9, out = 10
trans_offset 425, q = 13, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 46, q = 2, out = 0
trans_offset 42, q = 2, out = 0
trans_offset 151, q = 5, out = 0
trans_offset 151, q = 5, out = 0
trans_offset 147, q = 5, out = 0
trans_offset 139, q = 5, out = 0
trans_offset 138, q = 5, out = 0
trans_offset 206, q = 7, out = 29
trans_offset 378, q = 12, out = 2
trans_offset 15, q = 2, out = 2
trans_offset 14, q = 2, out = 3
trans_offset 53, q = 3, out = 29
trans_offset 155, q = 6, out = 7
trans_offset 259, q = 9, out = 2
trans_offset 258, q = 9, out = 10
trans_offset 425, q = 13, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 55
trans_offset 15, q = 2, out = 2
trans_offset 15, q = 2, out = 2
trans_offset 15, q = 2, out = 2
trans_offset 14, q = 2, out = 3
trans_offset 53, q = 3, out = 29
trans_offset 155, q = 6, out = 7
trans_offset 259, q = 9, out = 2
trans_offset 258, q = 9, out = 10
trans_offset 425, q = 13, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 37, q = 2, out = 2
trans_offset 37, q = 2, out = 2
trans_offset 36, q = 2, out = 3
trans_offset 54, q = 3, out = 29
trans_offset 167, q = 6, out = 2
trans_offset 220, q = 8, out = 2
trans_offset 219, q = 8, out = 3
trans_offset 53, q = 3, out = 29
trans_offset 155, q = 6, out = 7
trans_offset 259, q = 9, out = 2
trans_offset 258, q = 9, out = 10
trans_offset 425, q = 13, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 55
trans_offset 5, q = 2, out = 2
trans_offset 8, q = 2, out = 57
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 54, q = 3, out = 29
trans_offset 158, q = 6, out = 55
trans_offset 210, q = 8, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 210, q = 8, out = 2
trans_offset 209, q = 8, out = 3
trans_offset 53, q = 3, out = 29
trans_offset 155, q = 6, out = 7
trans_offset 259, q = 9, out = 2
trans_offset 258, q = 9, out = 10
trans_offset 425, q = 13, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 53, q = 3, out = 29
trans_offset 155, q = 6, out = 7
trans_offset 259, q = 9, out = 2
trans_offset 258, q = 9, out = 10

Output is(111): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<Ez>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(77, 65, 5, "ez" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(77, 96, 5, "ez" )
Symbol(57, 0, 0, )
Symbol(87, 107, 5, <sg> )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 130, 8, "<nem>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 150, 6, "nem" )
Symbol(91, 156, 5, <ij> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 167, 6, "nem" )
Symbol(54, 173, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 191, 11, "<madár>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 214, 9, "madár" )
Symbol(15, 223, 4, <n> )
Symbol(87, 227, 5, <sg> )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 250, 9, "<vagy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(81, 271, 7, "vagy" )
Symbol(45, 278, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 343, 9, "<más>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 364, 7, "más" )
Symbol(15, 371, 4, <n> )
Symbol(87, 375, 5, <sg> )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 392, 7, "más" )
Symbol(53, 399, 6, <adj> )
Symbol(87, 405, 5, <sg> )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 428, 11, "<állat>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 451, 7, "áll" )
Symbol(15, 458, 4, <n> )
Symbol(87, 462, 5, <sg> )
Symbol(71, 467, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 479, 9, "állat" )
Symbol(38, 0, 0, )
Symbol(37, 496, 7, <pres> )
Symbol(87, 503, 5, <sg> )
Symbol(2, 508, 6, <s3p> )
Symbol(2, 514, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 9, "állat" )
Symbol(15, 535, 4, <n> )
Symbol(87, 539, 5, <sg> )
Symbol(55, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 562, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 580, 4, "." )
Symbol(64, 584, 7, <sent> )
Symbol(2, 591, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 77 2 87 55 29 3 77 57 87 55 29 8 10 2 7 29 3 2 91 29 3 2 54 29 8 10 2 7 29 3 2 15 87 55 29 8 10 2 7 29 3 81 45 29 8 10 2 7 29 3 2 15 87 55 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 3 2 15 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Most>" #BOC# | #0# "most" <adv> | #EOC# $0$ "<jól>" #BOC# | #0# "jól" <prevb> | #0# "jól" <adv> | #EOC# $0$ "<hallja>" #BOC# | #0# "hall" <vblex> <pres> <sg> <s3p> <def> | #0# "hall" <vblex> <pis> <sg> <s3p> <def> | #0# "hall" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(69): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 9, "<Most>" )
Symbol(7, 55, 6, #BOC# )
Symbol(29, 61, 2, | )
Symbol(3, 63, 4, #0# )
Symbol(2, 67, 7, "most" )
Symbol(54, 74, 6, <adv> )
Symbol(29, 80, 2, | )
Symbol(8, 82, 6, #EOC# )
Symbol(10, 88, 4, $0$ )
Symbol(2, 92, 9, "<jól>" )
Symbol(7, 101, 6, #BOC# )
Symbol(29, 107, 2, | )
Symbol(3, 109, 4, #0# )
Symbol(2, 113, 7, "jól" )
Symbol(60, 120, 8, <prevb> )
Symbol(29, 128, 2, | )
Symbol(3, 130, 4, #0# )
Symbol(2, 134, 7, "jól" )
Symbol(54, 141, 6, <adv> )
Symbol(29, 147, 2, | )
Symbol(8, 149, 6, #EOC# )
Symbol(10, 155, 4, $0$ )
Symbol(2, 159, 11, "<hallja>" )
Symbol(7, 170, 6, #BOC# )
Symbol(29, 176, 2, | )
Symbol(3, 178, 4, #0# )
Symbol(2, 182, 7, "hall" )
Symbol(38, 189, 8, <vblex> )
Symbol(37, 197, 7, <pres> )
Symbol(87, 204, 5, <sg> )
Symbol(2, 209, 6, <s3p> )
Symbol(2, 215, 6, <def> )
Symbol(29, 221, 2, | )
Symbol(3, 223, 4, #0# )
Symbol(2, 227, 7, "hall" )
Symbol(38, 234, 8, <vblex> )
Symbol(40, 242, 6, <pis> )
Symbol(87, 248, 5, <sg> )
Symbol(2, 253, 6, <s3p> )
Symbol(2, 259, 6, <def> )
Symbol(29, 265, 2, | )
Symbol(3, 267, 4, #0# )
Symbol(2, 271, 7, "hall" )
Symbol(15, 278, 4, <n> )
Symbol(87, 282, 5, <sg> )
Symbol(28, 287, 8, <px3ss> )
Symbol(55, 295, 6, <nom> )
Symbol(29, 301, 2, | )
Symbol(8, 303, 6, #EOC# )
Symbol(10, 309, 4, $0$ )
Symbol(2, 313, 6, "<.>" )
Symbol(7, 319, 6, #BOC# )
Symbol(29, 325, 2, | )
Symbol(3, 327, 4, #0# )
Symbol(2, 331, 4, "." )
Symbol(64, 335, 7, <sent> )
Symbol(2, 342, 6, <<<<> )
Symbol(29, 348, 2, | )
Symbol(8, 350, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 60 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 35, signum = 3, q = 12, out = 21
trans_offset 37, signum = 2, q = 13, out = 25
trans_offset 37, signum = 2, q = 13, out = 25
trans_offset 37, signum = 2, q = 13, out = 25
trans_offset 37, signum = 2, q = 13, out = 25
trans_offset 37, signum = 2, q = 13, out = 25
trans_offset 38, signum = 29, q = 13, out = 16
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(69): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 21 25 25 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 21 25 25 25 25 25 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 31, q = 4, out = 0
trans_offset 71, q = 8, out = 0
trans_offset 104, q = 12, out = 0
trans_offset 104, q = 12, out = 0
trans_offset 103, q = 12, out = 0
trans_offset 129, q = 15, out = 0
trans_offset 129, q = 15, out = 0
trans_offset 128, q = 15, out = 0
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(61): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 9, "<Most>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 67, 7, "most" )
Symbol(54, 74, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 92, 9, "<jól>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 113, 7, "jól" )
Symbol(60, 120, 8, <prevb> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 134, 7, "jól" )
Symbol(54, 141, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 159, 11, "<hallja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 182, 7, "hall" )
Symbol(38, 189, 8, <vblex> )
Symbol(37, 197, 7, <pres> )
Symbol(87, 204, 5, <sg> )
Symbol(2, 209, 6, <s3p> )
Symbol(2, 215, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 271, 7, "hall" )
Symbol(15, 278, 4, <n> )
Symbol(87, 282, 5, <sg> )
Symbol(28, 287, 8, <px3ss> )
Symbol(55, 295, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 313, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 331, 4, "." )
Symbol(64, 335, 7, <sent> )
Symbol(2, 342, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 60 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Ez>" #BOC# | #0# "ez" <predet> <sg> <nom> | #0# "ez" <prn> <sg> <nom> | #EOC# $0$ "<csak>" #BOC# | #0# "csak" <adv> | #EOC# $0$ "<Jancsi>" #BOC# | #0# "Jancsi" <np> <sg> <nom> | #EOC# $0$ "<lehet>" #BOC# | #0# "van" <vbser> <pres> <sg> <s3p> <ind> | #0# "lehet" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Rule found: R_1_141_T_1


LRS T1:
Name: R_1_141_T_1
arity: 2
arccount: 111
statecount: 18
linecount: 112
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 33 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 34 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 35 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 36 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 37 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 38 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 1
  in: 2 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 7 -- 
  out: 16 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 33 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 34 -- 
  out: 13 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 35 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 36 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 37 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 38 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 29 -- 
  out: 19 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 3
  in: 3 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 2 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 33 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 34 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 35 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 4
  in: 36 -- 
  out: 25 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 37 -- 
  out: 26 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 38 -- 
  out: 27 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 5
  in: 2 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 5
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 5
  in: 33 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 34 -- 
  out: 23 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 5
  in: 35 -- 
  out: 24 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 5
  in: 36 -- 
  out: 25 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 5
  in: 37 -- 
  out: 34 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 5
  in: 38 -- 
  out: 35 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 6
  in: 3 -- 
  out: 37 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 6
  in: 8 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 7
  in: 2 -- 
  out: 39 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 7
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 7
  in: 33 -- 
  out: 40 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 7
  in: 34 -- 
  out: 41 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 7
  in: 35 -- 
  out: 42 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 7
  in: 36 -- 
  out: 43 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 7
  in: 37 -- 
  out: 44 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 7
  in: 38 -- 
  out: 35 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 8
  in: 2 -- 
  out: 47 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 8
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 8
  in: 33 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 8
  in: 34 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 8
  in: 35 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 8
  in: 36 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 8
  in: 37 -- 
  out: 52 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 8
  in: 38 -- 
  out: 53 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 9
  in: 10 -- 
  out: 8 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(53):
  state_no: 10
  in: 2 -- 
  out: 56 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 10
  in: 29 -- 
  out: 63 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 10
  in: 33 -- 
  out: 57 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 10
  in: 34 -- 
  out: 58 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 10
  in: 35 -- 
  out: 59 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 10
  in: 36 -- 
  out: 60 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 10
  in: 37 -- 
  out: 44 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 10
  in: 38 -- 
  out: 62 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 11
  in: 2 -- 
  out: 64 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 11
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 11
  in: 33 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 11
  in: 34 -- 
  out: 49 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 11
  in: 35 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 11
  in: 36 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 11
  in: 37 -- 
  out: 69 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 11
  in: 38 -- 
  out: 70 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 12
  in: 3 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 12
  in: 8 -- 
  out: 38 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 13
  in: 2 -- 
  out: 74 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 13
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 13
  in: 33 -- 
  out: 75 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 13
  in: 34 -- 
  out: 76 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 13
  in: 35 -- 
  out: 77 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 13
  in: 36 -- 
  out: 78 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 13
  in: 37 -- 
  out: 79 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 13
  in: 38 -- 
  out: 70 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 14
  in: 2 -- 
  out: 21 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 14
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 14
  in: 33 -- 
  out: 22 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 14
  in: 34 -- 
  out: 23 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 14
  in: 35 -- 
  out: 24 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 14
  in: 36 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 14
  in: 37 -- 
  out: 26 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 14
  in: 38 -- 
  out: 27 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 15
  in: 2 -- 
  out: 90 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 15
  in: 29 -- 
  out: 97 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 15
  in: 33 -- 
  out: 91 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 15
  in: 34 -- 
  out: 91 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 15
  in: 35 -- 
  out: 91 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 15
  in: 36 -- 
  out: 91 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 15
  in: 37 -- 
  out: 79 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 15
  in: 38 -- 
  out: 96 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 16
  in: 2 -- 
  out: 29 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 16
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 16
  in: 33 -- 
  out: 22 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 16
  in: 34 -- 
  out: 23 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 16
  in: 35 -- 
  out: 24 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 16
  in: 36 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 16
  in: 37 -- 
  out: 34 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 16
  in: 38 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 17
  in: 2 -- 
  out: 39 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 17
  in: 29 -- 
  out: 28 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 17
  in: 33 -- 
  out: 40 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 17
  in: 34 -- 
  out: 41 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 17
  in: 35 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 17
  in: 36 -- 
  out: 43 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 17
  in: 37 -- 
  out: 44 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 17
  in: 38 -- 
  out: 35 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(111):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(77): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 7, "<Ez>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(77, 65, 5, "ez" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 90, 2, | )
Symbol(3, 92, 4, #0# )
Symbol(77, 96, 5, "ez" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 118, 2, | )
Symbol(8, 120, 6, #EOC# )
Symbol(10, 126, 4, $0$ )
Symbol(2, 130, 9, "<csak>" )
Symbol(7, 139, 6, #BOC# )
Symbol(29, 145, 2, | )
Symbol(3, 147, 4, #0# )
Symbol(2, 151, 7, "csak" )
Symbol(54, 158, 6, <adv> )
Symbol(29, 164, 2, | )
Symbol(8, 166, 6, #EOC# )
Symbol(10, 172, 4, $0$ )
Symbol(2, 176, 11, "<Jancsi>" )
Symbol(7, 187, 6, #BOC# )
Symbol(29, 193, 2, | )
Symbol(3, 195, 4, #0# )
Symbol(2, 199, 9, "Jancsi" )
Symbol(16, 208, 5, <np> )
Symbol(87, 213, 5, <sg> )
Symbol(55, 218, 6, <nom> )
Symbol(29, 224, 2, | )
Symbol(8, 226, 6, #EOC# )
Symbol(10, 232, 4, $0$ )
Symbol(2, 236, 10, "<lehet>" )
Symbol(7, 246, 6, #BOC# )
Symbol(29, 252, 2, | )
Symbol(3, 254, 4, #0# )
Symbol(35, 258, 6, "van" )
Symbol(48, 264, 8, <vbser> )
Symbol(37, 272, 7, <pres> )
Symbol(87, 279, 5, <sg> )
Symbol(2, 284, 6, <s3p> )
Symbol(2, 290, 6, <ind> )
Symbol(29, 296, 2, | )
Symbol(3, 298, 4, #0# )
Symbol(33, 302, 8, "lehet" )
Symbol(38, 310, 8, <vblex> )
Symbol(37, 318, 7, <pres> )
Symbol(87, 325, 5, <sg> )
Symbol(2, 330, 6, <s3p> )
Symbol(2, 336, 6, <ind> )
Symbol(29, 342, 2, | )
Symbol(8, 344, 6, #EOC# )
Symbol(10, 350, 4, $0$ )
Symbol(2, 354, 6, "<!>" )
Symbol(7, 360, 6, #BOC# )
Symbol(29, 366, 2, | )
Symbol(3, 368, 4, #0# )
Symbol(39, 372, 4, "!" )
Symbol(64, 376, 7, <sent> )
Symbol(2, 383, 6, <<<<> )
Symbol(29, 389, 2, | )
Symbol(8, 391, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 77 2 87 55 29 3 77 57 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 3 33 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 34, signum = 3, q = 6, out = 37
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 44, signum = 2, q = 8, out = 47
trans_offset 45, signum = 29, q = 8, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 22, signum = 35, q = 4, out = 24
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 32, signum = 37, q = 5, out = 34
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 34, signum = 3, q = 6, out = 37
trans_offset 46, signum = 33, q = 8, out = 48
trans_offset 68, signum = 38, q = 11, out = 70
trans_offset 77, signum = 37, q = 13, out = 79
trans_offset 87, signum = 2, q = 15, out = 90
trans_offset 87, signum = 2, q = 15, out = 90
trans_offset 87, signum = 2, q = 15, out = 90
trans_offset 88, signum = 29, q = 15, out = 97
trans_offset 35, signum = 8, q = 6, out = 38
trans_offset 52, signum = 10, q = 9, out = 8
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 16
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 35, signum = 8, q = 6, out = 38

Intermediate is(77): 
8 11 16 19 20 21 21 28 38 8 11 16 19 20 21 21 21 21 28 37 47 47 47 47 28 38 8 11 16 19 20 21 21 28 38 8 11 16 19 20 21 21 21 21 28 38 8 11 16 19 20 24 29 34 29 29 29 28 37 48 70 79 90 90 90 97 38 8 11 16 19 20 21 21 21 28 38 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 44, q = 2, out = 0
trans_offset 44, q = 2, out = 0
trans_offset 44, q = 2, out = 0
trans_offset 43, q = 2, out = 0
trans_offset 84, q = 4, out = 0
trans_offset 157, q = 6, out = 0
trans_offset 286, q = 10, out = 0
trans_offset 370, q = 13, out = 29
trans_offset 432, q = 16, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 13, q = 2, out = 37
trans_offset 59, q = 4, out = 2
trans_offset 55, q = 4, out = 35
trans_offset 51, q = 4, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 15, q = 2, out = 3
trans_offset 48, q = 3, out = 29
trans_offset 96, q = 5, out = 2
trans_offset 182, q = 7, out = 2
trans_offset 182, q = 7, out = 2
trans_offset 182, q = 7, out = 2
trans_offset 181, q = 7, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10
trans_offset 325, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 47, q = 3, out = 29
trans_offset 94, q = 5, out = 7
trans_offset 225, q = 8, out = 2
trans_offset 224, q = 8, out = 10

Output is(69): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 7, "<Ez>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(77, 65, 5, "ez" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(77, 96, 5, "ez" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 130, 9, "<csak>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 151, 7, "csak" )
Symbol(54, 158, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 176, 11, "<Jancsi>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 199, 9, "Jancsi" )
Symbol(16, 208, 5, <np> )
Symbol(87, 213, 5, <sg> )
Symbol(55, 218, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 236, 10, "<lehet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(35, 0, 0, )
Symbol(48, 264, 8, <vbser> )
Symbol(37, 0, 0, )
Symbol(87, 279, 5, <sg> )
Symbol(2, 284, 6, <s3p> )
Symbol(2, 290, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 354, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 372, 4, "!" )
Symbol(64, 376, 7, <sent> )
Symbol(2, 383, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 77 2 87 55 29 3 77 57 87 55 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 16 87 55 29 8 10 2 7 29 3 35 48 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Aztán>" #BOC# | #0# "aztán" <cnjadv> | #0# "aztán" <adv> | #EOC# $0$ "<egy>" #BOC# | #0# "egy" <det> <ind> | #0# "egy" <adv> | #EOC# $0$ "<kis>" #BOC# | #0# "kis" <adj> <sg> <nom> | #EOC# $0$ "<kezet>" #BOC# | #0# "kéz" <n> <sg> <acc> | #EOC# $0$ "<is>" #BOC# | #0# "is" <adv> | #EOC# $0$ "<lát>" #BOC# | #0# "la" <n> <sg> <acc> | #0# "lát" <vblex> <pres> <sg> <s3p> <ind> | #0# "lát" <n> <sg> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<mikor>" #BOC# | #0# "mikor" <cnjadv> | #0# "mikor" <adv> <itg> | #EOC# $0$ "<közelebb>" #BOC# | #0# "közelebb" <adv> | #EOC# $0$ "<megy>" #BOC# | #0# "megy" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<fejét>" #BOC# | #0# "fő" <n> <sg> <px3ss> <acc> | #0# "fej" <n> <sg> <pxs> <acc> | #0# "fej" <n> <sg> <px3ss> <acc> | #EOC# $0$ "<is>" #BOC# | #0# "is" <adv> | #EOC# $0$ "<látja>" #BOC# | #0# "lát" <vblex> <pres> <sg> <s3p> <def> | #0# "lát" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Rule found: R_1_128_T_1


LRS T1:
Name: R_1_128_T_1
arity: 2
arccount: 990
statecount: 77
linecount: 991
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 17 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 18 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 19 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 20 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 21 -- 
  out: 11 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 0
  in: 22 -- 
  out: 12 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(9):
  state_no: 0
  in: 23 -- 
  out: 13 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(10):
  state_no: 0
  in: 24 -- 
  out: 14 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(11):
  state_no: 0
  in: 25 -- 
  out: 15 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(12):
  state_no: 0
  in: 26 -- 
  out: 16 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(13):
  state_no: 0
  in: 27 -- 
  out: 17 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(14):
  state_no: 0
  in: 28 -- 
  out: 18 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(15):
  state_no: 0
  in: 30 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(16):
  state_no: 0
  in: 31 -- 
  out: 19 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(17):
  state_no: 0
  in: 32 -- 
  out: 20 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(18):
  state_no: 1
  in: 2 -- 
  out: 21 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 1
  in: 7 -- 
  out: 23 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 1
  in: 15 -- 
  out: 24 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 1
  in: 17 -- 
  out: 25 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 1
  in: 18 -- 
  out: 26 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 1
  in: 19 -- 
  out: 27 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 1
  in: 20 -- 
  out: 28 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 1
  in: 21 -- 
  out: 29 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 1
  in: 22 -- 
  out: 30 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 1
  in: 23 -- 
  out: 31 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 1
  in: 24 -- 
  out: 32 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 1
  in: 25 -- 
  out: 33 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 1
  in: 26 -- 
  out: 34 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 1
  in: 27 -- 
  out: 35 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 1
  in: 28 -- 
  out: 36 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 1
  in: 30 -- 
  out: 22 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 1
  in: 31 -- 
  out: 37 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 1
  in: 32 -- 
  out: 38 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 2
  in: 29 -- 
  out: 39 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 3
  in: 3 -- 
  out: 40 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 4
  in: 2 -- 
  out: 41 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 4
  in: 15 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 4
  in: 17 -- 
  out: 44 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 4
  in: 18 -- 
  out: 45 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 4
  in: 19 -- 
  out: 46 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 4
  in: 20 -- 
  out: 47 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 4
  in: 21 -- 
  out: 48 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 4
  in: 22 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 4
  in: 23 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 4
  in: 24 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 4
  in: 25 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 4
  in: 26 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 4
  in: 27 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 4
  in: 28 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 4
  in: 29 -- 
  out: 58 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 4
  in: 30 -- 
  out: 42 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 4
  in: 31 -- 
  out: 56 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 4
  in: 32 -- 
  out: 57 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 5
  in: 2 -- 
  out: 59 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 5
  in: 15 -- 
  out: 43 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 5
  in: 17 -- 
  out: 62 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 5
  in: 18 -- 
  out: 63 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 5
  in: 19 -- 
  out: 64 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 5
  in: 20 -- 
  out: 65 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 5
  in: 21 -- 
  out: 66 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 5
  in: 22 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 5
  in: 23 -- 
  out: 68 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 5
  in: 24 -- 
  out: 69 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 5
  in: 25 -- 
  out: 70 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 5
  in: 26 -- 
  out: 71 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 5
  in: 27 -- 
  out: 72 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 5
  in: 28 -- 
  out: 73 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 5
  in: 29 -- 
  out: 58 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 5
  in: 30 -- 
  out: 60 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 5
  in: 31 -- 
  out: 74 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 5
  in: 32 -- 
  out: 75 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 6
  in: 2 -- 
  out: 41 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 6
  in: 15 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 6
  in: 17 -- 
  out: 44 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 6
  in: 18 -- 
  out: 45 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 6
  in: 19 -- 
  out: 46 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 6
  in: 20 -- 
  out: 47 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 6
  in: 21 -- 
  out: 48 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 6
  in: 22 -- 
  out: 49 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 6
  in: 23 -- 
  out: 50 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 6
  in: 24 -- 
  out: 51 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 6
  in: 25 -- 
  out: 52 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 6
  in: 26 -- 
  out: 53 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 6
  in: 27 -- 
  out: 54 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 6
  in: 28 -- 
  out: 55 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 6
  in: 29 -- 
  out: 58 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 6
  in: 30 -- 
  out: 42 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 6
  in: 31 -- 
  out: 56 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 6
  in: 32 -- 
  out: 57 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 7
  in: 3 -- 
  out: 95 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 7
  in: 8 -- 
  out: 96 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 8
  in: 2 -- 
  out: 59 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 8
  in: 15 -- 
  out: 43 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 8
  in: 17 -- 
  out: 62 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 8
  in: 18 -- 
  out: 63 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 8
  in: 19 -- 
  out: 64 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 8
  in: 20 -- 
  out: 65 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 8
  in: 21 -- 
  out: 66 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 8
  in: 22 -- 
  out: 67 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 8
  in: 23 -- 
  out: 68 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 8
  in: 24 -- 
  out: 69 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 8
  in: 25 -- 
  out: 70 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 8
  in: 26 -- 
  out: 71 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 8
  in: 27 -- 
  out: 72 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 8
  in: 28 -- 
  out: 73 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 8
  in: 29 -- 
  out: 58 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 8
  in: 30 -- 
  out: 60 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 8
  in: 31 -- 
  out: 74 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 8
  in: 32 -- 
  out: 75 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 9
  in: 2 -- 
  out: 115 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 9
  in: 15 -- 
  out: 117 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 9
  in: 17 -- 
  out: 118 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 9
  in: 18 -- 
  out: 119 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 9
  in: 19 -- 
  out: 120 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 9
  in: 20 -- 
  out: 121 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 9
  in: 21 -- 
  out: 122 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 9
  in: 22 -- 
  out: 123 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 9
  in: 23 -- 
  out: 124 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 9
  in: 24 -- 
  out: 125 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 9
  in: 25 -- 
  out: 126 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 9
  in: 26 -- 
  out: 127 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 9
  in: 27 -- 
  out: 128 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 9
  in: 28 -- 
  out: 129 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 9
  in: 29 -- 
  out: 132 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 9
  in: 30 -- 
  out: 116 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 9
  in: 31 -- 
  out: 74 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 9
  in: 32 -- 
  out: 75 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 10
  in: 3 -- 
  out: 95 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 10
  in: 8 -- 
  out: 96 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 11
  in: 2 -- 
  out: 135 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 11
  in: 15 -- 
  out: 137 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 11
  in: 17 -- 
  out: 138 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 11
  in: 18 -- 
  out: 139 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 11
  in: 19 -- 
  out: 140 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 11
  in: 20 -- 
  out: 141 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 11
  in: 21 -- 
  out: 142 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 11
  in: 22 -- 
  out: 143 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 11
  in: 23 -- 
  out: 144 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 11
  in: 24 -- 
  out: 145 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 11
  in: 25 -- 
  out: 146 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 11
  in: 26 -- 
  out: 147 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 11
  in: 27 -- 
  out: 148 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 11
  in: 28 -- 
  out: 149 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 11
  in: 29 -- 
  out: 58 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 11
  in: 30 -- 
  out: 136 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 11
  in: 31 -- 
  out: 150 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 11
  in: 32 -- 
  out: 151 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 12
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(151):
  state_no: 13
  in: 3 -- 
  out: 40 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 13
  in: 8 -- 
  out: 96 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 14
  in: 2 -- 
  out: 135 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 14
  in: 15 -- 
  out: 137 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 14
  in: 17 -- 
  out: 138 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 14
  in: 18 -- 
  out: 139 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 14
  in: 19 -- 
  out: 140 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(158):
  state_no: 14
  in: 20 -- 
  out: 141 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(159):
  state_no: 14
  in: 21 -- 
  out: 142 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(160):
  state_no: 14
  in: 22 -- 
  out: 143 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(161):
  state_no: 14
  in: 23 -- 
  out: 144 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(162):
  state_no: 14
  in: 24 -- 
  out: 145 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(163):
  state_no: 14
  in: 25 -- 
  out: 146 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(164):
  state_no: 14
  in: 26 -- 
  out: 147 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(165):
  state_no: 14
  in: 27 -- 
  out: 148 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(166):
  state_no: 14
  in: 28 -- 
  out: 149 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(167):
  state_no: 14
  in: 29 -- 
  out: 58 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(168):
  state_no: 14
  in: 30 -- 
  out: 136 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(169):
  state_no: 14
  in: 31 -- 
  out: 150 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(170):
  state_no: 14
  in: 32 -- 
  out: 151 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(171):
  state_no: 15
  in: 10 -- 
  out: 5 -- 
  target: 20
  final_state: 1
  start_state: 0
Elem(172):
  state_no: 16
  in: 2 -- 
  out: 175 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(173):
  state_no: 16
  in: 15 -- 
  out: 137 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(174):
  state_no: 16
  in: 17 -- 
  out: 178 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(175):
  state_no: 16
  in: 18 -- 
  out: 179 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(176):
  state_no: 16
  in: 19 -- 
  out: 180 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(177):
  state_no: 16
  in: 20 -- 
  out: 181 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(178):
  state_no: 16
  in: 21 -- 
  out: 182 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(179):
  state_no: 16
  in: 22 -- 
  out: 183 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(180):
  state_no: 16
  in: 23 -- 
  out: 184 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(181):
  state_no: 16
  in: 24 -- 
  out: 185 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(182):
  state_no: 16
  in: 25 -- 
  out: 186 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(183):
  state_no: 16
  in: 26 -- 
  out: 187 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(184):
  state_no: 16
  in: 27 -- 
  out: 188 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(185):
  state_no: 16
  in: 28 -- 
  out: 189 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(186):
  state_no: 16
  in: 29 -- 
  out: 58 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(187):
  state_no: 16
  in: 30 -- 
  out: 176 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(188):
  state_no: 16
  in: 31 -- 
  out: 190 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(189):
  state_no: 16
  in: 32 -- 
  out: 191 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(190):
  state_no: 17
  in: 2 -- 
  out: 41 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(191):
  state_no: 17
  in: 15 -- 
  out: 43 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(192):
  state_no: 17
  in: 17 -- 
  out: 44 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(193):
  state_no: 17
  in: 18 -- 
  out: 45 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(194):
  state_no: 17
  in: 19 -- 
  out: 46 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(195):
  state_no: 17
  in: 20 -- 
  out: 47 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(196):
  state_no: 17
  in: 21 -- 
  out: 48 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(197):
  state_no: 17
  in: 22 -- 
  out: 49 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(198):
  state_no: 17
  in: 23 -- 
  out: 50 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(199):
  state_no: 17
  in: 24 -- 
  out: 51 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(200):
  state_no: 17
  in: 25 -- 
  out: 52 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(201):
  state_no: 17
  in: 26 -- 
  out: 53 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(202):
  state_no: 17
  in: 27 -- 
  out: 54 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(203):
  state_no: 17
  in: 28 -- 
  out: 55 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(204):
  state_no: 17
  in: 29 -- 
  out: 58 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(205):
  state_no: 17
  in: 30 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(206):
  state_no: 17
  in: 31 -- 
  out: 56 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(207):
  state_no: 17
  in: 32 -- 
  out: 57 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(208):
  state_no: 18
  in: 2 -- 
  out: 175 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(209):
  state_no: 18
  in: 15 -- 
  out: 137 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(210):
  state_no: 18
  in: 17 -- 
  out: 178 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(211):
  state_no: 18
  in: 18 -- 
  out: 179 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(212):
  state_no: 18
  in: 19 -- 
  out: 180 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(213):
  state_no: 18
  in: 20 -- 
  out: 181 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(214):
  state_no: 18
  in: 21 -- 
  out: 182 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(215):
  state_no: 18
  in: 22 -- 
  out: 183 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(216):
  state_no: 18
  in: 23 -- 
  out: 184 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(217):
  state_no: 18
  in: 24 -- 
  out: 185 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(218):
  state_no: 18
  in: 25 -- 
  out: 186 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(219):
  state_no: 18
  in: 26 -- 
  out: 187 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(220):
  state_no: 18
  in: 27 -- 
  out: 188 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(221):
  state_no: 18
  in: 28 -- 
  out: 189 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(222):
  state_no: 18
  in: 29 -- 
  out: 58 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(223):
  state_no: 18
  in: 30 -- 
  out: 176 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(224):
  state_no: 18
  in: 31 -- 
  out: 190 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(225):
  state_no: 18
  in: 32 -- 
  out: 191 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(226):
  state_no: 19
  in: 2 -- 
  out: 135 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(227):
  state_no: 19
  in: 15 -- 
  out: 137 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(228):
  state_no: 19
  in: 17 -- 
  out: 138 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(229):
  state_no: 19
  in: 18 -- 
  out: 139 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(230):
  state_no: 19
  in: 19 -- 
  out: 140 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(231):
  state_no: 19
  in: 20 -- 
  out: 141 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(232):
  state_no: 19
  in: 21 -- 
  out: 142 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(233):
  state_no: 19
  in: 22 -- 
  out: 143 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(234):
  state_no: 19
  in: 23 -- 
  out: 144 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(235):
  state_no: 19
  in: 24 -- 
  out: 145 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(236):
  state_no: 19
  in: 25 -- 
  out: 146 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(237):
  state_no: 19
  in: 26 -- 
  out: 147 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(238):
  state_no: 19
  in: 27 -- 
  out: 148 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(239):
  state_no: 19
  in: 28 -- 
  out: 149 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(240):
  state_no: 19
  in: 29 -- 
  out: 58 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(241):
  state_no: 19
  in: 30 -- 
  out: 136 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(242):
  state_no: 19
  in: 31 -- 
  out: 150 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(243):
  state_no: 19
  in: 32 -- 
  out: 151 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(244):
  state_no: 20
  in: 2 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(245):
  state_no: 20
  in: 7 -- 
  out: 23 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(246):
  state_no: 20
  in: 15 -- 
  out: 24 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(247):
  state_no: 20
  in: 17 -- 
  out: 25 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(248):
  state_no: 20
  in: 18 -- 
  out: 26 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(249):
  state_no: 20
  in: 19 -- 
  out: 27 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(250):
  state_no: 20
  in: 20 -- 
  out: 28 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(251):
  state_no: 20
  in: 21 -- 
  out: 29 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(252):
  state_no: 20
  in: 22 -- 
  out: 30 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(253):
  state_no: 20
  in: 23 -- 
  out: 31 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(254):
  state_no: 20
  in: 24 -- 
  out: 32 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(255):
  state_no: 20
  in: 25 -- 
  out: 33 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(256):
  state_no: 20
  in: 26 -- 
  out: 34 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(257):
  state_no: 20
  in: 27 -- 
  out: 35 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(258):
  state_no: 20
  in: 28 -- 
  out: 36 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(259):
  state_no: 20
  in: 30 -- 
  out: 22 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(260):
  state_no: 20
  in: 31 -- 
  out: 37 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(261):
  state_no: 20
  in: 32 -- 
  out: 38 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(262):
  state_no: 21
  in: 2 -- 
  out: 265 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(263):
  state_no: 21
  in: 15 -- 
  out: 267 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(264):
  state_no: 21
  in: 17 -- 
  out: 268 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(265):
  state_no: 21
  in: 18 -- 
  out: 269 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(266):
  state_no: 21
  in: 19 -- 
  out: 270 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(267):
  state_no: 21
  in: 20 -- 
  out: 271 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(268):
  state_no: 21
  in: 21 -- 
  out: 272 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(269):
  state_no: 21
  in: 22 -- 
  out: 273 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(270):
  state_no: 21
  in: 23 -- 
  out: 274 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(271):
  state_no: 21
  in: 24 -- 
  out: 275 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(272):
  state_no: 21
  in: 25 -- 
  out: 276 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(273):
  state_no: 21
  in: 26 -- 
  out: 277 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(274):
  state_no: 21
  in: 27 -- 
  out: 278 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(275):
  state_no: 21
  in: 28 -- 
  out: 279 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(276):
  state_no: 21
  in: 29 -- 
  out: 282 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(277):
  state_no: 21
  in: 30 -- 
  out: 266 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(278):
  state_no: 21
  in: 31 -- 
  out: 190 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(279):
  state_no: 21
  in: 32 -- 
  out: 191 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(280):
  state_no: 22
  in: 2 -- 
  out: 59 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(281):
  state_no: 22
  in: 15 -- 
  out: 43 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(282):
  state_no: 22
  in: 17 -- 
  out: 62 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(283):
  state_no: 22
  in: 18 -- 
  out: 63 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(284):
  state_no: 22
  in: 19 -- 
  out: 64 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(285):
  state_no: 22
  in: 20 -- 
  out: 65 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(286):
  state_no: 22
  in: 21 -- 
  out: 66 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(287):
  state_no: 22
  in: 22 -- 
  out: 67 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(288):
  state_no: 22
  in: 23 -- 
  out: 68 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(289):
  state_no: 22
  in: 24 -- 
  out: 69 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(290):
  state_no: 22
  in: 25 -- 
  out: 70 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(291):
  state_no: 22
  in: 26 -- 
  out: 71 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(292):
  state_no: 22
  in: 27 -- 
  out: 72 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(293):
  state_no: 22
  in: 28 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(294):
  state_no: 22
  in: 29 -- 
  out: 58 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(295):
  state_no: 22
  in: 30 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(296):
  state_no: 22
  in: 31 -- 
  out: 74 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(297):
  state_no: 22
  in: 32 -- 
  out: 75 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(298):
  state_no: 23
  in: 2 -- 
  out: 41 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(299):
  state_no: 23
  in: 15 -- 
  out: 43 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(300):
  state_no: 23
  in: 17 -- 
  out: 44 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(301):
  state_no: 23
  in: 18 -- 
  out: 45 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(302):
  state_no: 23
  in: 19 -- 
  out: 46 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(303):
  state_no: 23
  in: 20 -- 
  out: 47 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(304):
  state_no: 23
  in: 21 -- 
  out: 48 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(305):
  state_no: 23
  in: 22 -- 
  out: 49 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(306):
  state_no: 23
  in: 23 -- 
  out: 50 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(307):
  state_no: 23
  in: 24 -- 
  out: 51 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(308):
  state_no: 23
  in: 25 -- 
  out: 52 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(309):
  state_no: 23
  in: 26 -- 
  out: 53 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(310):
  state_no: 23
  in: 27 -- 
  out: 54 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(311):
  state_no: 23
  in: 28 -- 
  out: 55 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(312):
  state_no: 23
  in: 29 -- 
  out: 58 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(313):
  state_no: 23
  in: 30 -- 
  out: 42 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(314):
  state_no: 23
  in: 31 -- 
  out: 56 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(315):
  state_no: 23
  in: 32 -- 
  out: 57 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(316):
  state_no: 24
  in: 3 -- 
  out: 95 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(317):
  state_no: 24
  in: 8 -- 
  out: 96 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(318):
  state_no: 25
  in: 2 -- 
  out: 175 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(319):
  state_no: 25
  in: 15 -- 
  out: 137 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(320):
  state_no: 25
  in: 17 -- 
  out: 178 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(321):
  state_no: 25
  in: 18 -- 
  out: 179 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(322):
  state_no: 25
  in: 19 -- 
  out: 180 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(323):
  state_no: 25
  in: 20 -- 
  out: 181 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(324):
  state_no: 25
  in: 21 -- 
  out: 182 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(325):
  state_no: 25
  in: 22 -- 
  out: 183 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(326):
  state_no: 25
  in: 23 -- 
  out: 184 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(327):
  state_no: 25
  in: 24 -- 
  out: 185 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(328):
  state_no: 25
  in: 25 -- 
  out: 186 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(329):
  state_no: 25
  in: 26 -- 
  out: 187 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(330):
  state_no: 25
  in: 27 -- 
  out: 188 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(331):
  state_no: 25
  in: 28 -- 
  out: 189 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(332):
  state_no: 25
  in: 29 -- 
  out: 58 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(333):
  state_no: 25
  in: 30 -- 
  out: 176 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(334):
  state_no: 25
  in: 31 -- 
  out: 190 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(335):
  state_no: 25
  in: 32 -- 
  out: 191 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(336):
  state_no: 26
  in: 2 -- 
  out: 265 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(337):
  state_no: 26
  in: 15 -- 
  out: 267 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(338):
  state_no: 26
  in: 17 -- 
  out: 268 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(339):
  state_no: 26
  in: 18 -- 
  out: 269 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(340):
  state_no: 26
  in: 19 -- 
  out: 270 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(341):
  state_no: 26
  in: 20 -- 
  out: 271 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(342):
  state_no: 26
  in: 21 -- 
  out: 272 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(343):
  state_no: 26
  in: 22 -- 
  out: 273 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(344):
  state_no: 26
  in: 23 -- 
  out: 274 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(345):
  state_no: 26
  in: 24 -- 
  out: 275 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(346):
  state_no: 26
  in: 25 -- 
  out: 276 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(347):
  state_no: 26
  in: 26 -- 
  out: 277 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(348):
  state_no: 26
  in: 27 -- 
  out: 278 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(349):
  state_no: 26
  in: 28 -- 
  out: 279 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(350):
  state_no: 26
  in: 29 -- 
  out: 282 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(351):
  state_no: 26
  in: 30 -- 
  out: 266 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(352):
  state_no: 26
  in: 31 -- 
  out: 190 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(353):
  state_no: 26
  in: 32 -- 
  out: 191 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(354):
  state_no: 27
  in: 29 -- 
  out: 39 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(355):
  state_no: 28
  in: 2 -- 
  out: 59 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(356):
  state_no: 28
  in: 15 -- 
  out: 43 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(357):
  state_no: 28
  in: 17 -- 
  out: 62 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(358):
  state_no: 28
  in: 18 -- 
  out: 63 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(359):
  state_no: 28
  in: 19 -- 
  out: 64 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(360):
  state_no: 28
  in: 20 -- 
  out: 65 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(361):
  state_no: 28
  in: 21 -- 
  out: 66 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(362):
  state_no: 28
  in: 22 -- 
  out: 67 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(363):
  state_no: 28
  in: 23 -- 
  out: 68 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(364):
  state_no: 28
  in: 24 -- 
  out: 69 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(365):
  state_no: 28
  in: 25 -- 
  out: 70 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(366):
  state_no: 28
  in: 26 -- 
  out: 71 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(367):
  state_no: 28
  in: 27 -- 
  out: 72 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(368):
  state_no: 28
  in: 28 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(369):
  state_no: 28
  in: 29 -- 
  out: 58 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(370):
  state_no: 28
  in: 30 -- 
  out: 60 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(371):
  state_no: 28
  in: 31 -- 
  out: 74 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(372):
  state_no: 28
  in: 32 -- 
  out: 75 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(373):
  state_no: 29
  in: 3 -- 
  out: 95 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(374):
  state_no: 29
  in: 8 -- 
  out: 96 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(375):
  state_no: 30
  in: 2 -- 
  out: 135 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(376):
  state_no: 30
  in: 15 -- 
  out: 137 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(377):
  state_no: 30
  in: 17 -- 
  out: 138 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(378):
  state_no: 30
  in: 18 -- 
  out: 139 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(379):
  state_no: 30
  in: 19 -- 
  out: 140 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(380):
  state_no: 30
  in: 20 -- 
  out: 141 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(381):
  state_no: 30
  in: 21 -- 
  out: 142 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(382):
  state_no: 30
  in: 22 -- 
  out: 143 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(383):
  state_no: 30
  in: 23 -- 
  out: 144 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(384):
  state_no: 30
  in: 24 -- 
  out: 145 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(385):
  state_no: 30
  in: 25 -- 
  out: 146 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(386):
  state_no: 30
  in: 26 -- 
  out: 147 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(387):
  state_no: 30
  in: 27 -- 
  out: 148 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(388):
  state_no: 30
  in: 28 -- 
  out: 149 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(389):
  state_no: 30
  in: 29 -- 
  out: 58 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(390):
  state_no: 30
  in: 30 -- 
  out: 136 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(391):
  state_no: 30
  in: 31 -- 
  out: 150 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(392):
  state_no: 30
  in: 32 -- 
  out: 151 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(393):
  state_no: 31
  in: 10 -- 
  out: 5 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(394):
  state_no: 32
  in: 3 -- 
  out: 397 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(395):
  state_no: 33
  in: 2 -- 
  out: 135 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(396):
  state_no: 33
  in: 15 -- 
  out: 137 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(397):
  state_no: 33
  in: 17 -- 
  out: 138 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(398):
  state_no: 33
  in: 18 -- 
  out: 139 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(399):
  state_no: 33
  in: 19 -- 
  out: 140 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(400):
  state_no: 33
  in: 20 -- 
  out: 141 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(401):
  state_no: 33
  in: 21 -- 
  out: 142 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(402):
  state_no: 33
  in: 22 -- 
  out: 143 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(403):
  state_no: 33
  in: 23 -- 
  out: 144 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(404):
  state_no: 33
  in: 24 -- 
  out: 145 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(405):
  state_no: 33
  in: 25 -- 
  out: 146 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(406):
  state_no: 33
  in: 26 -- 
  out: 147 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(407):
  state_no: 33
  in: 27 -- 
  out: 148 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(408):
  state_no: 33
  in: 28 -- 
  out: 149 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(409):
  state_no: 33
  in: 29 -- 
  out: 58 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(410):
  state_no: 33
  in: 30 -- 
  out: 136 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(411):
  state_no: 33
  in: 31 -- 
  out: 150 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(412):
  state_no: 33
  in: 32 -- 
  out: 151 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(413):
  state_no: 34
  in: 10 -- 
  out: 5 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(414):
  state_no: 35
  in: 2 -- 
  out: 175 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(415):
  state_no: 35
  in: 15 -- 
  out: 137 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(416):
  state_no: 35
  in: 17 -- 
  out: 178 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(417):
  state_no: 35
  in: 18 -- 
  out: 179 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(418):
  state_no: 35
  in: 19 -- 
  out: 180 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(419):
  state_no: 35
  in: 20 -- 
  out: 181 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(420):
  state_no: 35
  in: 21 -- 
  out: 182 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(421):
  state_no: 35
  in: 22 -- 
  out: 183 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(422):
  state_no: 35
  in: 23 -- 
  out: 184 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(423):
  state_no: 35
  in: 24 -- 
  out: 185 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(424):
  state_no: 35
  in: 25 -- 
  out: 186 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(425):
  state_no: 35
  in: 26 -- 
  out: 187 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(426):
  state_no: 35
  in: 27 -- 
  out: 188 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(427):
  state_no: 35
  in: 28 -- 
  out: 189 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(428):
  state_no: 35
  in: 29 -- 
  out: 58 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(429):
  state_no: 35
  in: 30 -- 
  out: 176 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(430):
  state_no: 35
  in: 31 -- 
  out: 190 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(431):
  state_no: 35
  in: 32 -- 
  out: 191 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(432):
  state_no: 36
  in: 2 -- 
  out: 21 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(433):
  state_no: 36
  in: 7 -- 
  out: 23 -- 
  target: 41
  final_state: 0
  start_state: 0
Elem(434):
  state_no: 36
  in: 15 -- 
  out: 24 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(435):
  state_no: 36
  in: 17 -- 
  out: 25 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(436):
  state_no: 36
  in: 18 -- 
  out: 26 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(437):
  state_no: 36
  in: 19 -- 
  out: 27 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(438):
  state_no: 36
  in: 20 -- 
  out: 28 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(439):
  state_no: 36
  in: 21 -- 
  out: 29 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(440):
  state_no: 36
  in: 22 -- 
  out: 30 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(441):
  state_no: 36
  in: 23 -- 
  out: 31 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(442):
  state_no: 36
  in: 24 -- 
  out: 32 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(443):
  state_no: 36
  in: 25 -- 
  out: 33 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(444):
  state_no: 36
  in: 26 -- 
  out: 34 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(445):
  state_no: 36
  in: 27 -- 
  out: 35 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(446):
  state_no: 36
  in: 28 -- 
  out: 36 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(447):
  state_no: 36
  in: 30 -- 
  out: 22 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(448):
  state_no: 36
  in: 31 -- 
  out: 37 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(449):
  state_no: 36
  in: 32 -- 
  out: 38 -- 
  target: 36
  final_state: 0
  start_state: 0
Elem(450):
  state_no: 37
  in: 2 -- 
  out: 453 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(451):
  state_no: 37
  in: 15 -- 
  out: 455 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(452):
  state_no: 37
  in: 17 -- 
  out: 456 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(453):
  state_no: 37
  in: 18 -- 
  out: 457 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(454):
  state_no: 37
  in: 19 -- 
  out: 458 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(455):
  state_no: 37
  in: 20 -- 
  out: 459 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(456):
  state_no: 37
  in: 21 -- 
  out: 460 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(457):
  state_no: 37
  in: 22 -- 
  out: 461 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(458):
  state_no: 37
  in: 23 -- 
  out: 462 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(459):
  state_no: 37
  in: 24 -- 
  out: 463 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(460):
  state_no: 37
  in: 25 -- 
  out: 464 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(461):
  state_no: 37
  in: 26 -- 
  out: 465 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(462):
  state_no: 37
  in: 27 -- 
  out: 466 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(463):
  state_no: 37
  in: 28 -- 
  out: 467 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(464):
  state_no: 37
  in: 29 -- 
  out: 58 -- 
  target: 42
  final_state: 0
  start_state: 0
Elem(465):
  state_no: 37
  in: 30 -- 
  out: 454 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(466):
  state_no: 37
  in: 31 -- 
  out: 468 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(467):
  state_no: 37
  in: 32 -- 
  out: 469 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(468):
  state_no: 38
  in: 2 -- 
  out: 175 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(469):
  state_no: 38
  in: 15 -- 
  out: 137 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(470):
  state_no: 38
  in: 17 -- 
  out: 178 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(471):
  state_no: 38
  in: 18 -- 
  out: 179 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(472):
  state_no: 38
  in: 19 -- 
  out: 180 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(473):
  state_no: 38
  in: 20 -- 
  out: 181 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(474):
  state_no: 38
  in: 21 -- 
  out: 182 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(475):
  state_no: 38
  in: 22 -- 
  out: 183 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(476):
  state_no: 38
  in: 23 -- 
  out: 184 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(477):
  state_no: 38
  in: 24 -- 
  out: 185 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(478):
  state_no: 38
  in: 25 -- 
  out: 186 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(479):
  state_no: 38
  in: 26 -- 
  out: 187 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(480):
  state_no: 38
  in: 27 -- 
  out: 188 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(481):
  state_no: 38
  in: 28 -- 
  out: 189 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(482):
  state_no: 38
  in: 29 -- 
  out: 58 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(483):
  state_no: 38
  in: 30 -- 
  out: 176 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(484):
  state_no: 38
  in: 31 -- 
  out: 190 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(485):
  state_no: 38
  in: 32 -- 
  out: 191 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(486):
  state_no: 39
  in: 2 -- 
  out: 135 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(487):
  state_no: 39
  in: 15 -- 
  out: 137 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(488):
  state_no: 39
  in: 17 -- 
  out: 138 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(489):
  state_no: 39
  in: 18 -- 
  out: 139 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(490):
  state_no: 39
  in: 19 -- 
  out: 140 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(491):
  state_no: 39
  in: 20 -- 
  out: 141 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(492):
  state_no: 39
  in: 21 -- 
  out: 142 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(493):
  state_no: 39
  in: 22 -- 
  out: 143 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(494):
  state_no: 39
  in: 23 -- 
  out: 144 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(495):
  state_no: 39
  in: 24 -- 
  out: 145 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(496):
  state_no: 39
  in: 25 -- 
  out: 146 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(497):
  state_no: 39
  in: 26 -- 
  out: 147 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(498):
  state_no: 39
  in: 27 -- 
  out: 148 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(499):
  state_no: 39
  in: 28 -- 
  out: 149 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(500):
  state_no: 39
  in: 29 -- 
  out: 58 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(501):
  state_no: 39
  in: 30 -- 
  out: 136 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(502):
  state_no: 39
  in: 31 -- 
  out: 150 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(503):
  state_no: 39
  in: 32 -- 
  out: 151 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(504):
  state_no: 40
  in: 2 -- 
  out: 21 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(505):
  state_no: 40
  in: 7 -- 
  out: 23 -- 
  target: 44
  final_state: 0
  start_state: 0
Elem(506):
  state_no: 40
  in: 15 -- 
  out: 24 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(507):
  state_no: 40
  in: 17 -- 
  out: 25 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(508):
  state_no: 40
  in: 18 -- 
  out: 26 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(509):
  state_no: 40
  in: 19 -- 
  out: 27 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(510):
  state_no: 40
  in: 20 -- 
  out: 28 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(511):
  state_no: 40
  in: 21 -- 
  out: 29 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(512):
  state_no: 40
  in: 22 -- 
  out: 30 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(513):
  state_no: 40
  in: 23 -- 
  out: 31 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(514):
  state_no: 40
  in: 24 -- 
  out: 32 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(515):
  state_no: 40
  in: 25 -- 
  out: 33 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(516):
  state_no: 40
  in: 26 -- 
  out: 34 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(517):
  state_no: 40
  in: 27 -- 
  out: 35 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(518):
  state_no: 40
  in: 28 -- 
  out: 36 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(519):
  state_no: 40
  in: 30 -- 
  out: 22 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(520):
  state_no: 40
  in: 31 -- 
  out: 37 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(521):
  state_no: 40
  in: 32 -- 
  out: 38 -- 
  target: 40
  final_state: 0
  start_state: 0
Elem(522):
  state_no: 41
  in: 29 -- 
  out: 39 -- 
  target: 45
  final_state: 0
  start_state: 0
Elem(523):
  state_no: 42
  in: 3 -- 
  out: 397 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(524):
  state_no: 42
  in: 8 -- 
  out: 96 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(525):
  state_no: 43
  in: 2 -- 
  out: 175 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(526):
  state_no: 43
  in: 15 -- 
  out: 137 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(527):
  state_no: 43
  in: 17 -- 
  out: 178 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(528):
  state_no: 43
  in: 18 -- 
  out: 179 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(529):
  state_no: 43
  in: 19 -- 
  out: 180 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(530):
  state_no: 43
  in: 20 -- 
  out: 181 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(531):
  state_no: 43
  in: 21 -- 
  out: 182 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(532):
  state_no: 43
  in: 22 -- 
  out: 183 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(533):
  state_no: 43
  in: 23 -- 
  out: 184 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(534):
  state_no: 43
  in: 24 -- 
  out: 185 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(535):
  state_no: 43
  in: 25 -- 
  out: 186 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(536):
  state_no: 43
  in: 26 -- 
  out: 187 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(537):
  state_no: 43
  in: 27 -- 
  out: 188 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(538):
  state_no: 43
  in: 28 -- 
  out: 189 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(539):
  state_no: 43
  in: 29 -- 
  out: 58 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(540):
  state_no: 43
  in: 30 -- 
  out: 176 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(541):
  state_no: 43
  in: 31 -- 
  out: 190 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(542):
  state_no: 43
  in: 32 -- 
  out: 191 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(543):
  state_no: 44
  in: 29 -- 
  out: 39 -- 
  target: 46
  final_state: 0
  start_state: 0
Elem(544):
  state_no: 45
  in: 3 -- 
  out: 40 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(545):
  state_no: 46
  in: 3 -- 
  out: 397 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(546):
  state_no: 47
  in: 2 -- 
  out: 41 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(547):
  state_no: 47
  in: 15 -- 
  out: 43 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(548):
  state_no: 47
  in: 17 -- 
  out: 44 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(549):
  state_no: 47
  in: 18 -- 
  out: 45 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(550):
  state_no: 47
  in: 19 -- 
  out: 46 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(551):
  state_no: 47
  in: 20 -- 
  out: 47 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(552):
  state_no: 47
  in: 21 -- 
  out: 48 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(553):
  state_no: 47
  in: 22 -- 
  out: 49 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(554):
  state_no: 47
  in: 23 -- 
  out: 50 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(555):
  state_no: 47
  in: 24 -- 
  out: 51 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(556):
  state_no: 47
  in: 25 -- 
  out: 52 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(557):
  state_no: 47
  in: 26 -- 
  out: 53 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(558):
  state_no: 47
  in: 27 -- 
  out: 54 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(559):
  state_no: 47
  in: 28 -- 
  out: 55 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(560):
  state_no: 47
  in: 29 -- 
  out: 58 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(561):
  state_no: 47
  in: 30 -- 
  out: 42 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(562):
  state_no: 47
  in: 31 -- 
  out: 56 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(563):
  state_no: 47
  in: 32 -- 
  out: 57 -- 
  target: 47
  final_state: 0
  start_state: 0
Elem(564):
  state_no: 48
  in: 2 -- 
  out: 453 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(565):
  state_no: 48
  in: 15 -- 
  out: 455 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(566):
  state_no: 48
  in: 17 -- 
  out: 456 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(567):
  state_no: 48
  in: 18 -- 
  out: 457 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(568):
  state_no: 48
  in: 19 -- 
  out: 458 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(569):
  state_no: 48
  in: 20 -- 
  out: 459 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(570):
  state_no: 48
  in: 21 -- 
  out: 460 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(571):
  state_no: 48
  in: 22 -- 
  out: 461 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(572):
  state_no: 48
  in: 23 -- 
  out: 462 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(573):
  state_no: 48
  in: 24 -- 
  out: 463 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(574):
  state_no: 48
  in: 25 -- 
  out: 464 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(575):
  state_no: 48
  in: 26 -- 
  out: 465 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(576):
  state_no: 48
  in: 27 -- 
  out: 466 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(577):
  state_no: 48
  in: 28 -- 
  out: 467 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(578):
  state_no: 48
  in: 29 -- 
  out: 58 -- 
  target: 52
  final_state: 0
  start_state: 0
Elem(579):
  state_no: 48
  in: 30 -- 
  out: 454 -- 
  target: 37
  final_state: 0
  start_state: 0
Elem(580):
  state_no: 48
  in: 31 -- 
  out: 468 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(581):
  state_no: 48
  in: 32 -- 
  out: 469 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(582):
  state_no: 49
  in: 2 -- 
  out: 59 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(583):
  state_no: 49
  in: 15 -- 
  out: 43 -- 
  target: 49
  final_state: 0
  start_state: 0
Elem(584):
  state_no: 49
  in: 17 -- 
  out: 62 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(585):
  state_no: 49
  in: 18 -- 
  out: 63 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(586):
  state_no: 49
  in: 19 -- 
  out: 64 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(587):
  state_no: 49
  in: 20 -- 
  out: 65 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(588):
  state_no: 49
  in: 21 -- 
  out: 66 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(589):
  state_no: 49
  in: 22 -- 
  out: 67 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(590):
  state_no: 49
  in: 23 -- 
  out: 68 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(591):
  state_no: 49
  in: 24 -- 
  out: 69 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(592):
  state_no: 49
  in: 25 -- 
  out: 70 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(593):
  state_no: 49
  in: 26 -- 
  out: 71 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(594):
  state_no: 49
  in: 27 -- 
  out: 72 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(595):
  state_no: 49
  in: 28 -- 
  out: 73 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(596):
  state_no: 49
  in: 29 -- 
  out: 58 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(597):
  state_no: 49
  in: 30 -- 
  out: 60 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(598):
  state_no: 49
  in: 31 -- 
  out: 74 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(599):
  state_no: 49
  in: 32 -- 
  out: 75 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(600):
  state_no: 50
  in: 2 -- 
  out: 41 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(601):
  state_no: 50
  in: 15 -- 
  out: 43 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(602):
  state_no: 50
  in: 17 -- 
  out: 44 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(603):
  state_no: 50
  in: 18 -- 
  out: 45 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(604):
  state_no: 50
  in: 19 -- 
  out: 46 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(605):
  state_no: 50
  in: 20 -- 
  out: 47 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(606):
  state_no: 50
  in: 21 -- 
  out: 48 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(607):
  state_no: 50
  in: 22 -- 
  out: 49 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(608):
  state_no: 50
  in: 23 -- 
  out: 50 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(609):
  state_no: 50
  in: 24 -- 
  out: 51 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(610):
  state_no: 50
  in: 25 -- 
  out: 52 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(611):
  state_no: 50
  in: 26 -- 
  out: 53 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(612):
  state_no: 50
  in: 27 -- 
  out: 54 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(613):
  state_no: 50
  in: 28 -- 
  out: 55 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(614):
  state_no: 50
  in: 29 -- 
  out: 58 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(615):
  state_no: 50
  in: 30 -- 
  out: 42 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(616):
  state_no: 50
  in: 31 -- 
  out: 56 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(617):
  state_no: 50
  in: 32 -- 
  out: 57 -- 
  target: 50
  final_state: 0
  start_state: 0
Elem(618):
  state_no: 51
  in: 3 -- 
  out: 95 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(619):
  state_no: 51
  in: 8 -- 
  out: 96 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(620):
  state_no: 52
  in: 3 -- 
  out: 397 -- 
  target: 48
  final_state: 0
  start_state: 0
Elem(621):
  state_no: 52
  in: 8 -- 
  out: 96 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(622):
  state_no: 53
  in: 2 -- 
  out: 59 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(623):
  state_no: 53
  in: 15 -- 
  out: 43 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(624):
  state_no: 53
  in: 17 -- 
  out: 62 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(625):
  state_no: 53
  in: 18 -- 
  out: 63 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(626):
  state_no: 53
  in: 19 -- 
  out: 64 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(627):
  state_no: 53
  in: 20 -- 
  out: 65 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(628):
  state_no: 53
  in: 21 -- 
  out: 66 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(629):
  state_no: 53
  in: 22 -- 
  out: 67 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(630):
  state_no: 53
  in: 23 -- 
  out: 68 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(631):
  state_no: 53
  in: 24 -- 
  out: 69 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(632):
  state_no: 53
  in: 25 -- 
  out: 70 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(633):
  state_no: 53
  in: 26 -- 
  out: 71 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(634):
  state_no: 53
  in: 27 -- 
  out: 72 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(635):
  state_no: 53
  in: 28 -- 
  out: 73 -- 
  target: 53
  final_state: 0
  start_state: 0
Elem(636):
  state_no: 53
  in: 29 -- 
  out: 58 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(637):
  state_no: 53
  in: 30 -- 
  out: 60 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(638):
  state_no: 53
  in: 31 -- 
  out: 74 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(639):
  state_no: 53
  in: 32 -- 
  out: 75 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(640):
  state_no: 54
  in: 2 -- 
  out: 115 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(641):
  state_no: 54
  in: 15 -- 
  out: 117 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(642):
  state_no: 54
  in: 17 -- 
  out: 118 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(643):
  state_no: 54
  in: 18 -- 
  out: 119 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(644):
  state_no: 54
  in: 19 -- 
  out: 120 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(645):
  state_no: 54
  in: 20 -- 
  out: 121 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(646):
  state_no: 54
  in: 21 -- 
  out: 122 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(647):
  state_no: 54
  in: 22 -- 
  out: 123 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(648):
  state_no: 54
  in: 23 -- 
  out: 124 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(649):
  state_no: 54
  in: 24 -- 
  out: 125 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(650):
  state_no: 54
  in: 25 -- 
  out: 126 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(651):
  state_no: 54
  in: 26 -- 
  out: 127 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(652):
  state_no: 54
  in: 27 -- 
  out: 128 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(653):
  state_no: 54
  in: 28 -- 
  out: 129 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(654):
  state_no: 54
  in: 29 -- 
  out: 132 -- 
  target: 57
  final_state: 0
  start_state: 0
Elem(655):
  state_no: 54
  in: 30 -- 
  out: 116 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(656):
  state_no: 54
  in: 31 -- 
  out: 74 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(657):
  state_no: 54
  in: 32 -- 
  out: 75 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(658):
  state_no: 55
  in: 3 -- 
  out: 95 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(659):
  state_no: 55
  in: 8 -- 
  out: 96 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(660):
  state_no: 56
  in: 2 -- 
  out: 135 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(661):
  state_no: 56
  in: 15 -- 
  out: 137 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(662):
  state_no: 56
  in: 17 -- 
  out: 138 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(663):
  state_no: 56
  in: 18 -- 
  out: 139 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(664):
  state_no: 56
  in: 19 -- 
  out: 140 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(665):
  state_no: 56
  in: 20 -- 
  out: 141 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(666):
  state_no: 56
  in: 21 -- 
  out: 142 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(667):
  state_no: 56
  in: 22 -- 
  out: 143 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(668):
  state_no: 56
  in: 23 -- 
  out: 144 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(669):
  state_no: 56
  in: 24 -- 
  out: 145 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(670):
  state_no: 56
  in: 25 -- 
  out: 146 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(671):
  state_no: 56
  in: 26 -- 
  out: 147 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(672):
  state_no: 56
  in: 27 -- 
  out: 148 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(673):
  state_no: 56
  in: 28 -- 
  out: 149 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(674):
  state_no: 56
  in: 29 -- 
  out: 58 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(675):
  state_no: 56
  in: 30 -- 
  out: 136 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(676):
  state_no: 56
  in: 31 -- 
  out: 150 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(677):
  state_no: 56
  in: 32 -- 
  out: 151 -- 
  target: 56
  final_state: 0
  start_state: 0
Elem(678):
  state_no: 57
  in: 3 -- 
  out: 40 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(679):
  state_no: 57
  in: 8 -- 
  out: 96 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(680):
  state_no: 58
  in: 2 -- 
  out: 135 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(681):
  state_no: 58
  in: 15 -- 
  out: 137 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(682):
  state_no: 58
  in: 17 -- 
  out: 138 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(683):
  state_no: 58
  in: 18 -- 
  out: 139 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(684):
  state_no: 58
  in: 19 -- 
  out: 140 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(685):
  state_no: 58
  in: 20 -- 
  out: 141 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(686):
  state_no: 58
  in: 21 -- 
  out: 142 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(687):
  state_no: 58
  in: 22 -- 
  out: 143 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(688):
  state_no: 58
  in: 23 -- 
  out: 144 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(689):
  state_no: 58
  in: 24 -- 
  out: 145 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(690):
  state_no: 58
  in: 25 -- 
  out: 146 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(691):
  state_no: 58
  in: 26 -- 
  out: 147 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(692):
  state_no: 58
  in: 27 -- 
  out: 148 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(693):
  state_no: 58
  in: 28 -- 
  out: 149 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(694):
  state_no: 58
  in: 29 -- 
  out: 58 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(695):
  state_no: 58
  in: 30 -- 
  out: 136 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(696):
  state_no: 58
  in: 31 -- 
  out: 150 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(697):
  state_no: 58
  in: 32 -- 
  out: 151 -- 
  target: 58
  final_state: 0
  start_state: 0
Elem(698):
  state_no: 59
  in: 2 -- 
  out: 175 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(699):
  state_no: 59
  in: 15 -- 
  out: 137 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(700):
  state_no: 59
  in: 17 -- 
  out: 178 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(701):
  state_no: 59
  in: 18 -- 
  out: 179 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(702):
  state_no: 59
  in: 19 -- 
  out: 180 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(703):
  state_no: 59
  in: 20 -- 
  out: 181 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(704):
  state_no: 59
  in: 21 -- 
  out: 182 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(705):
  state_no: 59
  in: 22 -- 
  out: 183 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(706):
  state_no: 59
  in: 23 -- 
  out: 184 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(707):
  state_no: 59
  in: 24 -- 
  out: 185 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(708):
  state_no: 59
  in: 25 -- 
  out: 186 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(709):
  state_no: 59
  in: 26 -- 
  out: 187 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(710):
  state_no: 59
  in: 27 -- 
  out: 188 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(711):
  state_no: 59
  in: 28 -- 
  out: 189 -- 
  target: 59
  final_state: 0
  start_state: 0
Elem(712):
  state_no: 59
  in: 29 -- 
  out: 58 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(713):
  state_no: 59
  in: 30 -- 
  out: 176 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(714):
  state_no: 59
  in: 31 -- 
  out: 190 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(715):
  state_no: 59
  in: 32 -- 
  out: 191 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(716):
  state_no: 60
  in: 2 -- 
  out: 41 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(717):
  state_no: 60
  in: 15 -- 
  out: 43 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(718):
  state_no: 60
  in: 17 -- 
  out: 44 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(719):
  state_no: 60
  in: 18 -- 
  out: 45 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(720):
  state_no: 60
  in: 19 -- 
  out: 46 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(721):
  state_no: 60
  in: 20 -- 
  out: 47 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(722):
  state_no: 60
  in: 21 -- 
  out: 48 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(723):
  state_no: 60
  in: 22 -- 
  out: 49 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(724):
  state_no: 60
  in: 23 -- 
  out: 50 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(725):
  state_no: 60
  in: 24 -- 
  out: 51 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(726):
  state_no: 60
  in: 25 -- 
  out: 52 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(727):
  state_no: 60
  in: 26 -- 
  out: 53 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(728):
  state_no: 60
  in: 27 -- 
  out: 54 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(729):
  state_no: 60
  in: 28 -- 
  out: 55 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(730):
  state_no: 60
  in: 29 -- 
  out: 58 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(731):
  state_no: 60
  in: 30 -- 
  out: 42 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(732):
  state_no: 60
  in: 31 -- 
  out: 56 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(733):
  state_no: 60
  in: 32 -- 
  out: 57 -- 
  target: 60
  final_state: 0
  start_state: 0
Elem(734):
  state_no: 61
  in: 2 -- 
  out: 175 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(735):
  state_no: 61
  in: 15 -- 
  out: 137 -- 
  target: 61
  final_state: 0
  start_state: 0
Elem(736):
  state_no: 61
  in: 17 -- 
  out: 178 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(737):
  state_no: 61
  in: 18 -- 
  out: 179 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(738):
  state_no: 61
  in: 19 -- 
  out: 180 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(739):
  state_no: 61
  in: 20 -- 
  out: 181 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(740):
  state_no: 61
  in: 21 -- 
  out: 182 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(741):
  state_no: 61
  in: 22 -- 
  out: 183 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(742):
  state_no: 61
  in: 23 -- 
  out: 184 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(743):
  state_no: 61
  in: 24 -- 
  out: 185 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(744):
  state_no: 61
  in: 25 -- 
  out: 186 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(745):
  state_no: 61
  in: 26 -- 
  out: 187 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(746):
  state_no: 61
  in: 27 -- 
  out: 188 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(747):
  state_no: 61
  in: 28 -- 
  out: 189 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(748):
  state_no: 61
  in: 29 -- 
  out: 58 -- 
  target: 51
  final_state: 0
  start_state: 0
Elem(749):
  state_no: 61
  in: 30 -- 
  out: 176 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(750):
  state_no: 61
  in: 31 -- 
  out: 190 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(751):
  state_no: 61
  in: 32 -- 
  out: 191 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(752):
  state_no: 62
  in: 2 -- 
  out: 135 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(753):
  state_no: 62
  in: 15 -- 
  out: 137 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(754):
  state_no: 62
  in: 17 -- 
  out: 138 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(755):
  state_no: 62
  in: 18 -- 
  out: 139 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(756):
  state_no: 62
  in: 19 -- 
  out: 140 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(757):
  state_no: 62
  in: 20 -- 
  out: 141 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(758):
  state_no: 62
  in: 21 -- 
  out: 142 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(759):
  state_no: 62
  in: 22 -- 
  out: 143 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(760):
  state_no: 62
  in: 23 -- 
  out: 144 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(761):
  state_no: 62
  in: 24 -- 
  out: 145 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(762):
  state_no: 62
  in: 25 -- 
  out: 146 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(763):
  state_no: 62
  in: 26 -- 
  out: 147 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(764):
  state_no: 62
  in: 27 -- 
  out: 148 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(765):
  state_no: 62
  in: 28 -- 
  out: 149 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(766):
  state_no: 62
  in: 29 -- 
  out: 58 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(767):
  state_no: 62
  in: 30 -- 
  out: 136 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(768):
  state_no: 62
  in: 31 -- 
  out: 150 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(769):
  state_no: 62
  in: 32 -- 
  out: 151 -- 
  target: 62
  final_state: 0
  start_state: 0
Elem(770):
  state_no: 63
  in: 2 -- 
  out: 265 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(771):
  state_no: 63
  in: 15 -- 
  out: 267 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(772):
  state_no: 63
  in: 17 -- 
  out: 268 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(773):
  state_no: 63
  in: 18 -- 
  out: 269 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(774):
  state_no: 63
  in: 19 -- 
  out: 270 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(775):
  state_no: 63
  in: 20 -- 
  out: 271 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(776):
  state_no: 63
  in: 21 -- 
  out: 272 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(777):
  state_no: 63
  in: 22 -- 
  out: 273 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(778):
  state_no: 63
  in: 23 -- 
  out: 274 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(779):
  state_no: 63
  in: 24 -- 
  out: 275 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(780):
  state_no: 63
  in: 25 -- 
  out: 276 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(781):
  state_no: 63
  in: 26 -- 
  out: 277 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(782):
  state_no: 63
  in: 27 -- 
  out: 278 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(783):
  state_no: 63
  in: 28 -- 
  out: 279 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(784):
  state_no: 63
  in: 29 -- 
  out: 282 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(785):
  state_no: 63
  in: 30 -- 
  out: 266 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(786):
  state_no: 63
  in: 31 -- 
  out: 190 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(787):
  state_no: 63
  in: 32 -- 
  out: 191 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(788):
  state_no: 64
  in: 2 -- 
  out: 59 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(789):
  state_no: 64
  in: 15 -- 
  out: 43 -- 
  target: 64
  final_state: 0
  start_state: 0
Elem(790):
  state_no: 64
  in: 17 -- 
  out: 62 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(791):
  state_no: 64
  in: 18 -- 
  out: 63 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(792):
  state_no: 64
  in: 19 -- 
  out: 64 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(793):
  state_no: 64
  in: 20 -- 
  out: 65 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(794):
  state_no: 64
  in: 21 -- 
  out: 66 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(795):
  state_no: 64
  in: 22 -- 
  out: 67 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(796):
  state_no: 64
  in: 23 -- 
  out: 68 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(797):
  state_no: 64
  in: 24 -- 
  out: 69 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(798):
  state_no: 64
  in: 25 -- 
  out: 70 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(799):
  state_no: 64
  in: 26 -- 
  out: 71 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(800):
  state_no: 64
  in: 27 -- 
  out: 72 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(801):
  state_no: 64
  in: 28 -- 
  out: 73 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(802):
  state_no: 64
  in: 29 -- 
  out: 58 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(803):
  state_no: 64
  in: 30 -- 
  out: 60 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(804):
  state_no: 64
  in: 31 -- 
  out: 74 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(805):
  state_no: 64
  in: 32 -- 
  out: 75 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(806):
  state_no: 65
  in: 2 -- 
  out: 41 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(807):
  state_no: 65
  in: 15 -- 
  out: 43 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(808):
  state_no: 65
  in: 17 -- 
  out: 44 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(809):
  state_no: 65
  in: 18 -- 
  out: 45 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(810):
  state_no: 65
  in: 19 -- 
  out: 46 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(811):
  state_no: 65
  in: 20 -- 
  out: 47 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(812):
  state_no: 65
  in: 21 -- 
  out: 48 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(813):
  state_no: 65
  in: 22 -- 
  out: 49 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(814):
  state_no: 65
  in: 23 -- 
  out: 50 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(815):
  state_no: 65
  in: 24 -- 
  out: 51 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(816):
  state_no: 65
  in: 25 -- 
  out: 52 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(817):
  state_no: 65
  in: 26 -- 
  out: 53 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(818):
  state_no: 65
  in: 27 -- 
  out: 54 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(819):
  state_no: 65
  in: 28 -- 
  out: 55 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(820):
  state_no: 65
  in: 29 -- 
  out: 58 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(821):
  state_no: 65
  in: 30 -- 
  out: 42 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(822):
  state_no: 65
  in: 31 -- 
  out: 56 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(823):
  state_no: 65
  in: 32 -- 
  out: 57 -- 
  target: 65
  final_state: 0
  start_state: 0
Elem(824):
  state_no: 66
  in: 3 -- 
  out: 95 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(825):
  state_no: 66
  in: 8 -- 
  out: 96 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(826):
  state_no: 67
  in: 2 -- 
  out: 175 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(827):
  state_no: 67
  in: 15 -- 
  out: 137 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(828):
  state_no: 67
  in: 17 -- 
  out: 178 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(829):
  state_no: 67
  in: 18 -- 
  out: 179 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(830):
  state_no: 67
  in: 19 -- 
  out: 180 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(831):
  state_no: 67
  in: 20 -- 
  out: 181 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(832):
  state_no: 67
  in: 21 -- 
  out: 182 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(833):
  state_no: 67
  in: 22 -- 
  out: 183 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(834):
  state_no: 67
  in: 23 -- 
  out: 184 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(835):
  state_no: 67
  in: 24 -- 
  out: 185 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(836):
  state_no: 67
  in: 25 -- 
  out: 186 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(837):
  state_no: 67
  in: 26 -- 
  out: 187 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(838):
  state_no: 67
  in: 27 -- 
  out: 188 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(839):
  state_no: 67
  in: 28 -- 
  out: 189 -- 
  target: 67
  final_state: 0
  start_state: 0
Elem(840):
  state_no: 67
  in: 29 -- 
  out: 58 -- 
  target: 55
  final_state: 0
  start_state: 0
Elem(841):
  state_no: 67
  in: 30 -- 
  out: 176 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(842):
  state_no: 67
  in: 31 -- 
  out: 190 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(843):
  state_no: 67
  in: 32 -- 
  out: 191 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(844):
  state_no: 68
  in: 2 -- 
  out: 265 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(845):
  state_no: 68
  in: 15 -- 
  out: 267 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(846):
  state_no: 68
  in: 17 -- 
  out: 268 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(847):
  state_no: 68
  in: 18 -- 
  out: 269 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(848):
  state_no: 68
  in: 19 -- 
  out: 270 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(849):
  state_no: 68
  in: 20 -- 
  out: 271 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(850):
  state_no: 68
  in: 21 -- 
  out: 272 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(851):
  state_no: 68
  in: 22 -- 
  out: 273 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(852):
  state_no: 68
  in: 23 -- 
  out: 274 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(853):
  state_no: 68
  in: 24 -- 
  out: 275 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(854):
  state_no: 68
  in: 25 -- 
  out: 276 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(855):
  state_no: 68
  in: 26 -- 
  out: 277 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(856):
  state_no: 68
  in: 27 -- 
  out: 278 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(857):
  state_no: 68
  in: 28 -- 
  out: 279 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(858):
  state_no: 68
  in: 29 -- 
  out: 282 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(859):
  state_no: 68
  in: 30 -- 
  out: 266 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(860):
  state_no: 68
  in: 31 -- 
  out: 190 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(861):
  state_no: 68
  in: 32 -- 
  out: 191 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(862):
  state_no: 69
  in: 2 -- 
  out: 59 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(863):
  state_no: 69
  in: 15 -- 
  out: 43 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(864):
  state_no: 69
  in: 17 -- 
  out: 62 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(865):
  state_no: 69
  in: 18 -- 
  out: 63 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(866):
  state_no: 69
  in: 19 -- 
  out: 64 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(867):
  state_no: 69
  in: 20 -- 
  out: 65 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(868):
  state_no: 69
  in: 21 -- 
  out: 66 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(869):
  state_no: 69
  in: 22 -- 
  out: 67 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(870):
  state_no: 69
  in: 23 -- 
  out: 68 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(871):
  state_no: 69
  in: 24 -- 
  out: 69 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(872):
  state_no: 69
  in: 25 -- 
  out: 70 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(873):
  state_no: 69
  in: 26 -- 
  out: 71 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(874):
  state_no: 69
  in: 27 -- 
  out: 72 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(875):
  state_no: 69
  in: 28 -- 
  out: 73 -- 
  target: 69
  final_state: 0
  start_state: 0
Elem(876):
  state_no: 69
  in: 29 -- 
  out: 58 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(877):
  state_no: 69
  in: 30 -- 
  out: 60 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(878):
  state_no: 69
  in: 31 -- 
  out: 74 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(879):
  state_no: 69
  in: 32 -- 
  out: 75 -- 
  target: 54
  final_state: 0
  start_state: 0
Elem(880):
  state_no: 70
  in: 3 -- 
  out: 95 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(881):
  state_no: 70
  in: 8 -- 
  out: 96 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(882):
  state_no: 71
  in: 2 -- 
  out: 135 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(883):
  state_no: 71
  in: 15 -- 
  out: 137 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(884):
  state_no: 71
  in: 17 -- 
  out: 138 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(885):
  state_no: 71
  in: 18 -- 
  out: 139 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(886):
  state_no: 71
  in: 19 -- 
  out: 140 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(887):
  state_no: 71
  in: 20 -- 
  out: 141 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(888):
  state_no: 71
  in: 21 -- 
  out: 142 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(889):
  state_no: 71
  in: 22 -- 
  out: 143 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(890):
  state_no: 71
  in: 23 -- 
  out: 144 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(891):
  state_no: 71
  in: 24 -- 
  out: 145 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(892):
  state_no: 71
  in: 25 -- 
  out: 146 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(893):
  state_no: 71
  in: 26 -- 
  out: 147 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(894):
  state_no: 71
  in: 27 -- 
  out: 148 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(895):
  state_no: 71
  in: 28 -- 
  out: 149 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(896):
  state_no: 71
  in: 29 -- 
  out: 58 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(897):
  state_no: 71
  in: 30 -- 
  out: 136 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(898):
  state_no: 71
  in: 31 -- 
  out: 150 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(899):
  state_no: 71
  in: 32 -- 
  out: 151 -- 
  target: 71
  final_state: 0
  start_state: 0
Elem(900):
  state_no: 72
  in: 2 -- 
  out: 135 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(901):
  state_no: 72
  in: 15 -- 
  out: 137 -- 
  target: 74
  final_state: 0
  start_state: 0
Elem(902):
  state_no: 72
  in: 17 -- 
  out: 138 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(903):
  state_no: 72
  in: 18 -- 
  out: 139 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(904):
  state_no: 72
  in: 19 -- 
  out: 140 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(905):
  state_no: 72
  in: 20 -- 
  out: 141 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(906):
  state_no: 72
  in: 21 -- 
  out: 142 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(907):
  state_no: 72
  in: 22 -- 
  out: 143 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(908):
  state_no: 72
  in: 23 -- 
  out: 144 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(909):
  state_no: 72
  in: 24 -- 
  out: 145 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(910):
  state_no: 72
  in: 25 -- 
  out: 146 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(911):
  state_no: 72
  in: 26 -- 
  out: 147 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(912):
  state_no: 72
  in: 27 -- 
  out: 148 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(913):
  state_no: 72
  in: 28 -- 
  out: 149 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(914):
  state_no: 72
  in: 29 -- 
  out: 58 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(915):
  state_no: 72
  in: 30 -- 
  out: 136 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(916):
  state_no: 72
  in: 31 -- 
  out: 150 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(917):
  state_no: 72
  in: 32 -- 
  out: 151 -- 
  target: 72
  final_state: 0
  start_state: 0
Elem(918):
  state_no: 73
  in: 2 -- 
  out: 175 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(919):
  state_no: 73
  in: 15 -- 
  out: 137 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(920):
  state_no: 73
  in: 17 -- 
  out: 178 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(921):
  state_no: 73
  in: 18 -- 
  out: 179 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(922):
  state_no: 73
  in: 19 -- 
  out: 180 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(923):
  state_no: 73
  in: 20 -- 
  out: 181 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(924):
  state_no: 73
  in: 21 -- 
  out: 182 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(925):
  state_no: 73
  in: 22 -- 
  out: 183 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(926):
  state_no: 73
  in: 23 -- 
  out: 184 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(927):
  state_no: 73
  in: 24 -- 
  out: 185 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(928):
  state_no: 73
  in: 25 -- 
  out: 186 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(929):
  state_no: 73
  in: 26 -- 
  out: 187 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(930):
  state_no: 73
  in: 27 -- 
  out: 188 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(931):
  state_no: 73
  in: 28 -- 
  out: 189 -- 
  target: 73
  final_state: 0
  start_state: 0
Elem(932):
  state_no: 73
  in: 29 -- 
  out: 58 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(933):
  state_no: 73
  in: 30 -- 
  out: 176 -- 
  target: 35
  final_state: 0
  start_state: 0
Elem(934):
  state_no: 73
  in: 31 -- 
  out: 190 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(935):
  state_no: 73
  in: 32 -- 
  out: 191 -- 
  target: 63
  final_state: 0
  start_state: 0
Elem(936):
  state_no: 74
  in: 2 -- 
  out: 175 -- 
  target: 74
  final_state: 0
  start_state: 0
Elem(937):
  state_no: 74
  in: 15 -- 
  out: 137 -- 
  target: 74
  final_state: 0
  start_state: 0
Elem(938):
  state_no: 74
  in: 17 -- 
  out: 178 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(939):
  state_no: 74
  in: 18 -- 
  out: 179 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(940):
  state_no: 74
  in: 19 -- 
  out: 180 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(941):
  state_no: 74
  in: 20 -- 
  out: 181 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(942):
  state_no: 74
  in: 21 -- 
  out: 182 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(943):
  state_no: 74
  in: 22 -- 
  out: 183 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(944):
  state_no: 74
  in: 23 -- 
  out: 184 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(945):
  state_no: 74
  in: 24 -- 
  out: 185 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(946):
  state_no: 74
  in: 25 -- 
  out: 186 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(947):
  state_no: 74
  in: 26 -- 
  out: 187 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(948):
  state_no: 74
  in: 27 -- 
  out: 188 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(949):
  state_no: 74
  in: 28 -- 
  out: 189 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(950):
  state_no: 74
  in: 29 -- 
  out: 58 -- 
  target: 66
  final_state: 0
  start_state: 0
Elem(951):
  state_no: 74
  in: 30 -- 
  out: 176 -- 
  target: 38
  final_state: 0
  start_state: 0
Elem(952):
  state_no: 74
  in: 31 -- 
  out: 190 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(953):
  state_no: 74
  in: 32 -- 
  out: 191 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(954):
  state_no: 75
  in: 2 -- 
  out: 135 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(955):
  state_no: 75
  in: 15 -- 
  out: 137 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(956):
  state_no: 75
  in: 17 -- 
  out: 138 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(957):
  state_no: 75
  in: 18 -- 
  out: 139 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(958):
  state_no: 75
  in: 19 -- 
  out: 140 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(959):
  state_no: 75
  in: 20 -- 
  out: 141 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(960):
  state_no: 75
  in: 21 -- 
  out: 142 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(961):
  state_no: 75
  in: 22 -- 
  out: 143 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(962):
  state_no: 75
  in: 23 -- 
  out: 144 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(963):
  state_no: 75
  in: 24 -- 
  out: 145 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(964):
  state_no: 75
  in: 25 -- 
  out: 146 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(965):
  state_no: 75
  in: 26 -- 
  out: 147 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(966):
  state_no: 75
  in: 27 -- 
  out: 148 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(967):
  state_no: 75
  in: 28 -- 
  out: 149 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(968):
  state_no: 75
  in: 29 -- 
  out: 58 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(969):
  state_no: 75
  in: 30 -- 
  out: 136 -- 
  target: 39
  final_state: 0
  start_state: 0
Elem(970):
  state_no: 75
  in: 31 -- 
  out: 150 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(971):
  state_no: 75
  in: 32 -- 
  out: 151 -- 
  target: 75
  final_state: 0
  start_state: 0
Elem(972):
  state_no: 76
  in: 2 -- 
  out: 175 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(973):
  state_no: 76
  in: 15 -- 
  out: 137 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(974):
  state_no: 76
  in: 17 -- 
  out: 178 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(975):
  state_no: 76
  in: 18 -- 
  out: 179 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(976):
  state_no: 76
  in: 19 -- 
  out: 180 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(977):
  state_no: 76
  in: 20 -- 
  out: 181 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(978):
  state_no: 76
  in: 21 -- 
  out: 182 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(979):
  state_no: 76
  in: 22 -- 
  out: 183 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(980):
  state_no: 76
  in: 23 -- 
  out: 184 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(981):
  state_no: 76
  in: 24 -- 
  out: 185 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(982):
  state_no: 76
  in: 25 -- 
  out: 186 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(983):
  state_no: 76
  in: 26 -- 
  out: 187 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(984):
  state_no: 76
  in: 27 -- 
  out: 188 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(985):
  state_no: 76
  in: 28 -- 
  out: 189 -- 
  target: 76
  final_state: 0
  start_state: 0
Elem(986):
  state_no: 76
  in: 29 -- 
  out: 58 -- 
  target: 70
  final_state: 0
  start_state: 0
Elem(987):
  state_no: 76
  in: 30 -- 
  out: 176 -- 
  target: 43
  final_state: 0
  start_state: 0
Elem(988):
  state_no: 76
  in: 31 -- 
  out: 190 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(989):
  state_no: 76
  in: 32 -- 
  out: 191 -- 
  target: 68
  final_state: 0
  start_state: 0
Elem(990):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(230): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 57, 6, #BOC# )
Symbol(29, 63, 2, | )
Symbol(3, 65, 4, #0# )
Symbol(85, 69, 9, "aztán" )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 87, 2, | )
Symbol(3, 89, 4, #0# )
Symbol(85, 93, 9, "aztán" )
Symbol(54, 102, 6, <adv> )
Symbol(29, 108, 2, | )
Symbol(8, 110, 6, #EOC# )
Symbol(10, 116, 4, $0$ )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 128, 6, #BOC# )
Symbol(29, 134, 2, | )
Symbol(3, 136, 4, #0# )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 158, 2, | )
Symbol(3, 160, 4, #0# )
Symbol(2, 164, 6, "egy" )
Symbol(54, 170, 6, <adv> )
Symbol(29, 176, 2, | )
Symbol(8, 178, 6, #EOC# )
Symbol(10, 184, 4, $0$ )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 196, 6, #BOC# )
Symbol(29, 202, 2, | )
Symbol(3, 204, 4, #0# )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 231, 2, | )
Symbol(8, 233, 6, #EOC# )
Symbol(10, 239, 4, $0$ )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 253, 6, #BOC# )
Symbol(29, 259, 2, | )
Symbol(3, 261, 4, #0# )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 272, 4, <n> )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 287, 2, | )
Symbol(8, 289, 6, #EOC# )
Symbol(10, 295, 4, $0$ )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 306, 6, #BOC# )
Symbol(29, 312, 2, | )
Symbol(3, 314, 4, #0# )
Symbol(30, 318, 5, "is" )
Symbol(54, 323, 6, <adv> )
Symbol(29, 329, 2, | )
Symbol(8, 331, 6, #EOC# )
Symbol(10, 337, 4, $0$ )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 350, 6, #BOC# )
Symbol(29, 356, 2, | )
Symbol(3, 358, 4, #0# )
Symbol(2, 362, 5, "la" )
Symbol(15, 367, 4, <n> )
Symbol(87, 371, 5, <sg> )
Symbol(71, 376, 6, <acc> )
Symbol(29, 382, 2, | )
Symbol(3, 384, 4, #0# )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 427, 2, | )
Symbol(3, 429, 4, #0# )
Symbol(2, 433, 7, "lát" )
Symbol(15, 440, 4, <n> )
Symbol(87, 444, 5, <sg> )
Symbol(55, 449, 6, <nom> )
Symbol(29, 455, 2, | )
Symbol(8, 457, 6, #EOC# )
Symbol(10, 463, 4, $0$ )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 473, 6, #BOC# )
Symbol(29, 479, 2, | )
Symbol(3, 481, 4, #0# )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 494, 2, | )
Symbol(8, 496, 6, #EOC# )
Symbol(10, 502, 4, $0$ )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 514, 6, #BOC# )
Symbol(29, 520, 2, | )
Symbol(3, 522, 4, #0# )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 541, 2, | )
Symbol(8, 543, 6, #EOC# )
Symbol(10, 549, 4, $0$ )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 563, 6, #BOC# )
Symbol(29, 569, 2, | )
Symbol(3, 571, 4, #0# )
Symbol(69, 575, 8, "mikor" )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 592, 2, | )
Symbol(3, 594, 4, #0# )
Symbol(69, 598, 8, "mikor" )
Symbol(54, 606, 6, <adv> )
Symbol(70, 612, 6, <itg> )
Symbol(29, 618, 2, | )
Symbol(8, 620, 6, #EOC# )
Symbol(10, 626, 4, $0$ )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 644, 6, #BOC# )
Symbol(29, 650, 2, | )
Symbol(3, 652, 4, #0# )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 668, 6, <adv> )
Symbol(29, 674, 2, | )
Symbol(8, 676, 6, #EOC# )
Symbol(10, 682, 4, $0$ )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 695, 6, #BOC# )
Symbol(29, 701, 2, | )
Symbol(3, 703, 4, #0# )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 746, 2, | )
Symbol(8, 748, 6, #EOC# )
Symbol(10, 754, 4, $0$ )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 764, 6, #BOC# )
Symbol(29, 770, 2, | )
Symbol(3, 772, 4, #0# )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 785, 2, | )
Symbol(8, 787, 6, #EOC# )
Symbol(10, 793, 4, $0$ )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 803, 6, #BOC# )
Symbol(29, 809, 2, | )
Symbol(3, 811, 4, #0# )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 831, 2, | )
Symbol(8, 833, 6, #EOC# )
Symbol(10, 839, 4, $0$ )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 854, 6, #BOC# )
Symbol(29, 860, 2, | )
Symbol(3, 862, 4, #0# )
Symbol(89, 866, 6, "fő" )
Symbol(15, 872, 4, <n> )
Symbol(87, 876, 5, <sg> )
Symbol(28, 881, 8, <px3ss> )
Symbol(71, 889, 6, <acc> )
Symbol(29, 895, 2, | )
Symbol(3, 897, 4, #0# )
Symbol(88, 901, 6, "fej" )
Symbol(15, 907, 4, <n> )
Symbol(87, 911, 5, <sg> )
Symbol(32, 916, 6, <pxs> )
Symbol(71, 922, 6, <acc> )
Symbol(29, 928, 2, | )
Symbol(3, 930, 4, #0# )
Symbol(88, 934, 6, "fej" )
Symbol(15, 940, 4, <n> )
Symbol(87, 944, 5, <sg> )
Symbol(28, 949, 8, <px3ss> )
Symbol(71, 957, 6, <acc> )
Symbol(29, 963, 2, | )
Symbol(8, 965, 6, #EOC# )
Symbol(10, 971, 4, $0$ )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 982, 6, #BOC# )
Symbol(29, 988, 2, | )
Symbol(3, 990, 4, #0# )
Symbol(30, 994, 5, "is" )
Symbol(54, 999, 6, <adv> )
Symbol(29, 1,005, 2, | )
Symbol(8, 1,007, 6, #EOC# )
Symbol(10, 1,013, 4, $0$ )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 1,028, 6, #BOC# )
Symbol(29, 1,034, 2, | )
Symbol(3, 1,036, 4, #0# )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 1,079, 2, | )
Symbol(3, 1,081, 4, #0# )
Symbol(2, 1,085, 7, "lát" )
Symbol(15, 1,092, 4, <n> )
Symbol(87, 1,096, 5, <sg> )
Symbol(28, 1,101, 8, <px3ss> )
Symbol(55, 1,109, 6, <nom> )
Symbol(29, 1,115, 2, | )
Symbol(8, 1,117, 6, #EOC# )
Symbol(10, 1,123, 4, $0$ )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 1,133, 6, #BOC# )
Symbol(29, 1,139, 2, | )
Symbol(3, 1,141, 4, #0# )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 1,162, 2, | )
Symbol(8, 1,164, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 3 85 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 3 69 54 70 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 32 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 92, signum = 3, q = 7, out = 95
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 146, signum = 29, q = 11, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 92, signum = 3, q = 7, out = 95
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 146, signum = 29, q = 11, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 39, signum = 15, q = 4, out = 43
trans_offset 56, signum = 2, q = 5, out = 59
trans_offset 56, signum = 2, q = 5, out = 59
trans_offset 70, signum = 29, q = 5, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 53, signum = 30, q = 4, out = 42
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 39, signum = 15, q = 4, out = 43
trans_offset 56, signum = 2, q = 5, out = 59
trans_offset 56, signum = 2, q = 5, out = 59
trans_offset 70, signum = 29, q = 5, out = 58
trans_offset 92, signum = 3, q = 7, out = 95
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 146, signum = 29, q = 11, out = 58
trans_offset 92, signum = 3, q = 7, out = 95
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 133, signum = 15, q = 11, out = 137
trans_offset 172, signum = 2, q = 16, out = 175
trans_offset 172, signum = 2, q = 16, out = 175
trans_offset 186, signum = 29, q = 16, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 92, signum = 3, q = 7, out = 95
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 132, signum = 2, q = 11, out = 135
trans_offset 146, signum = 29, q = 11, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 52, signum = 29, q = 4, out = 58
trans_offset 93, signum = 8, q = 7, out = 96
trans_offset 150, signum = 10, q = 12, out = 5
trans_offset 18, signum = 2, q = 1, out = 21
trans_offset 19, signum = 7, q = 1, out = 23
trans_offset 36, signum = 29, q = 2, out = 39
trans_offset 37, signum = 3, q = 3, out = 40
trans_offset 38, signum = 2, q = 4, out = 41
trans_offset 39, signum = 15, q = 4, out = 43
trans_offset 56, signum = 2, q = 5, out = 59
trans_offset 69, signum = 28, q = 5, out = 73
trans_offset 94, signum = 2, q = 8, out = 59
trans_offset 108, signum = 29, q = 8, out = 58
trans_offset 130, signum = 3, q = 10, out = 95
trans_offset 153, signum = 2, q = 14, out = 135
trans_offset 154, signum = 15, q = 14, out = 137
trans_offset 208, signum = 2, q = 18, out = 175
trans_offset 225, signum = 32, q = 18, out = 191
trans_offset 336, signum = 2, q = 26, out = 265
trans_offset 350, signum = 29, q = 26, out = 282
trans_offset 373, signum = 3, q = 29, out = 95
trans_offset 395, signum = 2, q = 33, out = 135
trans_offset 396, signum = 15, q = 33, out = 137
trans_offset 468, signum = 2, q = 38, out = 175
trans_offset 481, signum = 28, q = 38, out = 189
trans_offset 525, signum = 2, q = 43, out = 175
trans_offset 539, signum = 29, q = 43, out = 58
trans_offset 374, signum = 8, q = 29, out = 96
trans_offset 413, signum = 10, q = 34, out = 5
trans_offset 504, signum = 2, q = 40, out = 21
trans_offset 505, signum = 7, q = 40, out = 23
trans_offset 543, signum = 29, q = 44, out = 39
trans_offset 545, signum = 3, q = 46, out = 397
trans_offset 579, signum = 30, q = 48, out = 454
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 464, signum = 29, q = 37, out = 58
trans_offset 524, signum = 8, q = 42, out = 96
trans_offset 171, signum = 10, q = 15, out = 5
trans_offset 244, signum = 2, q = 20, out = 21
trans_offset 245, signum = 7, q = 20, out = 23
trans_offset 354, signum = 29, q = 27, out = 39
trans_offset 394, signum = 3, q = 32, out = 397
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 464, signum = 29, q = 37, out = 58
trans_offset 523, signum = 3, q = 42, out = 397
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 451, signum = 15, q = 37, out = 455
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 463, signum = 28, q = 37, out = 467
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 464, signum = 29, q = 37, out = 58
trans_offset 524, signum = 8, q = 42, out = 96
trans_offset 171, signum = 10, q = 15, out = 5
trans_offset 244, signum = 2, q = 20, out = 21
trans_offset 245, signum = 7, q = 20, out = 23
trans_offset 354, signum = 29, q = 27, out = 39
trans_offset 394, signum = 3, q = 32, out = 397
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 450, signum = 2, q = 37, out = 453
trans_offset 464, signum = 29, q = 37, out = 58
trans_offset 524, signum = 8, q = 42, out = 96

Intermediate is(230): 
5 21 23 39 40 41 41 58 96 5 21 23 39 40 41 41 58 95 135 135 58 96 5 21 23 39 40 41 41 41 58 95 135 135 58 96 5 21 23 39 40 41 41 41 41 58 96 5 21 23 39 40 41 43 59 59 58 96 5 21 23 39 40 42 41 58 96 5 21 23 39 40 41 43 59 59 58 95 135 135 135 135 135 135 58 95 135 137 175 175 58 96 5 21 23 39 40 41 41 58 96 5 21 23 39 40 41 41 58 96 5 21 23 39 40 41 41 58 95 135 135 135 58 96 5 21 23 39 40 41 41 58 96 5 21 23 39 40 41 41 41 41 41 41 58 96 5 21 23 39 40 41 41 58 96 5 21 23 39 40 41 41 41 58 96 5 21 23 39 40 41 43 59 73 59 58 95 135 137 175 191 265 282 95 135 137 175 189 175 58 96 5 21 23 39 397 454 453 58 96 5 21 23 39 397 453 453 453 453 453 453 58 397 453 455 453 467 453 58 96 5 21 23 39 397 453 453 453 58 96 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 103, q = 2, out = 2
trans_offset 103, q = 2, out = 2
trans_offset 103, q = 2, out = 2
trans_offset 102, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 103, q = 2, out = 2
trans_offset 117, q = 2, out = 28
trans_offset 103, q = 2, out = 2
trans_offset 105, q = 2, out = 15
trans_offset 103, q = 2, out = 2
trans_offset 102, q = 2, out = 3
trans_offset 237, q = 4, out = 29
trans_offset 344, q = 6, out = 2
trans_offset 103, q = 2, out = 2
trans_offset 103, q = 2, out = 2
trans_offset 103, q = 2, out = 2
trans_offset 103, q = 2, out = 2
trans_offset 103, q = 2, out = 2
trans_offset 102, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 103, q = 2, out = 2
trans_offset 104, q = 2, out = 30
trans_offset 218, q = 3, out = 3
trans_offset 240, q = 5, out = 29
trans_offset 361, q = 7, out = 7
trans_offset 497, q = 9, out = 2
trans_offset 496, q = 9, out = 10
trans_offset 549, q = 11, out = 8
trans_offset 567, q = 13, out = 29
trans_offset 637, q = 14, out = 2
trans_offset 650, q = 14, out = 28
trans_offset 637, q = 14, out = 2
trans_offset 622, q = 14, out = 15
trans_offset 620, q = 14, out = 2
trans_offset 604, q = 14, out = 3
trans_offset 805, q = 16, out = 0
trans_offset 1126, q = 20, out = 0
trans_offset 1590, q = 24, out = 0
trans_offset 1807, q = 26, out = 0
trans_offset 1792, q = 26, out = 0
trans_offset 2030, q = 30, out = 0
trans_offset 2014, q = 30, out = 0
trans_offset 803, q = 16, out = 29
trans_offset 1061, q = 20, out = 2
trans_offset 1539, q = 24, out = 28
trans_offset 1526, q = 24, out = 2
trans_offset 1511, q = 24, out = 15
trans_offset 1509, q = 24, out = 2
trans_offset 1508, q = 24, out = 3
trans_offset 802, q = 16, out = 29
trans_offset 1042, q = 20, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 54, q = 2, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 38, q = 2, out = 3
trans_offset 237, q = 4, out = 29
trans_offset 246, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 71, q = 2, out = 2
trans_offset 71, q = 2, out = 2
trans_offset 56, q = 2, out = 15
trans_offset 54, q = 2, out = 2
trans_offset 38, q = 2, out = 3
trans_offset 237, q = 4, out = 29
trans_offset 295, q = 6, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 38, q = 2, out = 3
trans_offset 237, q = 4, out = 29
trans_offset 263, q = 6, out = 2
trans_offset 22, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 6, q = 2, out = 30
trans_offset 120, q = 3, out = 3
trans_offset 240, q = 5, out = 29
trans_offset 361, q = 7, out = 7
trans_offset 497, q = 9, out = 2
trans_offset 496, q = 9, out = 10
trans_offset 549, q = 11, out = 8
trans_offset 567, q = 13, out = 29
trans_offset 588, q = 14, out = 2
trans_offset 588, q = 14, out = 2
trans_offset 573, q = 14, out = 15
trans_offset 571, q = 14, out = 2
trans_offset 570, q = 14, out = 3
trans_offset 802, q = 16, out = 29
trans_offset 1042, q = 20, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 54, q = 2, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 38, q = 2, out = 3
trans_offset 237, q = 4, out = 29
trans_offset 246, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 54, q = 2, out = 2
trans_offset 54, q = 2, out = 2
trans_offset 38, q = 2, out = 3
trans_offset 237, q = 4, out = 29
trans_offset 246, q = 6, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10
trans_offset 531, q = 10, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 236, q = 4, out = 29
trans_offset 244, q = 6, out = 7
trans_offset 479, q = 8, out = 2
trans_offset 478, q = 8, out = 10

Output is(223): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 69, 9, "aztán" )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 93, 9, "aztán" )
Symbol(54, 102, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 170, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 323, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 362, 5, "la" )
Symbol(15, 0, 0, )
Symbol(87, 371, 5, <sg> )
Symbol(71, 376, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 433, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 444, 5, <sg> )
Symbol(55, 449, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 575, 8, "mikor" )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 598, 8, "mikor" )
Symbol(54, 606, 6, <adv> )
Symbol(70, 612, 6, <itg> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 668, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(89, 866, 6, "fő" )
Symbol(15, 0, 0, )
Symbol(87, 876, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 889, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 934, 6, "fej" )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 999, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,085, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 1,096, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 1,109, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 3 85 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 3 69 54 70 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_1_207_T_1


LRS T1:
Name: R_1_207_T_1
arity: 2
arccount: 133
statecount: 35
linecount: 134
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 68 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 69 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 70 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 1
  in: 2 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 7 -- 
  out: 11 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 68 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 1
  in: 69 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 70 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 2
  in: 29 -- 
  out: 13 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 3
  in: 3 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 2 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 4
  in: 68 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 4
  in: 69 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 4
  in: 70 -- 
  out: 18 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 2 -- 
  out: 20 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 5
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 5
  in: 68 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 5
  in: 69 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 5
  in: 70 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 6
  in: 3 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 6
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 7
  in: 2 -- 
  out: 27 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 7
  in: 29 -- 
  out: 31 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 7
  in: 68 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 7
  in: 69 -- 
  out: 29 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 7
  in: 70 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 8
  in: 2 -- 
  out: 32 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 8
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 8
  in: 68 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 8
  in: 69 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 8
  in: 70 -- 
  out: 35 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 9
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(35):
  state_no: 10
  in: 3 -- 
  out: 14 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 11
  in: 2 -- 
  out: 40 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 11
  in: 29 -- 
  out: 19 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 11
  in: 68 -- 
  out: 41 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 11
  in: 69 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 11
  in: 70 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 12
  in: 2 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 12
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 12
  in: 68 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 12
  in: 69 -- 
  out: 17 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 12
  in: 70 -- 
  out: 18 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 13
  in: 2 -- 
  out: 50 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 13
  in: 29 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 13
  in: 68 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 13
  in: 69 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 13
  in: 70 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 14
  in: 2 -- 
  out: 20 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 14
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 14
  in: 68 -- 
  out: 21 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 14
  in: 69 -- 
  out: 17 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 14
  in: 70 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 15
  in: 3 -- 
  out: 25 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 15
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 16
  in: 2 -- 
  out: 32 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 16
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 16
  in: 68 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 16
  in: 69 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 16
  in: 70 -- 
  out: 35 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 17
  in: 10 -- 
  out: 6 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 18
  in: 2 -- 
  out: 40 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 18
  in: 29 -- 
  out: 19 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 18
  in: 68 -- 
  out: 41 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 18
  in: 69 -- 
  out: 34 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 18
  in: 70 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 19
  in: 2 -- 
  out: 8 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 19
  in: 7 -- 
  out: 11 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 19
  in: 68 -- 
  out: 9 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 19
  in: 69 -- 
  out: 10 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 19
  in: 70 -- 
  out: 12 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 20
  in: 29 -- 
  out: 13 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 21
  in: 3 -- 
  out: 14 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 22
  in: 2 -- 
  out: 15 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 22
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 22
  in: 68 -- 
  out: 16 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 22
  in: 69 -- 
  out: 17 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 22
  in: 70 -- 
  out: 18 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 23
  in: 2 -- 
  out: 20 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 23
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 23
  in: 68 -- 
  out: 21 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 23
  in: 69 -- 
  out: 17 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 23
  in: 70 -- 
  out: 23 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 24
  in: 3 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 24
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 25
  in: 2 -- 
  out: 27 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 25
  in: 29 -- 
  out: 31 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 25
  in: 68 -- 
  out: 28 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 25
  in: 69 -- 
  out: 29 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 25
  in: 70 -- 
  out: 23 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 26
  in: 2 -- 
  out: 32 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 26
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 26
  in: 68 -- 
  out: 33 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 26
  in: 69 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 26
  in: 70 -- 
  out: 35 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 27
  in: 3 -- 
  out: 14 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 27
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 28
  in: 2 -- 
  out: 40 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 28
  in: 29 -- 
  out: 19 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 28
  in: 68 -- 
  out: 41 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 28
  in: 69 -- 
  out: 34 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 28
  in: 70 -- 
  out: 43 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 29
  in: 2 -- 
  out: 15 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 29
  in: 29 -- 
  out: 19 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 29
  in: 68 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 29
  in: 69 -- 
  out: 17 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 29
  in: 70 -- 
  out: 18 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 30
  in: 2 -- 
  out: 50 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 30
  in: 29 -- 
  out: 54 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 30
  in: 68 -- 
  out: 51 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 30
  in: 69 -- 
  out: 52 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 30
  in: 70 -- 
  out: 43 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 31
  in: 2 -- 
  out: 20 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 31
  in: 29 -- 
  out: 19 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 31
  in: 68 -- 
  out: 21 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 31
  in: 69 -- 
  out: 17 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 31
  in: 70 -- 
  out: 23 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 32
  in: 3 -- 
  out: 25 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 32
  in: 8 -- 
  out: 26 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 33
  in: 2 -- 
  out: 32 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 33
  in: 29 -- 
  out: 19 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 33
  in: 68 -- 
  out: 33 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 33
  in: 69 -- 
  out: 34 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 33
  in: 70 -- 
  out: 35 -- 
  target: 33
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 34
  in: 2 -- 
  out: 40 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 34
  in: 29 -- 
  out: 19 -- 
  target: 32
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 34
  in: 68 -- 
  out: 41 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 34
  in: 69 -- 
  out: 34 -- 
  target: 34
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 34
  in: 70 -- 
  out: 43 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(133):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(223): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 69, 9, "aztán" )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 93, 9, "aztán" )
Symbol(54, 102, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 170, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 323, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 362, 5, "la" )
Symbol(15, 0, 0, )
Symbol(87, 371, 5, <sg> )
Symbol(71, 376, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 433, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 444, 5, <sg> )
Symbol(55, 449, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 575, 8, "mikor" )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 598, 8, "mikor" )
Symbol(54, 606, 6, <adv> )
Symbol(70, 612, 6, <itg> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 668, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(89, 866, 6, "fő" )
Symbol(15, 0, 0, )
Symbol(87, 876, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 889, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 934, 6, "fej" )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 999, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,085, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 1,096, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 1,109, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 3 85 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 3 69 54 70 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 29, signum = 2, q = 8, out = 32
trans_offset 30, signum = 29, q = 8, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 12, signum = 2, q = 4, out = 15
trans_offset 13, signum = 29, q = 4, out = 19
trans_offset 23, signum = 8, q = 6, out = 26
trans_offset 34, signum = 10, q = 9, out = 6
trans_offset 5, signum = 2, q = 1, out = 8
trans_offset 6, signum = 7, q = 1, out = 11
trans_offset 10, signum = 29, q = 2, out = 13
trans_offset 11, signum = 3, q = 3, out = 14
trans_offset 15, signum = 69, q = 4, out = 17
trans_offset 17, signum = 2, q = 5, out = 20
trans_offset 18, signum = 29, q = 5, out = 19
trans_offset 22, signum = 3, q = 6, out = 25
trans_offset 32, signum = 69, q = 8, out = 34
trans_offset 37, signum = 2, q = 11, out = 40
trans_offset 41, signum = 70, q = 11, out = 43
trans_offset 48, signum = 29, q = 13, out = 54
trans_offset 58, signum = 8, q = 15, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 87, signum = 3, q = 24, out = 25
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 94, signum = 2, q = 26, out = 32
trans_offset 95, signum = 29, q = 26, out = 19
trans_offset 88, signum = 8, q = 24, out = 26
trans_offset 64, signum = 10, q = 17, out = 6
trans_offset 70, signum = 2, q = 19, out = 8
trans_offset 71, signum = 7, q = 19, out = 11
trans_offset 75, signum = 29, q = 20, out = 13
trans_offset 76, signum = 3, q = 21, out = 14
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 77, signum = 2, q = 22, out = 15
trans_offset 78, signum = 29, q = 22, out = 19
trans_offset 88, signum = 8, q = 24, out = 26

Intermediate is(223): 
6 8 11 13 14 15 15 19 26 6 8 11 13 14 15 15 19 25 32 32 19 26 6 8 11 13 14 15 15 15 19 25 32 32 19 26 6 8 11 13 14 15 15 15 15 19 26 6 8 11 13 14 15 15 15 15 19 26 6 8 11 13 14 15 15 19 26 6 8 11 13 14 15 15 15 15 19 25 32 32 32 32 32 32 19 25 32 32 32 32 19 26 6 8 11 13 14 15 15 19 26 6 8 11 13 14 15 15 19 26 6 8 11 13 14 17 20 19 25 34 40 43 54 26 6 8 11 13 14 15 15 19 26 6 8 11 13 14 15 15 15 15 15 15 19 26 6 8 11 13 14 15 15 19 26 6 8 11 13 14 15 15 15 19 26 6 8 11 13 14 15 15 15 15 15 19 25 32 32 32 32 32 19 26 6 8 11 13 14 15 15 19 26 6 8 11 13 14 15 15 15 15 15 15 19 25 32 32 32 32 32 19 26 6 8 11 13 14 15 15 15 19 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 102, q = 8, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 190, q = 12, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 102, q = 8, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 190, q = 12, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 22, q = 2, out = 0
trans_offset 68, q = 5, out = 0
trans_offset 66, q = 5, out = 0
trans_offset 131, q = 9, out = 0
trans_offset 262, q = 16, out = 29
trans_offset 329, q = 22, out = 2
trans_offset 7, q = 2, out = 69
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 113, q = 8, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 202, q = 12, out = 2
trans_offset 198, q = 12, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 102, q = 8, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 190, q = 12, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 102, q = 8, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 190, q = 12, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 16, q = 2, out = 2
trans_offset 16, q = 2, out = 2
trans_offset 12, q = 2, out = 3
trans_offset 49, q = 4, out = 29
trans_offset 102, q = 8, out = 2
trans_offset 191, q = 12, out = 2
trans_offset 190, q = 12, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10
trans_offset 300, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 48, q = 4, out = 29
trans_offset 100, q = 8, out = 7
trans_offset 235, q = 14, out = 2
trans_offset 234, q = 14, out = 10

Output is(218): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 69, 9, "aztán" )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 93, 9, "aztán" )
Symbol(54, 102, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 170, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 323, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 362, 5, "la" )
Symbol(15, 0, 0, )
Symbol(87, 371, 5, <sg> )
Symbol(71, 376, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 433, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 444, 5, <sg> )
Symbol(55, 449, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 668, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(89, 866, 6, "fő" )
Symbol(15, 0, 0, )
Symbol(87, 876, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 889, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 934, 6, "fej" )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 999, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,085, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 1,096, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 1,109, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 3 85 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_1_83_T_1


LRS T1:
Name: R_1_83_T_1
arity: 2
arccount: 98
statecount: 32
linecount: 99
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 54 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 54 -- 
  out: 14 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 10 -- 
  out: 4 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(28):
  state_no: 11
  in: 2 -- 
  out: 7 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 11
  in: 7 -- 
  out: 8 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 11
  in: 15 -- 
  out: 10 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 54 -- 
  out: 9 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 12
  in: 29 -- 
  out: 11 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 13
  in: 3 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 14
  in: 2 -- 
  out: 37 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 14
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 14
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 15
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 15
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 15
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 16
  in: 2 -- 
  out: 45 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 16
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 16
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 17
  in: 3 -- 
  out: 49 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 45 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 29 -- 
  out: 48 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 3 -- 
  out: 49 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 20
  in: 3 -- 
  out: 36 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 21
  in: 2 -- 
  out: 59 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 21
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 54 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 3 -- 
  out: 36 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 23
  in: 2 -- 
  out: 59 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 23
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 24
  in: 2 -- 
  out: 37 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 24
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 54 -- 
  out: 38 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 25
  in: 2 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 25
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 54 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 27
  in: 2 -- 
  out: 59 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 27
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 27
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 27
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 28
  in: 2 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 28
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 28
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 28
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 29
  in: 2 -- 
  out: 45 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 29
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 29
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 29
  in: 54 -- 
  out: 46 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 30
  in: 2 -- 
  out: 37 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 30
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 30
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 30
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 31
  in: 2 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 31
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 31
  in: 29 -- 
  out: 76 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 31
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(98):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(218): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 69, 9, "aztán" )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 93, 9, "aztán" )
Symbol(54, 102, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 170, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 323, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 362, 5, "la" )
Symbol(15, 0, 0, )
Symbol(87, 371, 5, <sg> )
Symbol(71, 376, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 433, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 444, 5, <sg> )
Symbol(55, 449, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 668, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(89, 866, 6, "fő" )
Symbol(15, 0, 0, )
Symbol(87, 876, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 889, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 934, 6, "fej" )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 999, 6, <adv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,085, 7, "lát" )
Symbol(15, 0, 0, )
Symbol(87, 1,096, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(55, 1,109, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 3 85 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 3 2 15 87 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 15 87 28 55 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 25, signum = 54, q = 8, out = 14
trans_offset 24, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 25, signum = 54, q = 8, out = 14
trans_offset 24, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 54, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 21, signum = 8, q = 7, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 35, signum = 15, q = 14, out = 39
trans_offset 42, signum = 2, q = 16, out = 45
trans_offset 42, signum = 2, q = 16, out = 45
trans_offset 44, signum = 29, q = 16, out = 48
trans_offset 54, signum = 3, q = 20, out = 36
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 68, signum = 29, q = 24, out = 16
trans_offset 46, signum = 3, q = 17, out = 49
trans_offset 56, signum = 2, q = 21, out = 59
trans_offset 57, signum = 15, q = 21, out = 61
trans_offset 70, signum = 2, q = 25, out = 73
trans_offset 70, signum = 2, q = 25, out = 73
trans_offset 72, signum = 29, q = 25, out = 76
trans_offset 47, signum = 8, q = 17, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 54, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 21, signum = 8, q = 7, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 36, signum = 29, q = 14, out = 16
trans_offset 47, signum = 8, q = 17, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 23, signum = 15, q = 8, out = 15
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 24, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 54, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 21, signum = 8, q = 7, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 36, signum = 29, q = 14, out = 16
trans_offset 46, signum = 3, q = 17, out = 49
trans_offset 56, signum = 2, q = 21, out = 59
trans_offset 57, signum = 15, q = 21, out = 61
trans_offset 70, signum = 2, q = 25, out = 73
trans_offset 70, signum = 2, q = 25, out = 73
trans_offset 70, signum = 2, q = 25, out = 73
trans_offset 72, signum = 29, q = 25, out = 76
trans_offset 47, signum = 8, q = 17, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(218): 
4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 16 12 13 14 16 22 4 7 8 11 12 13 13 13 16 12 13 14 16 22 4 7 8 11 12 13 13 13 13 16 22 4 7 8 11 12 13 15 13 13 16 22 4 7 8 11 12 13 14 16 22 4 7 8 11 36 37 39 45 45 48 36 37 37 37 37 37 37 16 49 59 61 73 73 76 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 14 16 22 4 7 8 11 36 37 37 37 37 37 37 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 13 16 22 4 7 8 11 12 13 15 13 13 13 16 12 13 15 13 13 13 16 22 4 7 8 11 12 13 14 16 22 4 7 8 11 36 37 37 37 37 37 37 16 49 59 61 73 73 73 76 22 4 7 8 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 18, q = 2, out = 0
trans_offset 18, q = 2, out = 0
trans_offset 18, q = 2, out = 0
trans_offset 17, q = 2, out = 0
trans_offset 34, q = 4, out = 0
trans_offset 33, q = 4, out = 0
trans_offset 55, q = 6, out = 29
trans_offset 98, q = 10, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 55, q = 6, out = 29
trans_offset 94, q = 10, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 54, q = 6, out = 29
trans_offset 92, q = 10, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 18, q = 2, out = 0
trans_offset 18, q = 2, out = 0
trans_offset 17, q = 2, out = 0
trans_offset 34, q = 4, out = 0
trans_offset 33, q = 4, out = 0
trans_offset 55, q = 6, out = 29
trans_offset 98, q = 10, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 21, q = 3, out = 0
trans_offset 47, q = 5, out = 0
trans_offset 66, q = 7, out = 0
trans_offset 65, q = 7, out = 0
trans_offset 82, q = 9, out = 0
trans_offset 81, q = 9, out = 0
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 54, q = 6, out = 29
trans_offset 92, q = 10, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 58, q = 7, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 58, q = 7, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10

Output is(199): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 69, 9, "aztán" )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 93, 9, "aztán" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(89, 866, 6, "fő" )
Symbol(15, 0, 0, )
Symbol(87, 876, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 889, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 934, 6, "fej" )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 3 85 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_3_286_T_1


LRS T1:
Name: R_3_286_T_1
arity: 2
arccount: 47
statecount: 15
linecount: 48
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 54 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 85 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 54 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 85 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 54 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 85 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 54 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 85 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 54 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 85 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 27 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 54 -- 
  out: 29 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 85 -- 
  out: 28 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 12 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 54 -- 
  out: 36 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 85 -- 
  out: 28 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 13 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 54 -- 
  out: 15 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 85 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 29 -- 
  out: 45 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 54 -- 
  out: 36 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 85 -- 
  out: 43 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 14
  in: 2 -- 
  out: 17 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 14
  in: 54 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 14
  in: 85 -- 
  out: 14 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(47):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(199): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 69, 9, "aztán" )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 93, 9, "aztán" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(89, 866, 6, "fő" )
Symbol(15, 0, 0, )
Symbol(87, 876, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 889, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 934, 6, "fej" )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 3 85 54 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 85, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 15, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 27, signum = 85, q = 8, out = 28
trans_offset 33, signum = 54, q = 11, out = 36
trans_offset 40, signum = 29, q = 13, out = 45
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 24, signum = 2, q = 8, out = 27
trans_offset 26, signum = 54, q = 8, out = 29
trans_offset 25, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 54, q = 4, out = 15
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 54, q = 4, out = 15
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 24, signum = 2, q = 8, out = 27
trans_offset 24, signum = 2, q = 8, out = 27
trans_offset 24, signum = 2, q = 8, out = 27
trans_offset 24, signum = 2, q = 8, out = 27
trans_offset 24, signum = 2, q = 8, out = 27
trans_offset 25, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 54, q = 4, out = 15
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(199): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 14 17 16 21 28 36 45 22 5 7 9 11 12 13 13 13 16 21 27 29 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 15 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 15 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 13 13 13 13 13 16 21 27 27 27 27 27 16 22 5 7 9 11 12 13 15 16 22 5 7 9 11 12 13 13 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 54
trans_offset 25, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 13, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 42, q = 5, out = 2
trans_offset 74, q = 7, out = 2
trans_offset 74, q = 7, out = 2
trans_offset 74, q = 7, out = 2
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 54
trans_offset 25, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 54
trans_offset 25, q = 4, out = 2
trans_offset 24, q = 4, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 15, q = 2, out = 54
trans_offset 33, q = 4, out = 2
trans_offset 30, q = 4, out = 3
trans_offset 21, q = 3, out = 29
trans_offset 42, q = 5, out = 2
trans_offset 74, q = 7, out = 2
trans_offset 74, q = 7, out = 2
trans_offset 73, q = 7, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 17, q = 2, out = 0
trans_offset 34, q = 4, out = 0
trans_offset 63, q = 6, out = 0
trans_offset 110, q = 10, out = 29
trans_offset 138, q = 13, out = 2
trans_offset 6, q = 2, out = 85
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10
trans_offset 116, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 7
trans_offset 90, q = 8, out = 2
trans_offset 89, q = 8, out = 10

Output is(195): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 0, 0, )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(89, 866, 6, "fő" )
Symbol(15, 0, 0, )
Symbol(87, 876, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 889, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 934, 6, "fej" )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Rule found: R_3_298_T_1


LRS T1:
Name: R_3_298_T_1
arity: 2
arccount: 65
statecount: 21
linecount: 66
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 88 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 89 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 10 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 88 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 89 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 88 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 89 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 88 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 89 -- 
  out: 19 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 29 -- 
  out: 24 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 6
  in: 88 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 6
  in: 89 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 3 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 27 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 29 -- 
  out: 30 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 88 -- 
  out: 22 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 89 -- 
  out: 19 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 3 -- 
  out: 31 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 9
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 3 -- 
  out: 12 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 10
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 2 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 88 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 11
  in: 89 -- 
  out: 37 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 10 -- 
  out: 6 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(37):
  state_no: 13
  in: 3 -- 
  out: 40 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 14
  in: 2 -- 
  out: 42 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 88 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 14
  in: 89 -- 
  out: 44 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 2 -- 
  out: 13 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 88 -- 
  out: 14 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 15
  in: 89 -- 
  out: 15 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 16
  in: 2 -- 
  out: 50 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 16
  in: 29 -- 
  out: 53 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 16
  in: 88 -- 
  out: 51 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 16
  in: 89 -- 
  out: 37 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 17
  in: 2 -- 
  out: 17 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 17
  in: 29 -- 
  out: 16 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 17
  in: 88 -- 
  out: 14 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 17
  in: 89 -- 
  out: 19 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 18
  in: 2 -- 
  out: 58 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 18
  in: 29 -- 
  out: 61 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 18
  in: 88 -- 
  out: 51 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 18
  in: 89 -- 
  out: 44 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 19
  in: 3 -- 
  out: 25 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 19
  in: 8 -- 
  out: 26 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 20
  in: 2 -- 
  out: 35 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 20
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 20
  in: 88 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 20
  in: 89 -- 
  out: 37 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(65):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(195): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 0, 0, )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(89, 866, 6, "fő" )
Symbol(15, 0, 0, )
Symbol(87, 876, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 889, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 934, 6, "fej" )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 89 15 87 28 71 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 22, signum = 3, q = 7, out = 25
trans_offset 32, signum = 2, q = 11, out = 35
trans_offset 32, signum = 2, q = 11, out = 35
trans_offset 33, signum = 29, q = 11, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 89, q = 4, out = 15
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 18, signum = 2, q = 6, out = 21
trans_offset 19, signum = 29, q = 6, out = 24
trans_offset 30, signum = 3, q = 10, out = 12
trans_offset 45, signum = 88, q = 15, out = 14
trans_offset 51, signum = 2, q = 17, out = 17
trans_offset 51, signum = 2, q = 17, out = 17
trans_offset 51, signum = 2, q = 17, out = 17
trans_offset 51, signum = 2, q = 17, out = 17
trans_offset 52, signum = 29, q = 17, out = 16
trans_offset 29, signum = 8, q = 9, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26
trans_offset 36, signum = 10, q = 12, out = 6
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 10
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 23, signum = 8, q = 7, out = 26

Intermediate is(195): 
6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 13 16 25 35 35 16 26 6 7 10 11 12 13 13 13 13 16 26 6 7 10 11 12 13 13 13 13 16 26 6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 13 13 13 13 16 26 6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 13 13 13 13 16 26 6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 13 16 26 6 7 10 11 12 15 21 21 21 21 24 12 14 17 17 17 17 16 26 6 7 10 11 12 13 13 16 26 6 7 10 11 12 13 13 13 13 13 13 16 26 6 7 10 11 12 13 13 13 16 26 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 8, q = 2, out = 88
trans_offset 26, q = 3, out = 3
trans_offset 94, q = 7, out = 0
trans_offset 138, q = 11, out = 0
trans_offset 199, q = 14, out = 0
trans_offset 199, q = 14, out = 0
trans_offset 199, q = 14, out = 0
trans_offset 196, q = 14, out = 0
trans_offset 258, q = 18, out = 0
trans_offset 92, q = 7, out = 29
trans_offset 131, q = 11, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 17, q = 2, out = 2
trans_offset 17, q = 2, out = 2
trans_offset 14, q = 2, out = 3
trans_offset 67, q = 5, out = 29
trans_offset 106, q = 9, out = 2
trans_offset 174, q = 13, out = 2
trans_offset 174, q = 13, out = 2
trans_offset 173, q = 13, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10
trans_offset 281, q = 19, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 2
trans_offset 7, q = 2, out = 2
trans_offset 6, q = 2, out = 3
trans_offset 66, q = 5, out = 29
trans_offset 104, q = 9, out = 7
trans_offset 234, q = 16, out = 2
trans_offset 233, q = 16, out = 10

Output is(188): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 11, "<Aztán>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(85, 0, 0, )
Symbol(2, 78, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 120, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 140, 6, "egy" )
Symbol(73, 146, 6, <det> )
Symbol(2, 152, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 164, 6, "egy" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 188, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 208, 6, "kis" )
Symbol(53, 214, 6, <adj> )
Symbol(87, 220, 5, <sg> )
Symbol(55, 225, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 243, 10, "<kezet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 265, 7, "kéz" )
Symbol(15, 0, 0, )
Symbol(87, 276, 5, <sg> )
Symbol(71, 281, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 299, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 341, 9, "<lát>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 388, 7, "lát" )
Symbol(38, 395, 8, <vblex> )
Symbol(37, 403, 7, <pres> )
Symbol(87, 410, 5, <sg> )
Symbol(2, 415, 6, <s3p> )
Symbol(2, 421, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 467, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 485, 4, "," )
Symbol(44, 489, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 506, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 526, 6, "és" )
Symbol(45, 532, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 553, 10, "<mikor>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(69, 0, 0, )
Symbol(2, 583, 9, <cnjadv> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 630, 14, "<közelebb>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 656, 12, "közelebb" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 686, 9, "<megy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 707, 7, "megy" )
Symbol(38, 714, 8, <vblex> )
Symbol(37, 722, 7, <pres> )
Symbol(87, 729, 5, <sg> )
Symbol(2, 734, 6, <s3p> )
Symbol(2, 740, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 758, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 776, 4, "," )
Symbol(44, 780, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 797, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 815, 4, "a" )
Symbol(73, 819, 6, <det> )
Symbol(2, 825, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 11, "<fejét>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(88, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 944, 5, <sg> )
Symbol(28, 0, 0, )
Symbol(71, 957, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 975, 7, "<is>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(30, 0, 0, )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,017, 11, "<látja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 1,040, 7, "lát" )
Symbol(38, 1,047, 8, <vblex> )
Symbol(37, 1,055, 7, <pres> )
Symbol(87, 1,062, 5, <sg> )
Symbol(2, 1,067, 6, <s3p> )
Symbol(2, 1,073, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,127, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,145, 4, "!" )
Symbol(64, 1,149, 7, <sent> )
Symbol(2, 1,156, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 85 2 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 69 2 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 88 15 87 28 71 29 8 10 2 7 29 3 30 54 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 39 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Nevet>" #BOC# | #0# "Nev" <np> <sg> <acc> | #0# "név" <n> <sg> <acc> | #0# "nevet" <vblex> <pres> <sg> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<azt>" #BOC# | #0# "az" <prn> <sg> <acc> | #0# "az" <predet> <sg> <acc> | #0# "azt" <cnjcoo> | #EOC# $0$ "<mondja>" #BOC# | #0# "mond" <vblex> <pres> <sg> <s3p> <def> | #0# "mond" <vblex> <pis> <sg> <s3p> <def> | #EOC# $0$ "<:>" #BOC# | #0# ":" <sent> <<<<> | #EOC# 
Rule found: R_1_144_T_1


LRS T1:
Name: R_1_144_T_1
arity: 2
arccount: 78
statecount: 27
linecount: 79
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 39 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 40 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 39 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 40 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 29 -- 
  out: 20 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 21 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 25 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 2 -- 
  out: 13 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 10
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 10
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 40 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 34 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 29 -- 
  out: 37 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 3 -- 
  out: 21 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 13
  in: 2 -- 
  out: 25 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 13
  in: 29 -- 
  out: 16 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 40 -- 
  out: 27 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 14
  in: 10 -- 
  out: 5 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 15
  in: 2 -- 
  out: 7 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 15
  in: 7 -- 
  out: 9 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 15
  in: 39 -- 
  out: 8 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 15
  in: 40 -- 
  out: 10 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 16
  in: 29 -- 
  out: 11 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 3 -- 
  out: 12 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 13 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 39 -- 
  out: 14 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 2 -- 
  out: 17 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 29 -- 
  out: 20 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 19
  in: 39 -- 
  out: 18 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 19
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 20
  in: 3 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 3 -- 
  out: 12 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 2 -- 
  out: 25 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 29 -- 
  out: 16 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 22
  in: 39 -- 
  out: 26 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 22
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 2 -- 
  out: 13 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 23
  in: 39 -- 
  out: 14 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 23
  in: 40 -- 
  out: 15 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 2 -- 
  out: 34 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 29 -- 
  out: 37 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 24
  in: 39 -- 
  out: 35 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 24
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 3 -- 
  out: 21 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 8 -- 
  out: 22 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 25 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 39 -- 
  out: 26 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 40 -- 
  out: 27 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(78):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(104): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 10, "<Nevet>" )
Symbol(7, 56, 6, #BOC# )
Symbol(29, 62, 2, | )
Symbol(3, 64, 4, #0# )
Symbol(2, 68, 6, "Nev" )
Symbol(16, 74, 5, <np> )
Symbol(87, 79, 5, <sg> )
Symbol(71, 84, 6, <acc> )
Symbol(29, 90, 2, | )
Symbol(3, 92, 4, #0# )
Symbol(2, 96, 7, "név" )
Symbol(15, 103, 4, <n> )
Symbol(87, 107, 5, <sg> )
Symbol(71, 112, 6, <acc> )
Symbol(29, 118, 2, | )
Symbol(3, 120, 4, #0# )
Symbol(2, 124, 8, "nevet" )
Symbol(38, 132, 8, <vblex> )
Symbol(37, 140, 7, <pres> )
Symbol(87, 147, 5, <sg> )
Symbol(2, 152, 6, <s3p> )
Symbol(2, 158, 6, <ind> )
Symbol(29, 164, 2, | )
Symbol(8, 166, 6, #EOC# )
Symbol(10, 172, 4, $0$ )
Symbol(2, 176, 6, "<,>" )
Symbol(7, 182, 6, #BOC# )
Symbol(29, 188, 2, | )
Symbol(3, 190, 4, #0# )
Symbol(2, 194, 4, "," )
Symbol(44, 198, 5, <cm> )
Symbol(29, 203, 2, | )
Symbol(8, 205, 6, #EOC# )
Symbol(10, 211, 4, $0$ )
Symbol(2, 215, 8, "<és>" )
Symbol(7, 223, 6, #BOC# )
Symbol(29, 229, 2, | )
Symbol(3, 231, 4, #0# )
Symbol(2, 235, 6, "és" )
Symbol(45, 241, 9, <cnjcoo> )
Symbol(29, 250, 2, | )
Symbol(8, 252, 6, #EOC# )
Symbol(10, 258, 4, $0$ )
Symbol(2, 262, 8, "<azt>" )
Symbol(7, 270, 6, #BOC# )
Symbol(29, 276, 2, | )
Symbol(3, 278, 4, #0# )
Symbol(75, 282, 5, "az" )
Symbol(57, 287, 6, <prn> )
Symbol(87, 293, 5, <sg> )
Symbol(71, 298, 6, <acc> )
Symbol(29, 304, 2, | )
Symbol(3, 306, 4, #0# )
Symbol(75, 310, 5, "az" )
Symbol(2, 315, 9, <predet> )
Symbol(87, 324, 5, <sg> )
Symbol(71, 329, 6, <acc> )
Symbol(29, 335, 2, | )
Symbol(3, 337, 4, #0# )
Symbol(2, 341, 6, "azt" )
Symbol(45, 347, 9, <cnjcoo> )
Symbol(29, 356, 2, | )
Symbol(8, 358, 6, #EOC# )
Symbol(10, 364, 4, $0$ )
Symbol(2, 368, 11, "<mondja>" )
Symbol(7, 379, 6, #BOC# )
Symbol(29, 385, 2, | )
Symbol(3, 387, 4, #0# )
Symbol(2, 391, 7, "mond" )
Symbol(38, 398, 8, <vblex> )
Symbol(37, 406, 7, <pres> )
Symbol(87, 413, 5, <sg> )
Symbol(2, 418, 6, <s3p> )
Symbol(2, 424, 6, <def> )
Symbol(29, 430, 2, | )
Symbol(3, 432, 4, #0# )
Symbol(2, 436, 7, "mond" )
Symbol(38, 443, 8, <vblex> )
Symbol(40, 451, 6, <pis> )
Symbol(87, 457, 5, <sg> )
Symbol(2, 462, 6, <s3p> )
Symbol(2, 468, 6, <def> )
Symbol(29, 474, 2, | )
Symbol(8, 476, 6, #EOC# )
Symbol(10, 482, 4, $0$ )
Symbol(2, 486, 6, "<:>" )
Symbol(7, 492, 6, #BOC# )
Symbol(29, 498, 2, | )
Symbol(3, 500, 4, #0# )
Symbol(2, 504, 4, ":" )
Symbol(64, 508, 7, <sent> )
Symbol(2, 515, 6, <<<<> )
Symbol(29, 521, 2, | )
Symbol(8, 523, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 71 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 3 2 38 40 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 23, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 21
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 22, signum = 2, q = 8, out = 25
trans_offset 25, signum = 40, q = 8, out = 27
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 31, signum = 2, q = 11, out = 34
trans_offset 32, signum = 29, q = 11, out = 37
trans_offset 36, signum = 8, q = 12, out = 22
trans_offset 41, signum = 10, q = 14, out = 5
trans_offset 42, signum = 2, q = 15, out = 7
trans_offset 43, signum = 7, q = 15, out = 9
trans_offset 46, signum = 29, q = 16, out = 11
trans_offset 47, signum = 3, q = 17, out = 12
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 48, signum = 2, q = 18, out = 13
trans_offset 49, signum = 29, q = 18, out = 16
trans_offset 57, signum = 8, q = 20, out = 22

Intermediate is(104): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 21 25 25 25 25 16 21 25 25 25 25 25 25 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 21 25 25 25 25 16 21 25 25 16 22 5 7 9 11 12 13 13 13 13 13 13 16 21 25 25 27 34 34 34 37 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 14, q = 2, out = 0
trans_offset 13, q = 2, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 39, q = 5, out = 0
trans_offset 38, q = 5, out = 0
trans_offset 74, q = 9, out = 29
trans_offset 136, q = 16, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 68, q = 8, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 100, q = 12, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 11, q = 2, out = 2
trans_offset 10, q = 2, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 68, q = 8, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 101, q = 12, out = 2
trans_offset 100, q = 12, out = 3
trans_offset 29, q = 4, out = 29
trans_offset 62, q = 8, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 95, q = 12, out = 2
trans_offset 94, q = 12, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10
trans_offset 179, q = 20, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 28, q = 4, out = 29
trans_offset 60, q = 8, out = 7
trans_offset 119, q = 14, out = 2
trans_offset 118, q = 14, out = 10

Output is(96): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 10, "<Nevet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 68, 6, "Nev" )
Symbol(16, 74, 5, <np> )
Symbol(87, 79, 5, <sg> )
Symbol(71, 84, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 96, 7, "név" )
Symbol(15, 103, 4, <n> )
Symbol(87, 107, 5, <sg> )
Symbol(71, 112, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 8, "nevet" )
Symbol(38, 132, 8, <vblex> )
Symbol(37, 140, 7, <pres> )
Symbol(87, 147, 5, <sg> )
Symbol(2, 152, 6, <s3p> )
Symbol(2, 158, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 176, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 194, 4, "," )
Symbol(44, 198, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 215, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 235, 6, "és" )
Symbol(45, 241, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 262, 8, "<azt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 282, 5, "az" )
Symbol(57, 287, 6, <prn> )
Symbol(87, 293, 5, <sg> )
Symbol(71, 298, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 310, 5, "az" )
Symbol(2, 315, 9, <predet> )
Symbol(87, 324, 5, <sg> )
Symbol(71, 329, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 341, 6, "azt" )
Symbol(45, 347, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 368, 11, "<mondja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 391, 7, "mond" )
Symbol(38, 398, 8, <vblex> )
Symbol(37, 406, 7, <pres> )
Symbol(87, 413, 5, <sg> )
Symbol(2, 418, 6, <s3p> )
Symbol(2, 424, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 486, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 504, 4, ":" )
Symbol(64, 508, 7, <sent> )
Symbol(2, 515, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 71 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Rule found: R_2_242_T_1


LRS T1:
Name: R_2_242_T_1
arity: 2
arccount: 158
statecount: 31
linecount: 159
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 44 -- 
  out: 7 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 45 -- 
  out: 8 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 0
  in: 63 -- 
  out: 9 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(5):
  state_no: 0
  in: 64 -- 
  out: 10 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(6):
  state_no: 0
  in: 80 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(7):
  state_no: 0
  in: 81 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(8):
  state_no: 1
  in: 2 -- 
  out: 11 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 1
  in: 7 -- 
  out: 13 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 1
  in: 44 -- 
  out: 15 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 1
  in: 45 -- 
  out: 16 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 1
  in: 63 -- 
  out: 17 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 1
  in: 64 -- 
  out: 18 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 1
  in: 80 -- 
  out: 14 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 1
  in: 81 -- 
  out: 12 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 2
  in: 29 -- 
  out: 19 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 3
  in: 3 -- 
  out: 20 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 4
  in: 2 -- 
  out: 21 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 4
  in: 29 -- 
  out: 28 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 4
  in: 44 -- 
  out: 24 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 4
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 4
  in: 63 -- 
  out: 26 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 4
  in: 64 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 4
  in: 80 -- 
  out: 23 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 4
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 5
  in: 2 -- 
  out: 29 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 5
  in: 29 -- 
  out: 28 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 5
  in: 44 -- 
  out: 32 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 5
  in: 45 -- 
  out: 33 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 5
  in: 63 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 5
  in: 64 -- 
  out: 35 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 5
  in: 80 -- 
  out: 31 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 5
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 6
  in: 2 -- 
  out: 21 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 6
  in: 29 -- 
  out: 28 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 6
  in: 44 -- 
  out: 24 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 6
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 6
  in: 63 -- 
  out: 26 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 6
  in: 64 -- 
  out: 27 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 6
  in: 80 -- 
  out: 23 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 6
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 7
  in: 2 -- 
  out: 45 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 7
  in: 29 -- 
  out: 52 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 7
  in: 44 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 7
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 7
  in: 63 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 7
  in: 64 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 7
  in: 80 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 7
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 8
  in: 3 -- 
  out: 53 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 8
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 9
  in: 2 -- 
  out: 29 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 9
  in: 29 -- 
  out: 28 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 9
  in: 44 -- 
  out: 32 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 9
  in: 45 -- 
  out: 33 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 9
  in: 63 -- 
  out: 34 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 9
  in: 64 -- 
  out: 35 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 9
  in: 80 -- 
  out: 31 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 9
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 10
  in: 3 -- 
  out: 63 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 10
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 11
  in: 2 -- 
  out: 45 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 11
  in: 29 -- 
  out: 52 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 11
  in: 44 -- 
  out: 48 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 11
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 11
  in: 63 -- 
  out: 50 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 11
  in: 64 -- 
  out: 51 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 11
  in: 80 -- 
  out: 47 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 11
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 12
  in: 3 -- 
  out: 53 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 12
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 13
  in: 3 -- 
  out: 20 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 13
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 14
  in: 2 -- 
  out: 77 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 14
  in: 29 -- 
  out: 28 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 14
  in: 44 -- 
  out: 80 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 14
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 14
  in: 63 -- 
  out: 82 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 14
  in: 64 -- 
  out: 83 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 14
  in: 80 -- 
  out: 79 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 14
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 15
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(83):
  state_no: 16
  in: 3 -- 
  out: 63 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 16
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 17
  in: 3 -- 
  out: 20 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 17
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 18
  in: 2 -- 
  out: 77 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 18
  in: 29 -- 
  out: 28 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 18
  in: 44 -- 
  out: 80 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 18
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 18
  in: 63 -- 
  out: 82 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 18
  in: 64 -- 
  out: 83 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 18
  in: 80 -- 
  out: 79 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 18
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 19
  in: 10 -- 
  out: 5 -- 
  target: 24
  final_state: 1
  start_state: 0
Elem(96):
  state_no: 20
  in: 2 -- 
  out: 21 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 20
  in: 29 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(98):
  state_no: 20
  in: 44 -- 
  out: 24 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(99):
  state_no: 20
  in: 45 -- 
  out: 25 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(100):
  state_no: 20
  in: 63 -- 
  out: 26 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(101):
  state_no: 20
  in: 64 -- 
  out: 27 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(102):
  state_no: 20
  in: 80 -- 
  out: 23 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(103):
  state_no: 20
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(104):
  state_no: 21
  in: 2 -- 
  out: 107 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(105):
  state_no: 21
  in: 29 -- 
  out: 114 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(106):
  state_no: 21
  in: 44 -- 
  out: 110 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(107):
  state_no: 21
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(108):
  state_no: 21
  in: 63 -- 
  out: 112 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(109):
  state_no: 21
  in: 64 -- 
  out: 113 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(110):
  state_no: 21
  in: 80 -- 
  out: 109 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(111):
  state_no: 21
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(112):
  state_no: 22
  in: 2 -- 
  out: 21 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(113):
  state_no: 22
  in: 29 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(114):
  state_no: 22
  in: 44 -- 
  out: 24 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(115):
  state_no: 22
  in: 45 -- 
  out: 25 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(116):
  state_no: 22
  in: 63 -- 
  out: 26 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(117):
  state_no: 22
  in: 64 -- 
  out: 27 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(118):
  state_no: 22
  in: 80 -- 
  out: 23 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(119):
  state_no: 22
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(120):
  state_no: 23
  in: 2 -- 
  out: 107 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(121):
  state_no: 23
  in: 29 -- 
  out: 114 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(122):
  state_no: 23
  in: 44 -- 
  out: 110 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(123):
  state_no: 23
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(124):
  state_no: 23
  in: 63 -- 
  out: 112 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(125):
  state_no: 23
  in: 64 -- 
  out: 113 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(126):
  state_no: 23
  in: 80 -- 
  out: 109 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(127):
  state_no: 23
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(128):
  state_no: 24
  in: 2 -- 
  out: 11 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(129):
  state_no: 24
  in: 7 -- 
  out: 13 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(130):
  state_no: 24
  in: 44 -- 
  out: 15 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(131):
  state_no: 24
  in: 45 -- 
  out: 16 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(132):
  state_no: 24
  in: 63 -- 
  out: 17 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(133):
  state_no: 24
  in: 64 -- 
  out: 18 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(134):
  state_no: 24
  in: 80 -- 
  out: 14 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(135):
  state_no: 24
  in: 81 -- 
  out: 12 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(136):
  state_no: 25
  in: 3 -- 
  out: 53 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(137):
  state_no: 25
  in: 8 -- 
  out: 54 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(138):
  state_no: 26
  in: 3 -- 
  out: 53 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(139):
  state_no: 26
  in: 8 -- 
  out: 54 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(140):
  state_no: 27
  in: 29 -- 
  out: 19 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(141):
  state_no: 28
  in: 2 -- 
  out: 77 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(142):
  state_no: 28
  in: 29 -- 
  out: 28 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(143):
  state_no: 28
  in: 44 -- 
  out: 80 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(144):
  state_no: 28
  in: 45 -- 
  out: 81 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(145):
  state_no: 28
  in: 63 -- 
  out: 82 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(146):
  state_no: 28
  in: 64 -- 
  out: 83 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(147):
  state_no: 28
  in: 80 -- 
  out: 79 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(148):
  state_no: 28
  in: 81 -- 
  out: 22 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(149):
  state_no: 29
  in: 2 -- 
  out: 77 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(150):
  state_no: 29
  in: 29 -- 
  out: 28 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(151):
  state_no: 29
  in: 44 -- 
  out: 80 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(152):
  state_no: 29
  in: 45 -- 
  out: 81 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(153):
  state_no: 29
  in: 63 -- 
  out: 82 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(154):
  state_no: 29
  in: 64 -- 
  out: 83 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(155):
  state_no: 29
  in: 80 -- 
  out: 79 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(156):
  state_no: 29
  in: 81 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(157):
  state_no: 30
  in: 3 -- 
  out: 63 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(158):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(96): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 10, "<Nevet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 68, 6, "Nev" )
Symbol(16, 74, 5, <np> )
Symbol(87, 79, 5, <sg> )
Symbol(71, 84, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 96, 7, "név" )
Symbol(15, 103, 4, <n> )
Symbol(87, 107, 5, <sg> )
Symbol(71, 112, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 8, "nevet" )
Symbol(38, 132, 8, <vblex> )
Symbol(37, 140, 7, <pres> )
Symbol(87, 147, 5, <sg> )
Symbol(2, 152, 6, <s3p> )
Symbol(2, 158, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 176, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 194, 4, "," )
Symbol(44, 198, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 215, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 235, 6, "és" )
Symbol(45, 241, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 262, 8, "<azt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 282, 5, "az" )
Symbol(57, 287, 6, <prn> )
Symbol(87, 293, 5, <sg> )
Symbol(71, 298, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 310, 5, "az" )
Symbol(2, 315, 9, <predet> )
Symbol(87, 324, 5, <sg> )
Symbol(71, 329, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 341, 6, "azt" )
Symbol(45, 347, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 368, 11, "<mondja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 391, 7, "mond" )
Symbol(38, 398, 8, <vblex> )
Symbol(37, 406, 7, <pres> )
Symbol(87, 413, 5, <sg> )
Symbol(2, 418, 6, <s3p> )
Symbol(2, 424, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 486, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 504, 4, ":" )
Symbol(64, 508, 7, <sent> )
Symbol(2, 515, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 71 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 3 2 45 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 24, signum = 80, q = 4, out = 23
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54
trans_offset 95, signum = 10, q = 19, out = 5
trans_offset 128, signum = 2, q = 24, out = 11
trans_offset 129, signum = 7, q = 24, out = 13
trans_offset 140, signum = 29, q = 27, out = 19
trans_offset 157, signum = 3, q = 30, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 60, signum = 3, q = 10, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 60, signum = 3, q = 10, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 61, signum = 8, q = 10, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 20, signum = 44, q = 4, out = 24
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54
trans_offset 95, signum = 10, q = 19, out = 5
trans_offset 128, signum = 2, q = 24, out = 11
trans_offset 129, signum = 7, q = 24, out = 13
trans_offset 140, signum = 29, q = 27, out = 19
trans_offset 157, signum = 3, q = 30, out = 63
trans_offset 26, signum = 2, q = 5, out = 29
trans_offset 29, signum = 45, q = 5, out = 33
trans_offset 27, signum = 29, q = 5, out = 28
trans_offset 61, signum = 8, q = 10, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 75, signum = 29, q = 14, out = 28
trans_offset 50, signum = 3, q = 8, out = 53
trans_offset 74, signum = 2, q = 14, out = 77
trans_offset 77, signum = 45, q = 14, out = 81
trans_offset 105, signum = 29, q = 21, out = 114
trans_offset 137, signum = 8, q = 25, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 19, signum = 29, q = 4, out = 28
trans_offset 51, signum = 8, q = 8, out = 54
trans_offset 82, signum = 10, q = 15, out = 5
trans_offset 8, signum = 2, q = 1, out = 11
trans_offset 9, signum = 7, q = 1, out = 13
trans_offset 16, signum = 29, q = 2, out = 19
trans_offset 17, signum = 3, q = 3, out = 20
trans_offset 18, signum = 2, q = 4, out = 21
trans_offset 23, signum = 64, q = 4, out = 27
trans_offset 34, signum = 2, q = 6, out = 21
trans_offset 35, signum = 29, q = 6, out = 28
trans_offset 71, signum = 8, q = 12, out = 54

Intermediate is(96): 
5 11 13 19 20 21 23 28 54 5 11 13 19 63 29 29 29 29 28 63 29 29 29 29 28 63 29 29 29 29 29 29 28 54 5 11 13 19 20 21 24 28 54 5 11 13 19 63 29 33 28 54 5 11 13 19 20 21 21 21 21 28 53 77 77 77 77 28 53 77 81 114 54 5 11 13 19 20 21 21 21 21 21 21 28 54 5 11 13 19 20 21 27 21 28 54 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 11, q = 2, out = 64
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 3, q = 1, out = 0
trans_offset 28, q = 2, out = 0
trans_offset 93, q = 5, out = 0
trans_offset 91, q = 5, out = 0
trans_offset 142, q = 8, out = 29
trans_offset 272, q = 13, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 25, q = 2, out = 2
trans_offset 23, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 110, q = 7, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 179, q = 10, out = 2
trans_offset 178, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 15, q = 2, out = 45
trans_offset 80, q = 5, out = 2
trans_offset 92, q = 5, out = 3
trans_offset 141, q = 8, out = 29
trans_offset 250, q = 13, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 8, q = 2, out = 44
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 12, q = 2, out = 2
trans_offset 24, q = 2, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 117, q = 7, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 198, q = 10, out = 3
trans_offset 69, q = 4, out = 29
trans_offset 117, q = 7, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 186, q = 10, out = 2
trans_offset 198, q = 10, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10
trans_offset 290, q = 14, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 7, q = 2, out = 80
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 68, q = 4, out = 29
trans_offset 108, q = 7, out = 7
trans_offset 211, q = 11, out = 2
trans_offset 210, q = 11, out = 10

Output is(92): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 10, "<Nevet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 68, 6, "Nev" )
Symbol(16, 74, 5, <np> )
Symbol(87, 79, 5, <sg> )
Symbol(71, 84, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 96, 7, "név" )
Symbol(15, 103, 4, <n> )
Symbol(87, 107, 5, <sg> )
Symbol(71, 112, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 8, "nevet" )
Symbol(38, 132, 8, <vblex> )
Symbol(37, 140, 7, <pres> )
Symbol(87, 147, 5, <sg> )
Symbol(2, 152, 6, <s3p> )
Symbol(2, 158, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 176, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 194, 4, "," )
Symbol(44, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 215, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 235, 6, "és" )
Symbol(45, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 262, 8, "<azt>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 282, 5, "az" )
Symbol(57, 287, 6, <prn> )
Symbol(87, 293, 5, <sg> )
Symbol(71, 298, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 310, 5, "az" )
Symbol(2, 315, 9, <predet> )
Symbol(87, 324, 5, <sg> )
Symbol(71, 329, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 368, 11, "<mondja>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 391, 7, "mond" )
Symbol(38, 398, 8, <vblex> )
Symbol(37, 406, 7, <pres> )
Symbol(87, 413, 5, <sg> )
Symbol(2, 418, 6, <s3p> )
Symbol(2, 424, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 486, 6, "<:>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 504, 4, ":" )
Symbol(64, 0, 0, )
Symbol(2, 515, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 16 87 71 29 3 2 15 87 71 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 75 57 87 71 29 3 75 2 87 71 29 8 10 2 7 29 3 2 38 37 87 2 2 29 8 10 2 7 29 3 2 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<„>" #BOC# | #0# "„" <quot> | #EOC# $0$ "<Megvagy>" #BOC# | #0# "meg" <prevb> + "van" <vbser> <pres> <sg> <s2p> <ind> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<”>" #BOC# | #0# "”" <quot> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Mindketten>" #BOC# | #0# "mindketten" <adv> | #EOC# $0$ "<boldogok>" #BOC# | #0# "boldog" <n> <pl> <nom> | #0# "boldog" <adj> <pl> <nom> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<házba>" #BOC# | #0# "ház" <n> <sg> <ill> | #EOC# $0$ "<mennek>" #BOC# | #0# "megy" <vblex> <pres> <pl> <s3p> <ind> | #EOC# $0$ "<,>" #BOC# | #0# "," <cm> | #EOC# $0$ "<ideje>" #BOC# | #0# "idő" <n> <sg> <px3ss> <nom> | #EOC# $0$ "<enni>" #BOC# | #0# "eszik" <vblex> <inf> <sg> <s3p> <ind> | #EOC# $0$ "<valamit>" #BOC# | #0# "valami" <n> <sg> <acc> | #EOC# $0$ "<és>" #BOC# | #0# "és" <cnjcoo> | #EOC# $0$ "<inni>" #BOC# | #0# "iszik" <vblex> <inf> <sg> <s3p> <ind> | #0# "Inn" <adj> <sg> <nom> | #EOC# $0$ "<egy>" #BOC# | #0# "egy" <det> <ind> | #0# "egy" <adv> | #EOC# $0$ "<kis>" #BOC# | #0# "kis" <adj> <sg> <nom> | #EOC# $0$ "<vizet>" #BOC# | #0# "víz" <n> <sg> <acc> | #EOC# $0$ "<!>" #BOC# | #0# "!" <sent> <<<<> | #EOC# 
Rule found: R_1_83_T_1


LRS T1:
Name: R_1_83_T_1
arity: 2
arccount: 98
statecount: 32
linecount: 99
finalcount: 2
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 54 -- 
  out: 5 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 8 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 54 -- 
  out: 9 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 13 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 15 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 54 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 54 -- 
  out: 14 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 9
  in: 10 -- 
  out: 4 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(27):
  state_no: 10
  in: 10 -- 
  out: 4 -- 
  target: 11
  final_state: 1
  start_state: 0
Elem(28):
  state_no: 11
  in: 2 -- 
  out: 7 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(29):
  state_no: 11
  in: 7 -- 
  out: 8 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 11
  in: 15 -- 
  out: 10 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 54 -- 
  out: 9 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 12
  in: 29 -- 
  out: 11 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 13
  in: 3 -- 
  out: 36 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 14
  in: 2 -- 
  out: 37 -- 
  target: 14
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 14
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 14
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 14
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 15
  in: 2 -- 
  out: 37 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 15
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 15
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 15
  in: 54 -- 
  out: 38 -- 
  target: 15
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 16
  in: 2 -- 
  out: 45 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(43):
  state_no: 16
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(44):
  state_no: 16
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(45):
  state_no: 16
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(46):
  state_no: 17
  in: 3 -- 
  out: 49 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(47):
  state_no: 17
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(48):
  state_no: 18
  in: 2 -- 
  out: 45 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(49):
  state_no: 18
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(50):
  state_no: 18
  in: 29 -- 
  out: 48 -- 
  target: 22
  final_state: 0
  start_state: 0
Elem(51):
  state_no: 18
  in: 54 -- 
  out: 46 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(52):
  state_no: 19
  in: 3 -- 
  out: 49 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(53):
  state_no: 19
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(54):
  state_no: 20
  in: 3 -- 
  out: 36 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(55):
  state_no: 20
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(56):
  state_no: 21
  in: 2 -- 
  out: 59 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(57):
  state_no: 21
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(58):
  state_no: 21
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(59):
  state_no: 21
  in: 54 -- 
  out: 60 -- 
  target: 21
  final_state: 0
  start_state: 0
Elem(60):
  state_no: 22
  in: 3 -- 
  out: 36 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(61):
  state_no: 22
  in: 8 -- 
  out: 22 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(62):
  state_no: 23
  in: 2 -- 
  out: 59 -- 
  target: 23
  final_state: 0
  start_state: 0
Elem(63):
  state_no: 23
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(64):
  state_no: 23
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(65):
  state_no: 23
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(66):
  state_no: 24
  in: 2 -- 
  out: 37 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(67):
  state_no: 24
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(68):
  state_no: 24
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(69):
  state_no: 24
  in: 54 -- 
  out: 38 -- 
  target: 24
  final_state: 0
  start_state: 0
Elem(70):
  state_no: 25
  in: 2 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(71):
  state_no: 25
  in: 15 -- 
  out: 61 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(72):
  state_no: 25
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(73):
  state_no: 25
  in: 54 -- 
  out: 73 -- 
  target: 25
  final_state: 0
  start_state: 0
Elem(74):
  state_no: 26
  in: 2 -- 
  out: 37 -- 
  target: 26
  final_state: 0
  start_state: 0
Elem(75):
  state_no: 26
  in: 15 -- 
  out: 39 -- 
  target: 16
  final_state: 0
  start_state: 0
Elem(76):
  state_no: 26
  in: 29 -- 
  out: 16 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(77):
  state_no: 26
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(78):
  state_no: 27
  in: 2 -- 
  out: 59 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(79):
  state_no: 27
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(80):
  state_no: 27
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(81):
  state_no: 27
  in: 54 -- 
  out: 60 -- 
  target: 27
  final_state: 0
  start_state: 0
Elem(82):
  state_no: 28
  in: 2 -- 
  out: 73 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(83):
  state_no: 28
  in: 15 -- 
  out: 61 -- 
  target: 28
  final_state: 0
  start_state: 0
Elem(84):
  state_no: 28
  in: 29 -- 
  out: 76 -- 
  target: 17
  final_state: 0
  start_state: 0
Elem(85):
  state_no: 28
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(86):
  state_no: 29
  in: 2 -- 
  out: 45 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(87):
  state_no: 29
  in: 15 -- 
  out: 39 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(88):
  state_no: 29
  in: 29 -- 
  out: 48 -- 
  target: 20
  final_state: 0
  start_state: 0
Elem(89):
  state_no: 29
  in: 54 -- 
  out: 46 -- 
  target: 29
  final_state: 0
  start_state: 0
Elem(90):
  state_no: 30
  in: 2 -- 
  out: 37 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(91):
  state_no: 30
  in: 15 -- 
  out: 39 -- 
  target: 18
  final_state: 0
  start_state: 0
Elem(92):
  state_no: 30
  in: 29 -- 
  out: 16 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(93):
  state_no: 30
  in: 54 -- 
  out: 38 -- 
  target: 30
  final_state: 0
  start_state: 0
Elem(94):
  state_no: 31
  in: 2 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(95):
  state_no: 31
  in: 15 -- 
  out: 61 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(96):
  state_no: 31
  in: 29 -- 
  out: 76 -- 
  target: 19
  final_state: 0
  start_state: 0
Elem(97):
  state_no: 31
  in: 54 -- 
  out: 73 -- 
  target: 31
  final_state: 0
  start_state: 0
Elem(98):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(206): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(2, 46, 15, "<Mindketten>" )
Symbol(7, 61, 6, #BOC# )
Symbol(29, 67, 2, | )
Symbol(3, 69, 4, #0# )
Symbol(2, 73, 13, "mindketten" )
Symbol(54, 86, 6, <adv> )
Symbol(29, 92, 2, | )
Symbol(8, 94, 6, #EOC# )
Symbol(10, 100, 4, $0$ )
Symbol(2, 104, 13, "<boldogok>" )
Symbol(7, 117, 6, #BOC# )
Symbol(29, 123, 2, | )
Symbol(3, 125, 4, #0# )
Symbol(2, 129, 9, "boldog" )
Symbol(15, 138, 4, <n> )
Symbol(2, 142, 5, <pl> )
Symbol(55, 147, 6, <nom> )
Symbol(29, 153, 2, | )
Symbol(3, 155, 4, #0# )
Symbol(2, 159, 9, "boldog" )
Symbol(53, 168, 6, <adj> )
Symbol(2, 174, 5, <pl> )
Symbol(55, 179, 6, <nom> )
Symbol(29, 185, 2, | )
Symbol(8, 187, 6, #EOC# )
Symbol(10, 193, 4, $0$ )
Symbol(2, 197, 6, "<,>" )
Symbol(7, 203, 6, #BOC# )
Symbol(29, 209, 2, | )
Symbol(3, 211, 4, #0# )
Symbol(2, 215, 4, "," )
Symbol(44, 219, 5, <cm> )
Symbol(29, 224, 2, | )
Symbol(8, 226, 6, #EOC# )
Symbol(10, 232, 4, $0$ )
Symbol(2, 236, 8, "<és>" )
Symbol(7, 244, 6, #BOC# )
Symbol(29, 250, 2, | )
Symbol(3, 252, 4, #0# )
Symbol(2, 256, 6, "és" )
Symbol(45, 262, 9, <cnjcoo> )
Symbol(29, 271, 2, | )
Symbol(8, 273, 6, #EOC# )
Symbol(10, 279, 4, $0$ )
Symbol(2, 283, 6, "<a>" )
Symbol(7, 289, 6, #BOC# )
Symbol(29, 295, 2, | )
Symbol(3, 297, 4, #0# )
Symbol(2, 301, 4, "a" )
Symbol(73, 305, 6, <det> )
Symbol(2, 311, 6, <def> )
Symbol(29, 317, 2, | )
Symbol(8, 319, 6, #EOC# )
Symbol(10, 325, 4, $0$ )
Symbol(2, 329, 11, "<házba>" )
Symbol(7, 340, 6, #BOC# )
Symbol(29, 346, 2, | )
Symbol(3, 348, 4, #0# )
Symbol(2, 352, 7, "ház" )
Symbol(15, 359, 4, <n> )
Symbol(87, 363, 5, <sg> )
Symbol(2, 368, 6, <ill> )
Symbol(29, 374, 2, | )
Symbol(8, 376, 6, #EOC# )
Symbol(10, 382, 4, $0$ )
Symbol(2, 386, 11, "<mennek>" )
Symbol(7, 397, 6, #BOC# )
Symbol(29, 403, 2, | )
Symbol(3, 405, 4, #0# )
Symbol(2, 409, 7, "megy" )
Symbol(38, 416, 8, <vblex> )
Symbol(37, 424, 7, <pres> )
Symbol(2, 431, 5, <pl> )
Symbol(2, 436, 6, <s3p> )
Symbol(2, 442, 6, <ind> )
Symbol(29, 448, 2, | )
Symbol(8, 450, 6, #EOC# )
Symbol(10, 456, 4, $0$ )
Symbol(2, 460, 6, "<,>" )
Symbol(7, 466, 6, #BOC# )
Symbol(29, 472, 2, | )
Symbol(3, 474, 4, #0# )
Symbol(2, 478, 4, "," )
Symbol(44, 482, 5, <cm> )
Symbol(29, 487, 2, | )
Symbol(8, 489, 6, #EOC# )
Symbol(10, 495, 4, $0$ )
Symbol(2, 499, 10, "<ideje>" )
Symbol(7, 509, 6, #BOC# )
Symbol(29, 515, 2, | )
Symbol(3, 517, 4, #0# )
Symbol(2, 521, 7, "idő" )
Symbol(15, 528, 4, <n> )
Symbol(87, 532, 5, <sg> )
Symbol(28, 537, 8, <px3ss> )
Symbol(55, 545, 6, <nom> )
Symbol(29, 551, 2, | )
Symbol(8, 553, 6, #EOC# )
Symbol(10, 559, 4, $0$ )
Symbol(2, 563, 9, "<enni>" )
Symbol(7, 572, 6, #BOC# )
Symbol(29, 578, 2, | )
Symbol(3, 580, 4, #0# )
Symbol(2, 584, 8, "eszik" )
Symbol(38, 592, 8, <vblex> )
Symbol(52, 600, 6, <inf> )
Symbol(87, 606, 5, <sg> )
Symbol(2, 611, 6, <s3p> )
Symbol(2, 617, 6, <ind> )
Symbol(29, 623, 2, | )
Symbol(8, 625, 6, #EOC# )
Symbol(10, 631, 4, $0$ )
Symbol(2, 635, 12, "<valamit>" )
Symbol(7, 647, 6, #BOC# )
Symbol(29, 653, 2, | )
Symbol(3, 655, 4, #0# )
Symbol(2, 659, 9, "valami" )
Symbol(15, 668, 4, <n> )
Symbol(87, 672, 5, <sg> )
Symbol(71, 677, 6, <acc> )
Symbol(29, 683, 2, | )
Symbol(8, 685, 6, #EOC# )
Symbol(10, 691, 4, $0$ )
Symbol(2, 695, 8, "<és>" )
Symbol(7, 703, 6, #BOC# )
Symbol(29, 709, 2, | )
Symbol(3, 711, 4, #0# )
Symbol(2, 715, 6, "és" )
Symbol(45, 721, 9, <cnjcoo> )
Symbol(29, 730, 2, | )
Symbol(8, 732, 6, #EOC# )
Symbol(10, 738, 4, $0$ )
Symbol(2, 742, 9, "<inni>" )
Symbol(7, 751, 6, #BOC# )
Symbol(29, 757, 2, | )
Symbol(3, 759, 4, #0# )
Symbol(2, 763, 8, "iszik" )
Symbol(38, 771, 8, <vblex> )
Symbol(52, 779, 6, <inf> )
Symbol(87, 785, 5, <sg> )
Symbol(2, 790, 6, <s3p> )
Symbol(2, 796, 6, <ind> )
Symbol(29, 802, 2, | )
Symbol(3, 804, 4, #0# )
Symbol(2, 808, 6, "Inn" )
Symbol(53, 814, 6, <adj> )
Symbol(87, 820, 5, <sg> )
Symbol(55, 825, 6, <nom> )
Symbol(29, 831, 2, | )
Symbol(8, 833, 6, #EOC# )
Symbol(10, 839, 4, $0$ )
Symbol(2, 843, 8, "<egy>" )
Symbol(7, 851, 6, #BOC# )
Symbol(29, 857, 2, | )
Symbol(3, 859, 4, #0# )
Symbol(2, 863, 6, "egy" )
Symbol(73, 869, 6, <det> )
Symbol(2, 875, 6, <ind> )
Symbol(29, 881, 2, | )
Symbol(3, 883, 4, #0# )
Symbol(2, 887, 6, "egy" )
Symbol(54, 893, 6, <adv> )
Symbol(29, 899, 2, | )
Symbol(8, 901, 6, #EOC# )
Symbol(10, 907, 4, $0$ )
Symbol(2, 911, 8, "<kis>" )
Symbol(7, 919, 6, #BOC# )
Symbol(29, 925, 2, | )
Symbol(3, 927, 4, #0# )
Symbol(2, 931, 6, "kis" )
Symbol(53, 937, 6, <adj> )
Symbol(87, 943, 5, <sg> )
Symbol(55, 948, 6, <nom> )
Symbol(29, 954, 2, | )
Symbol(8, 956, 6, #EOC# )
Symbol(10, 962, 4, $0$ )
Symbol(2, 966, 10, "<vizet>" )
Symbol(7, 976, 6, #BOC# )
Symbol(29, 982, 2, | )
Symbol(3, 984, 4, #0# )
Symbol(2, 988, 7, "víz" )
Symbol(15, 995, 4, <n> )
Symbol(87, 999, 5, <sg> )
Symbol(71, 1,004, 6, <acc> )
Symbol(29, 1,010, 2, | )
Symbol(8, 1,012, 6, #EOC# )
Symbol(10, 1,018, 4, $0$ )
Symbol(2, 1,022, 6, "<!>" )
Symbol(7, 1,028, 6, #BOC# )
Symbol(29, 1,034, 2, | )
Symbol(3, 1,036, 4, #0# )
Symbol(39, 1,040, 4, "!" )
Symbol(64, 1,044, 7, <sent> )
Symbol(2, 1,051, 6, <<<<> )
Symbol(29, 1,057, 2, | )
Symbol(8, 1,059, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 15 2 55 29 3 2 53 2 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 52 87 2 2 29 3 2 53 87 55 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 39 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 13, signum = 54, q = 4, out = 14
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 21, signum = 8, q = 7, out = 22
trans_offset 27, signum = 10, q = 10, out = 4
trans_offset 28, signum = 2, q = 11, out = 7
trans_offset 29, signum = 7, q = 11, out = 8
trans_offset 32, signum = 29, q = 12, out = 11
trans_offset 33, signum = 3, q = 13, out = 36
trans_offset 34, signum = 2, q = 14, out = 37
trans_offset 35, signum = 15, q = 14, out = 39
trans_offset 42, signum = 2, q = 16, out = 45
trans_offset 42, signum = 2, q = 16, out = 45
trans_offset 44, signum = 29, q = 16, out = 48
trans_offset 54, signum = 3, q = 20, out = 36
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 66, signum = 2, q = 24, out = 37
trans_offset 68, signum = 29, q = 24, out = 16
trans_offset 47, signum = 8, q = 17, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 24, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 22, signum = 2, q = 8, out = 13
trans_offset 25, signum = 54, q = 8, out = 14
trans_offset 24, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 11, signum = 15, q = 4, out = 15
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 26, signum = 10, q = 9, out = 4
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 8
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(206): 
4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 14 16 22 4 7 8 11 36 37 39 45 45 48 36 37 37 37 37 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 13 16 22 4 7 8 11 12 13 15 13 13 16 22 4 7 8 11 12 13 13 13 13 13 13 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 15 13 13 13 16 22 4 7 8 11 12 13 13 13 13 13 13 16 22 4 7 8 11 12 13 15 13 13 16 22 4 7 8 11 12 13 13 16 22 4 7 8 11 12 13 13 13 13 13 13 16 12 13 13 13 13 16 22 4 7 8 11 12 13 13 13 16 12 13 14 16 22 4 7 8 11 12 13 13 13 13 16 22 4 7 8 11 12 13 15 13 13 16 22 4 7 8 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 54, q = 6, out = 29
trans_offset 92, q = 10, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 58, q = 7, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 20, q = 3, out = 29
trans_offset 40, q = 5, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 59, q = 7, out = 2
trans_offset 58, q = 7, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 54, q = 6, out = 29
trans_offset 92, q = 10, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 54, q = 6, out = 29
trans_offset 92, q = 10, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 7, q = 2, out = 15
trans_offset 24, q = 4, out = 2
trans_offset 23, q = 4, out = 3
trans_offset 54, q = 6, out = 29
trans_offset 92, q = 10, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 9, q = 2, out = 2
trans_offset 8, q = 2, out = 3
trans_offset 21, q = 3, out = 0
trans_offset 47, q = 5, out = 0
trans_offset 66, q = 7, out = 0
trans_offset 65, q = 7, out = 0
trans_offset 82, q = 9, out = 0
trans_offset 81, q = 9, out = 0
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 6, q = 2, out = 54
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10
trans_offset 111, q = 11, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 19, q = 3, out = 29
trans_offset 38, q = 5, out = 7
trans_offset 74, q = 8, out = 2
trans_offset 73, q = 8, out = 10

Output is(200): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 46, 15, "<Mindketten>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 73, 13, "mindketten" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 104, 13, "<boldogok>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 159, 9, "boldog" )
Symbol(53, 168, 6, <adj> )
Symbol(2, 174, 5, <pl> )
Symbol(55, 179, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 197, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 215, 4, "," )
Symbol(44, 219, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 236, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 256, 6, "és" )
Symbol(45, 262, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 283, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 301, 4, "a" )
Symbol(73, 305, 6, <det> )
Symbol(2, 311, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 329, 11, "<házba>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 352, 7, "ház" )
Symbol(15, 0, 0, )
Symbol(87, 363, 5, <sg> )
Symbol(2, 368, 6, <ill> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 386, 11, "<mennek>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 409, 7, "megy" )
Symbol(38, 416, 8, <vblex> )
Symbol(37, 424, 7, <pres> )
Symbol(2, 431, 5, <pl> )
Symbol(2, 436, 6, <s3p> )
Symbol(2, 442, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 460, 6, "<,>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 478, 4, "," )
Symbol(44, 482, 5, <cm> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 499, 10, "<ideje>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 521, 7, "idő" )
Symbol(15, 0, 0, )
Symbol(87, 532, 5, <sg> )
Symbol(28, 537, 8, <px3ss> )
Symbol(55, 545, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 563, 9, "<enni>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 584, 8, "eszik" )
Symbol(38, 592, 8, <vblex> )
Symbol(52, 600, 6, <inf> )
Symbol(87, 606, 5, <sg> )
Symbol(2, 611, 6, <s3p> )
Symbol(2, 617, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 635, 12, "<valamit>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 659, 9, "valami" )
Symbol(15, 0, 0, )
Symbol(87, 672, 5, <sg> )
Symbol(71, 677, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 695, 8, "<és>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 715, 6, "és" )
Symbol(45, 721, 9, <cnjcoo> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 742, 9, "<inni>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 763, 8, "iszik" )
Symbol(38, 771, 8, <vblex> )
Symbol(52, 779, 6, <inf> )
Symbol(87, 785, 5, <sg> )
Symbol(2, 790, 6, <s3p> )
Symbol(2, 796, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 808, 6, "Inn" )
Symbol(53, 814, 6, <adj> )
Symbol(87, 820, 5, <sg> )
Symbol(55, 825, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 843, 8, "<egy>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 863, 6, "egy" )
Symbol(73, 869, 6, <det> )
Symbol(2, 875, 6, <ind> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 887, 6, "egy" )
Symbol(54, 0, 0, )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 911, 8, "<kis>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 931, 6, "kis" )
Symbol(53, 937, 6, <adj> )
Symbol(87, 943, 5, <sg> )
Symbol(55, 948, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 966, 10, "<vizet>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 988, 7, "víz" )
Symbol(15, 0, 0, )
Symbol(87, 999, 5, <sg> )
Symbol(71, 1,004, 6, <acc> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 1,022, 6, "<!>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(39, 1,040, 4, "!" )
Symbol(64, 1,044, 7, <sent> )
Symbol(2, 1,051, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 2 7 29 3 2 54 29 8 10 2 7 29 3 2 53 2 55 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 2 15 87 2 29 8 10 2 7 29 3 2 38 37 2 2 2 29 8 10 2 7 29 3 2 44 29 8 10 2 7 29 3 2 15 87 28 55 29 8 10 2 7 29 3 2 38 52 87 2 2 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 2 45 29 8 10 2 7 29 3 2 38 52 87 2 2 29 3 2 53 87 55 29 8 10 2 7 29 3 2 73 2 29 3 2 54 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 15 87 71 29 8 10 2 7 29 3 39 64 2 29 8 Input: 
$0$ ">>>" #BOC# | #0# ">>>" <>>>> | #EOC# $0$ "<Az>" #BOC# | #0# "az" <predet> <sg> <nom> | #0# "az" <prn> <sg> <nom> | #0# "a" <det> <def> | #EOC# $0$ "<a>" #BOC# | #0# "a" <det> <def> | #EOC# $0$ "<kutya>" #BOC# | #0# "kutya" <adj> <sg> <nom> | #0# "kutya" <n> <sg> <nom> | #EOC# $0$ "<harapós>" #BOC# | #0# "harapós" <adj> <sg> <nom> | #EOC# $0$ "<.>" #BOC# | #0# "." <sent> <<<<> | #EOC# 
Rule found: R_3_284_T_1


LRS T1:
Name: R_3_284_T_1
arity: 2
arccount: 43
statecount: 14
linecount: 44
finalcount: 1
pathcount: -3
is_deterministic: 1
is_pruned: 2
is_minimized: 2
is_epsilon_free: 1
is_loop_free: 2
is_completed: 2
arcs_sorted_in: 1
arcs_sorted_out: 0
Elem(0):
  state_no: 0
  in: 2 -- 
  out: 3 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(1):
  state_no: 0
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 0
  start_state: 1
Elem(2):
  state_no: 0
  in: 15 -- 
  out: 6 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(3):
  state_no: 0
  in: 83 -- 
  out: 4 -- 
  target: 0
  final_state: 0
  start_state: 1
Elem(4):
  state_no: 1
  in: 2 -- 
  out: 7 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(5):
  state_no: 1
  in: 7 -- 
  out: 9 -- 
  target: 2
  final_state: 0
  start_state: 0
Elem(6):
  state_no: 1
  in: 15 -- 
  out: 10 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(7):
  state_no: 1
  in: 83 -- 
  out: 8 -- 
  target: 1
  final_state: 0
  start_state: 0
Elem(8):
  state_no: 2
  in: 29 -- 
  out: 11 -- 
  target: 3
  final_state: 0
  start_state: 0
Elem(9):
  state_no: 3
  in: 3 -- 
  out: 12 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(10):
  state_no: 4
  in: 2 -- 
  out: 13 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(11):
  state_no: 4
  in: 15 -- 
  out: 15 -- 
  target: 4
  final_state: 0
  start_state: 0
Elem(12):
  state_no: 4
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(13):
  state_no: 4
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(14):
  state_no: 5
  in: 2 -- 
  out: 17 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(15):
  state_no: 5
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(16):
  state_no: 5
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(17):
  state_no: 5
  in: 83 -- 
  out: 14 -- 
  target: 5
  final_state: 0
  start_state: 0
Elem(18):
  state_no: 6
  in: 3 -- 
  out: 12 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(19):
  state_no: 6
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(20):
  state_no: 7
  in: 2 -- 
  out: 23 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(21):
  state_no: 7
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(22):
  state_no: 7
  in: 29 -- 
  out: 26 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(23):
  state_no: 7
  in: 83 -- 
  out: 24 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(24):
  state_no: 8
  in: 2 -- 
  out: 13 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(25):
  state_no: 8
  in: 15 -- 
  out: 15 -- 
  target: 8
  final_state: 0
  start_state: 0
Elem(26):
  state_no: 8
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(27):
  state_no: 8
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(28):
  state_no: 9
  in: 10 -- 
  out: 5 -- 
  target: 1
  final_state: 1
  start_state: 0
Elem(29):
  state_no: 10
  in: 3 -- 
  out: 32 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(30):
  state_no: 10
  in: 8 -- 
  out: 22 -- 
  target: 9
  final_state: 0
  start_state: 0
Elem(31):
  state_no: 11
  in: 2 -- 
  out: 17 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(32):
  state_no: 11
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(33):
  state_no: 11
  in: 29 -- 
  out: 16 -- 
  target: 6
  final_state: 0
  start_state: 0
Elem(34):
  state_no: 11
  in: 83 -- 
  out: 14 -- 
  target: 11
  final_state: 0
  start_state: 0
Elem(35):
  state_no: 12
  in: 2 -- 
  out: 38 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(36):
  state_no: 12
  in: 15 -- 
  out: 40 -- 
  target: 12
  final_state: 0
  start_state: 0
Elem(37):
  state_no: 12
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(38):
  state_no: 12
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(39):
  state_no: 13
  in: 2 -- 
  out: 42 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(40):
  state_no: 13
  in: 15 -- 
  out: 19 -- 
  target: 7
  final_state: 0
  start_state: 0
Elem(41):
  state_no: 13
  in: 29 -- 
  out: 41 -- 
  target: 10
  final_state: 0
  start_state: 0
Elem(42):
  state_no: 13
  in: 83 -- 
  out: 39 -- 
  target: 13
  final_state: 0
  start_state: 0
Elem(43):
  state_no: -1
  in: -1 -- 
  out: -1 -- 
  target: -1
  final_state: /
  start_state: /
Sentence is(79): 
Symbol(10, 0, 4, $0$ )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 10, 6, #BOC# )
Symbol(29, 16, 2, | )
Symbol(3, 18, 4, #0# )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 34, 2, | )
Symbol(8, 36, 6, #EOC# )
Symbol(10, 42, 4, $0$ )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 53, 6, #BOC# )
Symbol(29, 59, 2, | )
Symbol(3, 61, 4, #0# )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 90, 2, | )
Symbol(3, 92, 4, #0# )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 118, 2, | )
Symbol(3, 120, 4, #0# )
Symbol(2, 124, 4, "a" )
Symbol(73, 128, 6, <det> )
Symbol(2, 134, 6, <def> )
Symbol(29, 140, 2, | )
Symbol(8, 142, 6, #EOC# )
Symbol(10, 148, 4, $0$ )
Symbol(2, 152, 6, "<a>" )
Symbol(7, 158, 6, #BOC# )
Symbol(29, 164, 2, | )
Symbol(3, 166, 4, #0# )
Symbol(2, 170, 4, "a" )
Symbol(73, 174, 6, <det> )
Symbol(2, 180, 6, <def> )
Symbol(29, 186, 2, | )
Symbol(8, 188, 6, #EOC# )
Symbol(10, 194, 4, $0$ )
Symbol(2, 198, 10, "<kutya>" )
Symbol(7, 208, 6, #BOC# )
Symbol(29, 214, 2, | )
Symbol(3, 216, 4, #0# )
Symbol(83, 220, 8, "kutya" )
Symbol(53, 228, 6, <adj> )
Symbol(87, 234, 5, <sg> )
Symbol(55, 239, 6, <nom> )
Symbol(29, 245, 2, | )
Symbol(3, 247, 4, #0# )
Symbol(83, 251, 8, "kutya" )
Symbol(15, 259, 4, <n> )
Symbol(87, 263, 5, <sg> )
Symbol(55, 268, 6, <nom> )
Symbol(29, 274, 2, | )
Symbol(8, 276, 6, #EOC# )
Symbol(10, 282, 4, $0$ )
Symbol(2, 286, 13, "<harapós>" )
Symbol(7, 299, 6, #BOC# )
Symbol(29, 305, 2, | )
Symbol(3, 307, 4, #0# )
Symbol(2, 311, 11, "harapós" )
Symbol(53, 322, 6, <adj> )
Symbol(87, 328, 5, <sg> )
Symbol(55, 333, 6, <nom> )
Symbol(29, 339, 2, | )
Symbol(8, 341, 6, #EOC# )
Symbol(10, 347, 4, $0$ )
Symbol(2, 351, 6, "<.>" )
Symbol(7, 357, 6, #BOC# )
Symbol(29, 363, 2, | )
Symbol(3, 365, 4, #0# )
Symbol(2, 369, 4, "." )
Symbol(64, 373, 7, <sent> )
Symbol(2, 380, 6, <<<<> )
Symbol(29, 386, 2, | )
Symbol(8, 388, 6, #EOC# )
10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 53 87 55 29 3 83 15 87 55 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 64 2 29 8 

trans_offset 1, signum = 10, q = 0, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 24, signum = 2, q = 8, out = 13
trans_offset 26, signum = 29, q = 8, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 13, signum = 83, q = 4, out = 14
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 14, signum = 2, q = 5, out = 17
trans_offset 16, signum = 29, q = 5, out = 16
trans_offset 18, signum = 3, q = 6, out = 12
trans_offset 27, signum = 83, q = 8, out = 14
trans_offset 32, signum = 15, q = 11, out = 19
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 20, signum = 2, q = 7, out = 23
trans_offset 22, signum = 29, q = 7, out = 26
trans_offset 30, signum = 8, q = 10, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22
trans_offset 28, signum = 10, q = 9, out = 5
trans_offset 4, signum = 2, q = 1, out = 7
trans_offset 5, signum = 7, q = 1, out = 9
trans_offset 8, signum = 29, q = 2, out = 11
trans_offset 9, signum = 3, q = 3, out = 12
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 10, signum = 2, q = 4, out = 13
trans_offset 12, signum = 29, q = 4, out = 16
trans_offset 19, signum = 8, q = 6, out = 22

Intermediate is(79): 
5 7 9 11 12 13 13 16 22 5 7 9 11 12 13 13 13 13 16 12 13 13 13 13 16 12 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 5 7 9 11 12 14 17 17 17 16 12 14 19 23 23 26 22 5 7 9 11 12 13 13 13 13 16 22 5 7 9 11 12 13 13 13 16 22 

trans_offset 0, q = 0, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 2, q = 1, out = 29
trans_offset 10, q = 2, out = 2
trans_offset 10, q = 2, out = 2
trans_offset 9, q = 2, out = 15
trans_offset 23, q = 4, out = 83
trans_offset 48, q = 6, out = 3
trans_offset 66, q = 8, out = 0
trans_offset 78, q = 10, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 94, q = 12, out = 0
trans_offset 92, q = 12, out = 0
trans_offset 90, q = 12, out = 0
trans_offset 65, q = 8, out = 29
trans_offset 73, q = 10, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 18, q = 3, out = 29
trans_offset 36, q = 5, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10
trans_offset 72, q = 9, out = 8
trans_offset 1, q = 1, out = 29
trans_offset 5, q = 2, out = 2
trans_offset 5, q = 2, out = 2
trans_offset 4, q = 2, out = 3
trans_offset 17, q = 3, out = 29
trans_offset 34, q = 5, out = 7
trans_offset 62, q = 7, out = 2
trans_offset 61, q = 7, out = 10

Output is(73): 
Symbol(10, 0, 0, )
Symbol(2, 4, 6, ">>>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 22, 6, ">>>" )
Symbol(80, 28, 6, <>>>> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(74, 46, 7, "<Az>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 65, 5, "az" )
Symbol(2, 70, 9, <predet> )
Symbol(87, 79, 5, <sg> )
Symbol(55, 84, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(75, 96, 5, "az" )
Symbol(57, 101, 6, <prn> )
Symbol(87, 107, 5, <sg> )
Symbol(55, 112, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 124, 4, "a" )
Symbol(73, 128, 6, <det> )
Symbol(2, 134, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 152, 6, "<a>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 170, 4, "a" )
Symbol(73, 174, 6, <det> )
Symbol(2, 180, 6, <def> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 198, 10, "<kutya>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(83, 0, 0, )
Symbol(15, 0, 0, )
Symbol(87, 263, 5, <sg> )
Symbol(55, 268, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 286, 13, "<harapós>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 311, 11, "harapós" )
Symbol(53, 322, 6, <adj> )
Symbol(87, 328, 5, <sg> )
Symbol(55, 333, 6, <nom> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )
Symbol(10, 0, 0, )
Symbol(2, 351, 6, "<.>" )
Symbol(7, 0, 0, )
Symbol(29, 0, 0, )
Symbol(3, 0, 0, )
Symbol(2, 369, 4, "." )
Symbol(64, 373, 7, <sent> )
Symbol(2, 380, 6, <<<<> )
Symbol(29, 0, 0, )
Symbol(8, 0, 0, )

10 2 7 29 3 2 80 29 8 10 74 7 29 3 75 2 87 55 29 3 75 57 87 55 29 3 2 73 2 29 8 10 2 7 29 3 2 73 2 29 8 10 2 7 29 3 83 15 87 55 29 8 10 2 7 29 3 2 53 87 55 29 8 10 2 7 29 3 2 64 2 29 8 Init time: 0.013492
Run time: 0.408930
